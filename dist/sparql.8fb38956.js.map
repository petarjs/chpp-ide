{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/sparql/sparql.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","token","keywords","builtinFunctions","ignoreCase","tokenizer","root","include","cases","strings","stringBody","dblStringBody"],"mappings":"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","file":"sparql.8fb38956.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: \"'\", close: \"'\", notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.rq',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.angle', open: '<', close: '>' }\r\n    ],\r\n    keywords: [\r\n        'add',\r\n        'as',\r\n        'asc',\r\n        'ask',\r\n        'base',\r\n        'by',\r\n        'clear',\r\n        'construct',\r\n        'copy',\r\n        'create',\r\n        'data',\r\n        'delete',\r\n        'desc',\r\n        'describe',\r\n        'distinct',\r\n        'drop',\r\n        'false',\r\n        'filter',\r\n        'from',\r\n        'graph',\r\n        'group',\r\n        'having',\r\n        'in',\r\n        'insert',\r\n        'limit',\r\n        'load',\r\n        'minus',\r\n        'move',\r\n        'named',\r\n        'not',\r\n        'offset',\r\n        'optional',\r\n        'order',\r\n        'prefix',\r\n        'reduced',\r\n        'select',\r\n        'service',\r\n        'silent',\r\n        'to',\r\n        'true',\r\n        'undef',\r\n        'union',\r\n        'using',\r\n        'values',\r\n        'where',\r\n        'with'\r\n    ],\r\n    builtinFunctions: [\r\n        'a',\r\n        'abs',\r\n        'avg',\r\n        'bind',\r\n        'bnode',\r\n        'bound',\r\n        'ceil',\r\n        'coalesce',\r\n        'concat',\r\n        'contains',\r\n        'count',\r\n        'datatype',\r\n        'day',\r\n        'encode_for_uri',\r\n        'exists',\r\n        'floor',\r\n        'group_concat',\r\n        'hours',\r\n        'if',\r\n        'iri',\r\n        'isblank',\r\n        'isiri',\r\n        'isliteral',\r\n        'isnumeric',\r\n        'isuri',\r\n        'lang',\r\n        'langmatches',\r\n        'lcase',\r\n        'max',\r\n        'md5',\r\n        'min',\r\n        'minutes',\r\n        'month',\r\n        'now',\r\n        'rand',\r\n        'regex',\r\n        'replace',\r\n        'round',\r\n        'sameterm',\r\n        'sample',\r\n        'seconds',\r\n        'sha1',\r\n        'sha256',\r\n        'sha384',\r\n        'sha512',\r\n        'str',\r\n        'strafter',\r\n        'strbefore',\r\n        'strdt',\r\n        'strends',\r\n        'strlang',\r\n        'strlen',\r\n        'strstarts',\r\n        'struuid',\r\n        'substr',\r\n        'sum',\r\n        'timezone',\r\n        'tz',\r\n        'ucase',\r\n        'uri',\r\n        'uuid',\r\n        'year'\r\n    ],\r\n    // describe tokens\r\n    ignoreCase: true,\r\n    tokenizer: {\r\n        root: [\r\n            // resource indicators\r\n            [/<[^\\s\\u00a0>]*>?/, 'tag'],\r\n            // strings\r\n            { include: '@strings' },\r\n            // line comment\r\n            [/#.*/, 'comment'],\r\n            // special chars with special meaning\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[;,.]/, 'delimiter'],\r\n            // (prefixed) name\r\n            [\r\n                /[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/,\r\n                'tag'\r\n            ],\r\n            [/:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/, 'tag'],\r\n            // identifiers, builtinFunctions and keywords\r\n            [\r\n                /[$?]?[_\\w\\d]+/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword' },\r\n                        '@builtinFunctions': { token: 'predefined.sql' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // operators\r\n            [/\\^\\^/, 'operator.sql'],\r\n            [/\\^[*+\\-<>=&|^\\/!?]*/, 'operator.sql'],\r\n            [/[*+\\-<>=&|\\/!?]/, 'operator.sql'],\r\n            // symbol\r\n            [/@[a-z\\d\\-]*/, 'metatag.html'],\r\n            // whitespaces\r\n            [/\\s+/, 'white']\r\n        ],\r\n        strings: [\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'$/, 'string.sql', '@pop'],\r\n            [/'/, 'string.sql', '@stringBody'],\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"$/, 'string.sql', '@pop'],\r\n            [/\"/, 'string.sql', '@dblStringBody']\r\n        ],\r\n        // single-quoted strings\r\n        stringBody: [\r\n            [/[^\\\\']+/, 'string.sql'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'/, 'string.sql', '@pop']\r\n        ],\r\n        // double-quoted strings\r\n        dblStringBody: [\r\n            [/[^\\\\\"]+/, 'string.sql'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string.sql', '@pop']\r\n        ]\r\n    }\r\n};\r\n"]}