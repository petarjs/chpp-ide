{"mappings":"oYAIO,IAAIA,EAAI,CACXC,YAAW,0DACXC,SAAQ,CACJC,aAAY,aAEhBC,SAAQ,gCAKRC,iBAAgB,EACVC,KAAI,IAAOC,MAAK,IAAOC,MAAK,uBAC5BF,KAAI,IAAOC,MAAK,IAAOC,MAAK,uBAC5BF,KAAI,IAAOC,MAAK,IAAOC,MAAK,uBAC5BF,KAAI,IAAOC,MAAK,IAAOC,MAAK,uBAC5BF,KAAI,IAAOC,MAAK,IAAOC,MAAK,uBAElCC,iBAAgB,EACVH,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAEtBG,QAAO,CACHC,QAAO,CACHC,MAAO,IAAIC,OAAM,gDACjBC,IAAK,IAAID,OAAM,2CAIhBE,EAAQ,CACfC,aAAY,GACZC,aAAY,OACZC,GAAE,eACFC,WAAU,sHACVf,SAAQ,EACFE,KAAI,IAAOC,MAAK,IAAOa,MAAK,sBAC5Bd,KAAI,IAAOC,MAAK,IAAOa,MAAK,sBAC5Bd,KAAI,IAAOC,MAAK,IAAOa,MAAK,0BAC5Bd,KAAI,IAAOC,MAAK,IAAOa,MAAK,oBAElCC,UAAS,CACLC,KAAI,EAAKC,QAAO,cAChBC,SAAQ,EACFD,QAAO,cACPA,QAAO,YACPA,QAAO,6EAGHH,MAAK,UAAaK,KAAI,uEAEoBL,MAAK,uCACxBA,MAAK,UAAaK,KAAI,8DAGzBL,MAAK,wBAA2BK,KAAI,uDAIpCL,MAAK,wBAA2BK,KAAI,sBAE5DF,QAAO,iEAGCH,MAAK,oBAAuBK,KAAI,6BAClCL,MAAK,oBAAuBK,KAAI,mBAE5CC,aAAY,EACNH,QAAO,mGAEDH,MAAK,oBAAuBK,KAAI,UAE5CE,aAAY,+CAGZC,kBAAiB,EACXL,QAAO,eACDH,MAAK,oBAAuBK,KAAI,UAE5CI,KAAI,EACEN,QAAO,sDAGiBH,MAAK,wBAA2BK,KAAI,uDAIpCL,MAAK,wBAA2BK,KAAI,sBAE5DF,QAAO,wBACPA,QAAO,aACPA,QAAO,UACPA,QAAO,6EAIbO,UAAS,EACHP,QAAO,cACPA,QAAO,aACPA,QAAO,qEAGGH,MAAK,GAAMK,KAAI,UAE/BM,UAAS,qBAAyBX,MAAK,UAAaK,KAAI,sBACxDO,OAAM,iBAAqBZ,MAAK,UAAaK,KAAI,sBACjDQ,eAAc,EACRV,QAAO,2CAECH,MAAK,wBAA2BK,KAAI,UAElDS,gBAAe,EACTX,QAAO,iBACCH,MAAK,wBAA2BK,KAAI,UAElDU,gBAAe,EACTZ,QAAO,4CAEGH,MAAK,GAAMK,KAAI,UAE/BvB,SAAQ,0DAIRkC,QAAO,mEAKPC,KAAI,oCACJC,QAAO,wCAGGlB,MAAK,yBAA4BK,KAAI,4DAI/Cc,MAAK,yHAOLC,oBAAmB,yCAEPpB,MAAK,oBAAuBqB,SAAQ,mBAEhDC,aAAY,EACNnB,QAAO,eACDH,MAAK,oBAAuBK,KAAI,wBAChCL,MAAK,oBAAuBK,KAAI,UAE5CkB,mBAAkB,oBACOvB,MAAK,kBAAqBK,KAAI,wBAEvDmB,kBAAiB,8DAGXrB,QAAO,iBACCH,MAAK,kBAAqBK,KAAI,UAE5CoB,QAAO,SACOzB,MAAK,SAAYK,KAAI,kCACrBL,MAAK,SAAYK,KAAI,qBAEnCqB,qBAAoB,0BAER1B,MAAK,SAAYK,KAAI,8CAIjCsB,eAAc,0BAEF3B,MAAK,SAAYK,KAAI","sources":["node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\r\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.css',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.bracket' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [{ include: '@selector' }],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@strings' },\r\n            [\r\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\r\n                { token: 'keyword', next: '@keyframedeclaration' }\r\n            ],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            [\r\n                '(url-prefix)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            [\r\n                '(url)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            { include: '@selectorname' },\r\n            ['[\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }]\r\n        ],\r\n        selectorbody: [\r\n            { include: '@comments' },\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        selectorname: [\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            [\r\n                '(url-prefix)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            [\r\n                '(url)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@name' },\r\n            { include: '@strings' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'],\r\n            [',', 'delimiter']\r\n        ],\r\n        rulevalue: [\r\n            { include: '@comments' },\r\n            { include: '@strings' },\r\n            { include: '@term' },\r\n            ['!important', 'keyword'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\r\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment']\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            [/[^*/]+/, 'comment'],\r\n            [/./, 'comment']\r\n        ],\r\n        name: [['@identifier', 'attribute.value']],\r\n        numbers: [\r\n            [\r\n                '-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?',\r\n                { token: 'attribute.value.number', next: '@units' }\r\n            ],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\r\n        ],\r\n        units: [\r\n            [\r\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\r\n                'attribute.value.unit',\r\n                '@pop'\r\n            ]\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'attribute.value'],\r\n            ['{', { token: 'delimiter.bracket', switchTo: '@keyframebody' }]\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        functioninvocation: [\r\n            ['@identifier\\\\(', { token: 'attribute.value', next: '@functionarguments' }]\r\n        ],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'attribute.value', next: '@pop' }]\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string', next: '@stringenddoublequote' }],\r\n            [\"~?'\", { token: 'string', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string', next: '@pop' }],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            [\"'\", { token: 'string', next: '@pop' }],\r\n            [/[^\\\\']+/, 'string'],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"names":["$078d15ab7ec6c2b9$export$5056e7a493e30728","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","$078d15ab7ec6c2b9$export$2b7f034382a4a3d1","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"version":3,"file":"css.8208e9e3.js.map"}