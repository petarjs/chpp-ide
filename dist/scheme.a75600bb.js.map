{"mappings":"wXAIO,IAAIA,EAAI,CACXC,SAAQ,CACJC,YAAW,IACXC,aAAY,aAEhBC,SAAQ,gCAKRC,iBAAgB,EACVC,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAEtBC,iBAAgB,EACVF,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,MAChBD,KAAI,IAAOC,MAAK,OAGfE,EAAQ,CACfC,aAAY,GACZC,YAAY,EACZC,aAAY,UACZR,SAAQ,EACFE,KAAI,IAAOC,MAAK,IAAOM,MAAK,0BAC5BP,KAAI,IAAOC,MAAK,IAAOM,MAAK,oBAC5BP,KAAI,IAAOC,MAAK,IAAOM,MAAK,qBAElCC,SAAQ,kLAyBRC,UAAS,YACTC,UAAS,iDACTC,UAAS,CACLC,KAAI,+MAOEC,QAAO,gBACPA,QAAO,gDAIDC,MAAK,aACU,uBACC,wBACA,uBACF,iBAK1BC,QAAO,+FAMPC,WAAU,yEAKVC,QAAO,mEAIPC,gBAAe","sources":["node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: ';',\r\n        blockComment: ['#|', '|#']\r\n    },\r\n    brackets: [\r\n        ['(', ')'],\r\n        ['{', '}'],\r\n        ['[', ']']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.scheme',\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' }\r\n    ],\r\n    keywords: [\r\n        'case',\r\n        'do',\r\n        'let',\r\n        'loop',\r\n        'if',\r\n        'else',\r\n        'when',\r\n        'cons',\r\n        'car',\r\n        'cdr',\r\n        'cond',\r\n        'lambda',\r\n        'lambda*',\r\n        'syntax-rules',\r\n        'format',\r\n        'set!',\r\n        'quote',\r\n        'eval',\r\n        'append',\r\n        'list',\r\n        'list?',\r\n        'member?',\r\n        'load'\r\n    ],\r\n    constants: ['#t', '#f'],\r\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\r\n    tokenizer: {\r\n        root: [\r\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\r\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\r\n            [\r\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\r\n                ['keyword', 'white', 'variable']\r\n            ],\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@operators': 'operators',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        comment: [\r\n            [/[^\\|#]+/, 'comment'],\r\n            [/#\\|/, 'comment', '@push'],\r\n            [/\\|#/, 'comment', '@pop'],\r\n            [/[\\|#]/, 'comment']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/#\\|/, 'comment', '@comment'],\r\n            [/;.*$/, 'comment']\r\n        ],\r\n        strings: [\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"(?=.)/, 'string', '@multiLineString']\r\n        ],\r\n        multiLineString: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ]\r\n    }\r\n};\r\n"],"names":["$f66865e04cf2c08b$export$5056e7a493e30728","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","$f66865e04cf2c08b$export$2b7f034382a4a3d1","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","include","cases","comment","whitespace","strings","multiLineString"],"version":3,"file":"scheme.a75600bb.js.map"}