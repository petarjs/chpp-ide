{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/qsharp/qsharp.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","language","keywords","typeKeywords","invalidKeywords","constants","builtin","operators","namespaceFollows","symbols","escapes","tokenizer","root","cases","token","next","include","bracket","string","namespace","whitespace"],"mappings":"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","file":"qsharp.7d17a6ce.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ]\r\n};\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    keywords: [\r\n        'namespace',\r\n        'open',\r\n        'as',\r\n        'operation',\r\n        'function',\r\n        'body',\r\n        'adjoint',\r\n        'newtype',\r\n        'controlled',\r\n        'if',\r\n        'elif',\r\n        'else',\r\n        'repeat',\r\n        'until',\r\n        'fixup',\r\n        'for',\r\n        'in',\r\n        'while',\r\n        'return',\r\n        'fail',\r\n        'within',\r\n        'apply',\r\n        'Adjoint',\r\n        'Controlled',\r\n        'Adj',\r\n        'Ctl',\r\n        'is',\r\n        'self',\r\n        'auto',\r\n        'distribute',\r\n        'invert',\r\n        'intrinsic',\r\n        'let',\r\n        'set',\r\n        'w/',\r\n        'new',\r\n        'not',\r\n        'and',\r\n        'or',\r\n        'use',\r\n        'borrow',\r\n        'using',\r\n        'borrowing',\r\n        'mutable'\r\n    ],\r\n    typeKeywords: [\r\n        'Unit',\r\n        'Int',\r\n        'BigInt',\r\n        'Double',\r\n        'Bool',\r\n        'String',\r\n        'Qubit',\r\n        'Result',\r\n        'Pauli',\r\n        'Range'\r\n    ],\r\n    invalidKeywords: [\r\n        'abstract',\r\n        'base',\r\n        'bool',\r\n        'break',\r\n        'byte',\r\n        'case',\r\n        'catch',\r\n        'char',\r\n        'checked',\r\n        'class',\r\n        'const',\r\n        'continue',\r\n        'decimal',\r\n        'default',\r\n        'delegate',\r\n        'do',\r\n        'double',\r\n        'enum',\r\n        'event',\r\n        'explicit',\r\n        'extern',\r\n        'finally',\r\n        'fixed',\r\n        'float',\r\n        'foreach',\r\n        'goto',\r\n        'implicit',\r\n        'int',\r\n        'interface',\r\n        'lock',\r\n        'long',\r\n        'null',\r\n        'object',\r\n        'operator',\r\n        'out',\r\n        'override',\r\n        'params',\r\n        'private',\r\n        'protected',\r\n        'public',\r\n        'readonly',\r\n        'ref',\r\n        'sbyte',\r\n        'sealed',\r\n        'short',\r\n        'sizeof',\r\n        'stackalloc',\r\n        'static',\r\n        'string',\r\n        'struct',\r\n        'switch',\r\n        'this',\r\n        'throw',\r\n        'try',\r\n        'typeof',\r\n        'unit',\r\n        'ulong',\r\n        'unchecked',\r\n        'unsafe',\r\n        'ushort',\r\n        'virtual',\r\n        'void',\r\n        'volatile'\r\n    ],\r\n    constants: ['true', 'false', 'PauliI', 'PauliX', 'PauliY', 'PauliZ', 'One', 'Zero'],\r\n    builtin: [\r\n        'X',\r\n        'Y',\r\n        'Z',\r\n        'H',\r\n        'HY',\r\n        'S',\r\n        'T',\r\n        'SWAP',\r\n        'CNOT',\r\n        'CCNOT',\r\n        'MultiX',\r\n        'R',\r\n        'RFrac',\r\n        'Rx',\r\n        'Ry',\r\n        'Rz',\r\n        'R1',\r\n        'R1Frac',\r\n        'Exp',\r\n        'ExpFrac',\r\n        'Measure',\r\n        'M',\r\n        'MultiM',\r\n        'Message',\r\n        'Length',\r\n        'Assert',\r\n        'AssertProb',\r\n        'AssertEqual'\r\n    ],\r\n    operators: [\r\n        'and=',\r\n        '<-',\r\n        '->',\r\n        '*',\r\n        '*=',\r\n        '@',\r\n        '!',\r\n        '^',\r\n        '^=',\r\n        ':',\r\n        '::',\r\n        '..',\r\n        '==',\r\n        '...',\r\n        '=',\r\n        '=>',\r\n        '>',\r\n        '>=',\r\n        '<',\r\n        '<=',\r\n        '-',\r\n        '-=',\r\n        '!=',\r\n        'or=',\r\n        '%',\r\n        '%=',\r\n        '|',\r\n        '+',\r\n        '+=',\r\n        '?',\r\n        '/',\r\n        '/=',\r\n        '&&&',\r\n        '&&&=',\r\n        '^^^',\r\n        '^^^=',\r\n        '>>>',\r\n        '>>>=',\r\n        '<<<',\r\n        '<<<=',\r\n        '|||',\r\n        '|||=',\r\n        '~~~',\r\n        '_',\r\n        'w/',\r\n        'w/='\r\n    ],\r\n    namespaceFollows: ['namespace', 'open'],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%@._]+/,\r\n    escapes: /\\\\[\\s\\S]/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [\r\n                /[a-zA-Z_$][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@namespaceFollows': {\r\n                            token: 'keyword.$0',\r\n                            next: '@namespace'\r\n                        },\r\n                        '@typeKeywords': 'type',\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@builtin': 'keyword',\r\n                        '@invalidKeywords': 'invalid',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            //[/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }]\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        namespace: [\r\n            { include: '@whitespace' },\r\n            [/[A-Za-z]\\w*/, 'namespace'],\r\n            [/[\\.=]/, 'delimiter'],\r\n            ['', '', '@pop']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/(\\/\\/).*/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"]}