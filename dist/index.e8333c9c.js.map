{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-4ab200f207f55177.js","node_modules/monaco-editor/esm/vs/language/css/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-449c568dab40ae65.js","node_modules/@parcel/runtime-js/lib/helpers/browser/css-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-5182167626b1e868.js","node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-558cd87aa0541147.js","node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-485889fe3c3f69d7.js","node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-0f5f2b166e15acb4.js","node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-27724b70addf8988.js","node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-54caecb1c51202ff.js","node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-a55436bf2540ae6d.js","node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-59a225401c55237a.js","node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-687b2e22da3b08a3.js","node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-ed83a2fe62bacadc.js","node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-0fd439b32bbbbc7e.js","node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-2d0ec3856fd4d942.js","node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-11fda8a60cbe570b.js","node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c97f7893cc3dffac.js","node_modules/monaco-editor/esm/vs/basic-languages/css/css.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-3535252d281a2b20.js","node_modules/monaco-editor/esm/vs/basic-languages/dart/dart.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-a1a7048890495553.js","node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-cc2b2755b5e0fede.js","node_modules/monaco-editor/esm/vs/basic-languages/ecl/ecl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-48aae6631c03ad81.js","node_modules/monaco-editor/esm/vs/basic-languages/elixir/elixir.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-1641b1bee1555dc5.js","node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6721688d51e3cab0.js","node_modules/monaco-editor/esm/vs/basic-languages/go/go.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d1a6ff9ecf6cbf42.js","node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-df006f6503213d15.js","node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-59adaa61e421ebf5.js","node_modules/monaco-editor/esm/vs/basic-languages/hcl/hcl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6cd93c05d9a88dcb.js","node_modules/monaco-editor/esm/vs/basic-languages/html/html.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6b0cc486fa73e5ce.js","node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-58362662b75aff9b.js","node_modules/monaco-editor/esm/vs/basic-languages/java/java.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-babe8614f7b90278.js","node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-411cede80c65d292.js","node_modules/monaco-editor/esm/vs/basic-languages/julia/julia.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-91e70157adfa5973.js","node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-80d49b2f2cbd9333.js","node_modules/monaco-editor/esm/vs/basic-languages/less/less.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-680db89074bc0723.js","node_modules/monaco-editor/esm/vs/basic-languages/lexon/lexon.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-bc47ab008687213d.js","node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-82891e557ac32bd0.js","node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-53bf0962ba999e7a.js","node_modules/monaco-editor/esm/vs/basic-languages/m3/m3.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-2384c34451a75de6.js","node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-53c726145f1459c3.js","node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-95f1916c7023d308.js","node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-83e1b3b3f1786986.js","node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-380bf94f5c250a13.js","node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-3451ec9011db585c.js","node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e1dbde7c62113503.js","node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-979302bb04408083.js","node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e0b0201a6e7df03c.js","node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e27abadf3ef338e0.js","node_modules/monaco-editor/esm/vs/basic-languages/php/php.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-3f17c28feac230cb.js","node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-4d3f7e94d7574165.js","node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-285ed24cc8983ab8.js","node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-5f414a020318d956.js","node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d3cb5e92c0b44237.js","node_modules/monaco-editor/esm/vs/basic-languages/python/python.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-3e9be7f000db99b3.js","node_modules/monaco-editor/esm/vs/basic-languages/qsharp/qsharp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-112845bef71e6b2c.js","node_modules/monaco-editor/esm/vs/basic-languages/r/r.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-87215223838709d3.js","node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e9d8a7814c35ea63.js","node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-28181daee4ca0d92.js","node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d2499cc86453fe0e.js","node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c6b92b61d24336f4.js","node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-fb8be60233f8f0ad.js","node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-521e3a5db9ea058a.js","node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-7b5792874795d47d.js","node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-84a38282b7c087bd.js","node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6c4f99539ac0b76d.js","node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-9b1db2ec3df4112a.js","node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-3e3798daf1171e43.js","node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-8be701b26fd71d12.js","node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-afd56f106814036e.js","node_modules/monaco-editor/esm/vs/basic-languages/sparql/sparql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e86dd87523eab623.js","node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-ee00185440fd8e5d.js","node_modules/monaco-editor/esm/vs/basic-languages/st/st.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-a2d53c1e538bf1bb.js","node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-1fabfa35524860c5.js","node_modules/monaco-editor/esm/vs/basic-languages/systemverilog/systemverilog.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6c9c312ce7562e9a.js","node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6596379a6843867f.js","node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d31b8c57da22cbc4.js","node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e64cadb65b74e0b9.js","node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-cbea92a1016d06cc.js","node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-1091ca23ffeff4e6.js","node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js","node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","node_modules/monaco-editor/esm/vs/editor/contrib/anchorSelect/anchorSelect.js","node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching.js","node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/moveCaretCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/caretOperations.js","node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/transpose.js","node_modules/monaco-editor/esm/vs/editor/contrib/clipboard/clipboard.js","node_modules/monaco-editor/esm/vs/base/common/lazy.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/types.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeAction.js","node_modules/monaco-editor/esm/vs/editor/contrib/message/messageController.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionMenu.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/lightBulbWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionUi.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionCommands.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionContributions.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelens.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codeLensCache.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/color.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverOperation.js","node_modules/monaco-editor/esm/vs/base/browser/ui/hover/hoverWidget.js","node_modules/monaco-editor/esm/vs/base/common/labels.js","node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/zoneWidget/zoneWidget.js","node_modules/monaco-editor/esm/vs/base/browser/ui/dropdown/dropdown.js","node_modules/monaco-editor/esm/vs/base/browser/ui/dropdown/dropdownActionViewItem.js","node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","node_modules/monaco-editor/esm/vs/editor/contrib/peekView/peekView.js","node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/gotoErrorWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/markerNavigationService.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/gotoError.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/markerHoverParticipant.js","node_modules/monaco-editor/esm/vs/base/common/insane/insane.js","node_modules/monaco-editor/esm/vs/base/common/marked/marked.js","node_modules/monaco-editor/esm/vs/base/browser/markdownRenderer.js","node_modules/monaco-editor/esm/vs/editor/browser/core/markdownRenderer.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/getHover.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/markdownHoverParticipant.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverTypes.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostText.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionToGhostText.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/consts.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js","node_modules/monaco-editor/esm/vs/platform/workspaces/common/workspaces.js","node_modules/monaco-editor/esm/vs/base/common/uuid.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetVariables.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetSession.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggest.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestMemory.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestAlternatives.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/bracketSelections.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/wordDistance.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/symbolIcons/symbolIcons.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/resizable.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetDetails.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetStatus.js","node_modules/monaco-editor/esm/vs/platform/files/common/files.js","node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetRenderer.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/wordContextKey.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestCommitCharacters.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestOvertypingCapturer.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/suggestWidgetInlineCompletionProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/suggestWidgetPreviewModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/utils.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextController.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsHoverParticipant.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/colorHoverParticipant.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/modesContentHover.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverWidgets.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/modesGlyphHover.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/referencesModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToSymbol.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesTree.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesController.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/symbolNavigation.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToCommands.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/clickLinkGesture.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hover.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorContributions.js","node_modules/monaco-editor/esm/vs/editor/contrib/comment/blockCommentCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/comment/lineCommentCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/comment/comment.js","node_modules/monaco-editor/esm/vs/editor/contrib/contextmenu/contextmenu.js","node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo.js","node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dragAndDropCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dnd.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findDecorations.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/replaceAllCommand.js","node_modules/monaco-editor/esm/vs/base/common/search.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/replacePattern.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findModel.js","node_modules/monaco-editor/esm/vs/base/browser/ui/checkbox/checkbox.js","node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/findInputCheckboxes.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findOptionsWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findState.js","node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/findInput.js","node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/replaceInput.js","node_modules/monaco-editor/esm/vs/platform/browser/contextScopedHistoryWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findController.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingRanges.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingDecorations.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/hiddenRangeModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/indentRangeProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/syntaxRangeProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/intializingRangeProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/folding.js","node_modules/monaco-editor/esm/vs/editor/contrib/fontZoom/fontZoom.js","node_modules/monaco-editor/esm/vs/editor/contrib/format/formatActions.js","node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/outlineModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/documentSymbols.js","node_modules/monaco-editor/esm/vs/editor/contrib/indentation/indentUtils.js","node_modules/monaco-editor/esm/vs/editor/contrib/indentation/indentation.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/inlayHintsController.js","node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplace.js","node_modules/monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/copyLinesCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/moveLinesCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/sortLinesCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js","node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/linkedEditing.js","node_modules/monaco-editor/esm/vs/editor/contrib/links/getLinks.js","node_modules/monaco-editor/esm/vs/editor/contrib/links/links.js","node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/multicursor.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/provideSignatureHelp.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHints.js","node_modules/monaco-editor/esm/vs/editor/contrib/rename/renameInputField.js","node_modules/monaco-editor/esm/vs/editor/contrib/rename/rename.js","node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/wordSelections.js","node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect.js","node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js","node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.js","node_modules/monaco-editor/esm/vs/editor/contrib/unusualLineTerminators/unusualLineTerminators.js","node_modules/monaco-editor/esm/vs/editor/contrib/viewportSemanticTokens/viewportSemanticTokens.js","node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/wordHighlighter.js","node_modules/monaco-editor/esm/vs/editor/contrib/wordOperations/wordOperations.js","node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/wordPartOperations.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/accessibilityHelp/accessibilityHelp.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/inspectTokens/inspectTokens.js","node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneHelpQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/editorNavigationQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/gotoLineQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.js","node_modules/monaco-editor/esm/vs/base/common/fuzzyScorer.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/gotoSymbolQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.js","node_modules/monaco-editor/esm/vs/base/common/errorMessage.js","node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js","node_modules/monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/commandsQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneCommandsQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/referenceSearch/standaloneReferenceSearch.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.js","node_modules/cyrillic-to-latin/cyrillicToLatin.js","src/engine.js","src/chpp-lang.js","src/examples/singleton.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"afR20\\\":\\\"index.e8333c9c.js\\\",\\\"01alg\\\":\\\"cssMode.1e5b3634.js\\\",\\\"gB2Ke\\\":\\\"index.92a1bf40.css\\\",\\\"erbcC\\\":\\\"jsonMode.2f31f505.js\\\",\\\"h37N5\\\":\\\"htmlMode.b43c5c2f.js\\\",\\\"5faVK\\\":\\\"abap.adf93b09.js\\\",\\\"3Ok4I\\\":\\\"apex.dedb0f08.js\\\",\\\"fSB6d\\\":\\\"azcli.2ce1df92.js\\\",\\\"jpNf3\\\":\\\"bat.ffc9dc64.js\\\",\\\"9agDz\\\":\\\"bicep.b014f25b.js\\\",\\\"i0wln\\\":\\\"cameligo.e78c6c24.js\\\",\\\"9lSZr\\\":\\\"clojure.71736eb5.js\\\",\\\"chwkh\\\":\\\"coffee.76669bcb.js\\\",\\\"ecDIs\\\":\\\"cpp.00b222e9.js\\\",\\\"g9sSR\\\":\\\"csharp.b6822197.js\\\",\\\"bxzGg\\\":\\\"csp.ff406cd9.js\\\",\\\"aLgRC\\\":\\\"css.4cd577e2.js\\\",\\\"j7aV3\\\":\\\"dart.f829d1b9.js\\\",\\\"3uNI7\\\":\\\"dockerfile.3a437283.js\\\",\\\"9hdOr\\\":\\\"ecl.815dad80.js\\\",\\\"eARw1\\\":\\\"elixir.d2a9d0d8.js\\\",\\\"DexBm\\\":\\\"fsharp.e6eb59b5.js\\\",\\\"h4QlH\\\":\\\"go.eb493421.js\\\",\\\"i3XGQ\\\":\\\"graphql.83bfc353.js\\\",\\\"hVAh4\\\":\\\"handlebars.9ce9fa02.js\\\",\\\"29f8R\\\":\\\"hcl.09b683f6.js\\\",\\\"aQjnC\\\":\\\"html.fb0cf23e.js\\\",\\\"989L2\\\":\\\"ini.d97f8bba.js\\\",\\\"bIX0z\\\":\\\"java.df4c77d1.js\\\",\\\"aANrd\\\":\\\"javascript.f19eae1e.js\\\",\\\"f8QQQ\\\":\\\"typescript.55b685a6.js\\\",\\\"gPBxc\\\":\\\"julia.d95be741.js\\\",\\\"6vVyJ\\\":\\\"kotlin.c4562cb7.js\\\",\\\"5c6KI\\\":\\\"less.b6fb9686.js\\\",\\\"k6YPO\\\":\\\"lexon.44dac68a.js\\\",\\\"iS20h\\\":\\\"lua.7cccd2c4.js\\\",\\\"iJFfk\\\":\\\"liquid.613d7aae.js\\\",\\\"3TZ3Z\\\":\\\"m3.4748f72f.js\\\",\\\"gGH7L\\\":\\\"markdown.4b3e8e85.js\\\",\\\"cEG3a\\\":\\\"mips.d60567ed.js\\\",\\\"htg6M\\\":\\\"msdax.ca9b081a.js\\\",\\\"5VCCa\\\":\\\"mysql.51b3c561.js\\\",\\\"dYDbF\\\":\\\"objective-c.58b3c2f4.js\\\",\\\"bF1uR\\\":\\\"pascal.767646f6.js\\\",\\\"4NzNz\\\":\\\"pascaligo.795b0a89.js\\\",\\\"a5GT3\\\":\\\"perl.31a29636.js\\\",\\\"3SKUg\\\":\\\"pgsql.8292f96c.js\\\",\\\"5nrvp\\\":\\\"php.8bb91c13.js\\\",\\\"b0LL9\\\":\\\"postiats.de49f183.js\\\",\\\"8ecsj\\\":\\\"powerquery.2003f7ef.js\\\",\\\"lwBwF\\\":\\\"powershell.1a6ff2a7.js\\\",\\\"bl7yJ\\\":\\\"pug.d26595b8.js\\\",\\\"dVstS\\\":\\\"python.ff631f34.js\\\",\\\"6ugqt\\\":\\\"qsharp.40cbaf83.js\\\",\\\"cr2Jr\\\":\\\"r.a3ab0143.js\\\",\\\"dHDuz\\\":\\\"razor.4453eb56.js\\\",\\\"j38tE\\\":\\\"redis.e4780e6f.js\\\",\\\"fwJTR\\\":\\\"redshift.2d0e3777.js\\\",\\\"DeBV9\\\":\\\"restructuredtext.909dc65e.js\\\",\\\"6XFh3\\\":\\\"ruby.77e05ebd.js\\\",\\\"jmSEJ\\\":\\\"rust.f3f7630c.js\\\",\\\"3hLus\\\":\\\"sb.be02ed29.js\\\",\\\"bgSxl\\\":\\\"scala.2f59601b.js\\\",\\\"uzEUs\\\":\\\"scheme.a75600bb.js\\\",\\\"3W7p6\\\":\\\"scss.170d3309.js\\\",\\\"k2emc\\\":\\\"shell.36ee94a4.js\\\",\\\"1HlaC\\\":\\\"solidity.965bc0ac.js\\\",\\\"jY4J1\\\":\\\"sophia.4d12b4f0.js\\\",\\\"krfpP\\\":\\\"sparql.8dc249f0.js\\\",\\\"1ZmwX\\\":\\\"sql.f648f896.js\\\",\\\"jtWO3\\\":\\\"st.19b1fd61.js\\\",\\\"aNiqH\\\":\\\"swift.4797d0c6.js\\\",\\\"elx4g\\\":\\\"systemverilog.f2de035f.js\\\",\\\"5fUSa\\\":\\\"tcl.2733fc64.js\\\",\\\"jBsq3\\\":\\\"twig.e6005da6.js\\\",\\\"k5mNP\\\":\\\"vb.24172d03.js\\\",\\\"fwBmb\\\":\\\"xml.6634c143.js\\\",\\\"bewct\\\":\\\"yaml.fcf3cffc.js\\\",\\\"6NK7j\\\":\\\"index.391f1550.js\\\"}\"));","import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages, Emitter } from './fillers/monaco-editor-core.js';\r\n// --- CSS configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this.options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this.setOptions(options);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar optionsDefault = {\r\n    validate: true,\r\n    lint: {\r\n        compatibleVendorPrefixes: 'ignore',\r\n        vendorPrefix: 'warning',\r\n        duplicateProperties: 'warning',\r\n        emptyRules: 'warning',\r\n        importStatement: 'ignore',\r\n        boxModel: 'ignore',\r\n        universalSelector: 'ignore',\r\n        zeroUnits: 'ignore',\r\n        fontFaceProperties: 'warning',\r\n        hexColorLength: 'error',\r\n        argumentsInColorFunction: 'error',\r\n        unknownProperties: 'warning',\r\n        ieHack: 'ignore',\r\n        unknownVendorSpecificProperties: 'ignore',\r\n        propertyIgnoredDueToDisplay: 'warning',\r\n        important: 'ignore',\r\n        float: 'ignore',\r\n        idSelector: 'ignore'\r\n    },\r\n    data: { useDefaultDataProvider: true }\r\n};\r\nvar modeConfigurationDefault = {\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    definitions: true,\r\n    references: true,\r\n    documentHighlights: true,\r\n    rename: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nexport var cssDefaults = new LanguageServiceDefaultsImpl('css', optionsDefault, modeConfigurationDefault);\r\nexport var scssDefaults = new LanguageServiceDefaultsImpl('scss', optionsDefault, modeConfigurationDefault);\r\nexport var lessDefaults = new LanguageServiceDefaultsImpl('less', optionsDefault, modeConfigurationDefault);\r\n// export to the global based API\r\nlanguages.css = { cssDefaults: cssDefaults, lessDefaults: lessDefaults, scssDefaults: scssDefaults };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./cssMode.js');\r\n}\r\nlanguages.onLanguage('less', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(lessDefaults); });\r\n});\r\nlanguages.onLanguage('scss', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(scssDefaults); });\r\n});\r\nlanguages.onLanguage('css', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(cssDefaults); });\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"01alg\"))]).then(() => parcelRequire('iYnWy'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same link element twice (e.g. if it was already in the HTML)\n    var existingLinks = document.getElementsByTagName('link');\n\n    if ([].concat(existingLinks).some(function isCurrentBundle(link) {\n      return link.href === bundle && link.rel.indexOf('stylesheet') > -1;\n    })) {\n      resolve();\n      return;\n    }\n\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = bundle;\n\n    link.onerror = function (e) {\n      link.onerror = link.onload = null;\n      link.remove();\n      reject(e);\n    };\n\n    link.onload = function () {\n      link.onerror = link.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(link);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter, languages } from './fillers/monaco-editor-core.js';\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setDiagnosticsOptions(diagnosticsOptions);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this._diagnosticsOptions;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this._diagnosticsOptions = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar diagnosticDefault = {\r\n    validate: true,\r\n    allowComments: true,\r\n    schemas: [],\r\n    enableSchemaRequest: false,\r\n    schemaRequest: 'warning',\r\n    schemaValidation: 'warning',\r\n    comments: 'error',\r\n    trailingCommas: 'error'\r\n};\r\nvar modeConfigurationDefault = {\r\n    documentFormattingEdits: true,\r\n    documentRangeFormattingEdits: true,\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    tokens: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nexport var jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault, modeConfigurationDefault);\r\n// export to the global based API\r\nlanguages.json = { jsonDefaults: jsonDefaults };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./jsonMode.js');\r\n}\r\nlanguages.register({\r\n    id: 'json',\r\n    extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc', '.har'],\r\n    aliases: ['JSON', 'json'],\r\n    mimetypes: ['application/json']\r\n});\r\nlanguages.onLanguage('json', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(jsonDefaults); });\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"erbcC\"))]).then(() => parcelRequire('gvjV6'));","import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { languages, Emitter } from './fillers/monaco-editor-core.js';\r\n// --- HTML configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar formatDefaults = {\r\n    tabSize: 4,\r\n    insertSpaces: false,\r\n    wrapLineLength: 120,\r\n    unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\r\n    contentUnformatted: 'pre',\r\n    indentInnerHtml: false,\r\n    preserveNewLines: true,\r\n    maxPreserveNewLines: null,\r\n    indentHandlebars: false,\r\n    endWithNewline: false,\r\n    extraLiners: 'head, body, /html',\r\n    wrapAttributes: 'auto'\r\n};\r\nvar optionsDefault = {\r\n    format: formatDefaults,\r\n    suggest: {},\r\n    data: { useDefaultDataProvider: true }\r\n};\r\nfunction getConfigurationDefault(languageId) {\r\n    return {\r\n        completionItems: true,\r\n        hovers: true,\r\n        documentSymbols: true,\r\n        links: true,\r\n        documentHighlights: true,\r\n        rename: true,\r\n        colors: true,\r\n        foldingRanges: true,\r\n        selectionRanges: true,\r\n        diagnostics: languageId === htmlLanguageId,\r\n        documentFormattingEdits: languageId === htmlLanguageId,\r\n        documentRangeFormattingEdits: languageId === htmlLanguageId // turned off for Razor and Handlebar\r\n    };\r\n}\r\nvar htmlLanguageId = 'html';\r\nvar handlebarsLanguageId = 'handlebars';\r\nvar razorLanguageId = 'razor';\r\nexport var htmlLanguageService = registerHTMLLanguageService(htmlLanguageId, optionsDefault, getConfigurationDefault(htmlLanguageId));\r\nexport var htmlDefaults = htmlLanguageService.defaults;\r\nexport var handlebarLanguageService = registerHTMLLanguageService(handlebarsLanguageId, optionsDefault, getConfigurationDefault(handlebarsLanguageId));\r\nexport var handlebarDefaults = handlebarLanguageService.defaults;\r\nexport var razorLanguageService = registerHTMLLanguageService(razorLanguageId, optionsDefault, getConfigurationDefault(razorLanguageId));\r\nexport var razorDefaults = razorLanguageService.defaults;\r\n// export to the global based API\r\nlanguages.html = { htmlDefaults: htmlDefaults, razorDefaults: razorDefaults, handlebarDefaults: handlebarDefaults, htmlLanguageService: htmlLanguageService, handlebarLanguageService: handlebarLanguageService, razorLanguageService: razorLanguageService, registerHTMLLanguageService: registerHTMLLanguageService };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./htmlMode.js');\r\n}\r\n/**\r\n * Registers a new HTML language service for the languageId.\r\n * Note: 'html', 'handlebar' and 'razor' are registered by default.\r\n *\r\n * Use this method to register additional language ids with a HTML service.\r\n * The language server has to be registered before an editor model is opened.\r\n */\r\nexport function registerHTMLLanguageService(languageId, options, modeConfiguration) {\r\n    var _this = this;\r\n    if (options === void 0) { options = optionsDefault; }\r\n    if (modeConfiguration === void 0) { modeConfiguration = getConfigurationDefault(languageId); }\r\n    var defaults = new LanguageServiceDefaultsImpl(languageId, options, modeConfiguration);\r\n    var mode;\r\n    // delay the initalization of the mode until the language is accessed the first time\r\n    var onLanguageListener = languages.onLanguage(languageId, function () { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getMode()];\r\n                case 1:\r\n                    mode = (_a.sent()).setupMode(defaults);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); });\r\n    return {\r\n        defaults: defaults,\r\n        dispose: function () {\r\n            onLanguageListener.dispose();\r\n            mode === null || mode === void 0 ? void 0 : mode.dispose();\r\n            mode = undefined;\r\n        }\r\n    };\r\n}\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"h37N5\"))]).then(() => parcelRequire('6eR3z'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from './fillers/monaco-editor-core.js';\r\nvar languageDefinitions = {};\r\nvar lazyLanguageLoaders = {};\r\nvar LazyLanguageLoader = /** @class */ (function () {\r\n    function LazyLanguageLoader(languageId) {\r\n        var _this = this;\r\n        this._languageId = languageId;\r\n        this._loadingTriggered = false;\r\n        this._lazyLoadPromise = new Promise(function (resolve, reject) {\r\n            _this._lazyLoadPromiseResolve = resolve;\r\n            _this._lazyLoadPromiseReject = reject;\r\n        });\r\n    }\r\n    LazyLanguageLoader.getOrCreate = function (languageId) {\r\n        if (!lazyLanguageLoaders[languageId]) {\r\n            lazyLanguageLoaders[languageId] = new LazyLanguageLoader(languageId);\r\n        }\r\n        return lazyLanguageLoaders[languageId];\r\n    };\r\n    LazyLanguageLoader.prototype.whenLoaded = function () {\r\n        return this._lazyLoadPromise;\r\n    };\r\n    LazyLanguageLoader.prototype.load = function () {\r\n        var _this = this;\r\n        if (!this._loadingTriggered) {\r\n            this._loadingTriggered = true;\r\n            languageDefinitions[this._languageId].loader().then(function (mod) { return _this._lazyLoadPromiseResolve(mod); }, function (err) { return _this._lazyLoadPromiseReject(err); });\r\n        }\r\n        return this._lazyLoadPromise;\r\n    };\r\n    return LazyLanguageLoader;\r\n}());\r\nexport function loadLanguage(languageId) {\r\n    return LazyLanguageLoader.getOrCreate(languageId).load();\r\n}\r\nexport function registerLanguage(def) {\r\n    var languageId = def.id;\r\n    languageDefinitions[languageId] = def;\r\n    languages.register(def);\r\n    var lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);\r\n    languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then(function (mod) { return mod.language; }));\r\n    languages.onLanguage(languageId, function () {\r\n        lazyLanguageLoader.load().then(function (mod) {\r\n            languages.setLanguageConfiguration(languageId, mod.conf);\r\n        });\r\n    });\r\n}\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"5faVK\"))).then(() => parcelRequire('ja6uC'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'abap',\r\n    extensions: ['.abap'],\r\n    aliases: ['abap', 'ABAP'],\r\n    loader: function () { return import('./abap.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"3Ok4I\"))).then(() => parcelRequire('5sHCe'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'apex',\r\n    extensions: ['.cls'],\r\n    aliases: ['Apex', 'apex'],\r\n    mimetypes: ['text/x-apex-source', 'text/x-apex'],\r\n    loader: function () { return import('./apex.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"fSB6d\"))).then(() => parcelRequire('kpTnI'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'azcli',\r\n    extensions: ['.azcli'],\r\n    aliases: ['Azure CLI', 'azcli'],\r\n    loader: function () { return import('./azcli.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"jpNf3\"))).then(() => parcelRequire('3lO4H'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'bat',\r\n    extensions: ['.bat', '.cmd'],\r\n    aliases: ['Batch', 'bat'],\r\n    loader: function () { return import('./bat.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"9agDz\"))).then(() => parcelRequire('f23yD'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'bicep',\r\n    extensions: ['.bicep'],\r\n    aliases: ['Bicep'],\r\n    loader: function () { return import('./bicep.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"i0wln\"))).then(() => parcelRequire('cFIX8'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'cameligo',\r\n    extensions: ['.mligo'],\r\n    aliases: ['Cameligo'],\r\n    loader: function () { return import('./cameligo.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"9lSZr\"))).then(() => parcelRequire('aspPW'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'clojure',\r\n    extensions: ['.clj', '.cljs', '.cljc', '.edn'],\r\n    aliases: ['clojure', 'Clojure'],\r\n    loader: function () { return import('./clojure.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"chwkh\"))).then(() => parcelRequire('hg4c9'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'coffeescript',\r\n    extensions: ['.coffee'],\r\n    aliases: ['CoffeeScript', 'coffeescript', 'coffee'],\r\n    mimetypes: ['text/x-coffeescript', 'text/coffeescript'],\r\n    loader: function () { return import('./coffee.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"ecDIs\"))).then(() => parcelRequire('7pYyy'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'c',\r\n    extensions: ['.c', '.h'],\r\n    aliases: ['C', 'c'],\r\n    loader: function () { return import('./cpp.js'); }\r\n});\r\nregisterLanguage({\r\n    id: 'cpp',\r\n    extensions: ['.cpp', '.cc', '.cxx', '.hpp', '.hh', '.hxx'],\r\n    aliases: ['C++', 'Cpp', 'cpp'],\r\n    loader: function () { return import('./cpp.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"g9sSR\"))).then(() => parcelRequire('k4ehC'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'csharp',\r\n    extensions: ['.cs', '.csx', '.cake'],\r\n    aliases: ['C#', 'csharp'],\r\n    loader: function () { return import('./csharp.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bxzGg\"))).then(() => parcelRequire('kZMGr'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'csp',\r\n    extensions: [],\r\n    aliases: ['CSP', 'csp'],\r\n    loader: function () { return import('./csp.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"aLgRC\"))).then(() => parcelRequire('3UgxK'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'css',\r\n    extensions: ['.css'],\r\n    aliases: ['CSS', 'css'],\r\n    mimetypes: ['text/css'],\r\n    loader: function () { return import('./css.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j7aV3\"))).then(() => parcelRequire('j31Y8'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'dart',\r\n    extensions: ['.dart'],\r\n    aliases: ['Dart', 'dart'],\r\n    mimetypes: ['text/x-dart-source', 'text/x-dart'],\r\n    loader: function () { return import('./dart.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"3uNI7\"))).then(() => parcelRequire('7RJrx'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'dockerfile',\r\n    extensions: ['.dockerfile'],\r\n    filenames: ['Dockerfile'],\r\n    aliases: ['Dockerfile'],\r\n    loader: function () { return import('./dockerfile.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"9hdOr\"))).then(() => parcelRequire('hpk2o'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ecl',\r\n    extensions: ['.ecl'],\r\n    aliases: ['ECL', 'Ecl', 'ecl'],\r\n    loader: function () { return import('./ecl.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"eARw1\"))).then(() => parcelRequire('8fnJD'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'elixir',\r\n    extensions: ['.ex', '.exs'],\r\n    aliases: ['Elixir', 'elixir', 'ex'],\r\n    loader: function () { return import('./elixir.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"DexBm\"))).then(() => parcelRequire('gDhL6'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'fsharp',\r\n    extensions: ['.fs', '.fsi', '.ml', '.mli', '.fsx', '.fsscript'],\r\n    aliases: ['F#', 'FSharp', 'fsharp'],\r\n    loader: function () { return import('./fsharp.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"h4QlH\"))).then(() => parcelRequire('iEH3r'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'go',\r\n    extensions: ['.go'],\r\n    aliases: ['Go'],\r\n    loader: function () { return import('./go.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"i3XGQ\"))).then(() => parcelRequire('4aj14'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'graphql',\r\n    extensions: ['.graphql', '.gql'],\r\n    aliases: ['GraphQL', 'graphql', 'gql'],\r\n    mimetypes: ['application/graphql'],\r\n    loader: function () { return import('./graphql.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"hVAh4\"))]).then(() => parcelRequire('8zwDB'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'handlebars',\r\n    extensions: ['.handlebars', '.hbs'],\r\n    aliases: ['Handlebars', 'handlebars', 'hbs'],\r\n    mimetypes: ['text/x-handlebars-template'],\r\n    loader: function () { return import('./handlebars.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"29f8R\"))).then(() => parcelRequire('2w65V'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'hcl',\r\n    extensions: ['.tf', '.tfvars', '.hcl'],\r\n    aliases: ['Terraform', 'tf', 'HCL', 'hcl'],\r\n    loader: function () { return import('./hcl.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"aQjnC\"))]).then(() => parcelRequire('VtiH9'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'html',\r\n    extensions: ['.html', '.htm', '.shtml', '.xhtml', '.mdoc', '.jsp', '.asp', '.aspx', '.jshtm'],\r\n    aliases: ['HTML', 'htm', 'html', 'xhtml'],\r\n    mimetypes: ['text/html', 'text/x-jshtm', 'text/template', 'text/ng-template'],\r\n    loader: function () { return import('./html.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"989L2\"))).then(() => parcelRequire('fyEeb'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ini',\r\n    extensions: ['.ini', '.properties', '.gitconfig'],\r\n    filenames: ['config', '.gitattributes', '.gitconfig', '.editorconfig'],\r\n    aliases: ['Ini', 'ini'],\r\n    loader: function () { return import('./ini.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bIX0z\"))).then(() => parcelRequire('lGGr5'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'java',\r\n    extensions: ['.java', '.jav'],\r\n    aliases: ['Java', 'java'],\r\n    mimetypes: ['text/x-java-source', 'text/x-java'],\r\n    loader: function () { return import('./java.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"f8QQQ\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"aANrd\"))]).then(() => parcelRequire('dfLoM'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'javascript',\r\n    extensions: ['.js', '.es6', '.jsx', '.mjs'],\r\n    firstLine: '^#!.*\\\\bnode',\r\n    filenames: ['jakefile'],\r\n    aliases: ['JavaScript', 'javascript', 'js'],\r\n    mimetypes: ['text/javascript'],\r\n    loader: function () { return import('./javascript.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"gPBxc\"))).then(() => parcelRequire('bWT63'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'julia',\r\n    extensions: ['.jl'],\r\n    aliases: ['julia', 'Julia'],\r\n    loader: function () { return import('./julia.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"6vVyJ\"))).then(() => parcelRequire('i9Ypl'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'kotlin',\r\n    extensions: ['.kt'],\r\n    aliases: ['Kotlin', 'kotlin'],\r\n    mimetypes: ['text/x-kotlin-source', 'text/x-kotlin'],\r\n    loader: function () { return import('./kotlin.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"5c6KI\"))).then(() => parcelRequire('h5qgE'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'less',\r\n    extensions: ['.less'],\r\n    aliases: ['Less', 'less'],\r\n    mimetypes: ['text/x-less', 'text/less'],\r\n    loader: function () { return import('./less.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"k6YPO\"))).then(() => parcelRequire('dg0zx'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'lexon',\r\n    extensions: ['.lex'],\r\n    aliases: ['Lexon'],\r\n    loader: function () { return import('./lexon.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"iS20h\"))).then(() => parcelRequire('M3wDo'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'lua',\r\n    extensions: ['.lua'],\r\n    aliases: ['Lua', 'lua'],\r\n    loader: function () { return import('./lua.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"iJFfk\"))]).then(() => parcelRequire('9tk9u'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'liquid',\r\n    extensions: ['.liquid', '.html.liquid'],\r\n    aliases: ['Liquid', 'liquid'],\r\n    mimetypes: ['application/liquid'],\r\n    loader: function () { return import('./liquid.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"3TZ3Z\"))).then(() => parcelRequire('9kC0H'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'm3',\r\n    extensions: ['.m3', '.i3', '.mg', '.ig'],\r\n    aliases: ['Modula-3', 'Modula3', 'modula3', 'm3'],\r\n    loader: function () { return import('./m3.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"gGH7L\"))).then(() => parcelRequire('4DOFE'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'markdown',\r\n    extensions: ['.md', '.markdown', '.mdown', '.mkdn', '.mkd', '.mdwn', '.mdtxt', '.mdtext'],\r\n    aliases: ['Markdown', 'markdown'],\r\n    loader: function () { return import('./markdown.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"cEG3a\"))).then(() => parcelRequire('4tTsH'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'mips',\r\n    extensions: ['.s'],\r\n    aliases: ['MIPS', 'MIPS-V'],\r\n    mimetypes: ['text/x-mips', 'text/mips', 'text/plaintext'],\r\n    loader: function () { return import('./mips.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"htg6M\"))).then(() => parcelRequire('k63l7'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'msdax',\r\n    extensions: ['.dax', '.msdax'],\r\n    aliases: ['DAX', 'MSDAX'],\r\n    loader: function () { return import('./msdax.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"5VCCa\"))).then(() => parcelRequire('dF2KE'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'mysql',\r\n    extensions: [],\r\n    aliases: ['MySQL', 'mysql'],\r\n    loader: function () { return import('./mysql.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"dYDbF\"))).then(() => parcelRequire('6LJpN'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'objective-c',\r\n    extensions: ['.m'],\r\n    aliases: ['Objective-C'],\r\n    loader: function () { return import('./objective-c.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bF1uR\"))).then(() => parcelRequire('lNfqr'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pascal',\r\n    extensions: ['.pas', '.p', '.pp'],\r\n    aliases: ['Pascal', 'pas'],\r\n    mimetypes: ['text/x-pascal-source', 'text/x-pascal'],\r\n    loader: function () { return import('./pascal.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"4NzNz\"))).then(() => parcelRequire('5eEHm'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pascaligo',\r\n    extensions: ['.ligo'],\r\n    aliases: ['Pascaligo', 'ligo'],\r\n    loader: function () { return import('./pascaligo.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"a5GT3\"))).then(() => parcelRequire('4bTWV'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'perl',\r\n    extensions: ['.pl'],\r\n    aliases: ['Perl', 'pl'],\r\n    loader: function () { return import('./perl.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"3SKUg\"))).then(() => parcelRequire('4Eh7L'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pgsql',\r\n    extensions: [],\r\n    aliases: ['PostgreSQL', 'postgres', 'pg', 'postgre'],\r\n    loader: function () { return import('./pgsql.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"5nrvp\"))).then(() => parcelRequire('aTU8G'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'php',\r\n    extensions: ['.php', '.php4', '.php5', '.phtml', '.ctp'],\r\n    aliases: ['PHP', 'php'],\r\n    mimetypes: ['application/x-php'],\r\n    loader: function () { return import('./php.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"b0LL9\"))).then(() => parcelRequire('66Zad'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'postiats',\r\n    extensions: ['.dats', '.sats', '.hats'],\r\n    aliases: ['ATS', 'ATS/Postiats'],\r\n    loader: function () { return import('./postiats.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"8ecsj\"))).then(() => parcelRequire('arQRi'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'powerquery',\r\n    extensions: ['.pq', '.pqm'],\r\n    aliases: ['PQ', 'M', 'Power Query', 'Power Query M'],\r\n    loader: function () { return import('./powerquery.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"lwBwF\"))).then(() => parcelRequire('dtSHi'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'powershell',\r\n    extensions: ['.ps1', '.psm1', '.psd1'],\r\n    aliases: ['PowerShell', 'powershell', 'ps', 'ps1'],\r\n    loader: function () { return import('./powershell.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bl7yJ\"))).then(() => parcelRequire('lpuuo'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pug',\r\n    extensions: ['.jade', '.pug'],\r\n    aliases: ['Pug', 'Jade', 'jade'],\r\n    loader: function () { return import('./pug.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"dVstS\"))]).then(() => parcelRequire('4MK0a'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'python',\r\n    extensions: ['.py', '.rpy', '.pyw', '.cpy', '.gyp', '.gypi'],\r\n    aliases: ['Python', 'py'],\r\n    firstLine: '^#!/.*\\\\bpython[0-9.-]*\\\\b',\r\n    loader: function () { return import('./python.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"6ugqt\"))).then(() => parcelRequire('hMObX'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'qsharp',\r\n    extensions: ['.qs'],\r\n    aliases: ['Q#', 'qsharp'],\r\n    loader: function () { return import('./qsharp.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"cr2Jr\"))).then(() => parcelRequire('2VFZN'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'r',\r\n    extensions: ['.r', '.rhistory', '.rmd', '.rprofile', '.rt'],\r\n    aliases: ['R', 'r'],\r\n    loader: function () { return import('./r.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"dHDuz\"))]).then(() => parcelRequire('6znbH'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'razor',\r\n    extensions: ['.cshtml'],\r\n    aliases: ['Razor', 'razor'],\r\n    mimetypes: ['text/x-cshtml'],\r\n    loader: function () { return import('./razor.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j38tE\"))).then(() => parcelRequire('eiIOr'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'redis',\r\n    extensions: ['.redis'],\r\n    aliases: ['redis'],\r\n    loader: function () { return import('./redis.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"fwJTR\"))).then(() => parcelRequire('8EU76'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'redshift',\r\n    extensions: [],\r\n    aliases: ['Redshift', 'redshift'],\r\n    loader: function () { return import('./redshift.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"DeBV9\"))).then(() => parcelRequire('i8LP7'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'restructuredtext',\r\n    extensions: ['.rst'],\r\n    aliases: ['reStructuredText', 'restructuredtext'],\r\n    loader: function () { return import('./restructuredtext.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"6XFh3\"))).then(() => parcelRequire('0phQV'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ruby',\r\n    extensions: ['.rb', '.rbx', '.rjs', '.gemspec', '.pp'],\r\n    filenames: ['rakefile', 'Gemfile'],\r\n    aliases: ['Ruby', 'rb'],\r\n    loader: function () { return import('./ruby.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"jmSEJ\"))).then(() => parcelRequire('blapX'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'rust',\r\n    extensions: ['.rs', '.rlib'],\r\n    aliases: ['Rust', 'rust'],\r\n    loader: function () { return import('./rust.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"3hLus\"))).then(() => parcelRequire('fqlrJ'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sb',\r\n    extensions: ['.sb'],\r\n    aliases: ['Small Basic', 'sb'],\r\n    loader: function () { return import('./sb.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bgSxl\"))).then(() => parcelRequire('iyWPs'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scala',\r\n    extensions: ['.scala', '.sc', '.sbt'],\r\n    aliases: ['Scala', 'scala', 'SBT', 'Sbt', 'sbt', 'Dotty', 'dotty'],\r\n    mimetypes: ['text/x-scala-source', 'text/x-scala', 'text/x-sbt', 'text/x-dotty'],\r\n    loader: function () { return import('./scala.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"uzEUs\"))).then(() => parcelRequire('l9CCF'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scheme',\r\n    extensions: ['.scm', '.ss', '.sch', '.rkt'],\r\n    aliases: ['scheme', 'Scheme'],\r\n    loader: function () { return import('./scheme.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"3W7p6\"))).then(() => parcelRequire('hCqg4'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scss',\r\n    extensions: ['.scss'],\r\n    aliases: ['Sass', 'sass', 'scss'],\r\n    mimetypes: ['text/x-scss', 'text/scss'],\r\n    loader: function () { return import('./scss.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"k2emc\"))).then(() => parcelRequire('9ElFC'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'shell',\r\n    extensions: ['.sh', '.bash'],\r\n    aliases: ['Shell', 'sh'],\r\n    loader: function () { return import('./shell.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1HlaC\"))).then(() => parcelRequire('6oNSv'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sol',\r\n    extensions: ['.sol'],\r\n    aliases: ['sol', 'solidity', 'Solidity'],\r\n    loader: function () { return import('./solidity.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"jY4J1\"))).then(() => parcelRequire('j5EnU'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'aes',\r\n    extensions: ['.aes'],\r\n    aliases: ['aes', 'sophia', 'Sophia'],\r\n    loader: function () { return import('./sophia.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"krfpP\"))).then(() => parcelRequire('5BzMv'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sparql',\r\n    extensions: ['.rq'],\r\n    aliases: ['sparql', 'SPARQL'],\r\n    loader: function () { return import('./sparql.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1ZmwX\"))).then(() => parcelRequire('lfRvN'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sql',\r\n    extensions: ['.sql'],\r\n    aliases: ['SQL'],\r\n    loader: function () { return import('./sql.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"jtWO3\"))).then(() => parcelRequire('aMKnV'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'st',\r\n    extensions: ['.st', '.iecst', '.iecplc', '.lc3lib'],\r\n    aliases: ['StructuredText', 'scl', 'stl'],\r\n    loader: function () { return import('./st.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"aNiqH\"))).then(() => parcelRequire('lkijV'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'swift',\r\n    aliases: ['Swift', 'swift'],\r\n    extensions: ['.swift'],\r\n    mimetypes: ['text/swift'],\r\n    loader: function () { return import('./swift.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"elx4g\"))).then(() => parcelRequire('lEYlH'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'systemverilog',\r\n    extensions: ['.sv', '.svh'],\r\n    aliases: ['SV', 'sv', 'SystemVerilog', 'systemverilog'],\r\n    loader: function () { return import('./systemverilog.js'); }\r\n});\r\nregisterLanguage({\r\n    id: 'verilog',\r\n    extensions: ['.v', '.vh'],\r\n    aliases: ['V', 'v', 'Verilog', 'verilog'],\r\n    loader: function () { return import('./systemverilog.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"5fUSa\"))).then(() => parcelRequire('aff15'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'tcl',\r\n    extensions: ['.tcl'],\r\n    aliases: ['tcl', 'Tcl', 'tcltk', 'TclTk', 'tcl/tk', 'Tcl/Tk'],\r\n    loader: function () { return import('./tcl.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"jBsq3\"))).then(() => parcelRequire('dCp46'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'twig',\r\n    extensions: ['.twig'],\r\n    aliases: ['Twig', 'twig'],\r\n    mimetypes: ['text/x-twig'],\r\n    loader: function () { return import('./twig.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"f8QQQ\"))]).then(() => parcelRequire('aSt0Q'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'typescript',\r\n    extensions: ['.ts', '.tsx'],\r\n    aliases: ['TypeScript', 'ts', 'typescript'],\r\n    mimetypes: ['text/typescript'],\r\n    loader: function () { return import('./typescript.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"k5mNP\"))).then(() => parcelRequire('faGtH'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'vb',\r\n    extensions: ['.vb'],\r\n    aliases: ['Visual Basic', 'vb'],\r\n    loader: function () { return import('./vb.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gB2Ke\")).toString()), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"fwBmb\"))]).then(() => parcelRequire('bnG8c'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'xml',\r\n    extensions: [\r\n        '.xml',\r\n        '.dtd',\r\n        '.ascx',\r\n        '.csproj',\r\n        '.config',\r\n        '.wxi',\r\n        '.wxl',\r\n        '.wxs',\r\n        '.xaml',\r\n        '.svg',\r\n        '.svgz',\r\n        '.opf',\r\n        '.xsl'\r\n    ],\r\n    firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\r\n    aliases: ['XML', 'xml'],\r\n    mimetypes: ['text/xml', 'application/xml', 'application/xaml+xml', 'application/xml-dtd'],\r\n    loader: function () { return import('./xml.js'); }\r\n});\r\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bewct\"))).then(() => parcelRequire('a0bwf'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'yaml',\r\n    extensions: ['.yaml', '.yml'],\r\n    aliases: ['YAML', 'yaml', 'YML', 'yml'],\r\n    mimetypes: ['application/x-yaml', 'text/x-yaml'],\r\n    loader: function () { return import('./yaml.js'); }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from './errors.js';\r\nimport { escapeIcons } from './iconLabels.js';\r\nexport class MarkdownString {\r\n    constructor(value = '', isTrustedOrOptions = false) {\r\n        var _a, _b;\r\n        this.value = value;\r\n        if (typeof this.value !== 'string') {\r\n            throw illegalArgument('value');\r\n        }\r\n        if (typeof isTrustedOrOptions === 'boolean') {\r\n            this.isTrusted = isTrustedOrOptions;\r\n            this.supportThemeIcons = false;\r\n        }\r\n        else {\r\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\r\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\r\n        }\r\n    }\r\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\r\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\r\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\r\n            .replace(/^>/gm, '\\\\>')\r\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\r\n        return this;\r\n    }\r\n    appendMarkdown(value) {\r\n        this.value += value;\r\n        return this;\r\n    }\r\n    appendCodeblock(langId, code) {\r\n        this.value += '\\n```';\r\n        this.value += langId;\r\n        this.value += '\\n';\r\n        this.value += code;\r\n        this.value += '\\n```\\n';\r\n        return this;\r\n    }\r\n}\r\nexport function isEmptyMarkdownString(oneOrMany) {\r\n    if (isMarkdownString(oneOrMany)) {\r\n        return !oneOrMany.value;\r\n    }\r\n    else if (Array.isArray(oneOrMany)) {\r\n        return oneOrMany.every(isEmptyMarkdownString);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nexport function isMarkdownString(thing) {\r\n    if (thing instanceof MarkdownString) {\r\n        return true;\r\n    }\r\n    else if (thing && typeof thing === 'object') {\r\n        return typeof thing.value === 'string'\r\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\r\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\r\n    }\r\n    return false;\r\n}\r\nexport function escapeMarkdownSyntaxTokens(text) {\r\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\r\n}\r\nexport function removeMarkdownEscapes(text) {\r\n    if (!text) {\r\n        return text;\r\n    }\r\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\r\n}\r\nexport function parseHrefAndDimensions(href) {\r\n    const dimensions = [];\r\n    const splitted = href.split('|').map(s => s.trim());\r\n    href = splitted[0];\r\n    const parameters = splitted[1];\r\n    if (parameters) {\r\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\r\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\r\n        const height = heightFromParams ? heightFromParams[1] : '';\r\n        const width = widthFromParams ? widthFromParams[1] : '';\r\n        const widthIsFinite = isFinite(parseInt(width));\r\n        const heightIsFinite = isFinite(parseInt(height));\r\n        if (widthIsFinite) {\r\n            dimensions.push(`width=\"${width}\"`);\r\n        }\r\n        if (heightIsFinite) {\r\n            dimensions.push(`height=\"${height}\"`);\r\n        }\r\n    }\r\n    return { href, dimensions };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './anchorSelect.css';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\r\nlet SelectionAnchorController = class SelectionAnchorController {\r\n    constructor(editor, contextKeyService) {\r\n        this.editor = editor;\r\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\r\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SelectionAnchorController.ID);\r\n    }\r\n    setSelectionAnchor() {\r\n        if (this.editor.hasModel()) {\r\n            const position = this.editor.getPosition();\r\n            const previousDecorations = this.decorationId ? [this.decorationId] : [];\r\n            const newDecorationId = this.editor.deltaDecorations(previousDecorations, [{\r\n                    range: Selection.fromPositions(position, position),\r\n                    options: {\r\n                        description: 'selection-anchor',\r\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n                        hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\r\n                        className: 'selection-anchor'\r\n                    }\r\n                }]);\r\n            this.decorationId = newDecorationId[0];\r\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\r\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\r\n        }\r\n    }\r\n    goToSelectionAnchor() {\r\n        if (this.editor.hasModel() && this.decorationId) {\r\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\r\n            if (anchorPosition) {\r\n                this.editor.setPosition(anchorPosition.getStartPosition());\r\n            }\r\n        }\r\n    }\r\n    selectFromAnchorToCursor() {\r\n        if (this.editor.hasModel() && this.decorationId) {\r\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\r\n            if (start) {\r\n                const end = this.editor.getPosition();\r\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\r\n                this.cancelSelectionAnchor();\r\n            }\r\n        }\r\n    }\r\n    cancelSelectionAnchor() {\r\n        if (this.decorationId) {\r\n            this.editor.deltaDecorations([this.decorationId], []);\r\n            this.decorationId = undefined;\r\n            this.selectionAnchorSetContextKey.set(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancelSelectionAnchor();\r\n        this.modelChangeListener.dispose();\r\n    }\r\n};\r\nSelectionAnchorController.ID = 'editor.contrib.selectionAnchorController';\r\nSelectionAnchorController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SelectionAnchorController);\r\nclass SetSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.setSelectionAnchor',\r\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\r\n            alias: 'Set Selection Anchor',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 32 /* KEY_B */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.setSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nclass GoToSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.goToSelectionAnchor',\r\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\r\n            alias: 'Go to Selection Anchor',\r\n            precondition: SelectionAnchorSet,\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.goToSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nclass SelectFromAnchorToCursor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectFromAnchorToCursor',\r\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\r\n            alias: 'Select from Anchor to Cursor',\r\n            precondition: SelectionAnchorSet,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 41 /* KEY_K */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.selectFromAnchorToCursor();\r\n        });\r\n    }\r\n}\r\nclass CancelSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.cancelSelectionAnchor',\r\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\r\n            alias: 'Cancel Selection Anchor',\r\n            precondition: SelectionAnchorSet,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 9 /* Escape */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.cancelSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController);\r\nregisterEditorAction(SetSelectionAnchor);\r\nregisterEditorAction(GoToSelectionAnchor);\r\nregisterEditorAction(SelectFromAnchorToCursor);\r\nregisterEditorAction(CancelSelectionAnchor);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './bracketMatching.css';\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { editorBracketMatchBackground, editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\r\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { MenuRegistry, MenuId } from '../../../platform/actions/common/actions.js';\r\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hc: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\r\nclass JumpToBracketAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.jumpToBracket',\r\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\r\n            alias: 'Go to Bracket',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 88 /* US_BACKSLASH */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = BracketMatchingController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.jumpToBracket();\r\n    }\r\n}\r\nclass SelectToBracketAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectToBracket',\r\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\r\n            alias: 'Select to Bracket',\r\n            precondition: undefined,\r\n            description: {\r\n                description: `Select to Bracket`,\r\n                args: [{\r\n                        name: 'args',\r\n                        schema: {\r\n                            type: 'object',\r\n                            properties: {\r\n                                'selectBrackets': {\r\n                                    type: 'boolean',\r\n                                    default: true\r\n                                }\r\n                            },\r\n                        }\r\n                    }]\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        const controller = BracketMatchingController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        let selectBrackets = true;\r\n        if (args && args.selectBrackets === false) {\r\n            selectBrackets = false;\r\n        }\r\n        controller.selectToBracket(selectBrackets);\r\n    }\r\n}\r\nclass BracketsData {\r\n    constructor(position, brackets, options) {\r\n        this.position = position;\r\n        this.brackets = brackets;\r\n        this.options = options;\r\n    }\r\n}\r\nexport class BracketMatchingController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._lastBracketsData = [];\r\n        this._lastVersionId = 0;\r\n        this._decorations = [];\r\n        this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\r\n        this._matchBrackets = this._editor.getOption(63 /* matchBrackets */);\r\n        this._updateBracketsSoon.schedule();\r\n        this._register(editor.onDidChangeCursorPosition((e) => {\r\n            if (this._matchBrackets === 'never') {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._lastBracketsData = [];\r\n            this._decorations = [];\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModelLanguageConfiguration((e) => {\r\n            this._lastBracketsData = [];\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(63 /* matchBrackets */)) {\r\n                this._matchBrackets = this._editor.getOption(63 /* matchBrackets */);\r\n                this._decorations = this._editor.deltaDecorations(this._decorations, []);\r\n                this._lastBracketsData = [];\r\n                this._lastVersionId = 0;\r\n                this._updateBracketsSoon.schedule();\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(BracketMatchingController.ID);\r\n    }\r\n    jumpToBracket() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const newSelections = this._editor.getSelections().map(selection => {\r\n            const position = selection.getStartPosition();\r\n            // find matching brackets if position is on a bracket\r\n            const brackets = model.matchBracket(position);\r\n            let newCursorPosition = null;\r\n            if (brackets) {\r\n                if (brackets[0].containsPosition(position)) {\r\n                    newCursorPosition = brackets[1].getStartPosition();\r\n                }\r\n                else if (brackets[1].containsPosition(position)) {\r\n                    newCursorPosition = brackets[0].getStartPosition();\r\n                }\r\n            }\r\n            else {\r\n                // find the enclosing brackets if the position isn't on a matching bracket\r\n                const enclosingBrackets = model.findEnclosingBrackets(position);\r\n                if (enclosingBrackets) {\r\n                    newCursorPosition = enclosingBrackets[0].getStartPosition();\r\n                }\r\n                else {\r\n                    // no enclosing brackets, try the very first next bracket\r\n                    const nextBracket = model.findNextBracket(position);\r\n                    if (nextBracket && nextBracket.range) {\r\n                        newCursorPosition = nextBracket.range.getStartPosition();\r\n                    }\r\n                }\r\n            }\r\n            if (newCursorPosition) {\r\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n            }\r\n            return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        });\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealRange(newSelections[0]);\r\n    }\r\n    selectToBracket(selectBrackets) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const newSelections = [];\r\n        this._editor.getSelections().forEach(selection => {\r\n            const position = selection.getStartPosition();\r\n            let brackets = model.matchBracket(position);\r\n            if (!brackets) {\r\n                brackets = model.findEnclosingBrackets(position);\r\n                if (!brackets) {\r\n                    const nextBracket = model.findNextBracket(position);\r\n                    if (nextBracket && nextBracket.range) {\r\n                        brackets = model.matchBracket(nextBracket.range.getStartPosition());\r\n                    }\r\n                }\r\n            }\r\n            let selectFrom = null;\r\n            let selectTo = null;\r\n            if (brackets) {\r\n                brackets.sort(Range.compareRangesUsingStarts);\r\n                const [open, close] = brackets;\r\n                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\r\n                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\r\n                if (close.containsPosition(position)) {\r\n                    // select backwards if the cursor was on the closing bracket\r\n                    const tmp = selectFrom;\r\n                    selectFrom = selectTo;\r\n                    selectTo = tmp;\r\n                }\r\n            }\r\n            if (selectFrom && selectTo) {\r\n                newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\r\n            }\r\n        });\r\n        if (newSelections.length > 0) {\r\n            this._editor.setSelections(newSelections);\r\n            this._editor.revealRange(newSelections[0]);\r\n        }\r\n    }\r\n    _updateBrackets() {\r\n        if (this._matchBrackets === 'never') {\r\n            return;\r\n        }\r\n        this._recomputeBrackets();\r\n        let newDecorations = [], newDecorationsLen = 0;\r\n        for (const bracketData of this._lastBracketsData) {\r\n            let brackets = bracketData.brackets;\r\n            if (brackets) {\r\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\r\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\r\n            }\r\n        }\r\n        this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\r\n    }\r\n    _recomputeBrackets() {\r\n        if (!this._editor.hasModel()) {\r\n            // no model => no brackets!\r\n            this._lastBracketsData = [];\r\n            this._lastVersionId = 0;\r\n            return;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length > 100) {\r\n            // no bracket matching for high numbers of selections\r\n            this._lastBracketsData = [];\r\n            this._lastVersionId = 0;\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const versionId = model.getVersionId();\r\n        let previousData = [];\r\n        if (this._lastVersionId === versionId) {\r\n            // use the previous data only if the model is at the same version id\r\n            previousData = this._lastBracketsData;\r\n        }\r\n        let positions = [], positionsLen = 0;\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            if (selection.isEmpty()) {\r\n                // will bracket match a cursor only if the selection is collapsed\r\n                positions[positionsLen++] = selection.getStartPosition();\r\n            }\r\n        }\r\n        // sort positions for `previousData` cache hits\r\n        if (positions.length > 1) {\r\n            positions.sort(Position.compare);\r\n        }\r\n        let newData = [], newDataLen = 0;\r\n        let previousIndex = 0, previousLen = previousData.length;\r\n        for (let i = 0, len = positions.length; i < len; i++) {\r\n            let position = positions[i];\r\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\r\n                previousIndex++;\r\n            }\r\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\r\n                newData[newDataLen++] = previousData[previousIndex];\r\n            }\r\n            else {\r\n                let brackets = model.matchBracket(position);\r\n                let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\r\n                if (!brackets && this._matchBrackets === 'always') {\r\n                    brackets = model.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\r\n                    options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\r\n                }\r\n                newData[newDataLen++] = new BracketsData(position, brackets, options);\r\n            }\r\n        }\r\n        this._lastBracketsData = newData;\r\n        this._lastVersionId = versionId;\r\n    }\r\n}\r\nBracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\r\nBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\r\n    description: 'bracket-match-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'bracket-match',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerBracketMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\r\n    description: 'bracket-match-no-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'bracket-match'\r\n});\r\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController);\r\nregisterEditorAction(SelectToBracketAction);\r\nregisterEditorAction(JumpToBracketAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const bracketMatchBackground = theme.getColor(editorBracketMatchBackground);\r\n    if (bracketMatchBackground) {\r\n        collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);\r\n    }\r\n    const bracketMatchBorder = theme.getColor(editorBracketMatchBorder);\r\n    if (bracketMatchBorder) {\r\n        collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);\r\n    }\r\n});\r\n// Go to menu\r\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\r\n    group: '5_infile_nav',\r\n    command: {\r\n        id: 'editor.action.jumpToBracket',\r\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\r\n    },\r\n    order: 2\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class MoveCaretCommand {\r\n    constructor(selection, isMovingLeft) {\r\n        this._selection = selection;\r\n        this._isMovingLeft = isMovingLeft;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\r\n            return;\r\n        }\r\n        const lineNumber = this._selection.startLineNumber;\r\n        const startColumn = this._selection.startColumn;\r\n        const endColumn = this._selection.endColumn;\r\n        if (this._isMovingLeft && startColumn === 1) {\r\n            return;\r\n        }\r\n        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\r\n            return;\r\n        }\r\n        if (this._isMovingLeft) {\r\n            const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\r\n            const charBefore = model.getValueInRange(rangeBefore);\r\n            builder.addEditOperation(rangeBefore, null);\r\n            builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\r\n        }\r\n        else {\r\n            const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\r\n            const charAfter = model.getValueInRange(rangeAfter);\r\n            builder.addEditOperation(rangeAfter, null);\r\n            builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        if (this._isMovingLeft) {\r\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\r\n        }\r\n        else {\r\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveCaretCommand } from './moveCaretCommand.js';\r\nclass MoveCaretAction extends EditorAction {\r\n    constructor(left, opts) {\r\n        super(opts);\r\n        this.left = left;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let commands = [];\r\n        let selections = editor.getSelections();\r\n        for (const selection of selections) {\r\n            commands.push(new MoveCaretCommand(selection, this.left));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass MoveCaretLeftAction extends MoveCaretAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.moveCarretLeftAction',\r\n            label: nls.localize('caret.moveLeft', \"Move Selected Text Left\"),\r\n            alias: 'Move Selected Text Left',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nclass MoveCaretRightAction extends MoveCaretAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.moveCarretRightAction',\r\n            label: nls.localize('caret.moveRight', \"Move Selected Text Right\"),\r\n            alias: 'Move Selected Text Right',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nregisterEditorAction(MoveCaretLeftAction);\r\nregisterEditorAction(MoveCaretRightAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveOperations } from '../../common/controller/cursorMoveOperations.js';\r\nclass TransposeLettersAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transposeLetters',\r\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\r\n            alias: 'Transpose Letters',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 50 /* KEY_T */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let model = editor.getModel();\r\n        let commands = [];\r\n        let selections = editor.getSelections();\r\n        for (let selection of selections) {\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            let lineNumber = selection.startLineNumber;\r\n            let column = selection.startColumn;\r\n            let lastColumn = model.getLineMaxColumn(lineNumber);\r\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\r\n                // at beginning of file, nothing to do\r\n                continue;\r\n            }\r\n            // handle special case: when at end of line, transpose left two chars\r\n            // otherwise, transpose left and right chars\r\n            let endPosition = (column === lastColumn) ?\r\n                selection.getPosition() :\r\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\r\n            let middlePosition = MoveOperations.leftPosition(model, endPosition);\r\n            let beginPosition = MoveOperations.leftPosition(model, middlePosition);\r\n            let leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\r\n            let rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\r\n            let replaceRange = Range.fromPositions(beginPosition, endPosition);\r\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\r\n        }\r\n        if (commands.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, commands);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nregisterEditorAction(TransposeLettersAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { CopyOptions, InMemoryClipboardMetadataManager } from '../../browser/controller/textAreaInput.js';\r\nimport { EditorAction, registerEditorAction, MultiCommand } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MenuRegistry, MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nconst CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';\r\nconst supportsCut = (platform.isNative || document.queryCommandSupported('cut'));\r\nconst supportsCopy = (platform.isNative || document.queryCommandSupported('copy'));\r\n// Firefox only supports navigator.clipboard.readText() in browser extensions.\r\n// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility\r\n// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313\r\nconst supportsPaste = (typeof navigator.clipboard === 'undefined' || browser.isFirefox) ? document.queryCommandSupported('paste') : true;\r\nfunction registerCommand(command) {\r\n    command.register();\r\n    return command;\r\n}\r\nexport const CutAction = supportsCut ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardCutAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind cut keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 54 /* KEY_X */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 54 /* KEY_X */, secondary: [1024 /* Shift */ | 20 /* Delete */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miCut', comment: ['&& denotes a mnemonic'] }, \"Cu&&t\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 1,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 1,\r\n        }]\r\n})) : undefined;\r\nexport const CopyAction = supportsCopy ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardCopyAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind copy keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 33 /* KEY_C */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 33 /* KEY_C */, secondary: [2048 /* CtrlCmd */ | 19 /* Insert */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miCopy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\r\n            order: 2\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 2,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 2,\r\n        }]\r\n})) : undefined;\r\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, { submenu: MenuId.MenubarCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: '2_ccp', order: 3 });\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: CLIPBOARD_CONTEXT_MENU_GROUP, order: 3 });\r\nexport const PasteAction = supportsPaste ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardPasteAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind paste keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */, secondary: [1024 /* Shift */ | 19 /* Insert */] },\r\n        linux: { primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */, secondary: [1024 /* Shift */ | 19 /* Insert */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miPaste', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\r\n            order: 4\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 4,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 4,\r\n        }]\r\n})) : undefined;\r\nclass ExecCommandCopyWithSyntaxHighlightingAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',\r\n            label: nls.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', \"Copy With Syntax Highlighting\"),\r\n            alias: 'Copy With Syntax Highlighting',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const emptySelectionClipboard = editor.getOption(31 /* emptySelectionClipboard */);\r\n        if (!emptySelectionClipboard && editor.getSelection().isEmpty()) {\r\n            return;\r\n        }\r\n        CopyOptions.forceCopyWithSyntaxHighlighting = true;\r\n        editor.focus();\r\n        document.execCommand('copy');\r\n        CopyOptions.forceCopyWithSyntaxHighlighting = false;\r\n    }\r\n}\r\nfunction registerExecCommandImpl(target, browserCommand) {\r\n    if (!target) {\r\n        return;\r\n    }\r\n    // 1. handle case when focus is in editor.\r\n    target.addImplementation(10000, 'code-editor', (accessor, args) => {\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            // Do not execute if there is no selection and empty selection clipboard is off\r\n            const emptySelectionClipboard = focusedEditor.getOption(31 /* emptySelectionClipboard */);\r\n            const selection = focusedEditor.getSelection();\r\n            if (selection && selection.isEmpty() && !emptySelectionClipboard) {\r\n                return true;\r\n            }\r\n            document.execCommand(browserCommand);\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    // 2. (default) handle case when focus is somewhere else.\r\n    target.addImplementation(0, 'generic-dom', (accessor, args) => {\r\n        document.execCommand(browserCommand);\r\n        return true;\r\n    });\r\n}\r\nregisterExecCommandImpl(CutAction, 'cut');\r\nregisterExecCommandImpl(CopyAction, 'copy');\r\nif (PasteAction) {\r\n    // 1. Paste: handle case when focus is in editor.\r\n    PasteAction.addImplementation(10000, 'code-editor', (accessor, args) => {\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        const clipboardService = accessor.get(IClipboardService);\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        const focusedEditor = codeEditorService.getFocusedCodeEditor();\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            const result = document.execCommand('paste');\r\n            // Use the clipboard service if document.execCommand('paste') was not successful\r\n            if (!result && platform.isWeb) {\r\n                (() => __awaiter(void 0, void 0, void 0, function* () {\r\n                    const clipboardText = yield clipboardService.readText();\r\n                    if (clipboardText !== '') {\r\n                        const metadata = InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);\r\n                        let pasteOnNewLine = false;\r\n                        let multicursorText = null;\r\n                        let mode = null;\r\n                        if (metadata) {\r\n                            pasteOnNewLine = (focusedEditor.getOption(31 /* emptySelectionClipboard */) && !!metadata.isFromEmptySelection);\r\n                            multicursorText = (typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null);\r\n                            mode = metadata.mode;\r\n                        }\r\n                        focusedEditor.trigger('keyboard', \"paste\" /* Paste */, {\r\n                            text: clipboardText,\r\n                            pasteOnNewLine,\r\n                            multicursorText,\r\n                            mode\r\n                        });\r\n                    }\r\n                }))();\r\n                return true;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    // 2. Paste: (default) handle case when focus is somewhere else.\r\n    PasteAction.addImplementation(0, 'generic-dom', (accessor, args) => {\r\n        document.execCommand('paste');\r\n        return true;\r\n    });\r\n}\r\nif (supportsCopy) {\r\n    registerEditorAction(ExecCommandCopyWithSyntaxHighlightingAction);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Lazy {\r\n    constructor(executor) {\r\n        this.executor = executor;\r\n        this._didRun = false;\r\n    }\r\n    /**\r\n     * Get the wrapped value.\r\n     *\r\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\r\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\r\n     */\r\n    getValue() {\r\n        if (!this._didRun) {\r\n            try {\r\n                this._value = this.executor();\r\n            }\r\n            catch (err) {\r\n                this._error = err;\r\n            }\r\n            finally {\r\n                this._didRun = true;\r\n            }\r\n        }\r\n        if (this._error) {\r\n            throw this._error;\r\n        }\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Get the wrapped value without forcing evaluation.\r\n     */\r\n    get rawValue() { return this._value; }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class CodeActionKind {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    equals(other) {\r\n        return this.value === other.value;\r\n    }\r\n    contains(other) {\r\n        return this.equals(other) || this.value === '' || other.value.startsWith(this.value + CodeActionKind.sep);\r\n    }\r\n    intersects(other) {\r\n        return this.contains(other) || other.contains(this);\r\n    }\r\n    append(part) {\r\n        return new CodeActionKind(this.value + CodeActionKind.sep + part);\r\n    }\r\n}\r\nCodeActionKind.sep = '.';\r\nCodeActionKind.None = new CodeActionKind('@@none@@'); // Special code action that contains nothing\r\nCodeActionKind.Empty = new CodeActionKind('');\r\nCodeActionKind.QuickFix = new CodeActionKind('quickfix');\r\nCodeActionKind.Refactor = new CodeActionKind('refactor');\r\nCodeActionKind.Source = new CodeActionKind('source');\r\nCodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\r\nCodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\r\nexport function mayIncludeActionsOfKind(filter, providedKind) {\r\n    // A provided kind may be a subset or superset of our filtered kind.\r\n    if (filter.include && !filter.include.intersects(providedKind)) {\r\n        return false;\r\n    }\r\n    if (filter.excludes) {\r\n        if (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function filtersAction(filter, action) {\r\n    const actionKind = action.kind ? new CodeActionKind(action.kind) : undefined;\r\n    // Filter out actions by kind\r\n    if (filter.include) {\r\n        if (!actionKind || !filter.include.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.excludes) {\r\n        if (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions) {\r\n        if (actionKind && CodeActionKind.Source.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.onlyIncludePreferredActions) {\r\n        if (!action.isPreferred) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction excludesAction(providedKind, exclude, include) {\r\n    if (!exclude.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    if (include && exclude.contains(include)) {\r\n        // The include is more specific, don't filter out\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport class CodeActionCommandArgs {\r\n    constructor(kind, apply, preferred) {\r\n        this.kind = kind;\r\n        this.apply = apply;\r\n        this.preferred = preferred;\r\n    }\r\n    static fromUser(arg, defaults) {\r\n        if (!arg || typeof arg !== 'object') {\r\n            return new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\r\n        }\r\n        return new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg, defaults.kind), CodeActionCommandArgs.getApplyFromUser(arg, defaults.apply), CodeActionCommandArgs.getPreferredUser(arg));\r\n    }\r\n    static getApplyFromUser(arg, defaultAutoApply) {\r\n        switch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\r\n            case 'first': return \"first\" /* First */;\r\n            case 'never': return \"never\" /* Never */;\r\n            case 'ifsingle': return \"ifSingle\" /* IfSingle */;\r\n            default: return defaultAutoApply;\r\n        }\r\n    }\r\n    static getKindFromUser(arg, defaultKind) {\r\n        return typeof arg.kind === 'string'\r\n            ? new CodeActionKind(arg.kind)\r\n            : defaultKind;\r\n    }\r\n    static getPreferredUser(arg) {\r\n        return typeof arg.preferred === 'boolean'\r\n            ? arg.preferred\r\n            : false;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { equals, flatten, isNonEmptyArray, coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, isPromiseCanceledError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport const codeActionCommandId = 'editor.action.codeAction';\r\nexport const refactorCommandId = 'editor.action.refactor';\r\nexport const sourceActionCommandId = 'editor.action.sourceAction';\r\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\r\nexport const fixAllCommandId = 'editor.action.fixAll';\r\nexport class CodeActionItem {\r\n    constructor(action, provider) {\r\n        this.action = action;\r\n        this.provider = provider;\r\n    }\r\n    resolve(token) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\r\n                let action;\r\n                try {\r\n                    action = yield this.provider.resolveCodeAction(this.action, token);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n                if (action) {\r\n                    this.action.edit = action.edit;\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nclass ManagedCodeActionSet extends Disposable {\r\n    constructor(actions, documentation, disposables) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this._register(disposables);\r\n        this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\r\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\r\n    }\r\n    static codeActionsComparator({ action: a }, { action: b }) {\r\n        if (a.isPreferred && !b.isPreferred) {\r\n            return -1;\r\n        }\r\n        else if (!a.isPreferred && b.isPreferred) {\r\n            return 1;\r\n        }\r\n        if (isNonEmptyArray(a.diagnostics)) {\r\n            if (isNonEmptyArray(b.diagnostics)) {\r\n                return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (isNonEmptyArray(b.diagnostics)) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0; // both have no diagnostics\r\n        }\r\n    }\r\n    get hasAutoFix() {\r\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\r\n    }\r\n}\r\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\r\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\r\n    var _a;\r\n    const filter = trigger.filter || {};\r\n    const codeActionContext = {\r\n        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\r\n        trigger: trigger.type,\r\n    };\r\n    const cts = new TextModelCancellationTokenSource(model, token);\r\n    const providers = getCodeActionProviders(model, filter);\r\n    const disposables = new DisposableStore();\r\n    const promises = providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            progress.report(provider);\r\n            const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\r\n            if (providedCodeActions) {\r\n                disposables.add(providedCodeActions);\r\n            }\r\n            if (cts.token.isCancellationRequested) {\r\n                return emptyCodeActionsResponse;\r\n            }\r\n            const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\r\n            const documentation = getDocumentation(provider, filteredActions, filter.include);\r\n            return {\r\n                actions: filteredActions.map(action => new CodeActionItem(action, provider)),\r\n                documentation\r\n            };\r\n        }\r\n        catch (err) {\r\n            if (isPromiseCanceledError(err)) {\r\n                throw err;\r\n            }\r\n            onUnexpectedExternalError(err);\r\n            return emptyCodeActionsResponse;\r\n        }\r\n    }));\r\n    const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\r\n        const newProviders = modes.CodeActionProviderRegistry.all(model);\r\n        if (!equals(newProviders, providers)) {\r\n            cts.cancel();\r\n        }\r\n    });\r\n    return Promise.all(promises).then(actions => {\r\n        const allActions = flatten(actions.map(x => x.actions));\r\n        const allDocumentation = coalesce(actions.map(x => x.documentation));\r\n        return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\r\n    })\r\n        .finally(() => {\r\n        listener.dispose();\r\n        cts.dispose();\r\n    });\r\n}\r\nfunction getCodeActionProviders(model, filter) {\r\n    return modes.CodeActionProviderRegistry.all(model)\r\n        // Don't include providers that we know will not return code actions of interest\r\n        .filter(provider => {\r\n        if (!provider.providedCodeActionKinds) {\r\n            // We don't know what type of actions this provider will return.\r\n            return true;\r\n        }\r\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\r\n    });\r\n}\r\nfunction getDocumentation(provider, providedCodeActions, only) {\r\n    if (!provider.documentation) {\r\n        return undefined;\r\n    }\r\n    const documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\r\n    if (only) {\r\n        let currentBest;\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(only)) {\r\n                if (!currentBest) {\r\n                    currentBest = entry;\r\n                }\r\n                else {\r\n                    // Take best match\r\n                    if (currentBest.kind.contains(entry.kind)) {\r\n                        currentBest = entry;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (currentBest) {\r\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\r\n        }\r\n    }\r\n    // Otherwise, check to see if any of the provided actions match.\r\n    for (const action of providedCodeActions) {\r\n        if (!action.kind) {\r\n            continue;\r\n        }\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(new CodeActionKind(action.kind))) {\r\n                return entry.command;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!(resource instanceof URI)) {\r\n            throw illegalArgument();\r\n        }\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw illegalArgument();\r\n        }\r\n        const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\r\n            ? Selection.liftSelection(rangeOrSelection)\r\n            : Range.isIRange(rangeOrSelection)\r\n                ? model.validateRange(rangeOrSelection)\r\n                : undefined;\r\n        if (!validatedRangeOrSelection) {\r\n            throw illegalArgument();\r\n        }\r\n        const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\r\n        const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, { type: 1 /* Invoke */, filter: { includeSourceActions: true, include } }, Progress.None, CancellationToken.None);\r\n        const resolving = [];\r\n        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\r\n        for (let i = 0; i < resolveCount; i++) {\r\n            resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return codeActionSet.validActions.map(item => item.action);\r\n        }\r\n        finally {\r\n            setTimeout(() => codeActionSet.dispose(), 100);\r\n        }\r\n    });\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './messageController.css';\r\nimport * as nls from '../../../nls.js';\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerEditorContribution, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nlet MessageController = class MessageController {\r\n    constructor(editor, contextKeyService) {\r\n        this._messageWidget = new MutableDisposable();\r\n        this._messageListeners = new DisposableStore();\r\n        this._editor = editor;\r\n        this._visible = MessageController.MESSAGE_VISIBLE.bindTo(contextKeyService);\r\n        this._editorListener = this._editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit());\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MessageController.ID);\r\n    }\r\n    dispose() {\r\n        this._editorListener.dispose();\r\n        this._messageListeners.dispose();\r\n        this._messageWidget.dispose();\r\n        this._visible.reset();\r\n    }\r\n    showMessage(message, position) {\r\n        alert(message);\r\n        this._visible.set(true);\r\n        this._messageWidget.clear();\r\n        this._messageListeners.clear();\r\n        this._messageWidget.value = new MessageWidget(this._editor, position, message);\r\n        // close on blur, cursor, model change, dispose\r\n        this._messageListeners.add(this._editor.onDidBlurEditorText(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidChangeCursorPosition(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidDispose(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidChangeModel(() => this.closeMessage()));\r\n        // 3sec\r\n        this._messageListeners.add(new TimeoutTimer(() => this.closeMessage(), 3000));\r\n        // close on mouse move\r\n        let bounds;\r\n        this._messageListeners.add(this._editor.onMouseMove(e => {\r\n            // outside the text area\r\n            if (!e.target.position) {\r\n                return;\r\n            }\r\n            if (!bounds) {\r\n                // define bounding box around position and first mouse occurance\r\n                bounds = new Range(position.lineNumber - 3, 1, e.target.position.lineNumber + 3, 1);\r\n            }\r\n            else if (!bounds.containsPosition(e.target.position)) {\r\n                // check if position is still in bounds\r\n                this.closeMessage();\r\n            }\r\n        }));\r\n    }\r\n    closeMessage() {\r\n        this._visible.reset();\r\n        this._messageListeners.clear();\r\n        if (this._messageWidget.value) {\r\n            this._messageListeners.add(MessageWidget.fadeOut(this._messageWidget.value));\r\n        }\r\n    }\r\n    _onDidAttemptReadOnlyEdit() {\r\n        if (this._editor.hasModel()) {\r\n            this.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this._editor.getPosition());\r\n        }\r\n    }\r\n};\r\nMessageController.ID = 'editor.contrib.messageController';\r\nMessageController.MESSAGE_VISIBLE = new RawContextKey('messageVisible', false, nls.localize('messageVisible', 'Whether the editor is currently showing an inline message'));\r\nMessageController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], MessageController);\r\nexport { MessageController };\r\nconst MessageCommand = EditorCommand.bindToContribution(MessageController.get);\r\nregisterEditorCommand(new MessageCommand({\r\n    id: 'leaveEditorMessage',\r\n    precondition: MessageController.MESSAGE_VISIBLE,\r\n    handler: c => c.closeMessage(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        primary: 9 /* Escape */\r\n    }\r\n}));\r\nclass MessageWidget {\r\n    constructor(editor, { lineNumber, column }, text) {\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._editor = editor;\r\n        this._editor.revealLinesInCenterIfOutsideViewport(lineNumber, lineNumber, 0 /* Smooth */);\r\n        this._position = { lineNumber, column: column - 1 };\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.classList.add('monaco-editor-overlaymessage');\r\n        const anchorTop = document.createElement('div');\r\n        anchorTop.classList.add('anchor', 'top');\r\n        this._domNode.appendChild(anchorTop);\r\n        const message = document.createElement('div');\r\n        message.classList.add('message');\r\n        message.textContent = text;\r\n        this._domNode.appendChild(message);\r\n        const anchorBottom = document.createElement('div');\r\n        anchorBottom.classList.add('anchor', 'below');\r\n        this._domNode.appendChild(anchorBottom);\r\n        this._editor.addContentWidget(this);\r\n        this._domNode.classList.add('fadeIn');\r\n    }\r\n    static fadeOut(messageWidget) {\r\n        let handle;\r\n        const dispose = () => {\r\n            messageWidget.dispose();\r\n            clearTimeout(handle);\r\n            messageWidget.getDomNode().removeEventListener('animationend', dispose);\r\n        };\r\n        handle = setTimeout(dispose, 110);\r\n        messageWidget.getDomNode().addEventListener('animationend', dispose);\r\n        messageWidget.getDomNode().classList.add('fadeOut');\r\n        return { dispose };\r\n    }\r\n    dispose() {\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'messageoverlay';\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return { position: this._position, preference: [1 /* ABOVE */, 2 /* BELOW */] };\r\n    }\r\n    afterRender(position) {\r\n        this._domNode.classList.toggle('below', position === 2 /* BELOW */);\r\n    }\r\n}\r\nregisterEditorContribution(MessageController.ID, MessageController);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(inputValidationInfoBorder);\r\n    if (border) {\r\n        let borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.below { border-top-color: ${border}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.top { border-bottom-color: ${border}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { border: ${borderWidth}px solid ${border}; }`);\r\n    }\r\n    const background = theme.getColor(inputValidationInfoBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(inputValidationInfoForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { color: ${foreground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { getDomNodePagePosition } from '../../../base/browser/dom.js';\r\nimport { Action, Separator } from '../../../base/common/actions.js';\r\nimport { canceled } from '../../../base/common/errors.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\r\nimport { codeActionCommandId, CodeActionItem, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nclass CodeActionAction extends Action {\r\n    constructor(action, callback) {\r\n        super(action.command ? action.command.id : action.title, stripNewlines(action.title), undefined, !action.disabled, callback);\r\n        this.action = action;\r\n    }\r\n}\r\nfunction stripNewlines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\r\n}\r\nlet CodeActionMenu = class CodeActionMenu extends Disposable {\r\n    constructor(_editor, _delegate, _contextMenuService, keybindingService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._delegate = _delegate;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._visible = false;\r\n        this._showingActions = this._register(new MutableDisposable());\r\n        this._keybindingResolver = new CodeActionKeybindingResolver({\r\n            getKeybindings: () => keybindingService.getKeybindings()\r\n        });\r\n    }\r\n    get isVisible() {\r\n        return this._visible;\r\n    }\r\n    show(trigger, codeActions, at, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const actionsToShow = options.includeDisabledActions ? codeActions.allActions : codeActions.validActions;\r\n            if (!actionsToShow.length) {\r\n                this._visible = false;\r\n                return;\r\n            }\r\n            if (!this._editor.getDomNode()) {\r\n                // cancel when editor went off-dom\r\n                this._visible = false;\r\n                throw canceled();\r\n            }\r\n            this._visible = true;\r\n            this._showingActions.value = codeActions;\r\n            const menuActions = this.getMenuActions(trigger, actionsToShow, codeActions.documentation);\r\n            const anchor = Position.isIPosition(at) ? this._toCoords(at) : at || { x: 0, y: 0 };\r\n            const resolver = this._keybindingResolver.getResolver();\r\n            const useShadowDOM = this._editor.getOption(114 /* useShadowDOM */);\r\n            this._contextMenuService.showContextMenu({\r\n                domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\r\n                getAnchor: () => anchor,\r\n                getActions: () => menuActions,\r\n                onHide: () => {\r\n                    this._visible = false;\r\n                    this._editor.focus();\r\n                },\r\n                autoSelectFirstItem: true,\r\n                getKeyBinding: action => action instanceof CodeActionAction ? resolver(action.action) : undefined,\r\n            });\r\n        });\r\n    }\r\n    getMenuActions(trigger, actionsToShow, documentation) {\r\n        var _a, _b;\r\n        const toCodeActionAction = (item) => new CodeActionAction(item.action, () => this._delegate.onSelectCodeAction(item));\r\n        const result = actionsToShow\r\n            .map(toCodeActionAction);\r\n        const allDocumentation = [...documentation];\r\n        const model = this._editor.getModel();\r\n        if (model && result.length) {\r\n            for (const provider of CodeActionProviderRegistry.all(model)) {\r\n                if (provider._getAdditionalMenuItems) {\r\n                    allDocumentation.push(...provider._getAdditionalMenuItems({ trigger: trigger.type, only: (_b = (_a = trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.value }, actionsToShow.map(item => item.action)));\r\n                }\r\n            }\r\n        }\r\n        if (allDocumentation.length) {\r\n            result.push(new Separator(), ...allDocumentation.map(command => toCodeActionAction(new CodeActionItem({\r\n                title: command.title,\r\n                command: command,\r\n            }, undefined))));\r\n        }\r\n        return result;\r\n    }\r\n    _toCoords(position) {\r\n        if (!this._editor.hasModel()) {\r\n            return { x: 0, y: 0 };\r\n        }\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n        this._editor.render();\r\n        // Translate to absolute editor position\r\n        const cursorCoords = this._editor.getScrolledVisiblePosition(position);\r\n        const editorCoords = getDomNodePagePosition(this._editor.getDomNode());\r\n        const x = editorCoords.left + cursorCoords.left;\r\n        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\r\n        return { x, y };\r\n    }\r\n};\r\nCodeActionMenu = __decorate([\r\n    __param(2, IContextMenuService),\r\n    __param(3, IKeybindingService)\r\n], CodeActionMenu);\r\nexport { CodeActionMenu };\r\nexport class CodeActionKeybindingResolver {\r\n    constructor(_keybindingProvider) {\r\n        this._keybindingProvider = _keybindingProvider;\r\n    }\r\n    getResolver() {\r\n        // Lazy since we may not actually ever read the value\r\n        const allCodeActionBindings = new Lazy(() => this._keybindingProvider.getKeybindings()\r\n            .filter(item => CodeActionKeybindingResolver.codeActionCommands.indexOf(item.command) >= 0)\r\n            .filter(item => item.resolvedKeybinding)\r\n            .map((item) => {\r\n            // Special case these commands since they come built-in with VS Code and don't use 'commandArgs'\r\n            let commandArgs = item.commandArgs;\r\n            if (item.command === organizeImportsCommandId) {\r\n                commandArgs = { kind: CodeActionKind.SourceOrganizeImports.value };\r\n            }\r\n            else if (item.command === fixAllCommandId) {\r\n                commandArgs = { kind: CodeActionKind.SourceFixAll.value };\r\n            }\r\n            return Object.assign({ resolvedKeybinding: item.resolvedKeybinding }, CodeActionCommandArgs.fromUser(commandArgs, {\r\n                kind: CodeActionKind.None,\r\n                apply: \"never\" /* Never */\r\n            }));\r\n        }));\r\n        return (action) => {\r\n            if (action.kind) {\r\n                const binding = this.bestKeybindingForCodeAction(action, allCodeActionBindings.getValue());\r\n                return binding === null || binding === void 0 ? void 0 : binding.resolvedKeybinding;\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n    bestKeybindingForCodeAction(action, candidates) {\r\n        if (!action.kind) {\r\n            return undefined;\r\n        }\r\n        const kind = new CodeActionKind(action.kind);\r\n        return candidates\r\n            .filter(candidate => candidate.kind.contains(kind))\r\n            .filter(candidate => {\r\n            if (candidate.preferred) {\r\n                // If the candidate keybinding only applies to preferred actions, the this action must also be preferred\r\n                return action.isPreferred;\r\n            }\r\n            return true;\r\n        })\r\n            .reduceRight((currentBest, candidate) => {\r\n            if (!currentBest) {\r\n                return candidate;\r\n            }\r\n            // Select the more specific binding\r\n            return currentBest.kind.contains(candidate.kind) ? candidate : currentBest;\r\n        }, undefined);\r\n    }\r\n}\r\nCodeActionKeybindingResolver.codeActionCommands = [\r\n    refactorCommandId,\r\n    codeActionCommandId,\r\n    sourceActionCommandId,\r\n    organizeImportsCommandId,\r\n    fixAllCommandId\r\n];\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../base/browser/globalMouseMoveMonitor.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport './lightBulbWidget.css';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { editorLightBulbForeground, editorLightBulbAutoFixForeground, editorBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Gesture } from '../../../base/browser/touch.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nvar LightBulbState;\r\n(function (LightBulbState) {\r\n    LightBulbState.Hidden = { type: 0 /* Hidden */ };\r\n    class Showing {\r\n        constructor(actions, trigger, editorPosition, widgetPosition) {\r\n            this.actions = actions;\r\n            this.trigger = trigger;\r\n            this.editorPosition = editorPosition;\r\n            this.widgetPosition = widgetPosition;\r\n            this.type = 1 /* Showing */;\r\n        }\r\n    }\r\n    LightBulbState.Showing = Showing;\r\n})(LightBulbState || (LightBulbState = {}));\r\nlet LightBulbWidget = class LightBulbWidget extends Disposable {\r\n    constructor(_editor, _quickFixActionId, _preferredFixActionId, _keybindingService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._quickFixActionId = _quickFixActionId;\r\n        this._preferredFixActionId = _preferredFixActionId;\r\n        this._keybindingService = _keybindingService;\r\n        this._onClick = this._register(new Emitter());\r\n        this.onClick = this._onClick.event;\r\n        this._state = LightBulbState.Hidden;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = Codicon.lightBulb.classNames;\r\n        this._editor.addContentWidget(this);\r\n        this._register(this._editor.onDidChangeModelContent(_ => {\r\n            // cancel when the line in question has been removed\r\n            const editorModel = this._editor.getModel();\r\n            if (this.state.type !== 1 /* Showing */ || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        Gesture.ignoreTarget(this._domNode);\r\n        this._register(dom.addStandardDisposableGenericMouseDownListner(this._domNode, e => {\r\n            if (this.state.type !== 1 /* Showing */) {\r\n                return;\r\n            }\r\n            // Make sure that focus / cursor location is not lost when clicking widget icon\r\n            this._editor.focus();\r\n            e.preventDefault();\r\n            // a bit of extra work to make sure the menu\r\n            // doesn't cover the line-text\r\n            const { top, height } = dom.getDomNodePagePosition(this._domNode);\r\n            const lineHeight = this._editor.getOption(58 /* lineHeight */);\r\n            let pad = Math.floor(lineHeight / 3);\r\n            if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\r\n                pad += lineHeight;\r\n            }\r\n            this._onClick.fire({\r\n                x: e.posx,\r\n                y: top + height + pad,\r\n                actions: this.state.actions,\r\n                trigger: this.state.trigger,\r\n            });\r\n        }));\r\n        this._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e) => {\r\n            if ((e.buttons & 1) !== 1) {\r\n                return;\r\n            }\r\n            // mouse enters lightbulb while the primary/left button\r\n            // is being pressed -> hide the lightbulb and block future\r\n            // showings until mouse is released\r\n            this.hide();\r\n            const monitor = new GlobalMouseMoveMonitor();\r\n            monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, () => { }, () => {\r\n                monitor.dispose();\r\n            });\r\n        }));\r\n        this._register(this._editor.onDidChangeConfiguration(e => {\r\n            // hide when told to do so\r\n            if (e.hasChanged(56 /* lightbulb */) && !this._editor.getOption(56 /* lightbulb */).enabled) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        this._updateLightBulbTitleAndIcon();\r\n        this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon, this));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'LightBulbWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return this._state.type === 1 /* Showing */ ? this._state.widgetPosition : null;\r\n    }\r\n    update(actions, trigger, atPosition) {\r\n        if (actions.validActions.length <= 0) {\r\n            return this.hide();\r\n        }\r\n        const options = this._editor.getOptions();\r\n        if (!options.get(56 /* lightbulb */).enabled) {\r\n            return this.hide();\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return this.hide();\r\n        }\r\n        const { lineNumber, column } = model.validatePosition(atPosition);\r\n        const tabSize = model.getOptions().tabSize;\r\n        const fontInfo = options.get(42 /* fontInfo */);\r\n        const lineContent = model.getLineContent(lineNumber);\r\n        const indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n        const lineHasSpace = fontInfo.spaceWidth * indent > 22;\r\n        const isFolded = (lineNumber) => {\r\n            return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\r\n        };\r\n        let effectiveLineNumber = lineNumber;\r\n        if (!lineHasSpace) {\r\n            if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\r\n                effectiveLineNumber -= 1;\r\n            }\r\n            else if (!isFolded(lineNumber + 1)) {\r\n                effectiveLineNumber += 1;\r\n            }\r\n            else if (column * fontInfo.spaceWidth < 22) {\r\n                // cannot show lightbulb above/below and showing\r\n                // it inline would overlay the cursor...\r\n                return this.hide();\r\n            }\r\n        }\r\n        this.state = new LightBulbState.Showing(actions, trigger, atPosition, {\r\n            position: { lineNumber: effectiveLineNumber, column: 1 },\r\n            preference: LightBulbWidget._posPref\r\n        });\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    hide() {\r\n        this.state = LightBulbState.Hidden;\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        this._state = value;\r\n        this._updateLightBulbTitleAndIcon();\r\n    }\r\n    _updateLightBulbTitleAndIcon() {\r\n        if (this.state.type === 1 /* Showing */ && this.state.actions.hasAutoFix) {\r\n            // update icon\r\n            this._domNode.classList.remove(...Codicon.lightBulb.classNamesArray);\r\n            this._domNode.classList.add(...Codicon.lightbulbAutofix.classNamesArray);\r\n            const preferredKb = this._keybindingService.lookupKeybinding(this._preferredFixActionId);\r\n            if (preferredKb) {\r\n                this.title = nls.localize('preferredcodeActionWithKb', \"Show Code Actions. Preferred Quick Fix Available ({0})\", preferredKb.getLabel());\r\n                return;\r\n            }\r\n        }\r\n        // update icon\r\n        this._domNode.classList.remove(...Codicon.lightbulbAutofix.classNamesArray);\r\n        this._domNode.classList.add(...Codicon.lightBulb.classNamesArray);\r\n        const kb = this._keybindingService.lookupKeybinding(this._quickFixActionId);\r\n        if (kb) {\r\n            this.title = nls.localize('codeActionWithKb', \"Show Code Actions ({0})\", kb.getLabel());\r\n        }\r\n        else {\r\n            this.title = nls.localize('codeAction', \"Show Code Actions\");\r\n        }\r\n    }\r\n    set title(value) {\r\n        this._domNode.title = value;\r\n    }\r\n};\r\nLightBulbWidget._posPref = [0 /* EXACT */];\r\nLightBulbWidget = __decorate([\r\n    __param(3, IKeybindingService)\r\n], LightBulbWidget);\r\nexport { LightBulbWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    var _a;\r\n    const editorBackgroundColor = (_a = theme.getColor(editorBackground)) === null || _a === void 0 ? void 0 : _a.transparent(0.7);\r\n    // Lightbulb Icon\r\n    const editorLightBulbForegroundColor = theme.getColor(editorLightBulbForeground);\r\n    if (editorLightBulbForegroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .contentWidgets ${Codicon.lightBulb.cssSelector} {\n\t\t\tcolor: ${editorLightBulbForegroundColor};\n\t\t\tbackground-color: ${editorBackgroundColor};\n\t\t}`);\r\n    }\r\n    // Lightbulb Auto Fix Icon\r\n    const editorLightBulbAutoFixForegroundColor = theme.getColor(editorLightBulbAutoFixForeground);\r\n    if (editorLightBulbAutoFixForegroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .contentWidgets ${Codicon.lightbulbAutofix.cssSelector} {\n\t\t\tcolor: ${editorLightBulbAutoFixForegroundColor};\n\t\t\tbackground-color: ${editorBackgroundColor};\n\t\t}`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _CodeActionUi_disposed;\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { CodeActionMenu } from './codeActionMenu.js';\r\nimport { LightBulbWidget } from './lightBulbWidget.js';\r\nlet CodeActionUi = class CodeActionUi extends Disposable {\r\n    constructor(_editor, quickFixActionId, preferredFixActionId, delegate, instantiationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this.delegate = delegate;\r\n        this._activeCodeActions = this._register(new MutableDisposable());\r\n        _CodeActionUi_disposed.set(this, false);\r\n        this._codeActionWidget = new Lazy(() => {\r\n            return this._register(instantiationService.createInstance(CodeActionMenu, this._editor, {\r\n                onSelectCodeAction: (action) => __awaiter(this, void 0, void 0, function* () {\r\n                    this.delegate.applyCodeAction(action, /* retrigger */ true);\r\n                })\r\n            }));\r\n        });\r\n        this._lightBulbWidget = new Lazy(() => {\r\n            const widget = this._register(instantiationService.createInstance(LightBulbWidget, this._editor, quickFixActionId, preferredFixActionId));\r\n            this._register(widget.onClick(e => this.showCodeActionList(e.trigger, e.actions, e, { includeDisabledActions: false })));\r\n            return widget;\r\n        });\r\n    }\r\n    dispose() {\r\n        __classPrivateFieldSet(this, _CodeActionUi_disposed, true, \"f\");\r\n        super.dispose();\r\n    }\r\n    update(newState) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (newState.type !== 1 /* Triggered */) {\r\n                (_a = this._lightBulbWidget.rawValue) === null || _a === void 0 ? void 0 : _a.hide();\r\n                return;\r\n            }\r\n            let actions;\r\n            try {\r\n                actions = yield newState.actions;\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n                return;\r\n            }\r\n            if (__classPrivateFieldGet(this, _CodeActionUi_disposed, \"f\")) {\r\n                return;\r\n            }\r\n            this._lightBulbWidget.getValue().update(actions, newState.trigger, newState.position);\r\n            if (newState.trigger.type === 1 /* Invoke */) {\r\n                if ((_b = newState.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) { // Triggered for specific scope\r\n                    // Check to see if we want to auto apply.\r\n                    const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\r\n                    if (validActionToApply) {\r\n                        try {\r\n                            yield this.delegate.applyCodeAction(validActionToApply, false);\r\n                        }\r\n                        finally {\r\n                            actions.dispose();\r\n                        }\r\n                        return;\r\n                    }\r\n                    // Check to see if there is an action that we would have applied were it not invalid\r\n                    if (newState.trigger.context) {\r\n                        const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\r\n                        if (invalidAction && invalidAction.action.disabled) {\r\n                            MessageController.get(this._editor).showMessage(invalidAction.action.disabled, newState.trigger.context.position);\r\n                            actions.dispose();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                const includeDisabledActions = !!((_c = newState.trigger.filter) === null || _c === void 0 ? void 0 : _c.include);\r\n                if (newState.trigger.context) {\r\n                    if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\r\n                        MessageController.get(this._editor).showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\r\n                        this._activeCodeActions.value = actions;\r\n                        actions.dispose();\r\n                        return;\r\n                    }\r\n                }\r\n                this._activeCodeActions.value = actions;\r\n                this._codeActionWidget.getValue().show(newState.trigger, actions, newState.position, { includeDisabledActions });\r\n            }\r\n            else {\r\n                // auto magically triggered\r\n                if (this._codeActionWidget.getValue().isVisible) {\r\n                    // TODO: Figure out if we should update the showing menu?\r\n                    actions.dispose();\r\n                }\r\n                else {\r\n                    this._activeCodeActions.value = actions;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\r\n        if (!actions.allActions.length) {\r\n            return undefined;\r\n        }\r\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length === 0)\r\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.allActions.length === 1)) {\r\n            return actions.allActions.find(({ action }) => action.disabled);\r\n        }\r\n        return undefined;\r\n    }\r\n    tryGetValidActionToApply(trigger, actions) {\r\n        if (!actions.validActions.length) {\r\n            return undefined;\r\n        }\r\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length > 0)\r\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.validActions.length === 1)) {\r\n            return actions.validActions[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    showCodeActionList(trigger, actions, at, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._codeActionWidget.getValue().show(trigger, actions, at, options);\r\n        });\r\n    }\r\n};\r\n_CodeActionUi_disposed = new WeakMap();\r\nCodeActionUi = __decorate([\r\n    __param(4, IInstantiationService)\r\n], CodeActionUi);\r\nexport { CodeActionUi };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _CodeActionModel_isDisposed;\r\nimport { createCancelablePromise, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isEqual } from '../../../base/common/resources.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { getCodeActions } from './codeAction.js';\r\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\r\nclass CodeActionOracle extends Disposable {\r\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._markerService = _markerService;\r\n        this._signalChange = _signalChange;\r\n        this._delay = _delay;\r\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\r\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\r\n        this._register(this._editor.onDidChangeCursorPosition(() => this._onCursorChange()));\r\n    }\r\n    trigger(trigger) {\r\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\r\n        return this._createEventAndSignalChange(trigger, selection);\r\n    }\r\n    _onMarkerChanges(resources) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (resources.some(resource => isEqual(resource, model.uri))) {\r\n            this._autoTriggerTimer.cancelAndSet(() => {\r\n                this.trigger({ type: 2 /* Auto */ });\r\n            }, this._delay);\r\n        }\r\n    }\r\n    _onCursorChange() {\r\n        this._autoTriggerTimer.cancelAndSet(() => {\r\n            this.trigger({ type: 2 /* Auto */ });\r\n        }, this._delay);\r\n    }\r\n    _getRangeOfMarker(selection) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        for (const marker of this._markerService.read({ resource: model.uri })) {\r\n            const markerRange = model.validateRange(marker);\r\n            if (Range.intersectRanges(markerRange, selection)) {\r\n                return Range.lift(markerRange);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\r\n        if (!this._editor.hasModel()) {\r\n            return undefined;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const selection = this._editor.getSelection();\r\n        if (selection.isEmpty() && trigger.type === 2 /* Auto */) {\r\n            const { lineNumber, column } = selection.getPosition();\r\n            const line = model.getLineContent(lineNumber);\r\n            if (line.length === 0) {\r\n                // empty line\r\n                return undefined;\r\n            }\r\n            else if (column === 1) {\r\n                // look only right\r\n                if (/\\s/.test(line[0])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            else if (column === model.getLineMaxColumn(lineNumber)) {\r\n                // look only left\r\n                if (/\\s/.test(line[line.length - 1])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            else {\r\n                // look left and right\r\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n        }\r\n        return selection;\r\n    }\r\n    _createEventAndSignalChange(trigger, selection) {\r\n        const model = this._editor.getModel();\r\n        if (!selection || !model) {\r\n            // cancel\r\n            this._signalChange(undefined);\r\n            return undefined;\r\n        }\r\n        const markerRange = this._getRangeOfMarker(selection);\r\n        const position = markerRange ? markerRange.getStartPosition() : selection.getStartPosition();\r\n        const e = {\r\n            trigger,\r\n            selection,\r\n            position\r\n        };\r\n        this._signalChange(e);\r\n        return e;\r\n    }\r\n}\r\nexport var CodeActionsState;\r\n(function (CodeActionsState) {\r\n    CodeActionsState.Empty = { type: 0 /* Empty */ };\r\n    class Triggered {\r\n        constructor(trigger, rangeOrSelection, position, _cancellablePromise) {\r\n            this.trigger = trigger;\r\n            this.rangeOrSelection = rangeOrSelection;\r\n            this.position = position;\r\n            this._cancellablePromise = _cancellablePromise;\r\n            this.type = 1 /* Triggered */;\r\n            this.actions = _cancellablePromise.catch((e) => {\r\n                if (isPromiseCanceledError(e)) {\r\n                    return emptyCodeActionSet;\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        cancel() {\r\n            this._cancellablePromise.cancel();\r\n        }\r\n    }\r\n    CodeActionsState.Triggered = Triggered;\r\n})(CodeActionsState || (CodeActionsState = {}));\r\nconst emptyCodeActionSet = {\r\n    allActions: [],\r\n    validActions: [],\r\n    dispose: () => { },\r\n    documentation: [],\r\n    hasAutoFix: false\r\n};\r\nexport class CodeActionModel extends Disposable {\r\n    constructor(_editor, _markerService, contextKeyService, _progressService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._markerService = _markerService;\r\n        this._progressService = _progressService;\r\n        this._codeActionOracle = this._register(new MutableDisposable());\r\n        this._state = CodeActionsState.Empty;\r\n        this._onDidChangeState = this._register(new Emitter());\r\n        this.onDidChangeState = this._onDidChangeState.event;\r\n        _CodeActionModel_isDisposed.set(this, false);\r\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\r\n        this._register(this._editor.onDidChangeModel(() => this._update()));\r\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._register(CodeActionProviderRegistry.onDidChange(() => this._update()));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        if (__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _CodeActionModel_isDisposed, true, \"f\");\r\n        super.dispose();\r\n        this.setState(CodeActionsState.Empty, true);\r\n    }\r\n    _update() {\r\n        if (__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            return;\r\n        }\r\n        this._codeActionOracle.value = undefined;\r\n        this.setState(CodeActionsState.Empty);\r\n        const model = this._editor.getModel();\r\n        if (model\r\n            && CodeActionProviderRegistry.has(model)\r\n            && !this._editor.getOption(80 /* readOnly */)) {\r\n            const supportedActions = [];\r\n            for (const provider of CodeActionProviderRegistry.all(model)) {\r\n                if (Array.isArray(provider.providedCodeActionKinds)) {\r\n                    supportedActions.push(...provider.providedCodeActionKinds);\r\n                }\r\n            }\r\n            this._supportedCodeActions.set(supportedActions.join(' '));\r\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\r\n                var _a;\r\n                if (!trigger) {\r\n                    this.setState(CodeActionsState.Empty);\r\n                    return;\r\n                }\r\n                const actions = createCancelablePromise(token => getCodeActions(model, trigger.selection, trigger.trigger, Progress.None, token));\r\n                if (trigger.trigger.type === 1 /* Invoke */) {\r\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\r\n                }\r\n                this.setState(new CodeActionsState.Triggered(trigger.trigger, trigger.selection, trigger.position, actions));\r\n            }, undefined);\r\n            this._codeActionOracle.value.trigger({ type: 2 /* Auto */ });\r\n        }\r\n        else {\r\n            this._supportedCodeActions.reset();\r\n        }\r\n    }\r\n    trigger(trigger) {\r\n        if (this._codeActionOracle.value) {\r\n            this._codeActionOracle.value.trigger(trigger);\r\n        }\r\n    }\r\n    setState(newState, skipNotify) {\r\n        if (newState === this._state) {\r\n            return;\r\n        }\r\n        // Cancel old request\r\n        if (this._state.type === 1 /* Triggered */) {\r\n            this._state.cancel();\r\n        }\r\n        this._state = newState;\r\n        if (!skipNotify && !__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            this._onDidChangeState.fire(newState);\r\n        }\r\n    }\r\n}\r\n_CodeActionModel_isDisposed = new WeakMap();\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionUi } from './codeActionUi.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nfunction contextKeyForSupportedActions(kind) {\r\n    return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\r\n}\r\nconst argsSchema = {\r\n    type: 'object',\r\n    defaultSnippets: [{ body: { kind: '' } }],\r\n    properties: {\r\n        'kind': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\r\n        },\r\n        'apply': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\r\n            default: \"ifSingle\" /* IfSingle */,\r\n            enum: [\"first\" /* First */, \"ifSingle\" /* IfSingle */, \"never\" /* Never */],\r\n            enumDescriptions: [\r\n                nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\r\n                nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\r\n                nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\r\n            ]\r\n        },\r\n        'preferred': {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\r\n        }\r\n    }\r\n};\r\nlet QuickFixController = class QuickFixController extends Disposable {\r\n    constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\r\n        super();\r\n        this._instantiationService = _instantiationService;\r\n        this._editor = editor;\r\n        this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\r\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\r\n        this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\r\n            applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    yield this._applyCodeAction(action);\r\n                }\r\n                finally {\r\n                    if (retrigger) {\r\n                        this._trigger({ type: 2 /* Auto */, filter: {} });\r\n                    }\r\n                }\r\n            })\r\n        }, this._instantiationService)));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(QuickFixController.ID);\r\n    }\r\n    update(newState) {\r\n        this._ui.getValue().update(newState);\r\n    }\r\n    showCodeActions(trigger, actions, at) {\r\n        return this._ui.getValue().showCodeActionList(trigger, actions, at, { includeDisabledActions: false });\r\n    }\r\n    manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        MessageController.get(this._editor).closeMessage();\r\n        const triggerPosition = this._editor.getPosition();\r\n        this._trigger({ type: 1 /* Invoke */, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\r\n    }\r\n    _trigger(trigger) {\r\n        return this._model.trigger(trigger);\r\n    }\r\n    _applyCodeAction(action) {\r\n        return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\r\n    }\r\n};\r\nQuickFixController.ID = 'editor.contrib.quickFixController';\r\nQuickFixController = __decorate([\r\n    __param(1, IMarkerService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IEditorProgressService),\r\n    __param(4, IInstantiationService)\r\n], QuickFixController);\r\nexport { QuickFixController };\r\nexport function applyCodeAction(accessor, item, editor) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const bulkEditService = accessor.get(IBulkEditService);\r\n        const commandService = accessor.get(ICommandService);\r\n        const telemetryService = accessor.get(ITelemetryService);\r\n        const notificationService = accessor.get(INotificationService);\r\n        telemetryService.publicLog2('codeAction.applyCodeAction', {\r\n            codeActionTitle: item.action.title,\r\n            codeActionKind: item.action.kind,\r\n            codeActionIsPreferred: !!item.action.isPreferred,\r\n        });\r\n        yield item.resolve(CancellationToken.None);\r\n        if (item.action.edit) {\r\n            yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), { editor, label: item.action.title });\r\n        }\r\n        if (item.action.command) {\r\n            try {\r\n                yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                const message = asMessage(err);\r\n                notificationService.error(typeof message === 'string'\r\n                    ? message\r\n                    : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction asMessage(err) {\r\n    if (typeof err === 'string') {\r\n        return err;\r\n    }\r\n    else if (err instanceof Error && typeof err.message === 'string') {\r\n        return err.message;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\r\n    if (editor.hasModel()) {\r\n        const controller = QuickFixController.get(editor);\r\n        if (controller) {\r\n            controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\r\n        }\r\n    }\r\n}\r\nexport class QuickFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: QuickFixAction.Id,\r\n            label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\r\n            alias: 'Quick Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\r\n    }\r\n}\r\nQuickFixAction.Id = 'editor.action.quickFix';\r\nexport class CodeActionCommand extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: codeActionCommandId,\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            description: {\r\n                description: 'Trigger a code action',\r\n                args: [{ name: 'args', schema: argsSchema, }]\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Empty,\r\n            apply: \"ifSingle\" /* IfSingle */,\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\r\n                : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\r\n            include: args.kind,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class RefactorAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: refactorCommandId,\r\n            label: nls.localize('refactor.label', \"Refactor...\"),\r\n            alias: 'Refactor...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 48 /* KEY_R */,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 48 /* KEY_R */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor)),\r\n            },\r\n            description: {\r\n                description: 'Refactor...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Refactor,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\r\n                : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\r\n            include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class SourceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: sourceActionCommandId,\r\n            label: nls.localize('source.label', \"Source Action...\"),\r\n            alias: 'Source Action...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2.1,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source)),\r\n            },\r\n            description: {\r\n                description: 'Source Action...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Source,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\r\n                : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\r\n            include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class OrganizeImportsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: organizeImportsCommandId,\r\n            label: nls.localize('organizeImports.label', \"Organize Imports\"),\r\n            alias: 'Organize Imports',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), { include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class FixAllAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: fixAllCommandId,\r\n            label: nls.localize('fixAll.label', \"Fix All\"),\r\n            alias: 'Fix All',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), { include: CodeActionKind.SourceFixAll, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class AutoFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: AutoFixAction.Id,\r\n            label: nls.localize('autoFix.label', \"Auto Fix...\"),\r\n            alias: 'Auto Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 84 /* US_DOT */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\r\n            include: CodeActionKind.QuickFix,\r\n            onlyIncludePreferredActions: true\r\n        }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nAutoFixAction.Id = 'editor.action.autoFix';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CodeActionCommand, OrganizeImportsAction, QuickFixAction, QuickFixController, RefactorAction, SourceAction, AutoFixAction, FixAllAction } from './codeActionCommands.js';\r\nregisterEditorContribution(QuickFixController.ID, QuickFixController);\r\nregisterEditorAction(QuickFixAction);\r\nregisterEditorAction(RefactorAction);\r\nregisterEditorAction(SourceAction);\r\nregisterEditorAction(OrganizeImportsAction);\r\nregisterEditorAction(AutoFixAction);\r\nregisterEditorAction(FixAllAction);\r\nregisterEditorCommand(new CodeActionCommand());\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport class CodeLensModel {\r\n    constructor() {\r\n        this.lenses = [];\r\n        this._disposables = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n    add(list, provider) {\r\n        this._disposables.add(list);\r\n        for (const symbol of list.lenses) {\r\n            this.lenses.push({ symbol, provider });\r\n        }\r\n    }\r\n}\r\nexport function getCodeLensModel(model, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const provider = CodeLensProviderRegistry.ordered(model);\r\n        const providerRanks = new Map();\r\n        const result = new CodeLensModel();\r\n        const promises = provider.map((provider, i) => __awaiter(this, void 0, void 0, function* () {\r\n            providerRanks.set(provider, i);\r\n            try {\r\n                const list = yield Promise.resolve(provider.provideCodeLenses(model, token));\r\n                if (list) {\r\n                    result.add(list, provider);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }));\r\n        yield Promise.all(promises);\r\n        result.lenses = result.lenses.sort((a, b) => {\r\n            // sort by lineNumber, provider-rank, and column\r\n            if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\r\n                return -1;\r\n            }\r\n            else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\r\n                return 1;\r\n            }\r\n            else if ((providerRanks.get(a.provider)) < (providerRanks.get(b.provider))) {\r\n                return -1;\r\n            }\r\n            else if ((providerRanks.get(a.provider)) > (providerRanks.get(b.provider))) {\r\n                return 1;\r\n            }\r\n            else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\r\n                return -1;\r\n            }\r\n            else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        return result;\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeLensProvider', function (accessor, ...args) {\r\n    let [uri, itemResolveCount] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(typeof itemResolveCount === 'number' || !itemResolveCount);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const result = [];\r\n    const disposables = new DisposableStore();\r\n    return getCodeLensModel(model, CancellationToken.None).then(value => {\r\n        disposables.add(value);\r\n        let resolve = [];\r\n        for (const item of value.lenses) {\r\n            if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) {\r\n                result.push(item.symbol);\r\n            }\r\n            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\r\n                resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\r\n            }\r\n        }\r\n        return Promise.all(resolve);\r\n    }).then(() => {\r\n        return result;\r\n    }).finally(() => {\r\n        // make sure to return results, then (on next tick)\r\n        // dispose the results\r\n        setTimeout(() => disposables.dispose(), 100);\r\n    });\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './codelensWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { editorCodeLensForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { editorActiveLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { renderLabelWithIcons } from '../../../base/browser/ui/iconLabel/iconLabels.js';\r\nclass CodeLensViewZone {\r\n    constructor(afterLineNumber, heightInPx, onHeight) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = heightInPx;\r\n        this._onHeight = onHeight;\r\n        this.suppressMouseDown = true;\r\n        this.domNode = document.createElement('div');\r\n    }\r\n    onComputedHeight(height) {\r\n        if (this._lastHeight === undefined) {\r\n            this._lastHeight = height;\r\n        }\r\n        else if (this._lastHeight !== height) {\r\n            this._lastHeight = height;\r\n            this._onHeight();\r\n        }\r\n    }\r\n}\r\nclass CodeLensContentWidget {\r\n    constructor(editor, className, line) {\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = true;\r\n        this._commands = new Map();\r\n        this._isEmpty = true;\r\n        this._editor = editor;\r\n        this._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\r\n        this.updatePosition(line);\r\n        this._domNode = document.createElement('span');\r\n        this._domNode.className = `codelens-decoration ${className}`;\r\n    }\r\n    withCommands(lenses, animate) {\r\n        this._commands.clear();\r\n        let children = [];\r\n        let hasSymbol = false;\r\n        for (let i = 0; i < lenses.length; i++) {\r\n            const lens = lenses[i];\r\n            if (!lens) {\r\n                continue;\r\n            }\r\n            hasSymbol = true;\r\n            if (lens.command) {\r\n                const title = renderLabelWithIcons(lens.command.title.trim());\r\n                if (lens.command.id) {\r\n                    children.push(dom.$('a', { id: String(i), title: lens.command.tooltip }, ...title));\r\n                    this._commands.set(String(i), lens.command);\r\n                }\r\n                else {\r\n                    children.push(dom.$('span', { title: lens.command.tooltip }, ...title));\r\n                }\r\n                if (i + 1 < lenses.length) {\r\n                    children.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\r\n                }\r\n            }\r\n        }\r\n        if (!hasSymbol) {\r\n            // symbols but no commands\r\n            dom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\r\n        }\r\n        else {\r\n            // symbols and commands\r\n            dom.reset(this._domNode, ...children);\r\n            if (this._isEmpty && animate) {\r\n                this._domNode.classList.add('fadein');\r\n            }\r\n            this._isEmpty = false;\r\n        }\r\n    }\r\n    getCommand(link) {\r\n        return link.parentElement === this._domNode\r\n            ? this._commands.get(link.id)\r\n            : undefined;\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    updatePosition(line) {\r\n        const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\r\n        this._widgetPosition = {\r\n            position: { lineNumber: line, column: column },\r\n            preference: [1 /* ABOVE */]\r\n        };\r\n    }\r\n    getPosition() {\r\n        return this._widgetPosition || null;\r\n    }\r\n}\r\nCodeLensContentWidget._idPool = 0;\r\nexport class CodeLensHelper {\r\n    constructor() {\r\n        this._removeDecorations = [];\r\n        this._addDecorations = [];\r\n        this._addDecorationsCallbacks = [];\r\n    }\r\n    addDecoration(decoration, callback) {\r\n        this._addDecorations.push(decoration);\r\n        this._addDecorationsCallbacks.push(callback);\r\n    }\r\n    removeDecoration(decorationId) {\r\n        this._removeDecorations.push(decorationId);\r\n    }\r\n    commit(changeAccessor) {\r\n        let resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\r\n        for (let i = 0, len = resultingDecorations.length; i < len; i++) {\r\n            this._addDecorationsCallbacks[i](resultingDecorations[i]);\r\n        }\r\n    }\r\n}\r\nexport class CodeLensWidget {\r\n    constructor(data, editor, className, helper, viewZoneChangeAccessor, heightInPx, updateCallback) {\r\n        this._isDisposed = false;\r\n        this._editor = editor;\r\n        this._className = className;\r\n        this._data = data;\r\n        // create combined range, track all ranges with decorations,\r\n        // check if there is already something to render\r\n        this._decorationIds = [];\r\n        let range;\r\n        let lenses = [];\r\n        this._data.forEach((codeLensData, i) => {\r\n            if (codeLensData.symbol.command) {\r\n                lenses.push(codeLensData.symbol);\r\n            }\r\n            helper.addDecoration({\r\n                range: codeLensData.symbol.range,\r\n                options: ModelDecorationOptions.EMPTY\r\n            }, id => this._decorationIds[i] = id);\r\n            // the range contains all lenses on this line\r\n            if (!range) {\r\n                range = Range.lift(codeLensData.symbol.range);\r\n            }\r\n            else {\r\n                range = Range.plusRange(range, codeLensData.symbol.range);\r\n            }\r\n        });\r\n        this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);\r\n        this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\r\n        if (lenses.length > 0) {\r\n            this._createContentWidgetIfNecessary();\r\n            this._contentWidget.withCommands(lenses, false);\r\n        }\r\n    }\r\n    _createContentWidgetIfNecessary() {\r\n        if (!this._contentWidget) {\r\n            this._contentWidget = new CodeLensContentWidget(this._editor, this._className, this._viewZone.afterLineNumber + 1);\r\n            this._editor.addContentWidget(this._contentWidget);\r\n        }\r\n        else {\r\n            this._editor.layoutContentWidget(this._contentWidget);\r\n        }\r\n    }\r\n    dispose(helper, viewZoneChangeAccessor) {\r\n        this._decorationIds.forEach(helper.removeDecoration, helper);\r\n        this._decorationIds = [];\r\n        if (viewZoneChangeAccessor) {\r\n            viewZoneChangeAccessor.removeZone(this._viewZoneId);\r\n        }\r\n        if (this._contentWidget) {\r\n            this._editor.removeContentWidget(this._contentWidget);\r\n            this._contentWidget = undefined;\r\n        }\r\n        this._isDisposed = true;\r\n    }\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    isValid() {\r\n        return this._decorationIds.some((id, i) => {\r\n            const range = this._editor.getModel().getDecorationRange(id);\r\n            const symbol = this._data[i].symbol;\r\n            return !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\r\n        });\r\n    }\r\n    updateCodeLensSymbols(data, helper) {\r\n        this._decorationIds.forEach(helper.removeDecoration, helper);\r\n        this._decorationIds = [];\r\n        this._data = data;\r\n        this._data.forEach((codeLensData, i) => {\r\n            helper.addDecoration({\r\n                range: codeLensData.symbol.range,\r\n                options: ModelDecorationOptions.EMPTY\r\n            }, id => this._decorationIds[i] = id);\r\n        });\r\n    }\r\n    updateHeight(height, viewZoneChangeAccessor) {\r\n        this._viewZone.heightInPx = height;\r\n        viewZoneChangeAccessor.layoutZone(this._viewZoneId);\r\n        if (this._contentWidget) {\r\n            this._editor.layoutContentWidget(this._contentWidget);\r\n        }\r\n    }\r\n    computeIfNecessary(model) {\r\n        if (!this._viewZone.domNode.hasAttribute('monaco-visible-view-zone')) {\r\n            return null;\r\n        }\r\n        // Read editor current state\r\n        for (let i = 0; i < this._decorationIds.length; i++) {\r\n            const range = model.getDecorationRange(this._decorationIds[i]);\r\n            if (range) {\r\n                this._data[i].symbol.range = range;\r\n            }\r\n        }\r\n        return this._data;\r\n    }\r\n    updateCommands(symbols) {\r\n        this._createContentWidgetIfNecessary();\r\n        this._contentWidget.withCommands(symbols, true);\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            const resolved = symbols[i];\r\n            if (resolved) {\r\n                const { symbol } = this._data[i];\r\n                symbol.command = resolved.command || symbol.command;\r\n            }\r\n        }\r\n    }\r\n    getCommand(link) {\r\n        var _a;\r\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);\r\n    }\r\n    getLineNumber() {\r\n        const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\r\n        if (range) {\r\n            return range.startLineNumber;\r\n        }\r\n        return -1;\r\n    }\r\n    update(viewZoneChangeAccessor) {\r\n        if (this.isValid()) {\r\n            const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\r\n            if (range) {\r\n                this._viewZone.afterLineNumber = range.startLineNumber - 1;\r\n                viewZoneChangeAccessor.layoutZone(this._viewZoneId);\r\n                if (this._contentWidget) {\r\n                    this._contentWidget.updatePosition(range.startLineNumber);\r\n                    this._editor.layoutContentWidget(this._contentWidget);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getItems() {\r\n        return this._data;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const codeLensForeground = theme.getColor(editorCodeLensForeground);\r\n    if (codeLensForeground) {\r\n        collector.addRule(`.monaco-editor .codelens-decoration { color: ${codeLensForeground}; }`);\r\n        collector.addRule(`.monaco-editor .codelens-decoration .codicon { color: ${codeLensForeground}; }`);\r\n    }\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .codelens-decoration > a:hover { color: ${activeLinkForeground} !important; }`);\r\n        collector.addRule(`.monaco-editor .codelens-decoration > a:hover .codicon { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { CodeLensModel } from './codelens.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { runWhenIdle } from '../../../base/common/async.js';\r\nimport { once } from '../../../base/common/functional.js';\r\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\r\nclass CacheItem {\r\n    constructor(lineCount, data) {\r\n        this.lineCount = lineCount;\r\n        this.data = data;\r\n    }\r\n}\r\nlet CodeLensCache = class CodeLensCache {\r\n    constructor(storageService) {\r\n        this._fakeProvider = new class {\r\n            provideCodeLenses() {\r\n                throw new Error('not supported');\r\n            }\r\n        };\r\n        this._cache = new LRUCache(20, 0.75);\r\n        // remove old data\r\n        const oldkey = 'codelens/cache';\r\n        runWhenIdle(() => storageService.remove(oldkey, 1 /* WORKSPACE */));\r\n        // restore lens data on start\r\n        const key = 'codelens/cache2';\r\n        const raw = storageService.get(key, 1 /* WORKSPACE */, '{}');\r\n        this._deserialize(raw);\r\n        // store lens data on shutdown\r\n        once(storageService.onWillSaveState)(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                storageService.store(key, this._serialize(), 1 /* WORKSPACE */, 1 /* MACHINE */);\r\n            }\r\n        });\r\n    }\r\n    put(model, data) {\r\n        // create a copy of the model that is without command-ids\r\n        // but with comand-labels\r\n        const copyItems = data.lenses.map(item => {\r\n            var _a;\r\n            return {\r\n                range: item.symbol.range,\r\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\r\n            };\r\n        });\r\n        const copyModel = new CodeLensModel();\r\n        copyModel.add({ lenses: copyItems, dispose: () => { } }, this._fakeProvider);\r\n        const item = new CacheItem(model.getLineCount(), copyModel);\r\n        this._cache.set(model.uri.toString(), item);\r\n    }\r\n    get(model) {\r\n        const item = this._cache.get(model.uri.toString());\r\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\r\n    }\r\n    delete(model) {\r\n        this._cache.delete(model.uri.toString());\r\n    }\r\n    // --- persistence\r\n    _serialize() {\r\n        const data = Object.create(null);\r\n        for (const [key, value] of this._cache) {\r\n            const lines = new Set();\r\n            for (const d of value.data.lenses) {\r\n                lines.add(d.symbol.range.startLineNumber);\r\n            }\r\n            data[key] = {\r\n                lineCount: value.lineCount,\r\n                lines: [...lines.values()]\r\n            };\r\n        }\r\n        return JSON.stringify(data);\r\n    }\r\n    _deserialize(raw) {\r\n        try {\r\n            const data = JSON.parse(raw);\r\n            for (const key in data) {\r\n                const element = data[key];\r\n                const lenses = [];\r\n                for (const line of element.lines) {\r\n                    lenses.push({ range: new Range(line, 1, line, 11) });\r\n                }\r\n                const model = new CodeLensModel();\r\n                model.add({ lenses, dispose() { } }, this._fakeProvider);\r\n                this._cache.set(key, new CacheItem(element.lineCount, model));\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore...\r\n        }\r\n    }\r\n};\r\nCodeLensCache = __decorate([\r\n    __param(0, IStorageService)\r\n], CodeLensCache);\r\nexport { CodeLensCache };\r\nregisterSingleton(ICodeLensCache, CodeLensCache);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { registerEditorContribution, registerEditorAction, EditorAction } from '../../browser/editorExtensions.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { getCodeLensModel } from './codelens.js';\r\nimport { CodeLensWidget, CodeLensHelper } from './codelensWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { ICodeLensCache } from './codeLensCache.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nlet CodeLensContribution = class CodeLensContribution {\r\n    constructor(_editor, _commandService, _notificationService, _codeLensCache) {\r\n        this._editor = _editor;\r\n        this._commandService = _commandService;\r\n        this._notificationService = _notificationService;\r\n        this._codeLensCache = _codeLensCache;\r\n        this._disposables = new DisposableStore();\r\n        this._localToDispose = new DisposableStore();\r\n        this._lenses = [];\r\n        this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._oldCodeLensModels = new DisposableStore();\r\n        this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\r\n        this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(42 /* fontInfo */) || e.hasChanged(15 /* codeLensFontSize */) || e.hasChanged(14 /* codeLensFontFamily */)) {\r\n                this._updateLensStyle();\r\n            }\r\n            if (e.hasChanged(13 /* codeLens */)) {\r\n                this._onModelChange();\r\n            }\r\n        }));\r\n        this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\r\n        this._onModelChange();\r\n        this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\r\n        this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode())\r\n            ? this._editor.getContainerDomNode()\r\n            : undefined);\r\n        this._updateLensStyle();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._localDispose();\r\n        this._disposables.dispose();\r\n        this._oldCodeLensModels.dispose();\r\n        (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styleElement.remove();\r\n    }\r\n    _getLayoutInfo() {\r\n        let fontSize = this._editor.getOption(15 /* codeLensFontSize */);\r\n        let codeLensHeight;\r\n        if (!fontSize || fontSize < 5) {\r\n            fontSize = (this._editor.getOption(44 /* fontSize */) * .9) | 0;\r\n            codeLensHeight = this._editor.getOption(58 /* lineHeight */);\r\n        }\r\n        else {\r\n            codeLensHeight = (fontSize * Math.max(1.3, this._editor.getOption(58 /* lineHeight */) / this._editor.getOption(44 /* fontSize */))) | 0;\r\n        }\r\n        return { codeLensHeight, fontSize };\r\n    }\r\n    _updateLensStyle() {\r\n        const { codeLensHeight, fontSize } = this._getLayoutInfo();\r\n        const fontFamily = this._editor.getOption(14 /* codeLensFontFamily */);\r\n        const editorFontInfo = this._editor.getOption(42 /* fontInfo */);\r\n        const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;\r\n        const fontFeaturesVar = `--codelens-font-features${this._styleClassName}`;\r\n        let newStyle = `\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: var(${fontFeaturesVar}) }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;\r\n        if (fontFamily) {\r\n            newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar})}`;\r\n        }\r\n        this._styleElement.textContent = newStyle;\r\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\r\n        this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar, editorFontInfo.fontFeatureSettings);\r\n        //\r\n        this._editor.changeViewZones(accessor => {\r\n            for (let lens of this._lenses) {\r\n                lens.updateHeight(codeLensHeight, accessor);\r\n            }\r\n        });\r\n    }\r\n    _localDispose() {\r\n        var _a, _b, _c;\r\n        (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._getCodeLensModelPromise = undefined;\r\n        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        this._localToDispose.clear();\r\n        this._oldCodeLensModels.clear();\r\n        (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\r\n    }\r\n    _onModelChange() {\r\n        this._localDispose();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(13 /* codeLens */)) {\r\n            return;\r\n        }\r\n        const cachedLenses = this._codeLensCache.get(model);\r\n        if (cachedLenses) {\r\n            this._renderCodeLensSymbols(cachedLenses);\r\n        }\r\n        if (!CodeLensProviderRegistry.has(model)) {\r\n            // no provider -> return but check with\r\n            // cached lenses. they expire after 30 seconds\r\n            if (cachedLenses) {\r\n                this._localToDispose.add(disposableTimeout(() => {\r\n                    const cachedLensesNow = this._codeLensCache.get(model);\r\n                    if (cachedLenses === cachedLensesNow) {\r\n                        this._codeLensCache.delete(model);\r\n                        this._onModelChange();\r\n                    }\r\n                }, 30 * 1000));\r\n            }\r\n            return;\r\n        }\r\n        for (const provider of CodeLensProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                let registration = provider.onDidChange(() => scheduler.schedule());\r\n                this._localToDispose.add(registration);\r\n            }\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => {\r\n            var _a;\r\n            const t1 = Date.now();\r\n            (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\r\n            this._getCodeLensModelPromise.then(result => {\r\n                if (this._currentCodeLensModel) {\r\n                    this._oldCodeLensModels.add(this._currentCodeLensModel);\r\n                }\r\n                this._currentCodeLensModel = result;\r\n                // cache model to reduce flicker\r\n                this._codeLensCache.put(model, result);\r\n                // update moving average\r\n                const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\r\n                scheduler.delay = newDelay;\r\n                // render lenses\r\n                this._renderCodeLensSymbols(result);\r\n                // dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());\r\n                this._resolveCodeLensesInViewportSoon();\r\n            }, onUnexpectedError);\r\n        }, this._getCodeLensModelDelays.get(model));\r\n        this._localToDispose.add(scheduler);\r\n        this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            this._editor.changeDecorations(decorationsAccessor => {\r\n                this._editor.changeViewZones(viewZonesAccessor => {\r\n                    let toDispose = [];\r\n                    let lastLensLineNumber = -1;\r\n                    this._lenses.forEach((lens) => {\r\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\r\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\r\n                            // line_number -> lenses should never be on the same line\r\n                            toDispose.push(lens);\r\n                        }\r\n                        else {\r\n                            lens.update(viewZonesAccessor);\r\n                            lastLensLineNumber = lens.getLineNumber();\r\n                        }\r\n                    });\r\n                    let helper = new CodeLensHelper();\r\n                    toDispose.forEach((l) => {\r\n                        l.dispose(helper, viewZonesAccessor);\r\n                        this._lenses.splice(this._lenses.indexOf(l), 1);\r\n                    });\r\n                    helper.commit(decorationsAccessor);\r\n                });\r\n            });\r\n            // Ask for all references again\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidScrollChange(e => {\r\n            if (e.scrollTopChanged && this._lenses.length > 0) {\r\n                this._resolveCodeLensesInViewportSoon();\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidLayoutChange(() => {\r\n            this._resolveCodeLensesInViewportSoon();\r\n        }));\r\n        this._localToDispose.add(toDisposable(() => {\r\n            if (this._editor.getModel()) {\r\n                const scrollState = StableEditorScrollState.capture(this._editor);\r\n                this._editor.changeDecorations(decorationsAccessor => {\r\n                    this._editor.changeViewZones(viewZonesAccessor => {\r\n                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\r\n                    });\r\n                });\r\n                scrollState.restore(this._editor);\r\n            }\r\n            else {\r\n                // No accessors available\r\n                this._disposeAllLenses(undefined, undefined);\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onMouseDown(e => {\r\n            if (e.target.type !== 9 /* CONTENT_WIDGET */) {\r\n                return;\r\n            }\r\n            let target = e.target.element;\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\r\n                target = target.parentElement;\r\n            }\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\r\n                for (const lens of this._lenses) {\r\n                    let command = lens.getCommand(target);\r\n                    if (command) {\r\n                        this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        scheduler.schedule();\r\n    }\r\n    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\r\n        const helper = new CodeLensHelper();\r\n        for (const lens of this._lenses) {\r\n            lens.dispose(helper, viewZoneChangeAccessor);\r\n        }\r\n        if (decChangeAccessor) {\r\n            helper.commit(decChangeAccessor);\r\n        }\r\n        this._lenses.length = 0;\r\n    }\r\n    _renderCodeLensSymbols(symbols) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let maxLineNumber = this._editor.getModel().getLineCount();\r\n        let groups = [];\r\n        let lastGroup;\r\n        for (let symbol of symbols.lenses) {\r\n            let line = symbol.symbol.range.startLineNumber;\r\n            if (line < 1 || line > maxLineNumber) {\r\n                // invalid code lens\r\n                continue;\r\n            }\r\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\r\n                // on same line as previous\r\n                lastGroup.push(symbol);\r\n            }\r\n            else {\r\n                // on later line as previous\r\n                lastGroup = [symbol];\r\n                groups.push(lastGroup);\r\n            }\r\n        }\r\n        const scrollState = StableEditorScrollState.capture(this._editor);\r\n        const layoutInfo = this._getLayoutInfo();\r\n        this._editor.changeDecorations(decorationsAccessor => {\r\n            this._editor.changeViewZones(viewZoneAccessor => {\r\n                const helper = new CodeLensHelper();\r\n                let codeLensIndex = 0;\r\n                let groupsIndex = 0;\r\n                while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\r\n                    let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\r\n                    let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\r\n                    if (codeLensLineNumber < symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                        this._lenses.splice(codeLensIndex, 1);\r\n                    }\r\n                    else if (codeLensLineNumber === symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\r\n                        groupsIndex++;\r\n                        codeLensIndex++;\r\n                    }\r\n                    else {\r\n                        this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                        codeLensIndex++;\r\n                        groupsIndex++;\r\n                    }\r\n                }\r\n                // Delete extra code lenses\r\n                while (codeLensIndex < this._lenses.length) {\r\n                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                    this._lenses.splice(codeLensIndex, 1);\r\n                }\r\n                // Create extra symbols\r\n                while (groupsIndex < groups.length) {\r\n                    this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                    groupsIndex++;\r\n                }\r\n                helper.commit(decorationsAccessor);\r\n            });\r\n        });\r\n        scrollState.restore(this._editor);\r\n    }\r\n    _resolveCodeLensesInViewportSoon() {\r\n        const model = this._editor.getModel();\r\n        if (model) {\r\n            this._resolveCodeLensesScheduler.schedule();\r\n        }\r\n    }\r\n    _resolveCodeLensesInViewport() {\r\n        var _a;\r\n        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        const toResolve = [];\r\n        const lenses = [];\r\n        this._lenses.forEach((lens) => {\r\n            const request = lens.computeIfNecessary(model);\r\n            if (request) {\r\n                toResolve.push(request);\r\n                lenses.push(lens);\r\n            }\r\n        });\r\n        if (toResolve.length === 0) {\r\n            return;\r\n        }\r\n        const t1 = Date.now();\r\n        const resolvePromise = createCancelablePromise(token => {\r\n            const promises = toResolve.map((request, i) => {\r\n                const resolvedSymbols = new Array(request.length);\r\n                const promises = request.map((request, i) => {\r\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\r\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\r\n                            resolvedSymbols[i] = symbol;\r\n                        }, onUnexpectedExternalError);\r\n                    }\r\n                    else {\r\n                        resolvedSymbols[i] = request.symbol;\r\n                        return Promise.resolve(undefined);\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(() => {\r\n                    if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\r\n                        lenses[i].updateCommands(resolvedSymbols);\r\n                    }\r\n                });\r\n            });\r\n            return Promise.all(promises);\r\n        });\r\n        this._resolveCodeLensesPromise = resolvePromise;\r\n        this._resolveCodeLensesPromise.then(() => {\r\n            // update moving average\r\n            const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\r\n            this._resolveCodeLensesScheduler.delay = newDelay;\r\n            if (this._currentCodeLensModel) { // update the cached state with new resolved items\r\n                this._codeLensCache.put(model, this._currentCodeLensModel);\r\n            }\r\n            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        }, err => {\r\n            onUnexpectedError(err); // can also be cancellation!\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        });\r\n    }\r\n    getLenses() {\r\n        return this._lenses;\r\n    }\r\n};\r\nCodeLensContribution.ID = 'css.editor.codeLens';\r\nCodeLensContribution = __decorate([\r\n    __param(1, ICommandService),\r\n    __param(2, INotificationService),\r\n    __param(3, ICodeLensCache)\r\n], CodeLensContribution);\r\nexport { CodeLensContribution };\r\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\r\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'codelens.showLensesInCurrentLine',\r\n            precondition: EditorContextKeys.hasCodeLensProvider,\r\n            label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\r\n            alias: 'Show CodeLens Commands For Current Line',\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const quickInputService = accessor.get(IQuickInputService);\r\n            const commandService = accessor.get(ICommandService);\r\n            const notificationService = accessor.get(INotificationService);\r\n            const lineNumber = editor.getSelection().positionLineNumber;\r\n            const codelensController = editor.getContribution(CodeLensContribution.ID);\r\n            const items = [];\r\n            for (let lens of codelensController.getLenses()) {\r\n                if (lens.getLineNumber() === lineNumber) {\r\n                    for (let item of lens.getItems()) {\r\n                        const { command } = item.symbol;\r\n                        if (command) {\r\n                            items.push({\r\n                                label: command.title,\r\n                                command: command\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (items.length === 0) {\r\n                // We dont want an empty picker\r\n                return;\r\n            }\r\n            const item = yield quickInputService.pick(items, { canPickMany: false });\r\n            if (!item) {\r\n                // Nothing picked\r\n                return;\r\n            }\r\n            try {\r\n                yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport function getColors(model, token) {\r\n    const colors = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let colorInfo of result) {\r\n                colors.push({ colorInfo, provider });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => colors);\r\n}\r\nexport function getColorPresentations(model, colorInfo, provider, token) {\r\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\r\n    const [resource] = args;\r\n    if (!(resource instanceof URI)) {\r\n        throw illegalArgument();\r\n    }\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const rawCIs = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let ci of result) {\r\n                rawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => rawCIs);\r\n});\r\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\r\n    const [color, context] = args;\r\n    const { uri, range } = context;\r\n    if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\r\n        throw illegalArgument();\r\n    }\r\n    const [red, green, blue, alpha] = color;\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const colorInfo = {\r\n        range,\r\n        color: { red, green, blue, alpha }\r\n    };\r\n    const presentations = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            presentations.push(...result);\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => presentations);\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { TimeoutTimer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { RGBA } from '../../../base/common/color.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { getColors } from './color.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst MAX_DECORATORS = 500;\r\nlet ColorDetector = class ColorDetector extends Disposable {\r\n    constructor(_editor, _codeEditorService, _configurationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._configurationService = _configurationService;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._decorationsIds = [];\r\n        this._colorDatas = new Map();\r\n        this._colorDecoratorIds = [];\r\n        this._decorationsTypes = new Set();\r\n        this._register(_editor.onDidChangeModel(() => {\r\n            this._isEnabled = this.isEnabled();\r\n            this.onModelChanged();\r\n        }));\r\n        this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\r\n        this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\r\n        this._register(_editor.onDidChangeConfiguration(() => {\r\n            let prevIsEnabled = this._isEnabled;\r\n            this._isEnabled = this.isEnabled();\r\n            if (prevIsEnabled !== this._isEnabled) {\r\n                if (this._isEnabled) {\r\n                    this.onModelChanged();\r\n                }\r\n                else {\r\n                    this.removeAllDecorations();\r\n                }\r\n            }\r\n        }));\r\n        this._timeoutTimer = null;\r\n        this._computePromise = null;\r\n        this._isEnabled = this.isEnabled();\r\n        this.onModelChanged();\r\n    }\r\n    isEnabled() {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const languageId = model.getLanguageIdentifier();\r\n        // handle deprecated settings. [languageId].colorDecorators.enable\r\n        const deprecatedConfig = this._configurationService.getValue(languageId.language);\r\n        if (deprecatedConfig && typeof deprecatedConfig === 'object') {\r\n            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\r\n            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\r\n                return colorDecorators['enable'];\r\n            }\r\n        }\r\n        return this._editor.getOption(16 /* colorDecorators */);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(this.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        this.removeAllDecorations();\r\n        super.dispose();\r\n    }\r\n    onModelChanged() {\r\n        this.stop();\r\n        if (!this._isEnabled) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !ColorProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            if (!this._timeoutTimer) {\r\n                this._timeoutTimer = new TimeoutTimer();\r\n                this._timeoutTimer.cancelAndSet(() => {\r\n                    this._timeoutTimer = null;\r\n                    this.beginCompute();\r\n                }, ColorDetector.RECOMPUTE_TIME);\r\n            }\r\n        }));\r\n        this.beginCompute();\r\n    }\r\n    beginCompute() {\r\n        this._computePromise = createCancelablePromise(token => {\r\n            const model = this._editor.getModel();\r\n            if (!model) {\r\n                return Promise.resolve([]);\r\n            }\r\n            return getColors(model, token);\r\n        });\r\n        this._computePromise.then((colorInfos) => {\r\n            this.updateDecorations(colorInfos);\r\n            this.updateColorDecorators(colorInfos);\r\n            this._computePromise = null;\r\n        }, onUnexpectedError);\r\n    }\r\n    stop() {\r\n        if (this._timeoutTimer) {\r\n            this._timeoutTimer.cancel();\r\n            this._timeoutTimer = null;\r\n        }\r\n        if (this._computePromise) {\r\n            this._computePromise.cancel();\r\n            this._computePromise = null;\r\n        }\r\n        this._localToDispose.clear();\r\n    }\r\n    updateDecorations(colorDatas) {\r\n        const decorations = colorDatas.map(c => ({\r\n            range: {\r\n                startLineNumber: c.colorInfo.range.startLineNumber,\r\n                startColumn: c.colorInfo.range.startColumn,\r\n                endLineNumber: c.colorInfo.range.endLineNumber,\r\n                endColumn: c.colorInfo.range.endColumn\r\n            },\r\n            options: ModelDecorationOptions.EMPTY\r\n        }));\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\r\n        this._colorDatas = new Map();\r\n        this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\r\n    }\r\n    updateColorDecorators(colorData) {\r\n        let decorations = [];\r\n        let newDecorationsTypes = {};\r\n        for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\r\n            const { red, green, blue, alpha } = colorData[i].colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            let subKey = hash(`rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`).toString(16);\r\n            let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\r\n            let key = 'colorBox-' + subKey;\r\n            if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\r\n                this._codeEditorService.registerDecorationType('color-detector-color', key, {\r\n                    before: {\r\n                        contentText: ' ',\r\n                        border: 'solid 0.1em #000',\r\n                        margin: '0.1em 0.2em 0 0.2em',\r\n                        width: '0.8em',\r\n                        height: '0.8em',\r\n                        backgroundColor: color\r\n                    },\r\n                    dark: {\r\n                        before: {\r\n                            border: 'solid 0.1em #eee'\r\n                        }\r\n                    }\r\n                }, undefined, this._editor);\r\n            }\r\n            newDecorationsTypes[key] = true;\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,\r\n                    startColumn: colorData[i].colorInfo.range.startColumn,\r\n                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,\r\n                    endColumn: colorData[i].colorInfo.range.endColumn\r\n                },\r\n                options: this._codeEditorService.resolveDecorationOptions(key, true)\r\n            });\r\n        }\r\n        this._decorationsTypes.forEach(subType => {\r\n            if (!newDecorationsTypes[subType]) {\r\n                this._codeEditorService.removeDecorationType(subType);\r\n            }\r\n        });\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\r\n    }\r\n    removeAllDecorations() {\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\r\n        this._decorationsTypes.forEach(subType => {\r\n            this._codeEditorService.removeDecorationType(subType);\r\n        });\r\n    }\r\n    getColorData(position) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return null;\r\n        }\r\n        const decorations = model\r\n            .getDecorationsInRange(Range.fromPositions(position, position))\r\n            .filter(d => this._colorDatas.has(d.id));\r\n        if (decorations.length === 0) {\r\n            return null;\r\n        }\r\n        return this._colorDatas.get(decorations[0].id);\r\n    }\r\n};\r\nColorDetector.ID = 'editor.contrib.colorDetector';\r\nColorDetector.RECOMPUTE_TIME = 1000; // ms\r\nColorDetector = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IConfigurationService)\r\n], ColorDetector);\r\nexport { ColorDetector };\r\nregisterEditorContribution(ColorDetector.ID, ColorDetector);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nexport class HoverOperation {\r\n    constructor(computer, success, error, progress, hoverTime) {\r\n        this._computer = computer;\r\n        this._state = 0 /* IDLE */;\r\n        this._hoverTime = hoverTime;\r\n        this._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), 0);\r\n        this._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), 0);\r\n        this._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 0);\r\n        this._asyncComputationPromise = null;\r\n        this._asyncComputationPromiseDone = false;\r\n        this._completeCallback = success;\r\n        this._errorCallback = error;\r\n        this._progressCallback = progress;\r\n    }\r\n    setHoverTime(hoverTime) {\r\n        this._hoverTime = hoverTime;\r\n    }\r\n    _firstWaitTime() {\r\n        return this._hoverTime / 2;\r\n    }\r\n    _secondWaitTime() {\r\n        return this._hoverTime / 2;\r\n    }\r\n    _loadingMessageTime() {\r\n        return 3 * this._hoverTime;\r\n    }\r\n    _triggerAsyncComputation() {\r\n        this._state = 2 /* SECOND_WAIT */;\r\n        this._secondWaitScheduler.schedule(this._secondWaitTime());\r\n        if (this._computer.computeAsync) {\r\n            this._asyncComputationPromiseDone = false;\r\n            this._asyncComputationPromise = createCancelablePromise(token => this._computer.computeAsync(token));\r\n            this._asyncComputationPromise.then((asyncResult) => {\r\n                this._asyncComputationPromiseDone = true;\r\n                this._withAsyncResult(asyncResult);\r\n            }, (e) => this._onError(e));\r\n        }\r\n        else {\r\n            this._asyncComputationPromiseDone = true;\r\n        }\r\n    }\r\n    _triggerSyncComputation() {\r\n        if (this._computer.computeSync) {\r\n            this._computer.onResult(this._computer.computeSync(), true);\r\n        }\r\n        if (this._asyncComputationPromiseDone) {\r\n            this._state = 0 /* IDLE */;\r\n            this._onComplete(this._computer.getResult());\r\n        }\r\n        else {\r\n            this._state = 3 /* WAITING_FOR_ASYNC_COMPUTATION */;\r\n            this._onProgress(this._computer.getResult());\r\n        }\r\n    }\r\n    _showLoadingMessage() {\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            this._onProgress(this._computer.getResultWithLoadingMessage());\r\n        }\r\n    }\r\n    _withAsyncResult(asyncResult) {\r\n        if (asyncResult) {\r\n            this._computer.onResult(asyncResult, false);\r\n        }\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            this._state = 0 /* IDLE */;\r\n            this._onComplete(this._computer.getResult());\r\n        }\r\n    }\r\n    _onComplete(value) {\r\n        this._completeCallback(value);\r\n    }\r\n    _onError(error) {\r\n        if (this._errorCallback) {\r\n            this._errorCallback(error);\r\n        }\r\n        else {\r\n            onUnexpectedError(error);\r\n        }\r\n    }\r\n    _onProgress(value) {\r\n        this._progressCallback(value);\r\n    }\r\n    start(mode) {\r\n        if (mode === 0 /* Delayed */) {\r\n            if (this._state === 0 /* IDLE */) {\r\n                this._state = 1 /* FIRST_WAIT */;\r\n                this._firstWaitScheduler.schedule(this._firstWaitTime());\r\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime());\r\n            }\r\n        }\r\n        else {\r\n            switch (this._state) {\r\n                case 0 /* IDLE */:\r\n                    this._triggerAsyncComputation();\r\n                    this._secondWaitScheduler.cancel();\r\n                    this._triggerSyncComputation();\r\n                    break;\r\n                case 2 /* SECOND_WAIT */:\r\n                    this._secondWaitScheduler.cancel();\r\n                    this._triggerSyncComputation();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    cancel() {\r\n        this._loadingMessageScheduler.cancel();\r\n        if (this._state === 1 /* FIRST_WAIT */) {\r\n            this._firstWaitScheduler.cancel();\r\n        }\r\n        if (this._state === 2 /* SECOND_WAIT */) {\r\n            this._secondWaitScheduler.cancel();\r\n            if (this._asyncComputationPromise) {\r\n                this._asyncComputationPromise.cancel();\r\n                this._asyncComputationPromise = null;\r\n            }\r\n        }\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            if (this._asyncComputationPromise) {\r\n                this._asyncComputationPromise.cancel();\r\n                this._asyncComputationPromise = null;\r\n            }\r\n        }\r\n        this._state = 0 /* IDLE */;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport './hover.css';\r\nconst $ = dom.$;\r\nexport class HoverWidget extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this.containerDomNode = document.createElement('div');\r\n        this.containerDomNode.className = 'monaco-hover';\r\n        this.containerDomNode.tabIndex = 0;\r\n        this.containerDomNode.setAttribute('role', 'tooltip');\r\n        this.contentsDomNode = document.createElement('div');\r\n        this.contentsDomNode.className = 'monaco-hover-content';\r\n        this._scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\r\n            consumeMouseWheelIfScrollbarIsNeeded: true\r\n        }));\r\n        this.containerDomNode.appendChild(this._scrollbar.getDomNode());\r\n    }\r\n    onContentsChanged() {\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n}\r\nexport class HoverAction extends Disposable {\r\n    constructor(parent, actionOptions, keybindingLabel) {\r\n        super();\r\n        this.actionContainer = dom.append(parent, $('div.action-container'));\r\n        this.action = dom.append(this.actionContainer, $('a.action'));\r\n        this.action.setAttribute('href', '#');\r\n        this.action.setAttribute('role', 'button');\r\n        if (actionOptions.iconClass) {\r\n            dom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\r\n        }\r\n        const label = dom.append(this.action, $('span'));\r\n        label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\r\n        this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.CLICK, e => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            actionOptions.run(this.actionContainer);\r\n        }));\r\n        this.setEnabled(true);\r\n    }\r\n    static render(parent, actionOptions, keybindingLabel) {\r\n        return new HoverAction(parent, actionOptions, keybindingLabel);\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.actionContainer.classList.remove('disabled');\r\n            this.actionContainer.removeAttribute('aria-disabled');\r\n        }\r\n        else {\r\n            this.actionContainer.classList.add('disabled');\r\n            this.actionContainer.setAttribute('aria-disabled', 'true');\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { hasDriveLetter, isRootOrDriveLetter } from './extpath.js';\r\nimport { Schemas } from './network.js';\r\nimport { isWindows } from './platform.js';\r\nimport { basename } from './resources.js';\r\nimport { URI } from './uri.js';\r\nexport function getBaseLabel(resource) {\r\n    if (!resource) {\r\n        return undefined;\r\n    }\r\n    if (typeof resource === 'string') {\r\n        resource = URI.file(resource);\r\n    }\r\n    const base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\r\n    // convert c: => C:\r\n    if (isWindows && isRootOrDriveLetter(base)) {\r\n        return normalizeDriveLetter(base);\r\n    }\r\n    return base;\r\n}\r\nexport function normalizeDriveLetter(path) {\r\n    if (hasDriveLetter(path)) {\r\n        return path.charAt(0).toUpperCase() + path.slice(1);\r\n    }\r\n    return path;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\r\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService) {\r\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\r\n        this._parentEditor = parentEditor;\r\n        this._overwriteOptions = options;\r\n        // Overwrite parent's options\r\n        super.updateOptions(this._overwriteOptions);\r\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\r\n    }\r\n    getParentEditor() {\r\n        return this._parentEditor;\r\n    }\r\n    _onParentConfigurationChanged(e) {\r\n        super.updateOptions(this._parentEditor.getRawOptions());\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n    updateOptions(newOptions) {\r\n        objects.mixin(this._overwriteOptions, newOptions, true);\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n};\r\nEmbeddedCodeEditorWidget = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, ICodeEditorService),\r\n    __param(5, ICommandService),\r\n    __param(6, IContextKeyService),\r\n    __param(7, IThemeService),\r\n    __param(8, INotificationService),\r\n    __param(9, IAccessibilityService)\r\n], EmbeddedCodeEditorWidget);\r\nexport { EmbeddedCodeEditorWidget };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './zoneWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { IdGenerator } from '../../../base/common/idGenerator.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nconst defaultColor = new Color(new RGBA(0, 122, 204));\r\nconst defaultOptions = {\r\n    showArrow: true,\r\n    showFrame: true,\r\n    className: '',\r\n    frameColor: defaultColor,\r\n    arrowColor: defaultColor,\r\n    keepEditorSelection: false\r\n};\r\nconst WIDGET_ID = 'vs.editor.contrib.zoneWidget';\r\nexport class ViewZoneDelegate {\r\n    constructor(domNode, afterLineNumber, afterColumn, heightInLines, onDomNodeTop, onComputedHeight) {\r\n        this.id = ''; // A valid zone id should be greater than 0\r\n        this.domNode = domNode;\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.afterColumn = afterColumn;\r\n        this.heightInLines = heightInLines;\r\n        this._onDomNodeTop = onDomNodeTop;\r\n        this._onComputedHeight = onComputedHeight;\r\n    }\r\n    onDomNodeTop(top) {\r\n        this._onDomNodeTop(top);\r\n    }\r\n    onComputedHeight(height) {\r\n        this._onComputedHeight(height);\r\n    }\r\n}\r\nexport class OverlayWidgetDelegate {\r\n    constructor(id, domNode) {\r\n        this._id = id;\r\n        this._domNode = domNode;\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n}\r\nclass Arrow {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ruleName = Arrow._IdGenerator.nextId();\r\n        this._decorations = [];\r\n        this._color = null;\r\n        this._height = -1;\r\n        //\r\n    }\r\n    dispose() {\r\n        this.hide();\r\n        dom.removeCSSRulesContainingSelector(this._ruleName);\r\n    }\r\n    set color(value) {\r\n        if (this._color !== value) {\r\n            this._color = value;\r\n            this._updateStyle();\r\n        }\r\n    }\r\n    set height(value) {\r\n        if (this._height !== value) {\r\n            this._height = value;\r\n            this._updateStyle();\r\n        }\r\n    }\r\n    _updateStyle() {\r\n        dom.removeCSSRulesContainingSelector(this._ruleName);\r\n        dom.createCSSRule(`.monaco-editor ${this._ruleName}`, `border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `);\r\n    }\r\n    show(where) {\r\n        this._decorations = this._editor.deltaDecorations(this._decorations, [{ range: Range.fromPositions(where), options: { description: 'zone-widget-arrow', className: this._ruleName, stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ } }]);\r\n    }\r\n    hide() {\r\n        this._editor.deltaDecorations(this._decorations, []);\r\n    }\r\n}\r\nArrow._IdGenerator = new IdGenerator('.arrow-decoration-');\r\nexport class ZoneWidget {\r\n    constructor(editor, options = {}) {\r\n        this._arrow = null;\r\n        this._overlayWidget = null;\r\n        this._resizeSash = null;\r\n        this._positionMarkerId = [];\r\n        this._viewZone = null;\r\n        this._disposables = new DisposableStore();\r\n        this.container = null;\r\n        this._isShowing = false;\r\n        this.editor = editor;\r\n        this.options = objects.deepClone(options);\r\n        objects.mixin(this.options, defaultOptions, false);\r\n        this.domNode = document.createElement('div');\r\n        if (!this.options.isAccessible) {\r\n            this.domNode.setAttribute('aria-hidden', 'true');\r\n            this.domNode.setAttribute('role', 'presentation');\r\n        }\r\n        this._disposables.add(this.editor.onDidLayoutChange((info) => {\r\n            const width = this._getWidth(info);\r\n            this.domNode.style.width = width + 'px';\r\n            this.domNode.style.left = this._getLeft(info) + 'px';\r\n            this._onWidth(width);\r\n        }));\r\n    }\r\n    dispose() {\r\n        if (this._overlayWidget) {\r\n            this.editor.removeOverlayWidget(this._overlayWidget);\r\n            this._overlayWidget = null;\r\n        }\r\n        if (this._viewZone) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    accessor.removeZone(this._viewZone.id);\r\n                }\r\n                this._viewZone = null;\r\n            });\r\n        }\r\n        this.editor.deltaDecorations(this._positionMarkerId, []);\r\n        this._positionMarkerId = [];\r\n        this._disposables.dispose();\r\n    }\r\n    create() {\r\n        this.domNode.classList.add('zone-widget');\r\n        if (this.options.className) {\r\n            this.domNode.classList.add(this.options.className);\r\n        }\r\n        this.container = document.createElement('div');\r\n        this.container.classList.add('zone-widget-container');\r\n        this.domNode.appendChild(this.container);\r\n        if (this.options.showArrow) {\r\n            this._arrow = new Arrow(this.editor);\r\n            this._disposables.add(this._arrow);\r\n        }\r\n        this._fillContainer(this.container);\r\n        this._initSash();\r\n        this._applyStyles();\r\n    }\r\n    style(styles) {\r\n        if (styles.frameColor) {\r\n            this.options.frameColor = styles.frameColor;\r\n        }\r\n        if (styles.arrowColor) {\r\n            this.options.arrowColor = styles.arrowColor;\r\n        }\r\n        this._applyStyles();\r\n    }\r\n    _applyStyles() {\r\n        if (this.container && this.options.frameColor) {\r\n            let frameColor = this.options.frameColor.toString();\r\n            this.container.style.borderTopColor = frameColor;\r\n            this.container.style.borderBottomColor = frameColor;\r\n        }\r\n        if (this._arrow && this.options.arrowColor) {\r\n            let arrowColor = this.options.arrowColor.toString();\r\n            this._arrow.color = arrowColor;\r\n        }\r\n    }\r\n    _getWidth(info) {\r\n        return info.width - info.minimap.minimapWidth - info.verticalScrollbarWidth;\r\n    }\r\n    _getLeft(info) {\r\n        // If minimap is to the left, we move beyond it\r\n        if (info.minimap.minimapWidth > 0 && info.minimap.minimapLeft === 0) {\r\n            return info.minimap.minimapWidth;\r\n        }\r\n        return 0;\r\n    }\r\n    _onViewZoneTop(top) {\r\n        this.domNode.style.top = top + 'px';\r\n    }\r\n    _onViewZoneHeight(height) {\r\n        this.domNode.style.height = `${height}px`;\r\n        if (this.container) {\r\n            let containerHeight = height - this._decoratingElementsHeight();\r\n            this.container.style.height = `${containerHeight}px`;\r\n            const layoutInfo = this.editor.getLayoutInfo();\r\n            this._doLayout(containerHeight, this._getWidth(layoutInfo));\r\n        }\r\n        if (this._resizeSash) {\r\n            this._resizeSash.layout();\r\n        }\r\n    }\r\n    get position() {\r\n        const [id] = this._positionMarkerId;\r\n        if (!id) {\r\n            return undefined;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        const range = model.getDecorationRange(id);\r\n        if (!range) {\r\n            return undefined;\r\n        }\r\n        return range.getStartPosition();\r\n    }\r\n    show(rangeOrPos, heightInLines) {\r\n        const range = Range.isIRange(rangeOrPos) ? Range.lift(rangeOrPos) : Range.fromPositions(rangeOrPos);\r\n        this._isShowing = true;\r\n        this._showImpl(range, heightInLines);\r\n        this._isShowing = false;\r\n        this._positionMarkerId = this.editor.deltaDecorations(this._positionMarkerId, [{ range, options: ModelDecorationOptions.EMPTY }]);\r\n    }\r\n    hide() {\r\n        if (this._viewZone) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    accessor.removeZone(this._viewZone.id);\r\n                }\r\n            });\r\n            this._viewZone = null;\r\n        }\r\n        if (this._overlayWidget) {\r\n            this.editor.removeOverlayWidget(this._overlayWidget);\r\n            this._overlayWidget = null;\r\n        }\r\n        if (this._arrow) {\r\n            this._arrow.hide();\r\n        }\r\n    }\r\n    _decoratingElementsHeight() {\r\n        let lineHeight = this.editor.getOption(58 /* lineHeight */);\r\n        let result = 0;\r\n        if (this.options.showArrow) {\r\n            let arrowHeight = Math.round(lineHeight / 3);\r\n            result += 2 * arrowHeight;\r\n        }\r\n        if (this.options.showFrame) {\r\n            let frameThickness = Math.round(lineHeight / 9);\r\n            result += 2 * frameThickness;\r\n        }\r\n        return result;\r\n    }\r\n    _showImpl(where, heightInLines) {\r\n        const position = where.getStartPosition();\r\n        const layoutInfo = this.editor.getLayoutInfo();\r\n        const width = this._getWidth(layoutInfo);\r\n        this.domNode.style.width = `${width}px`;\r\n        this.domNode.style.left = this._getLeft(layoutInfo) + 'px';\r\n        // Render the widget as zone (rendering) and widget (lifecycle)\r\n        const viewZoneDomNode = document.createElement('div');\r\n        viewZoneDomNode.style.overflow = 'hidden';\r\n        const lineHeight = this.editor.getOption(58 /* lineHeight */);\r\n        // adjust heightInLines to viewport\r\n        const maxHeightInLines = Math.max(12, (this.editor.getLayoutInfo().height / lineHeight) * 0.8);\r\n        heightInLines = Math.min(heightInLines, maxHeightInLines);\r\n        let arrowHeight = 0;\r\n        let frameThickness = 0;\r\n        // Render the arrow one 1/3 of an editor line height\r\n        if (this._arrow && this.options.showArrow) {\r\n            arrowHeight = Math.round(lineHeight / 3);\r\n            this._arrow.height = arrowHeight;\r\n            this._arrow.show(position);\r\n        }\r\n        // Render the frame as 1/9 of an editor line height\r\n        if (this.options.showFrame) {\r\n            frameThickness = Math.round(lineHeight / 9);\r\n        }\r\n        // insert zone widget\r\n        this.editor.changeViewZones((accessor) => {\r\n            if (this._viewZone) {\r\n                accessor.removeZone(this._viewZone.id);\r\n            }\r\n            if (this._overlayWidget) {\r\n                this.editor.removeOverlayWidget(this._overlayWidget);\r\n                this._overlayWidget = null;\r\n            }\r\n            this.domNode.style.top = '-1000px';\r\n            this._viewZone = new ViewZoneDelegate(viewZoneDomNode, position.lineNumber, position.column, heightInLines, (top) => this._onViewZoneTop(top), (height) => this._onViewZoneHeight(height));\r\n            this._viewZone.id = accessor.addZone(this._viewZone);\r\n            this._overlayWidget = new OverlayWidgetDelegate(WIDGET_ID + this._viewZone.id, this.domNode);\r\n            this.editor.addOverlayWidget(this._overlayWidget);\r\n        });\r\n        if (this.container && this.options.showFrame) {\r\n            const width = this.options.frameWidth ? this.options.frameWidth : frameThickness;\r\n            this.container.style.borderTopWidth = width + 'px';\r\n            this.container.style.borderBottomWidth = width + 'px';\r\n        }\r\n        let containerHeight = heightInLines * lineHeight - this._decoratingElementsHeight();\r\n        if (this.container) {\r\n            this.container.style.top = arrowHeight + 'px';\r\n            this.container.style.height = containerHeight + 'px';\r\n            this.container.style.overflow = 'hidden';\r\n        }\r\n        this._doLayout(containerHeight, width);\r\n        if (!this.options.keepEditorSelection) {\r\n            this.editor.setSelection(where);\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (model) {\r\n            const revealLine = where.endLineNumber + 1;\r\n            if (revealLine <= model.getLineCount()) {\r\n                // reveal line below the zone widget\r\n                this.revealLine(revealLine, false);\r\n            }\r\n            else {\r\n                // reveal last line atop\r\n                this.revealLine(model.getLineCount(), true);\r\n            }\r\n        }\r\n    }\r\n    revealLine(lineNumber, isLastLine) {\r\n        if (isLastLine) {\r\n            this.editor.revealLineInCenter(lineNumber, 0 /* Smooth */);\r\n        }\r\n        else {\r\n            this.editor.revealLine(lineNumber, 0 /* Smooth */);\r\n        }\r\n    }\r\n    setCssClass(className, classToReplace) {\r\n        if (!this.container) {\r\n            return;\r\n        }\r\n        if (classToReplace) {\r\n            this.container.classList.remove(classToReplace);\r\n        }\r\n        this.container.classList.add(className);\r\n    }\r\n    _onWidth(widthInPixel) {\r\n        // implement in subclass\r\n    }\r\n    _doLayout(heightInPixel, widthInPixel) {\r\n        // implement in subclass\r\n    }\r\n    _relayout(newHeightInLines) {\r\n        if (this._viewZone && this._viewZone.heightInLines !== newHeightInLines) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    this._viewZone.heightInLines = newHeightInLines;\r\n                    accessor.layoutZone(this._viewZone.id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // --- sash\r\n    _initSash() {\r\n        if (this._resizeSash) {\r\n            return;\r\n        }\r\n        this._resizeSash = this._disposables.add(new Sash(this.domNode, this, { orientation: 1 /* HORIZONTAL */ }));\r\n        if (!this.options.isResizeable) {\r\n            this._resizeSash.hide();\r\n            this._resizeSash.state = 0 /* Disabled */;\r\n        }\r\n        let data;\r\n        this._disposables.add(this._resizeSash.onDidStart((e) => {\r\n            if (this._viewZone) {\r\n                data = {\r\n                    startY: e.startY,\r\n                    heightInLines: this._viewZone.heightInLines,\r\n                };\r\n            }\r\n        }));\r\n        this._disposables.add(this._resizeSash.onDidEnd(() => {\r\n            data = undefined;\r\n        }));\r\n        this._disposables.add(this._resizeSash.onDidChange((evt) => {\r\n            if (data) {\r\n                let lineDelta = (evt.currentY - data.startY) / this.editor.getOption(58 /* lineHeight */);\r\n                let roundedLineDelta = lineDelta < 0 ? Math.ceil(lineDelta) : Math.floor(lineDelta);\r\n                let newHeightInLines = data.heightInLines + roundedLineDelta;\r\n                if (newHeightInLines > 5 && newHeightInLines < 35) {\r\n                    this._relayout(newHeightInLines);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    getHorizontalSashLeft() {\r\n        return 0;\r\n    }\r\n    getHorizontalSashTop() {\r\n        return (this.domNode.style.height === null ? 0 : parseInt(this.domNode.style.height)) - (this._decoratingElementsHeight() / 2);\r\n    }\r\n    getHorizontalSashWidth() {\r\n        const layoutInfo = this.editor.getLayoutInfo();\r\n        return layoutInfo.width - layoutInfo.minimap.minimapWidth;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { EventType as GestureEventType, Gesture } from '../../touch.js';\r\nimport { ActionRunner } from '../../../common/actions.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './dropdown.css';\r\nexport class BaseDropdown extends ActionRunner {\r\n    constructor(container, options) {\r\n        super();\r\n        this._onDidChangeVisibility = new Emitter();\r\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\r\n        this._element = append(container, $('.monaco-dropdown'));\r\n        this._label = append(this._element, $('.dropdown-label'));\r\n        let labelRenderer = options.labelRenderer;\r\n        if (!labelRenderer) {\r\n            labelRenderer = (container) => {\r\n                container.textContent = options.label || '';\r\n                return null;\r\n            };\r\n        }\r\n        for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\r\n        }\r\n        for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this._label, event, e => {\r\n                if (e instanceof MouseEvent && e.detail > 1) {\r\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\r\n                }\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(3 /* Enter */) || event.equals(10 /* Space */)) {\r\n                EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n        }));\r\n        const cleanupFn = labelRenderer(this._label);\r\n        if (cleanupFn) {\r\n            this._register(cleanupFn);\r\n        }\r\n        this._register(Gesture.addTarget(this._label));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    show() {\r\n        if (!this.visible) {\r\n            this.visible = true;\r\n            this._onDidChangeVisibility.fire(true);\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.visible) {\r\n            this.visible = false;\r\n            this._onDidChangeVisibility.fire(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.hide();\r\n        if (this.boxContainer) {\r\n            this.boxContainer.remove();\r\n            this.boxContainer = undefined;\r\n        }\r\n        if (this.contents) {\r\n            this.contents.remove();\r\n            this.contents = undefined;\r\n        }\r\n        if (this._label) {\r\n            this._label.remove();\r\n            this._label = undefined;\r\n        }\r\n    }\r\n}\r\nexport class DropdownMenu extends BaseDropdown {\r\n    constructor(container, options) {\r\n        super(container, options);\r\n        this._actions = [];\r\n        this._contextMenuProvider = options.contextMenuProvider;\r\n        this.actions = options.actions || [];\r\n        this.actionProvider = options.actionProvider;\r\n        this.menuClassName = options.menuClassName || '';\r\n        this.menuAsChild = !!options.menuAsChild;\r\n    }\r\n    set menuOptions(options) {\r\n        this._menuOptions = options;\r\n    }\r\n    get menuOptions() {\r\n        return this._menuOptions;\r\n    }\r\n    get actions() {\r\n        if (this.actionProvider) {\r\n            return this.actionProvider.getActions();\r\n        }\r\n        return this._actions;\r\n    }\r\n    set actions(actions) {\r\n        this._actions = actions;\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.element.classList.add('active');\r\n        this._contextMenuProvider.showContextMenu({\r\n            getAnchor: () => this.element,\r\n            getActions: () => this.actions,\r\n            getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\r\n            getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\r\n            getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\r\n            getMenuClassName: () => this.menuClassName,\r\n            onHide: () => this.onHide(),\r\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\r\n            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */,\r\n            domForShadowRoot: this.menuAsChild ? this.element : undefined\r\n        });\r\n    }\r\n    hide() {\r\n        super.hide();\r\n    }\r\n    onHide() {\r\n        this.hide();\r\n        this.element.classList.remove('active');\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $, append } from '../../dom.js';\r\nimport { BaseActionViewItem } from '../actionbar/actionViewItems.js';\r\nimport { DropdownMenu } from './dropdown.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './dropdown.css';\r\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\r\n    constructor(action, menuActionsOrProvider, contextMenuProvider, options = Object.create(null)) {\r\n        super(null, action, options);\r\n        this.actionItem = null;\r\n        this._onDidChangeVisibility = this._register(new Emitter());\r\n        this.menuActionsOrProvider = menuActionsOrProvider;\r\n        this.contextMenuProvider = contextMenuProvider;\r\n        this.options = options;\r\n        if (this.options.actionRunner) {\r\n            this.actionRunner = this.options.actionRunner;\r\n        }\r\n    }\r\n    render(container) {\r\n        this.actionItem = container;\r\n        const labelRenderer = (el) => {\r\n            this.element = append(el, $('a.action-label'));\r\n            let classNames = [];\r\n            if (typeof this.options.classNames === 'string') {\r\n                classNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\r\n            }\r\n            else if (this.options.classNames) {\r\n                classNames = this.options.classNames;\r\n            }\r\n            // todo@aeschli: remove codicon, should come through `this.options.classNames`\r\n            if (!classNames.find(c => c === 'icon')) {\r\n                classNames.push('codicon');\r\n            }\r\n            this.element.classList.add(...classNames);\r\n            this.element.setAttribute('role', 'button');\r\n            this.element.setAttribute('aria-haspopup', 'true');\r\n            this.element.setAttribute('aria-expanded', 'false');\r\n            this.element.title = this._action.label || '';\r\n            return null;\r\n        };\r\n        const isActionsArray = Array.isArray(this.menuActionsOrProvider);\r\n        const options = {\r\n            contextMenuProvider: this.contextMenuProvider,\r\n            labelRenderer: labelRenderer,\r\n            menuAsChild: this.options.menuAsChild,\r\n            actions: isActionsArray ? this.menuActionsOrProvider : undefined,\r\n            actionProvider: isActionsArray ? undefined : this.menuActionsOrProvider\r\n        };\r\n        this.dropdownMenu = this._register(new DropdownMenu(container, options));\r\n        this._register(this.dropdownMenu.onDidChangeVisibility(visible => {\r\n            var _a;\r\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.setAttribute('aria-expanded', `${visible}`);\r\n            this._onDidChangeVisibility.fire(visible);\r\n        }));\r\n        this.dropdownMenu.menuOptions = {\r\n            actionViewItemProvider: this.options.actionViewItemProvider,\r\n            actionRunner: this.actionRunner,\r\n            getKeyBinding: this.options.keybindingProvider,\r\n            context: this._context\r\n        };\r\n        if (this.options.anchorAlignmentProvider) {\r\n            const that = this;\r\n            this.dropdownMenu.menuOptions = Object.assign(Object.assign({}, this.dropdownMenu.menuOptions), { get anchorAlignment() {\r\n                    return that.options.anchorAlignmentProvider();\r\n                } });\r\n        }\r\n        this.updateEnabled();\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        if (this.dropdownMenu) {\r\n            if (this.dropdownMenu.menuOptions) {\r\n                this.dropdownMenu.menuOptions.context = newContext;\r\n            }\r\n            else {\r\n                this.dropdownMenu.menuOptions = { context: newContext };\r\n            }\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        var _a, _b;\r\n        const disabled = !this.getAction().enabled;\r\n        (_a = this.actionItem) === null || _a === void 0 ? void 0 : _a.classList.toggle('disabled', disabled);\r\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.toggle('disabled', disabled);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\r\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\r\nimport { ActionViewItem, BaseActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\r\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { DisposableStore, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\r\nimport './menuEntryActionViewItem.css';\r\nimport { localize } from '../../../nls.js';\r\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { IStorageService } from '../../storage/common/storage.js';\r\nimport { ThemeIcon } from '../../theme/common/themeService.js';\r\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\r\n    const groups = menu.getActions(options);\r\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\r\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\r\n    fillInActions(groups, target, false, isPrimaryAction, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\r\n    return asDisposable(groups);\r\n}\r\nfunction asDisposable(groups) {\r\n    const disposables = new DisposableStore();\r\n    for (const [, actions] of groups) {\r\n        for (const action of actions) {\r\n            disposables.add(action);\r\n        }\r\n    }\r\n    return disposables;\r\n}\r\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', primaryMaxCount = Number.MAX_SAFE_INTEGER, shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\r\n    let primaryBucket;\r\n    let secondaryBucket;\r\n    if (Array.isArray(target)) {\r\n        primaryBucket = target;\r\n        secondaryBucket = target;\r\n    }\r\n    else {\r\n        primaryBucket = target.primary;\r\n        secondaryBucket = target.secondary;\r\n    }\r\n    const submenuInfo = new Set();\r\n    for (const [group, actions] of groups) {\r\n        let target;\r\n        if (isPrimaryAction(group)) {\r\n            target = primaryBucket;\r\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        else {\r\n            target = secondaryBucket;\r\n            if (target.length > 0) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        for (let action of actions) {\r\n            if (useAlternativeActions) {\r\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\r\n            }\r\n            const newLen = target.push(action);\r\n            // keep submenu info for later inlining\r\n            if (action instanceof SubmenuAction) {\r\n                submenuInfo.add({ group, action, index: newLen - 1 });\r\n            }\r\n        }\r\n    }\r\n    // ask the outside if submenu should be inlined or not. only ask when\r\n    // there would be enough space\r\n    for (const { group, action, index } of submenuInfo) {\r\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\r\n        // inlining submenus with length 0 or 1 is easy,\r\n        // larger submenus need to be checked with the overall limit\r\n        const submenuActions = action.actions;\r\n        if ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group, target.length)) {\r\n            target.splice(index, 1, ...submenuActions);\r\n        }\r\n    }\r\n    // overflow items from the primary group into the secondary bucket\r\n    if (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {\r\n        const overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);\r\n        secondaryBucket.unshift(...overflow, new Separator());\r\n    }\r\n}\r\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\r\n    constructor(_action, options, _keybindingService, _notificationService, _contextKeyService) {\r\n        super(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable });\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._wantsAltCommand = false;\r\n        this._itemClassDispose = this._register(new MutableDisposable());\r\n        this._altKey = ModifierKeyEmitter.getInstance();\r\n    }\r\n    get _menuItemAction() {\r\n        return this._action;\r\n    }\r\n    get _commandAction() {\r\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\r\n    }\r\n    onClick(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            try {\r\n                yield this.actionRunner.run(this._commandAction, this._context);\r\n            }\r\n            catch (err) {\r\n                this._notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        container.classList.add('menu-entry');\r\n        this._updateItemClass(this._menuItemAction.item);\r\n        let mouseOver = false;\r\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\r\n        const updateAltState = () => {\r\n            const wantsAltCommand = mouseOver && alternativeKeyDown;\r\n            if (wantsAltCommand !== this._wantsAltCommand) {\r\n                this._wantsAltCommand = wantsAltCommand;\r\n                this.updateLabel();\r\n                this.updateTooltip();\r\n                this.updateClass();\r\n            }\r\n        };\r\n        if (this._menuItemAction.alt) {\r\n            this._register(this._altKey.event(value => {\r\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\r\n                updateAltState();\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(container, 'mouseleave', _ => {\r\n            mouseOver = false;\r\n            updateAltState();\r\n        }));\r\n        this._register(addDisposableListener(container, 'mouseenter', _ => {\r\n            mouseOver = true;\r\n            updateAltState();\r\n        }));\r\n    }\r\n    updateLabel() {\r\n        if (this.options.label && this.label) {\r\n            this.label.textContent = this._commandAction.label;\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        if (this.label) {\r\n            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\r\n            const keybindingLabel = keybinding && keybinding.getLabel();\r\n            const tooltip = this._commandAction.tooltip || this._commandAction.label;\r\n            let title = keybindingLabel\r\n                ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\r\n                : tooltip;\r\n            if (!this._wantsAltCommand && this._menuItemAction.alt) {\r\n                const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\r\n                const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\r\n                const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\r\n                const altTitleSection = altKeybindingLabel\r\n                    ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\r\n                    : altTooltip;\r\n                title += `\\n[${UILabelProvider.modifierLabels[OS].altKey}] ${altTitleSection}`;\r\n            }\r\n            this.label.title = title;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.options.icon) {\r\n            if (this._commandAction !== this._menuItemAction) {\r\n                if (this._menuItemAction.alt) {\r\n                    this._updateItemClass(this._menuItemAction.alt.item);\r\n                }\r\n            }\r\n            else if (this._menuItemAction.alt) {\r\n                this._updateItemClass(this._menuItemAction.item);\r\n            }\r\n        }\r\n    }\r\n    _updateItemClass(item) {\r\n        var _a;\r\n        this._itemClassDispose.value = undefined;\r\n        const { element, label } = this;\r\n        if (!element || !label) {\r\n            return;\r\n        }\r\n        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\r\n        if (!icon) {\r\n            return;\r\n        }\r\n        if (ThemeIcon.isThemeIcon(icon)) {\r\n            // theme icons\r\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\r\n            label.classList.add(...iconClasses);\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove(...iconClasses);\r\n            });\r\n        }\r\n        else {\r\n            // icon path/url\r\n            if (icon.light) {\r\n                label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n            }\r\n            if (icon.dark) {\r\n                label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n            }\r\n            label.classList.add('icon');\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove('icon');\r\n                label.style.removeProperty('--menu-entry-icon-light');\r\n                label.style.removeProperty('--menu-entry-icon-dark');\r\n            });\r\n        }\r\n    }\r\n};\r\nMenuEntryActionViewItem = __decorate([\r\n    __param(2, IKeybindingService),\r\n    __param(3, INotificationService),\r\n    __param(4, IContextKeyService)\r\n], MenuEntryActionViewItem);\r\nexport { MenuEntryActionViewItem };\r\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\r\n    constructor(action, options, contextMenuService) {\r\n        var _a, _b;\r\n        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {\r\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\r\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\r\n        });\r\n        super(action, { getActions: () => action.actions }, contextMenuService, dropdownOptions);\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (this.element) {\r\n            container.classList.add('menu-entry');\r\n            const { icon } = this._action.item;\r\n            if (icon && !ThemeIcon.isThemeIcon(icon)) {\r\n                this.element.classList.add('icon');\r\n                if (icon.light) {\r\n                    this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n                }\r\n                if (icon.dark) {\r\n                    this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nSubmenuEntryActionViewItem = __decorate([\r\n    __param(2, IContextMenuService)\r\n], SubmenuEntryActionViewItem);\r\nexport { SubmenuEntryActionViewItem };\r\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\r\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\r\n        var _a, _b, _c;\r\n        super(null, submenuAction);\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._menuService = _menuService;\r\n        this._instaService = _instaService;\r\n        this._storageService = _storageService;\r\n        this._container = null;\r\n        this._storageKey = `${submenuAction.item.submenu._debugName}_lastActionId`;\r\n        // determine default action\r\n        let defaultAction;\r\n        let defaultActionId = _storageService.get(this._storageKey, 1 /* WORKSPACE */);\r\n        if (defaultActionId) {\r\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\r\n        }\r\n        if (!defaultAction) {\r\n            defaultAction = submenuAction.actions[0];\r\n        }\r\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, undefined);\r\n        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {\r\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\r\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'],\r\n            actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner()\r\n        });\r\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\r\n        this._dropdown.actionRunner.onDidRun((e) => {\r\n            if (e.action instanceof MenuItemAction) {\r\n                this.update(e.action);\r\n            }\r\n        });\r\n    }\r\n    update(lastAction) {\r\n        this._storageService.store(this._storageKey, lastAction.id, 1 /* WORKSPACE */, 0 /* USER */);\r\n        this._defaultAction.dispose();\r\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, undefined);\r\n        this._defaultAction.actionRunner = new class extends ActionRunner {\r\n            runAction(action, context) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    yield action.run(undefined);\r\n                });\r\n            }\r\n        }();\r\n        if (this._container) {\r\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\r\n        }\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        this._defaultAction.setActionContext(newContext);\r\n        this._dropdown.setActionContext(newContext);\r\n    }\r\n    render(container) {\r\n        this._container = container;\r\n        super.render(this._container);\r\n        this._container.classList.add('monaco-dropdown-with-default');\r\n        const primaryContainer = $('.action-container');\r\n        this._defaultAction.render(append(this._container, primaryContainer));\r\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(17 /* RightArrow */)) {\r\n                this._defaultAction.element.tabIndex = -1;\r\n                this._dropdown.focus();\r\n                event.stopPropagation();\r\n            }\r\n        }));\r\n        const dropdownContainer = $('.dropdown-action-container');\r\n        this._dropdown.render(append(this._container, dropdownContainer));\r\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\r\n            var _a;\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(15 /* LeftArrow */)) {\r\n                this._defaultAction.element.tabIndex = 0;\r\n                this._dropdown.setFocusable(false);\r\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\r\n                event.stopPropagation();\r\n            }\r\n        }));\r\n    }\r\n    focus(fromRight) {\r\n        if (fromRight) {\r\n            this._dropdown.focus();\r\n        }\r\n        else {\r\n            this._defaultAction.element.tabIndex = 0;\r\n            this._defaultAction.element.focus();\r\n        }\r\n    }\r\n    blur() {\r\n        this._defaultAction.element.tabIndex = -1;\r\n        this._dropdown.blur();\r\n        this._container.blur();\r\n    }\r\n    setFocusable(focusable) {\r\n        if (focusable) {\r\n            this._defaultAction.element.tabIndex = 0;\r\n        }\r\n        else {\r\n            this._defaultAction.element.tabIndex = -1;\r\n            this._dropdown.setFocusable(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        this._defaultAction.dispose();\r\n        this._dropdown.dispose();\r\n        super.dispose();\r\n    }\r\n};\r\nDropdownWithDefaultActionViewItem = __decorate([\r\n    __param(2, IKeybindingService),\r\n    __param(3, INotificationService),\r\n    __param(4, IContextMenuService),\r\n    __param(5, IMenuService),\r\n    __param(6, IInstantiationService),\r\n    __param(7, IStorageService)\r\n], DropdownWithDefaultActionViewItem);\r\n/**\r\n * Creates action view items for menu actions or submenu actions.\r\n */\r\nexport function createActionViewItem(instaService, action, options) {\r\n    if (action instanceof MenuItemAction) {\r\n        return instaService.createInstance(MenuEntryActionViewItem, action, undefined);\r\n    }\r\n    else if (action instanceof SubmenuItemAction) {\r\n        if (action.item.rememberDefaultAction) {\r\n            return instaService.createInstance(DropdownWithDefaultActionViewItem, action, options);\r\n        }\r\n        else {\r\n            return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './media/peekViewWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { ZoneWidget } from '../zoneWidget/zoneWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { registerColor, contrastBorder, activeContrastBorder, editorInfoForeground, transparent } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { createActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nexport const IPeekViewService = createDecorator('IPeekViewService');\r\nregisterSingleton(IPeekViewService, class {\r\n    constructor() {\r\n        this._widgets = new Map();\r\n    }\r\n    addExclusiveWidget(editor, widget) {\r\n        const existing = this._widgets.get(editor);\r\n        if (existing) {\r\n            existing.listener.dispose();\r\n            existing.widget.dispose();\r\n        }\r\n        const remove = () => {\r\n            const data = this._widgets.get(editor);\r\n            if (data && data.widget === widget) {\r\n                data.listener.dispose();\r\n                this._widgets.delete(editor);\r\n            }\r\n        };\r\n        this._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\r\n    }\r\n});\r\nexport var PeekContext;\r\n(function (PeekContext) {\r\n    PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\r\n    PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\r\n})(PeekContext || (PeekContext = {}));\r\nlet PeekContextController = class PeekContextController {\r\n    constructor(editor, contextKeyService) {\r\n        if (editor instanceof EmbeddedCodeEditorWidget) {\r\n            PeekContext.inPeekEditor.bindTo(contextKeyService);\r\n        }\r\n    }\r\n    dispose() { }\r\n};\r\nPeekContextController.ID = 'editor.contrib.referenceController';\r\nPeekContextController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], PeekContextController);\r\nregisterEditorContribution(PeekContextController.ID, PeekContextController);\r\nexport function getOuterEditor(accessor) {\r\n    let editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n    if (editor instanceof EmbeddedCodeEditorWidget) {\r\n        return editor.getParentEditor();\r\n    }\r\n    return editor;\r\n}\r\nconst defaultOptions = {\r\n    headerBackgroundColor: Color.white,\r\n    primaryHeadingColor: Color.fromHex('#333333'),\r\n    secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\r\n};\r\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\r\n    constructor(editor, options, instantiationService) {\r\n        super(editor, options);\r\n        this.instantiationService = instantiationService;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        objects.mixin(this.options, defaultOptions, false);\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.disposed = true; // prevent consumers who dispose on onDidClose from looping\r\n            super.dispose();\r\n            this._onDidClose.fire(this);\r\n        }\r\n    }\r\n    style(styles) {\r\n        let options = this.options;\r\n        if (styles.headerBackgroundColor) {\r\n            options.headerBackgroundColor = styles.headerBackgroundColor;\r\n        }\r\n        if (styles.primaryHeadingColor) {\r\n            options.primaryHeadingColor = styles.primaryHeadingColor;\r\n        }\r\n        if (styles.secondaryHeadingColor) {\r\n            options.secondaryHeadingColor = styles.secondaryHeadingColor;\r\n        }\r\n        super.style(styles);\r\n    }\r\n    _applyStyles() {\r\n        super._applyStyles();\r\n        let options = this.options;\r\n        if (this._headElement && options.headerBackgroundColor) {\r\n            this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\r\n        }\r\n        if (this._primaryHeading && options.primaryHeadingColor) {\r\n            this._primaryHeading.style.color = options.primaryHeadingColor.toString();\r\n        }\r\n        if (this._secondaryHeading && options.secondaryHeadingColor) {\r\n            this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\r\n        }\r\n        if (this._bodyElement && options.frameColor) {\r\n            this._bodyElement.style.borderColor = options.frameColor.toString();\r\n        }\r\n    }\r\n    _fillContainer(container) {\r\n        this.setCssClass('peekview-widget');\r\n        this._headElement = dom.$('.head');\r\n        this._bodyElement = dom.$('.body');\r\n        this._fillHead(this._headElement);\r\n        this._fillBody(this._bodyElement);\r\n        container.appendChild(this._headElement);\r\n        container.appendChild(this._bodyElement);\r\n    }\r\n    _fillHead(container, noCloseAction) {\r\n        const titleElement = dom.$('.peekview-title');\r\n        if (this.options.supportOnTitleClick) {\r\n            titleElement.classList.add('clickable');\r\n            dom.addStandardDisposableListener(titleElement, 'click', event => this._onTitleClick(event));\r\n        }\r\n        dom.append(this._headElement, titleElement);\r\n        this._fillTitleIcon(titleElement);\r\n        this._primaryHeading = dom.$('span.filename');\r\n        this._secondaryHeading = dom.$('span.dirname');\r\n        this._metaHeading = dom.$('span.meta');\r\n        dom.append(titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\r\n        const actionsContainer = dom.$('.peekview-actions');\r\n        dom.append(this._headElement, actionsContainer);\r\n        const actionBarOptions = this._getActionBarOptions();\r\n        this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\r\n        this._disposables.add(this._actionbarWidget);\r\n        if (!noCloseAction) {\r\n            this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), Codicon.close.classNames, true, () => {\r\n                this.dispose();\r\n                return Promise.resolve();\r\n            }), { label: false, icon: true });\r\n        }\r\n    }\r\n    _fillTitleIcon(container) {\r\n    }\r\n    _getActionBarOptions() {\r\n        return {\r\n            actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\r\n            orientation: 0 /* HORIZONTAL */\r\n        };\r\n    }\r\n    _onTitleClick(event) {\r\n        // implement me if supportOnTitleClick option is set\r\n    }\r\n    setTitle(primaryHeading, secondaryHeading) {\r\n        if (this._primaryHeading && this._secondaryHeading) {\r\n            this._primaryHeading.innerText = primaryHeading;\r\n            this._primaryHeading.setAttribute('title', primaryHeading);\r\n            if (secondaryHeading) {\r\n                this._secondaryHeading.innerText = secondaryHeading;\r\n            }\r\n            else {\r\n                dom.clearNode(this._secondaryHeading);\r\n            }\r\n        }\r\n    }\r\n    setMetaTitle(value) {\r\n        if (this._metaHeading) {\r\n            if (value) {\r\n                this._metaHeading.innerText = value;\r\n                dom.show(this._metaHeading);\r\n            }\r\n            else {\r\n                dom.hide(this._metaHeading);\r\n            }\r\n        }\r\n    }\r\n    _doLayout(heightInPixel, widthInPixel) {\r\n        if (!this._isShowing && heightInPixel < 0) {\r\n            // Looks like the view zone got folded away!\r\n            this.dispose();\r\n            return;\r\n        }\r\n        const headHeight = Math.ceil(this.editor.getOption(58 /* lineHeight */) * 1.2);\r\n        const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\r\n        this._doLayoutHead(headHeight, widthInPixel);\r\n        this._doLayoutBody(bodyHeight, widthInPixel);\r\n    }\r\n    _doLayoutHead(heightInPixel, widthInPixel) {\r\n        if (this._headElement) {\r\n            this._headElement.style.height = `${heightInPixel}px`;\r\n            this._headElement.style.lineHeight = this._headElement.style.height;\r\n        }\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        if (this._bodyElement) {\r\n            this._bodyElement.style.height = `${heightInPixel}px`;\r\n        }\r\n    }\r\n};\r\nPeekViewWidget = __decorate([\r\n    __param(2, IInstantiationService)\r\n], PeekViewWidget);\r\nexport { PeekViewWidget };\r\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: transparent(editorInfoForeground, .1), light: transparent(editorInfoForeground, .1), hc: null }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\r\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: Color.white, light: Color.black, hc: Color.white }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\r\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161e6', hc: '#FFFFFF99' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\r\nexport const peekViewBorder = registerColor('peekView.border', { dark: editorInfoForeground, light: editorInfoForeground, hc: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\r\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hc: Color.black }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\r\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hc: Color.white }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\r\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hc: Color.white }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\r\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hc: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\r\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hc: Color.white }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\r\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hc: Color.black }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\r\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hc: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\r\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hc: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\r\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hc: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\r\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\r\nexport var SeverityIcon;\r\n(function (SeverityIcon) {\r\n    function className(severity) {\r\n        switch (severity) {\r\n            case Severity.Ignore:\r\n                return 'severity-ignore ' + Codicon.info.classNames;\r\n            case Severity.Info:\r\n                return Codicon.info.classNames;\r\n            case Severity.Warning:\r\n                return Codicon.warning.classNames;\r\n            case Severity.Error:\r\n                return Codicon.error.classNames;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    SeverityIcon.className = className;\r\n})(SeverityIcon || (SeverityIcon = {}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\r\n    if (errorIconForeground) {\r\n        const errorCodiconSelector = Codicon.error.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\r\n    if (warningIconForeground) {\r\n        const warningCodiconSelector = Codicon.warning.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\r\n    if (infoIconForeground) {\r\n        const infoCodiconSelector = Codicon.info.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './media/gotoErrorWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerColor, oneOf, textLinkForeground, editorErrorForeground, editorErrorBorder, editorWarningForeground, editorWarningBorder, editorInfoForeground, editorInfoBorder, textLinkActiveForeground, transparent, editorBackground, contrastBorder } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { ScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { getBaseLabel } from '../../../base/common/labels.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { PeekViewWidget, peekViewTitleForeground, peekViewTitleInfoForeground } from '../peekView/peekView.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nimport { SeverityIcon } from '../../../platform/severityIcon/common/severityIcon.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { MenuId, IMenuService } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createAndFillInActionBarActions } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { splitLines } from '../../../base/common/strings.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nclass MessageWidget {\r\n    constructor(parent, editor, onRelatedInformation, _openerService, _labelService) {\r\n        this._openerService = _openerService;\r\n        this._labelService = _labelService;\r\n        this._lines = 0;\r\n        this._longestLineLength = 0;\r\n        this._relatedDiagnostics = new WeakMap();\r\n        this._disposables = new DisposableStore();\r\n        this._editor = editor;\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'descriptioncontainer';\r\n        this._messageBlock = document.createElement('div');\r\n        this._messageBlock.classList.add('message');\r\n        this._messageBlock.setAttribute('aria-live', 'assertive');\r\n        this._messageBlock.setAttribute('role', 'alert');\r\n        domNode.appendChild(this._messageBlock);\r\n        this._relatedBlock = document.createElement('div');\r\n        domNode.appendChild(this._relatedBlock);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._relatedBlock, 'click', event => {\r\n            event.preventDefault();\r\n            const related = this._relatedDiagnostics.get(event.target);\r\n            if (related) {\r\n                onRelatedInformation(related);\r\n            }\r\n        }));\r\n        this._scrollable = new ScrollableElement(domNode, {\r\n            horizontal: 1 /* Auto */,\r\n            vertical: 1 /* Auto */,\r\n            useShadows: false,\r\n            horizontalScrollbarSize: 3,\r\n            verticalScrollbarSize: 3\r\n        });\r\n        parent.appendChild(this._scrollable.getDomNode());\r\n        this._disposables.add(this._scrollable.onScroll(e => {\r\n            domNode.style.left = `-${e.scrollLeft}px`;\r\n            domNode.style.top = `-${e.scrollTop}px`;\r\n        }));\r\n        this._disposables.add(this._scrollable);\r\n    }\r\n    dispose() {\r\n        dispose(this._disposables);\r\n    }\r\n    update(marker) {\r\n        const { source, message, relatedInformation, code } = marker;\r\n        let sourceAndCodeLength = ((source === null || source === void 0 ? void 0 : source.length) || 0) + '()'.length;\r\n        if (code) {\r\n            if (typeof code === 'string') {\r\n                sourceAndCodeLength += code.length;\r\n            }\r\n            else {\r\n                sourceAndCodeLength += code.value.length;\r\n            }\r\n        }\r\n        const lines = splitLines(message);\r\n        this._lines = lines.length;\r\n        this._longestLineLength = 0;\r\n        for (const line of lines) {\r\n            this._longestLineLength = Math.max(line.length + sourceAndCodeLength, this._longestLineLength);\r\n        }\r\n        dom.clearNode(this._messageBlock);\r\n        this._messageBlock.setAttribute('aria-label', this.getAriaLabel(marker));\r\n        this._editor.applyFontInfo(this._messageBlock);\r\n        let lastLineElement = this._messageBlock;\r\n        for (const line of lines) {\r\n            lastLineElement = document.createElement('div');\r\n            lastLineElement.innerText = line;\r\n            if (line === '') {\r\n                lastLineElement.style.height = this._messageBlock.style.lineHeight;\r\n            }\r\n            this._messageBlock.appendChild(lastLineElement);\r\n        }\r\n        if (source || code) {\r\n            const detailsElement = document.createElement('span');\r\n            detailsElement.classList.add('details');\r\n            lastLineElement.appendChild(detailsElement);\r\n            if (source) {\r\n                const sourceElement = document.createElement('span');\r\n                sourceElement.innerText = source;\r\n                sourceElement.classList.add('source');\r\n                detailsElement.appendChild(sourceElement);\r\n            }\r\n            if (code) {\r\n                if (typeof code === 'string') {\r\n                    const codeElement = document.createElement('span');\r\n                    codeElement.innerText = `(${code})`;\r\n                    codeElement.classList.add('code');\r\n                    detailsElement.appendChild(codeElement);\r\n                }\r\n                else {\r\n                    this._codeLink = dom.$('a.code-link');\r\n                    this._codeLink.setAttribute('href', `${code.target.toString()}`);\r\n                    this._codeLink.onclick = (e) => {\r\n                        this._openerService.open(code.target, { allowCommands: true });\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    };\r\n                    const codeElement = dom.append(this._codeLink, dom.$('span'));\r\n                    codeElement.innerText = code.value;\r\n                    detailsElement.appendChild(this._codeLink);\r\n                }\r\n            }\r\n        }\r\n        dom.clearNode(this._relatedBlock);\r\n        this._editor.applyFontInfo(this._relatedBlock);\r\n        if (isNonEmptyArray(relatedInformation)) {\r\n            const relatedInformationNode = this._relatedBlock.appendChild(document.createElement('div'));\r\n            relatedInformationNode.style.paddingTop = `${Math.floor(this._editor.getOption(58 /* lineHeight */) * 0.66)}px`;\r\n            this._lines += 1;\r\n            for (const related of relatedInformation) {\r\n                let container = document.createElement('div');\r\n                let relatedResource = document.createElement('a');\r\n                relatedResource.classList.add('filename');\r\n                relatedResource.innerText = `${getBaseLabel(related.resource)}(${related.startLineNumber}, ${related.startColumn}): `;\r\n                relatedResource.title = this._labelService.getUriLabel(related.resource);\r\n                this._relatedDiagnostics.set(relatedResource, related);\r\n                let relatedMessage = document.createElement('span');\r\n                relatedMessage.innerText = related.message;\r\n                container.appendChild(relatedResource);\r\n                container.appendChild(relatedMessage);\r\n                this._lines += 1;\r\n                relatedInformationNode.appendChild(container);\r\n            }\r\n        }\r\n        const fontInfo = this._editor.getOption(42 /* fontInfo */);\r\n        const scrollWidth = Math.ceil(fontInfo.typicalFullwidthCharacterWidth * this._longestLineLength * 0.75);\r\n        const scrollHeight = fontInfo.lineHeight * this._lines;\r\n        this._scrollable.setScrollDimensions({ scrollWidth, scrollHeight });\r\n    }\r\n    layout(height, width) {\r\n        this._scrollable.getDomNode().style.height = `${height}px`;\r\n        this._scrollable.getDomNode().style.width = `${width}px`;\r\n        this._scrollable.setScrollDimensions({ width, height });\r\n    }\r\n    getHeightInLines() {\r\n        return Math.min(17, this._lines);\r\n    }\r\n    getAriaLabel(marker) {\r\n        let severityLabel = '';\r\n        switch (marker.severity) {\r\n            case MarkerSeverity.Error:\r\n                severityLabel = nls.localize('Error', \"Error\");\r\n                break;\r\n            case MarkerSeverity.Warning:\r\n                severityLabel = nls.localize('Warning', \"Warning\");\r\n                break;\r\n            case MarkerSeverity.Info:\r\n                severityLabel = nls.localize('Info', \"Info\");\r\n                break;\r\n            case MarkerSeverity.Hint:\r\n                severityLabel = nls.localize('Hint', \"Hint\");\r\n                break;\r\n        }\r\n        let ariaLabel = nls.localize('marker aria', \"{0} at {1}. \", severityLabel, marker.startLineNumber + ':' + marker.startColumn);\r\n        const model = this._editor.getModel();\r\n        if (model && (marker.startLineNumber <= model.getLineCount()) && (marker.startLineNumber >= 1)) {\r\n            const lineContent = model.getLineContent(marker.startLineNumber);\r\n            ariaLabel = `${lineContent}, ${ariaLabel}`;\r\n        }\r\n        return ariaLabel;\r\n    }\r\n}\r\nlet MarkerNavigationWidget = class MarkerNavigationWidget extends PeekViewWidget {\r\n    constructor(editor, _themeService, _openerService, _menuService, instantiationService, _contextKeyService, _labelService) {\r\n        super(editor, { showArrow: true, showFrame: true, isAccessible: true, frameWidth: 1 }, instantiationService);\r\n        this._themeService = _themeService;\r\n        this._openerService = _openerService;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._labelService = _labelService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._onDidSelectRelatedInformation = new Emitter();\r\n        this.onDidSelectRelatedInformation = this._onDidSelectRelatedInformation.event;\r\n        this._severity = MarkerSeverity.Warning;\r\n        this._backgroundColor = Color.white;\r\n        this._applyTheme(_themeService.getColorTheme());\r\n        this._callOnDispose.add(_themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this.create();\r\n    }\r\n    _applyTheme(theme) {\r\n        this._backgroundColor = theme.getColor(editorMarkerNavigationBackground);\r\n        let colorId = editorMarkerNavigationError;\r\n        let headerBackground = editorMarkerNavigationErrorHeader;\r\n        if (this._severity === MarkerSeverity.Warning) {\r\n            colorId = editorMarkerNavigationWarning;\r\n            headerBackground = editorMarkerNavigationWarningHeader;\r\n        }\r\n        else if (this._severity === MarkerSeverity.Info) {\r\n            colorId = editorMarkerNavigationInfo;\r\n            headerBackground = editorMarkerNavigationInfoHeader;\r\n        }\r\n        const frameColor = theme.getColor(colorId);\r\n        const headerBg = theme.getColor(headerBackground);\r\n        this.style({\r\n            arrowColor: frameColor,\r\n            frameColor: frameColor,\r\n            headerBackgroundColor: headerBg,\r\n            primaryHeadingColor: theme.getColor(peekViewTitleForeground),\r\n            secondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\r\n        }); // style() will trigger _applyStyles\r\n    }\r\n    _applyStyles() {\r\n        if (this._parentContainer) {\r\n            this._parentContainer.style.backgroundColor = this._backgroundColor ? this._backgroundColor.toString() : '';\r\n        }\r\n        super._applyStyles();\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        super.dispose();\r\n    }\r\n    _fillHead(container) {\r\n        super._fillHead(container);\r\n        this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(e => this.editor.focus()));\r\n        const actions = [];\r\n        const menu = this._menuService.createMenu(MarkerNavigationWidget.TitleMenu, this._contextKeyService);\r\n        createAndFillInActionBarActions(menu, undefined, actions);\r\n        this._actionbarWidget.push(actions, { label: false, icon: true, index: 0 });\r\n        menu.dispose();\r\n    }\r\n    _fillTitleIcon(container) {\r\n        this._icon = dom.append(container, dom.$(''));\r\n    }\r\n    _fillBody(container) {\r\n        this._parentContainer = container;\r\n        container.classList.add('marker-widget');\r\n        this._parentContainer.tabIndex = 0;\r\n        this._parentContainer.setAttribute('role', 'tooltip');\r\n        this._container = document.createElement('div');\r\n        container.appendChild(this._container);\r\n        this._message = new MessageWidget(this._container, this.editor, related => this._onDidSelectRelatedInformation.fire(related), this._openerService, this._labelService);\r\n        this._disposables.add(this._message);\r\n    }\r\n    show() {\r\n        throw new Error('call showAtMarker');\r\n    }\r\n    showAtMarker(marker, markerIdx, markerCount) {\r\n        // update:\r\n        // * title\r\n        // * message\r\n        this._container.classList.remove('stale');\r\n        this._message.update(marker);\r\n        // update frame color (only applied on 'show')\r\n        this._severity = marker.severity;\r\n        this._applyTheme(this._themeService.getColorTheme());\r\n        // show\r\n        let range = Range.lift(marker);\r\n        const editorPosition = this.editor.getPosition();\r\n        let position = editorPosition && range.containsPosition(editorPosition) ? editorPosition : range.getStartPosition();\r\n        super.show(position, this.computeRequiredHeight());\r\n        const model = this.editor.getModel();\r\n        if (model) {\r\n            const detail = markerCount > 1\r\n                ? nls.localize('problems', \"{0} of {1} problems\", markerIdx, markerCount)\r\n                : nls.localize('change', \"{0} of {1} problem\", markerIdx, markerCount);\r\n            this.setTitle(basename(model.uri), detail);\r\n        }\r\n        this._icon.className = `codicon ${SeverityIcon.className(MarkerSeverity.toSeverity(this._severity))}`;\r\n        this.editor.revealPositionNearTop(position, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    updateMarker(marker) {\r\n        this._container.classList.remove('stale');\r\n        this._message.update(marker);\r\n    }\r\n    showStale() {\r\n        this._container.classList.add('stale');\r\n        this._relayout();\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        super._doLayoutBody(heightInPixel, widthInPixel);\r\n        this._heightInPixel = heightInPixel;\r\n        this._message.layout(heightInPixel, widthInPixel);\r\n        this._container.style.height = `${heightInPixel}px`;\r\n    }\r\n    _onWidth(widthInPixel) {\r\n        this._message.layout(this._heightInPixel, widthInPixel);\r\n    }\r\n    _relayout() {\r\n        super._relayout(this.computeRequiredHeight());\r\n    }\r\n    computeRequiredHeight() {\r\n        return 3 + this._message.getHeightInLines();\r\n    }\r\n};\r\nMarkerNavigationWidget.TitleMenu = new MenuId('gotoErrorTitleMenu');\r\nMarkerNavigationWidget = __decorate([\r\n    __param(1, IThemeService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IMenuService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, ILabelService)\r\n], MarkerNavigationWidget);\r\nexport { MarkerNavigationWidget };\r\n// theming\r\nlet errorDefault = oneOf(editorErrorForeground, editorErrorBorder);\r\nlet warningDefault = oneOf(editorWarningForeground, editorWarningBorder);\r\nlet infoDefault = oneOf(editorInfoForeground, editorInfoBorder);\r\nexport const editorMarkerNavigationError = registerColor('editorMarkerNavigationError.background', { dark: errorDefault, light: errorDefault, hc: contrastBorder }, nls.localize('editorMarkerNavigationError', 'Editor marker navigation widget error color.'));\r\nexport const editorMarkerNavigationErrorHeader = registerColor('editorMarkerNavigationError.headerBackground', { dark: transparent(editorMarkerNavigationError, .1), light: transparent(editorMarkerNavigationError, .1), hc: null }, nls.localize('editorMarkerNavigationErrorHeaderBackground', 'Editor marker navigation widget error heading background.'));\r\nexport const editorMarkerNavigationWarning = registerColor('editorMarkerNavigationWarning.background', { dark: warningDefault, light: warningDefault, hc: contrastBorder }, nls.localize('editorMarkerNavigationWarning', 'Editor marker navigation widget warning color.'));\r\nexport const editorMarkerNavigationWarningHeader = registerColor('editorMarkerNavigationWarning.headerBackground', { dark: transparent(editorMarkerNavigationWarning, .1), light: transparent(editorMarkerNavigationWarning, .1), hc: '#0C141F' }, nls.localize('editorMarkerNavigationWarningBackground', 'Editor marker navigation widget warning heading background.'));\r\nexport const editorMarkerNavigationInfo = registerColor('editorMarkerNavigationInfo.background', { dark: infoDefault, light: infoDefault, hc: contrastBorder }, nls.localize('editorMarkerNavigationInfo', 'Editor marker navigation widget info color.'));\r\nexport const editorMarkerNavigationInfoHeader = registerColor('editorMarkerNavigationInfo.headerBackground', { dark: transparent(editorMarkerNavigationInfo, .1), light: transparent(editorMarkerNavigationInfo, .1), hc: null }, nls.localize('editorMarkerNavigationInfoHeaderBackground', 'Editor marker navigation widget info heading background.'));\r\nexport const editorMarkerNavigationBackground = registerColor('editorMarkerNavigation.background', { dark: editorBackground, light: editorBackground, hc: editorBackground }, nls.localize('editorMarkerNavigationBackground', 'Editor marker navigation widget background.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-editor .marker-widget a.code-link span { color: ${linkFg}; }`);\r\n    }\r\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\r\n    if (activeLinkFg) {\r\n        collector.addRule(`.monaco-editor .marker-widget a.code-link span:hover { color: ${activeLinkFg}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { compare } from '../../../base/common/strings.js';\r\nimport { binarySearch } from '../../../base/common/arrays.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class MarkerCoordinate {\r\n    constructor(marker, index, total) {\r\n        this.marker = marker;\r\n        this.index = index;\r\n        this.total = total;\r\n    }\r\n}\r\nlet MarkerList = class MarkerList {\r\n    constructor(resourceFilter, _markerService) {\r\n        this._markerService = _markerService;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._dispoables = new DisposableStore();\r\n        this._markers = [];\r\n        this._nextIdx = -1;\r\n        if (URI.isUri(resourceFilter)) {\r\n            this._resourceFilter = uri => uri.toString() === resourceFilter.toString();\r\n        }\r\n        else if (resourceFilter) {\r\n            this._resourceFilter = resourceFilter;\r\n        }\r\n        const updateMarker = () => {\r\n            this._markers = this._markerService.read({\r\n                resource: URI.isUri(resourceFilter) ? resourceFilter : undefined,\r\n                severities: MarkerSeverity.Error | MarkerSeverity.Warning | MarkerSeverity.Info\r\n            });\r\n            if (typeof resourceFilter === 'function') {\r\n                this._markers = this._markers.filter(m => this._resourceFilter(m.resource));\r\n            }\r\n            this._markers.sort(MarkerList._compareMarker);\r\n        };\r\n        updateMarker();\r\n        this._dispoables.add(_markerService.onMarkerChanged(uris => {\r\n            if (!this._resourceFilter || uris.some(uri => this._resourceFilter(uri))) {\r\n                updateMarker();\r\n                this._nextIdx = -1;\r\n                this._onDidChange.fire();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._dispoables.dispose();\r\n        this._onDidChange.dispose();\r\n    }\r\n    matches(uri) {\r\n        if (!this._resourceFilter && !uri) {\r\n            return true;\r\n        }\r\n        if (!this._resourceFilter || !uri) {\r\n            return false;\r\n        }\r\n        return this._resourceFilter(uri);\r\n    }\r\n    get selected() {\r\n        const marker = this._markers[this._nextIdx];\r\n        return marker && new MarkerCoordinate(marker, this._nextIdx + 1, this._markers.length);\r\n    }\r\n    _initIdx(model, position, fwd) {\r\n        let found = false;\r\n        let idx = this._markers.findIndex(marker => marker.resource.toString() === model.uri.toString());\r\n        if (idx < 0) {\r\n            idx = binarySearch(this._markers, { resource: model.uri }, (a, b) => compare(a.resource.toString(), b.resource.toString()));\r\n            if (idx < 0) {\r\n                idx = ~idx;\r\n            }\r\n        }\r\n        for (let i = idx; i < this._markers.length; i++) {\r\n            let range = Range.lift(this._markers[i]);\r\n            if (range.isEmpty()) {\r\n                const word = model.getWordAtPosition(range.getStartPosition());\r\n                if (word) {\r\n                    range = new Range(range.startLineNumber, word.startColumn, range.startLineNumber, word.endColumn);\r\n                }\r\n            }\r\n            if (position && (range.containsPosition(position) || position.isBeforeOrEqual(range.getStartPosition()))) {\r\n                this._nextIdx = i;\r\n                found = true;\r\n                break;\r\n            }\r\n            if (this._markers[i].resource.toString() !== model.uri.toString()) {\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            // after the last change\r\n            this._nextIdx = fwd ? 0 : this._markers.length - 1;\r\n        }\r\n        if (this._nextIdx < 0) {\r\n            this._nextIdx = this._markers.length - 1;\r\n        }\r\n    }\r\n    resetIndex() {\r\n        this._nextIdx = -1;\r\n    }\r\n    move(fwd, model, position) {\r\n        if (this._markers.length === 0) {\r\n            return false;\r\n        }\r\n        let oldIdx = this._nextIdx;\r\n        if (this._nextIdx === -1) {\r\n            this._initIdx(model, position, fwd);\r\n        }\r\n        else if (fwd) {\r\n            this._nextIdx = (this._nextIdx + 1) % this._markers.length;\r\n        }\r\n        else if (!fwd) {\r\n            this._nextIdx = (this._nextIdx - 1 + this._markers.length) % this._markers.length;\r\n        }\r\n        if (oldIdx !== this._nextIdx) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    find(uri, position) {\r\n        let idx = this._markers.findIndex(marker => marker.resource.toString() === uri.toString());\r\n        if (idx < 0) {\r\n            return undefined;\r\n        }\r\n        for (; idx < this._markers.length; idx++) {\r\n            if (Range.containsPosition(this._markers[idx], position)) {\r\n                return new MarkerCoordinate(this._markers[idx], idx + 1, this._markers.length);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static _compareMarker(a, b) {\r\n        let res = compare(a.resource.toString(), b.resource.toString());\r\n        if (res === 0) {\r\n            res = MarkerSeverity.compare(a.severity, b.severity);\r\n        }\r\n        if (res === 0) {\r\n            res = Range.compareRangesUsingStarts(a, b);\r\n        }\r\n        return res;\r\n    }\r\n};\r\nMarkerList = __decorate([\r\n    __param(1, IMarkerService)\r\n], MarkerList);\r\nexport { MarkerList };\r\nexport const IMarkerNavigationService = createDecorator('IMarkerNavigationService');\r\nlet MarkerNavigationService = class MarkerNavigationService {\r\n    constructor(_markerService) {\r\n        this._markerService = _markerService;\r\n        this._provider = new LinkedList();\r\n    }\r\n    getMarkerList(resource) {\r\n        for (let provider of this._provider) {\r\n            const result = provider.getMarkerList(resource);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        // default\r\n        return new MarkerList(resource, this._markerService);\r\n    }\r\n};\r\nMarkerNavigationService = __decorate([\r\n    __param(0, IMarkerService)\r\n], MarkerNavigationService);\r\nregisterSingleton(IMarkerNavigationService, MarkerNavigationService, true);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MarkerNavigationWidget } from './gotoErrorWidget.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerNavigationService } from './markerNavigationService.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nlet MarkerController = class MarkerController {\r\n    constructor(editor, _markerNavigationService, _contextKeyService, _editorService, _instantiationService) {\r\n        this._markerNavigationService = _markerNavigationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._editorService = _editorService;\r\n        this._instantiationService = _instantiationService;\r\n        this._sessionDispoables = new DisposableStore();\r\n        this._editor = editor;\r\n        this._widgetVisible = CONTEXT_MARKERS_NAVIGATION_VISIBLE.bindTo(this._contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MarkerController.ID);\r\n    }\r\n    dispose() {\r\n        this._cleanUp();\r\n        this._sessionDispoables.dispose();\r\n    }\r\n    _cleanUp() {\r\n        this._widgetVisible.reset();\r\n        this._sessionDispoables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    _getOrCreateModel(uri) {\r\n        if (this._model && this._model.matches(uri)) {\r\n            return this._model;\r\n        }\r\n        let reusePosition = false;\r\n        if (this._model) {\r\n            reusePosition = true;\r\n            this._cleanUp();\r\n        }\r\n        this._model = this._markerNavigationService.getMarkerList(uri);\r\n        if (reusePosition) {\r\n            this._model.move(true, this._editor.getModel(), this._editor.getPosition());\r\n        }\r\n        this._widget = this._instantiationService.createInstance(MarkerNavigationWidget, this._editor);\r\n        this._widget.onDidClose(() => this.close(), this, this._sessionDispoables);\r\n        this._widgetVisible.set(true);\r\n        this._sessionDispoables.add(this._model);\r\n        this._sessionDispoables.add(this._widget);\r\n        // follow cursor\r\n        this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(e => {\r\n            var _a, _b, _c;\r\n            if (!((_a = this._model) === null || _a === void 0 ? void 0 : _a.selected) || !Range.containsPosition((_b = this._model) === null || _b === void 0 ? void 0 : _b.selected.marker, e.position)) {\r\n                (_c = this._model) === null || _c === void 0 ? void 0 : _c.resetIndex();\r\n            }\r\n        }));\r\n        // update markers\r\n        this._sessionDispoables.add(this._model.onDidChange(() => {\r\n            if (!this._widget || !this._widget.position || !this._model) {\r\n                return;\r\n            }\r\n            const info = this._model.find(this._editor.getModel().uri, this._widget.position);\r\n            if (info) {\r\n                this._widget.updateMarker(info.marker);\r\n            }\r\n            else {\r\n                this._widget.showStale();\r\n            }\r\n        }));\r\n        // open related\r\n        this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(related => {\r\n            this._editorService.openCodeEditor({\r\n                resource: related.resource,\r\n                options: { pinned: true, revealIfOpened: true, selection: Range.lift(related).collapseToStart() }\r\n            }, this._editor);\r\n            this.close(false);\r\n        }));\r\n        this._sessionDispoables.add(this._editor.onDidChangeModel(() => this._cleanUp()));\r\n        return this._model;\r\n    }\r\n    close(focusEditor = true) {\r\n        this._cleanUp();\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n    }\r\n    showAtMarker(marker) {\r\n        if (this._editor.hasModel()) {\r\n            const model = this._getOrCreateModel(this._editor.getModel().uri);\r\n            model.resetIndex();\r\n            model.move(true, this._editor.getModel(), new Position(marker.startLineNumber, marker.startColumn));\r\n            if (model.selected) {\r\n                this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);\r\n            }\r\n        }\r\n    }\r\n    nagivate(next, multiFile) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.hasModel()) {\r\n                const model = this._getOrCreateModel(multiFile ? undefined : this._editor.getModel().uri);\r\n                model.move(next, this._editor.getModel(), this._editor.getPosition());\r\n                if (!model.selected) {\r\n                    return;\r\n                }\r\n                if (model.selected.marker.resource.toString() !== this._editor.getModel().uri.toString()) {\r\n                    // show in different editor\r\n                    this._cleanUp();\r\n                    const otherEditor = yield this._editorService.openCodeEditor({\r\n                        resource: model.selected.marker.resource,\r\n                        options: { pinned: false, revealIfOpened: true, selectionRevealType: 2 /* NearTop */, selection: model.selected.marker }\r\n                    }, this._editor);\r\n                    if (otherEditor) {\r\n                        MarkerController.get(otherEditor).close();\r\n                        MarkerController.get(otherEditor).nagivate(next, multiFile);\r\n                    }\r\n                }\r\n                else {\r\n                    // show in this editor\r\n                    this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nMarkerController.ID = 'editor.contrib.markerController';\r\nMarkerController = __decorate([\r\n    __param(1, IMarkerNavigationService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, IInstantiationService)\r\n], MarkerController);\r\nexport { MarkerController };\r\nclass MarkerNavigationAction extends EditorAction {\r\n    constructor(_next, _multiFile, opts) {\r\n        super(opts);\r\n        this._next = _next;\r\n        this._multiFile = _multiFile;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (editor.hasModel()) {\r\n                MarkerController.get(editor).nagivate(this._next, this._multiFile);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMarkerAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(true, false, {\r\n            id: NextMarkerAction.ID,\r\n            label: NextMarkerAction.LABEL,\r\n            alias: 'Go to Next Problem (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 512 /* Alt */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MarkerNavigationWidget.TitleMenu,\r\n                title: NextMarkerAction.LABEL,\r\n                icon: registerIcon('marker-navigation-next', Codicon.arrowDown, nls.localize('nextMarkerIcon', 'Icon for goto next marker.')),\r\n                group: 'navigation',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nNextMarkerAction.ID = 'editor.action.marker.next';\r\nNextMarkerAction.LABEL = nls.localize('markerAction.next.label', \"Go to Next Problem (Error, Warning, Info)\");\r\nclass PrevMarkerAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(false, false, {\r\n            id: PrevMarkerAction.ID,\r\n            label: PrevMarkerAction.LABEL,\r\n            alias: 'Go to Previous Problem (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MarkerNavigationWidget.TitleMenu,\r\n                title: NextMarkerAction.LABEL,\r\n                icon: registerIcon('marker-navigation-previous', Codicon.arrowUp, nls.localize('previousMarkerIcon', 'Icon for goto previous marker.')),\r\n                group: 'navigation',\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nPrevMarkerAction.ID = 'editor.action.marker.prev';\r\nPrevMarkerAction.LABEL = nls.localize('markerAction.previous.label', \"Go to Previous Problem (Error, Warning, Info)\");\r\nclass NextMarkerInFilesAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(true, true, {\r\n            id: 'editor.action.marker.nextInFiles',\r\n            label: nls.localize('markerAction.nextInFiles.label', \"Go to Next Problem in Files (Error, Warning, Info)\"),\r\n            alias: 'Go to Next Problem in Files (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                title: nls.localize({ key: 'miGotoNextProblem', comment: ['&& denotes a mnemonic'] }, \"Next &&Problem\"),\r\n                group: '6_problem_nav',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass PrevMarkerInFilesAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(false, true, {\r\n            id: 'editor.action.marker.prevInFiles',\r\n            label: nls.localize('markerAction.previousInFiles.label', \"Go to Previous Problem in Files (Error, Warning, Info)\"),\r\n            alias: 'Go to Previous Problem in Files (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                title: nls.localize({ key: 'miGotoPreviousProblem', comment: ['&& denotes a mnemonic'] }, \"Previous &&Problem\"),\r\n                group: '6_problem_nav',\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(MarkerController.ID, MarkerController);\r\nregisterEditorAction(NextMarkerAction);\r\nregisterEditorAction(PrevMarkerAction);\r\nregisterEditorAction(NextMarkerInFilesAction);\r\nregisterEditorAction(PrevMarkerInFilesAction);\r\nconst CONTEXT_MARKERS_NAVIGATION_VISIBLE = new RawContextKey('markersNavigationVisible', false);\r\nconst MarkerCommand = EditorCommand.bindToContribution(MarkerController.get);\r\nregisterEditorCommand(new MarkerCommand({\r\n    id: 'closeMarkersNavigation',\r\n    precondition: CONTEXT_MARKERS_NAVIGATION_VISIBLE,\r\n    handler: x => x.close(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 50,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { IMarkerData, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { MarkerController, NextMarkerAction } from '../gotoError/gotoError.js';\r\nimport { createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { getCodeActions } from '../codeAction/codeAction.js';\r\nimport { QuickFixAction, QuickFixController } from '../codeAction/codeActionCommands.js';\r\nimport { CodeActionKind } from '../codeAction/types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { textLinkActiveForeground, textLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nconst $ = dom.$;\r\nexport class MarkerHover {\r\n    constructor(owner, range, marker) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.marker = marker;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nconst markerCodeActionTrigger = {\r\n    type: 1 /* Invoke */,\r\n    filter: { include: CodeActionKind.QuickFix }\r\n};\r\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\r\n    constructor(_editor, _hover, _markerDecorationsService, _openerService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._markerDecorationsService = _markerDecorationsService;\r\n        this._openerService = _openerService;\r\n        this.recentMarkerCodeActionsInfo = undefined;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const result = [];\r\n        for (const d of lineDecorations) {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\r\n            if (!marker) {\r\n                continue;\r\n            }\r\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\r\n            result.push(new MarkerHover(this, range, marker));\r\n        }\r\n        return result;\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        if (!hoverParts.length) {\r\n            return Disposable.None;\r\n        }\r\n        const disposables = new DisposableStore();\r\n        hoverParts.forEach(msg => fragment.appendChild(this.renderMarkerHover(msg, disposables)));\r\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\r\n        this.renderMarkerStatusbar(markerHoverForStatusbar, statusBar, disposables);\r\n        return disposables;\r\n    }\r\n    renderMarkerHover(markerHover, disposables) {\r\n        const hoverElement = $('div.hover-row');\r\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\r\n        const { source, message, code, relatedInformation } = markerHover.marker;\r\n        this._editor.applyFontInfo(markerElement);\r\n        const messageElement = dom.append(markerElement, $('span'));\r\n        messageElement.style.whiteSpace = 'pre-wrap';\r\n        messageElement.innerText = message;\r\n        if (source || code) {\r\n            // Code has link\r\n            if (code && typeof code !== 'string') {\r\n                const sourceAndCodeElement = $('span');\r\n                if (source) {\r\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\r\n                    sourceElement.innerText = source;\r\n                }\r\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\r\n                codeLink.setAttribute('href', code.target.toString());\r\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\r\n                    this._openerService.open(code.target, { allowCommands: true });\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }));\r\n                const codeElement = dom.append(codeLink, $('span'));\r\n                codeElement.innerText = code.value;\r\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\r\n                detailsElement.style.opacity = '0.6';\r\n                detailsElement.style.paddingLeft = '6px';\r\n            }\r\n            else {\r\n                const detailsElement = dom.append(markerElement, $('span'));\r\n                detailsElement.style.opacity = '0.6';\r\n                detailsElement.style.paddingLeft = '6px';\r\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\r\n            }\r\n        }\r\n        if (isNonEmptyArray(relatedInformation)) {\r\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\r\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\r\n                relatedInfoContainer.style.marginTop = '8px';\r\n                const a = dom.append(relatedInfoContainer, $('a'));\r\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\r\n                a.style.cursor = 'pointer';\r\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (this._openerService) {\r\n                        this._openerService.open(resource, {\r\n                            fromUserGesture: true,\r\n                            editorOptions: { selection: { startLineNumber, startColumn } }\r\n                        }).catch(onUnexpectedError);\r\n                    }\r\n                }));\r\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\r\n                messageElement.innerText = message;\r\n                this._editor.applyFontInfo(messageElement);\r\n            }\r\n        }\r\n        return hoverElement;\r\n    }\r\n    renderMarkerStatusbar(markerHover, statusBar, disposables) {\r\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\r\n            statusBar.addAction({\r\n                label: nls.localize('view problem', \"View Problem\"),\r\n                commandId: NextMarkerAction.ID,\r\n                run: () => {\r\n                    this._hover.hide();\r\n                    MarkerController.get(this._editor).showAtMarker(markerHover.marker);\r\n                    this._editor.focus();\r\n                }\r\n            });\r\n        }\r\n        if (!this._editor.getOption(80 /* readOnly */)) {\r\n            const quickfixPlaceholderElement = statusBar.append($('div'));\r\n            if (this.recentMarkerCodeActionsInfo) {\r\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\r\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\r\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\r\n                    }\r\n                }\r\n                else {\r\n                    this.recentMarkerCodeActionsInfo = undefined;\r\n                }\r\n            }\r\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\r\n            if (!quickfixPlaceholderElement.textContent) {\r\n                // Have some content in here to avoid flickering\r\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\r\n            }\r\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\r\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\r\n            codeActionsPromise.then(actions => {\r\n                updatePlaceholderDisposable.dispose();\r\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\r\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\r\n                    actions.dispose();\r\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\r\n                    return;\r\n                }\r\n                quickfixPlaceholderElement.style.display = 'none';\r\n                let showing = false;\r\n                disposables.add(toDisposable(() => {\r\n                    if (!showing) {\r\n                        actions.dispose();\r\n                    }\r\n                }));\r\n                statusBar.addAction({\r\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\r\n                    commandId: QuickFixAction.Id,\r\n                    run: (target) => {\r\n                        showing = true;\r\n                        const controller = QuickFixController.get(this._editor);\r\n                        const elementPosition = dom.getDomNodePagePosition(target);\r\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\r\n                        // context menu as well when using keyboard navigation\r\n                        this._hover.hide();\r\n                        controller.showCodeActions(markerCodeActionTrigger, actions, {\r\n                            x: elementPosition.left + 6,\r\n                            y: elementPosition.top + elementPosition.height + 6\r\n                        });\r\n                    }\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n    }\r\n    getCodeActions(marker) {\r\n        return createCancelablePromise(cancellationToken => {\r\n            return getCodeActions(this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\r\n        });\r\n    }\r\n};\r\nMarkerHoverParticipant = __decorate([\r\n    __param(2, IMarkerDecorationsService),\r\n    __param(3, IOpenerService)\r\n], MarkerHoverParticipant);\r\nexport { MarkerHoverParticipant };\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${linkFg}; }`);\r\n    }\r\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\r\n    if (activeLinkFg) {\r\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${activeLinkFg}; }`);\r\n    }\r\n});\r\n","/*\nThe MIT License (MIT)\n\nCopyright © 2015 Nicolas Bevacqua\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet __insane_func;\n\n(function () { function r(e, n, t) { function o(i, f) { if (!n[i]) { if (!e[i]) { var c = \"function\" == typeof require && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); var a = new Error(\"Cannot find module '\" + i + \"'\"); throw a.code = \"MODULE_NOT_FOUND\", a } var p = n[i] = { exports: {} }; e[i][0].call(p.exports, function (r) { var n = e[i][1][r]; return o(n || r) }, p, p.exports, r, e, n, t) } return n[i].exports } for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++)o(t[i]); return o } return r })()({\n\t1: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\n\t\tmodule.exports = {\n\t\t\turis: toMap(uris) // attributes that have an href and hence need to be sanitized\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 2: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar defaults = {\n\t\t\tallowedAttributes: {\n\t\t\t\t'*': ['title', 'accesskey'],\n\t\t\t\ta: ['href', 'name', 'target', 'aria-label'],\n\t\t\t\tiframe: ['allowfullscreen', 'frameborder', 'src'],\n\t\t\t\timg: ['src', 'alt', 'title', 'aria-label']\n\t\t\t},\n\t\t\tallowedClasses: {},\n\t\t\tallowedSchemes: ['http', 'https', 'mailto'],\n\t\t\tallowedTags: [\n\t\t\t\t'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n\t\t\t\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n\t\t\t\t'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n\t\t\t\t'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n\t\t\t],\n\t\t\tfilter: null\n\t\t};\n\n\t\tmodule.exports = defaults;\n\n\t}, {}], 3: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\n\t\tmodule.exports = {\n\t\t\tvoids: toMap(voids)\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 4: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar assign = require('assignment');\n\t\tvar parser = require('./parser');\n\t\tvar sanitizer = require('./sanitizer');\n\t\tvar defaults = require('./defaults');\n\n\t\tfunction insane(html, options, strict) {\n\t\t\tvar buffer = [];\n\t\t\tvar configuration = strict === true ? options : assign({}, defaults, options);\n\t\t\tvar handler = sanitizer(buffer, configuration);\n\n\t\t\tparser(html, handler);\n\n\t\t\treturn buffer.join('');\n\t\t}\n\n\t\tinsane.defaults = defaults;\n\t\tmodule.exports = insane;\n\t\t__insane_func = insane;\n\n\t}, { \"./defaults\": 2, \"./parser\": 7, \"./sanitizer\": 8, \"assignment\": 6, \"he\": 9 }], 5: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tmodule.exports = function lowercase(string) {\n\t\t\treturn typeof string === 'string' ? string.toLowerCase() : string;\n\t\t};\n\n\t}, {}], 6: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction assignment(result) {\n\t\t\tvar stack = Array.prototype.slice.call(arguments, 1);\n\t\t\tvar item;\n\t\t\tvar key;\n\t\t\twhile (stack.length) {\n\t\t\t\titem = stack.shift();\n\t\t\t\tfor (key in item) {\n\t\t\t\t\tif (item.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (Object.prototype.toString.call(result[key]) === '[object Object]') {\n\t\t\t\t\t\t\tresult[key] = assignment(result[key], item[key]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult[key] = item[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tmodule.exports = assignment;\n\n\t}, {}], 7: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\t\tvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\n\t\tvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\n\t\tvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\n\t\tvar rtag = /^</;\n\t\tvar rtagend = /^<\\s*\\//;\n\n\t\tfunction createStack() {\n\t\t\tvar stack = [];\n\t\t\tstack.lastItem = function lastItem() {\n\t\t\t\treturn stack[stack.length - 1];\n\t\t\t};\n\t\t\treturn stack;\n\t\t}\n\n\t\tfunction parser(html, handler) {\n\t\t\tvar stack = createStack();\n\t\t\tvar last = html;\n\t\t\tvar chars;\n\n\t\t\twhile (html) {\n\t\t\t\tparsePart();\n\t\t\t}\n\t\t\tparseEndTag(); // clean up any remaining tags\n\n\t\t\tfunction parsePart() {\n\t\t\t\tchars = true;\n\t\t\t\tparseTag();\n\n\t\t\t\tvar same = html === last;\n\t\t\t\tlast = html;\n\n\t\t\t\tif (same) { // discard, because it's invalid\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTag() {\n\t\t\t\tif (html.substr(0, 4) === '<!--') { // comments\n\t\t\t\t\tparseComment();\n\t\t\t\t} else if (rtagend.test(html)) {\n\t\t\t\t\tparseEdge(rend, parseEndTag);\n\t\t\t\t} else if (rtag.test(html)) {\n\t\t\t\t\tparseEdge(rstart, parseStartTag);\n\t\t\t\t}\n\t\t\t\tparseTagDecode();\n\t\t\t}\n\n\t\t\tfunction parseEdge(regex, parser) {\n\t\t\t\tvar match = html.match(regex);\n\t\t\t\tif (match) {\n\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\tmatch[0].replace(regex, parser);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseComment() {\n\t\t\t\tvar index = html.indexOf('-->');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tif (handler.comment) {\n\t\t\t\t\t\thandler.comment(html.substring(4, index));\n\t\t\t\t\t}\n\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTagDecode() {\n\t\t\t\tif (!chars) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar text;\n\t\t\t\tvar index = html.indexOf('<');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\ttext = html.substring(0, index);\n\t\t\t\t\thtml = html.substring(index);\n\t\t\t\t} else {\n\t\t\t\t\ttext = html;\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t\tif (handler.chars) {\n\t\t\t\t\thandler.chars(text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\t\t\tvar attrs = {};\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tvar u = elements.voids[low] || !!unary;\n\n\t\t\t\trest.replace(rattrs, attrReplacer);\n\n\t\t\t\tif (!u) {\n\t\t\t\t\tstack.push(low);\n\t\t\t\t}\n\t\t\t\tif (handler.start) {\n\t\t\t\t\thandler.start(low, attrs, u);\n\t\t\t\t}\n\n\t\t\t\tfunction attrReplacer(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n\t\t\t\t\tif (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n\t\t\t\t\t\tattrs[name] = void 0; // attribute is like <button disabled></button>\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseEndTag(tag, tagName) {\n\t\t\t\tvar i;\n\t\t\t\tvar pos = 0;\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tif (low) {\n\t\t\t\t\tfor (pos = stack.length - 1; pos >= 0; pos--) {\n\t\t\t\t\t\tif (stack[pos] === low) {\n\t\t\t\t\t\t\tbreak; // find the closest opened tag of the same type\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\tfor (i = stack.length - 1; i >= pos; i--) {\n\t\t\t\t\t\tif (handler.end) { // close all the open elements, up the stack\n\t\t\t\t\t\t\thandler.end(stack[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.length = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = parser;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 8: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\n\t\tfunction sanitizer(buffer, options) {\n\t\t\tvar last;\n\t\t\tvar context;\n\t\t\tvar o = options || {};\n\n\t\t\treset();\n\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tchars: chars\n\t\t\t};\n\n\t\t\tfunction out(value) {\n\t\t\t\tbuffer.push(value);\n\t\t\t}\n\n\t\t\tfunction start(tag, attrs, unary) {\n\t\t\t\tvar low = lowercase(tag);\n\n\t\t\t\tif (context.ignoring) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif ((o.allowedTags || []).indexOf(low) === -1) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\n\t\t\t\tout('<');\n\t\t\t\tout(low);\n\t\t\t\tObject.keys(attrs).forEach(parse);\n\t\t\t\tout(unary ? '/>' : '>');\n\n\t\t\t\tfunction parse(key) {\n\t\t\t\t\tvar value = attrs[key];\n\t\t\t\t\tvar classesOk = (o.allowedClasses || {})[low] || [];\n\t\t\t\t\tvar attrsOk = (o.allowedAttributes || {})[low] || [];\n\t\t\t\t\tattrsOk = attrsOk.concat((o.allowedAttributes || {})['*'] || []);\n\t\t\t\t\tvar valid;\n\t\t\t\t\tvar lkey = lowercase(key);\n\t\t\t\t\tif (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n\t\t\t\t\t\tvalue = value.split(' ').filter(isValidClass).join(' ').trim();\n\t\t\t\t\t\tvalid = value.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n\t\t\t\t\t}\n\t\t\t\t\tif (valid) {\n\t\t\t\t\t\tout(' ');\n\t\t\t\t\t\tout(key);\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tout('=\"');\n\t\t\t\t\t\t\tout(he.encode(value));\n\t\t\t\t\t\t\tout('\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction isValidClass(className) {\n\t\t\t\t\t\treturn classesOk && classesOk.indexOf(className) !== -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction end(tag) {\n\t\t\t\tvar low = lowercase(tag);\n\t\t\t\tvar allowed = (o.allowedTags || []).indexOf(low) !== -1;\n\t\t\t\tif (allowed) {\n\t\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\t\tout('</');\n\t\t\t\t\t\tout(low);\n\t\t\t\t\t\tout('>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunignore(low);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunignore(low);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction testUrl(text) {\n\t\t\t\tvar start = text[0];\n\t\t\t\tif (start === '#' || start === '/') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar colon = text.indexOf(':');\n\t\t\t\tif (colon === -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar questionmark = text.indexOf('?');\n\t\t\t\tif (questionmark !== -1 && colon > questionmark) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar hash = text.indexOf('#');\n\t\t\t\tif (hash !== -1 && colon > hash) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn o.allowedSchemes.some(matches);\n\n\t\t\t\tfunction matches(scheme) {\n\t\t\t\t\treturn text.indexOf(scheme + ':') === 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction chars(text) {\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tout(o.transformText ? o.transformText(text) : text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ignore(tag) {\n\t\t\t\tif (elements.voids[tag]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tcontext = { ignoring: tag, depth: 1 };\n\t\t\t\t} else if (context.ignoring === tag) {\n\t\t\t\t\tcontext.depth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction unignore(tag) {\n\t\t\t\tif (context.ignoring === tag) {\n\t\t\t\t\tif (--context.depth <= 0) {\n\t\t\t\t\t\treset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reset() {\n\t\t\t\tcontext = { ignoring: false, depth: 0 };\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = sanitizer;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 9: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar escapes = {\n\t\t\t'&': '&amp;',\n\t\t\t'<': '&lt;',\n\t\t\t'>': '&gt;',\n\t\t\t'\"': '&quot;',\n\t\t\t\"'\": '&#39;'\n\t\t};\n\t\tvar unescapes = {\n\t\t\t'&amp;': '&',\n\t\t\t'&lt;': '<',\n\t\t\t'&gt;': '>',\n\t\t\t'&quot;': '\"',\n\t\t\t'&#39;': \"'\"\n\t\t};\n\t\tvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\n\t\tvar runescaped = /[&<>\"']/g;\n\n\t\tfunction escapeHtmlChar(match) {\n\t\t\treturn escapes[match];\n\t\t}\n\t\tfunction unescapeHtmlChar(match) {\n\t\t\treturn unescapes[match];\n\t\t}\n\n\t\tfunction escapeHtml(text) {\n\t\t\treturn text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n\t\t}\n\n\t\tfunction unescapeHtml(html) {\n\t\t\treturn html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n\t\t}\n\n\t\tescapeHtml.options = unescapeHtml.options = {};\n\n\t\tmodule.exports = {\n\t\t\tencode: escapeHtml,\n\t\t\tescape: escapeHtml,\n\t\t\tdecode: unescapeHtml,\n\t\t\tunescape: unescapeHtml,\n\t\t\tversion: '1.0.0-browser'\n\t\t};\n\n\t}, {}], 10: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction toMap(list) {\n\t\t\treturn list.reduce(asKey, {});\n\t\t}\n\n\t\tfunction asKey(accumulator, item) {\n\t\t\taccumulator[item] = true;\n\t\t\treturn accumulator;\n\t\t}\n\n\t\tmodule.exports = toMap;\n\n\t}, {}]\n}, {}, [4]);\n\n// ESM-comment-begin\n// define(function() { return { insane: __insane_func }; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var insane = __insane_func;\n// ESM-uncomment-end\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = { exports: {} };\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() { }\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n      target,\n      key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n        curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n      cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n      i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n    splitCells = helpers.splitCells,\n    _escape = helpers.escape,\n    findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*| *)(?:\\\\n[^\\\\n]*)*(?:\\\\n|$))\"); // Get each top-level item\n\n        while (src) {\n          if (this.rules.block.hr.test(src)) {\n            // End list if we encounter an HR (possibly move into itemRegex?)\n            break;\n          }\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          lines = cap[2].split('\\n');\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = lines[0].trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1\n\n            itemContents = lines[0].slice(indent - cap[1].length);\n          }\n\n          blankLine = false;\n          raw = cap[0];\n\n          if (!lines[0] && /^ *$/.test(lines[1])) {\n            // items begin with at most one blank line\n            raw = cap[1] + lines.slice(0, 2).join('\\n') + '\\n';\n            list.loose = true;\n            lines = [];\n          }\n\n          var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\");\n\n          for (i = 1; i < lines.length; i++) {\n            line = lines[i];\n\n            if (this.options.pedantic) {\n              // Re-align to follow commonmark nesting rules\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            } // Until we encounter a blank line, item contents do not need indentation\n\n\n            if (!blankLine) {\n              if (!line.trim()) {\n                // Check if current line is empty\n                blankLine = true;\n              } // Dedent if possible\n\n\n              if (line.search(/[^ ]/) >= indent) {\n                itemContents += '\\n' + line.slice(indent);\n              } else {\n                itemContents += '\\n' + line;\n              }\n\n              continue;\n            } // Dedent this line\n\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n              itemContents += '\\n' + line.slice(indent);\n              continue;\n            } else {\n              // Line was not properly indented; end of this item\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n          src = src.slice(raw.length);\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n          if (list.items[i].tokens.some(function (t) {\n            return t.type === 'space';\n          })) {\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n          rLength,\n          delimTotal = lLength,\n          midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n    edit = helpers.edit,\n    merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n      + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n      + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n      + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n      + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n      + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n      + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n      + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n      + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n      + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n      + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)\\\\|?' // Align\n      + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n      + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n      + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n      + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n      + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n      + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_*]*?\\*[^_*]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^_*]*?\\_[^_*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n    inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n      /**\n       * Static Lex Inline Method\n       */\n      ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n      /**\n       * Preprocessing\n       */\n      ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n      /**\n       * Lexing\n       */\n      ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n      /**\n       * Lexing/Compiling\n       */\n      ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n    escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n      ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() { }\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n        .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n        .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n      /**\n       * Finds the next safe (unique) slug to use\n       */\n      ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n      /**\n       * Convert string to unique id\n       * @param {object} options\n       * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n       */\n      ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n      /**\n       * Static Parse Inline Method\n       */\n      ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n      /**\n       * Parse Loop\n       */\n      ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox,\n        ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n      /**\n       * Parse Inline Tokens\n       */\n      ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token,\n        ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n    checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n    escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n    changeDefaults = defaults$5.exports.changeDefaults,\n    defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport * as DOM from './dom.js';\r\nimport { DomEmitter } from './event.js';\r\nimport { createElement } from './formattedTextRenderer.js';\r\nimport { StandardMouseEvent } from './mouseEvent.js';\r\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\r\nimport { onUnexpectedError } from '../common/errors.js';\r\nimport { Event } from '../common/event.js';\r\nimport { parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\r\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\r\nimport { defaultGenerator } from '../common/idGenerator.js';\r\nimport { insane } from '../common/insane/insane.js';\r\nimport * as marked from '../common/marked/marked.js';\r\nimport { parse } from '../common/marshalling.js';\r\nimport { FileAccess, Schemas } from '../common/network.js';\r\nimport { cloneAndChange } from '../common/objects.js';\r\nimport { resolvePath } from '../common/resources.js';\r\nimport { escape } from '../common/strings.js';\r\nimport { URI } from '../common/uri.js';\r\nconst _ttpInsane = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('insane', {\r\n    createHTML(value, options) {\r\n        return insane(value, options);\r\n    }\r\n});\r\n/**\r\n * Low-level way create a html element from a markdown string.\r\n *\r\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\r\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\r\n */\r\nexport function renderMarkdown(markdown, options = {}, markedOptions = {}) {\r\n    var _a;\r\n    const element = createElement(options);\r\n    const _uriMassage = function (part) {\r\n        let data;\r\n        try {\r\n            data = parse(decodeURIComponent(part));\r\n        }\r\n        catch (e) {\r\n            // ignore\r\n        }\r\n        if (!data) {\r\n            return part;\r\n        }\r\n        data = cloneAndChange(data, value => {\r\n            if (markdown.uris && markdown.uris[value]) {\r\n                return URI.revive(markdown.uris[value]);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n        return encodeURIComponent(JSON.stringify(data));\r\n    };\r\n    const _href = function (href, isDomUri) {\r\n        const data = markdown.uris && markdown.uris[href];\r\n        if (!data) {\r\n            return href; // no uri exists\r\n        }\r\n        let uri = URI.revive(data);\r\n        if (isDomUri) {\r\n            if (href.startsWith(Schemas.data + ':')) {\r\n                return href;\r\n            }\r\n            // this URI will end up as \"src\"-attribute of a dom node\r\n            // and because of that special rewriting needs to be done\r\n            // so that the URI uses a protocol that's understood by\r\n            // browsers (like http or https)\r\n            return FileAccess.asBrowserUri(uri).toString(true);\r\n        }\r\n        if (URI.parse(href).toString() === uri.toString()) {\r\n            return href; // no transformation performed\r\n        }\r\n        if (uri.query) {\r\n            uri = uri.with({ query: _uriMassage(uri.query) });\r\n        }\r\n        return uri.toString();\r\n    };\r\n    // signal to code-block render that the\r\n    // element has been created\r\n    let signalInnerHTML;\r\n    const withInnerHTML = new Promise(c => signalInnerHTML = c);\r\n    const renderer = new marked.Renderer();\r\n    renderer.image = (href, title, text) => {\r\n        let dimensions = [];\r\n        let attributes = [];\r\n        if (href) {\r\n            ({ href, dimensions } = parseHrefAndDimensions(href));\r\n            href = _href(href, true);\r\n            try {\r\n                const hrefAsUri = URI.parse(href);\r\n                if (options.baseUrl && hrefAsUri.scheme === Schemas.file) { // absolute or relative local path, or file: uri\r\n                    href = resolvePath(options.baseUrl, href).toString();\r\n                }\r\n            }\r\n            catch (err) { }\r\n            attributes.push(`src=\"${href}\"`);\r\n        }\r\n        if (text) {\r\n            attributes.push(`alt=\"${text}\"`);\r\n        }\r\n        if (title) {\r\n            attributes.push(`title=\"${title}\"`);\r\n        }\r\n        if (dimensions.length) {\r\n            attributes = attributes.concat(dimensions);\r\n        }\r\n        return '<img ' + attributes.join(' ') + '>';\r\n    };\r\n    renderer.link = (href, title, text) => {\r\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\r\n        if (href === text) { // raw link case\r\n            text = removeMarkdownEscapes(text);\r\n        }\r\n        href = _href(href, false);\r\n        if (options.baseUrl) {\r\n            const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\r\n            if (!hasScheme) {\r\n                href = resolvePath(options.baseUrl, href).toString();\r\n            }\r\n        }\r\n        title = removeMarkdownEscapes(title);\r\n        href = removeMarkdownEscapes(href);\r\n        if (!href\r\n            || href.match(/^data:|javascript:/i)\r\n            || (href.match(/^command:/i) && !markdown.isTrusted)\r\n            || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\r\n            // drop the link\r\n            return text;\r\n        }\r\n        else {\r\n            // HTML Encode href\r\n            href = href.replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;');\r\n            return `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\r\n        }\r\n    };\r\n    renderer.paragraph = (text) => {\r\n        if (markdown.supportThemeIcons) {\r\n            const elements = renderLabelWithIcons(text);\r\n            text = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\r\n        }\r\n        return `<p>${text}</p>`;\r\n    };\r\n    if (options.codeBlockRenderer) {\r\n        renderer.code = (code, lang) => {\r\n            const value = options.codeBlockRenderer(lang, code);\r\n            // when code-block rendering is async we return sync\r\n            // but update the node with the real result later.\r\n            const id = defaultGenerator.nextId();\r\n            const promise = Promise.all([value, withInnerHTML]).then(values => {\r\n                const span = element.querySelector(`div[data-code=\"${id}\"]`);\r\n                if (span) {\r\n                    DOM.reset(span, values[0]);\r\n                }\r\n            }).catch(_err => {\r\n                // ignore\r\n            });\r\n            if (options.asyncRenderCallback) {\r\n                promise.then(options.asyncRenderCallback);\r\n            }\r\n            return `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\r\n        };\r\n    }\r\n    if (options.actionHandler) {\r\n        const onClick = options.actionHandler.disposables.add(new DomEmitter(element, 'click'));\r\n        const onAuxClick = options.actionHandler.disposables.add(new DomEmitter(element, 'auxclick'));\r\n        options.actionHandler.disposables.add(Event.any(onClick.event, onAuxClick.event)(e => {\r\n            const mouseEvent = new StandardMouseEvent(e);\r\n            if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\r\n                return;\r\n            }\r\n            let target = mouseEvent.target;\r\n            if (target.tagName !== 'A') {\r\n                target = target.parentElement;\r\n                if (!target || target.tagName !== 'A') {\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                const href = target.dataset['href'];\r\n                if (href) {\r\n                    options.actionHandler.callback(href, mouseEvent);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                mouseEvent.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    // Use our own sanitizer so that we can let through only spans.\r\n    // Otherwise, we'd be letting all html be rendered.\r\n    // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\r\n    // We always pass the output through insane after this so that we don't rely on\r\n    // marked for sanitization.\r\n    markedOptions.sanitizer = (html) => {\r\n        const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\r\n        return match ? html : '';\r\n    };\r\n    markedOptions.sanitize = true;\r\n    markedOptions.silent = true;\r\n    markedOptions.renderer = renderer;\r\n    // values that are too long will freeze the UI\r\n    let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\r\n    if (value.length > 100000) {\r\n        value = `${value.substr(0, 100000)}…`;\r\n    }\r\n    // escape theme icons\r\n    if (markdown.supportThemeIcons) {\r\n        value = markdownEscapeEscapedIcons(value);\r\n    }\r\n    const renderedMarkdown = marked.parse(value, markedOptions);\r\n    // sanitize with insane\r\n    element.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown);\r\n    // signal that async code blocks can be now be inserted\r\n    signalInnerHTML();\r\n    // signal size changes for image tags\r\n    if (options.asyncRenderCallback) {\r\n        for (const img of element.getElementsByTagName('img')) {\r\n            const listener = DOM.addDisposableListener(img, 'load', () => {\r\n                listener.dispose();\r\n                options.asyncRenderCallback();\r\n            });\r\n        }\r\n    }\r\n    return element;\r\n}\r\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\r\n    var _a;\r\n    const insaneOptions = getInsaneOptions(options);\r\n    return (_a = _ttpInsane === null || _ttpInsane === void 0 ? void 0 : _ttpInsane.createHTML(renderedMarkdown, insaneOptions)) !== null && _a !== void 0 ? _a : insane(renderedMarkdown, insaneOptions);\r\n}\r\nfunction getInsaneOptions(options) {\r\n    const allowedSchemes = [\r\n        Schemas.http,\r\n        Schemas.https,\r\n        Schemas.mailto,\r\n        Schemas.data,\r\n        Schemas.file,\r\n        Schemas.vscodeFileResource,\r\n        Schemas.vscodeRemote,\r\n        Schemas.vscodeRemoteResource,\r\n    ];\r\n    if (options.isTrusted) {\r\n        allowedSchemes.push(Schemas.command);\r\n    }\r\n    return {\r\n        allowedSchemes,\r\n        // allowedTags should included everything that markdown renders to.\r\n        // Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\r\n        // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\r\n        // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\r\n        allowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\r\n        allowedAttributes: {\r\n            'a': ['href', 'name', 'target', 'data-href'],\r\n            'img': ['src', 'title', 'alt', 'width', 'height'],\r\n            'div': ['class', 'data-code'],\r\n            'span': ['class', 'style'],\r\n            // https://github.com/microsoft/vscode/issues/95937\r\n            'th': ['align'],\r\n            'td': ['align']\r\n        },\r\n        filter(token) {\r\n            if (token.tag === 'span' && options.isTrusted) {\r\n                if (token.attrs['style'] && (Object.keys(token.attrs).length === 1)) {\r\n                    return !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\r\n                }\r\n                else if (token.attrs['class']) {\r\n                    // The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\r\n                    return !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a;\r\nimport { renderMarkdown } from '../../../base/browser/markdownRenderer.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { tokenizeToString } from '../../common/modes/textToHtmlTokenizer.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\n/**\r\n * Markdown renderer that can render codeblocks with the editor mechanics. This\r\n * renderer should always be preferred.\r\n */\r\nlet MarkdownRenderer = class MarkdownRenderer {\r\n    constructor(_options, _modeService, _openerService) {\r\n        this._options = _options;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._onDidRenderAsync = new Emitter();\r\n        this.onDidRenderAsync = this._onDidRenderAsync.event;\r\n    }\r\n    dispose() {\r\n        this._onDidRenderAsync.dispose();\r\n    }\r\n    render(markdown, options, markedOptions) {\r\n        const disposables = new DisposableStore();\r\n        let element;\r\n        if (!markdown) {\r\n            element = document.createElement('span');\r\n        }\r\n        else {\r\n            element = renderMarkdown(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions);\r\n        }\r\n        return {\r\n            element,\r\n            dispose: () => disposables.dispose()\r\n        };\r\n    }\r\n    _getRenderOptions(markdown, disposeables) {\r\n        return {\r\n            baseUrl: this._options.baseUrl,\r\n            codeBlockRenderer: (languageAlias, value) => __awaiter(this, void 0, void 0, function* () {\r\n                var _a, _b, _c, _d;\r\n                // In markdown,\r\n                // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\r\n                // it is possible no alias is given in which case we fall back to the current editor lang\r\n                let modeId;\r\n                if (languageAlias) {\r\n                    modeId = this._modeService.getModeIdForLanguageName(languageAlias);\r\n                }\r\n                else if (this._options.editor) {\r\n                    modeId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageIdentifier().language;\r\n                }\r\n                if (!modeId) {\r\n                    modeId = 'plaintext';\r\n                }\r\n                this._modeService.triggerMode(modeId);\r\n                const tokenization = (_b = yield TokenizationRegistry.getPromise(modeId)) !== null && _b !== void 0 ? _b : undefined;\r\n                const element = document.createElement('span');\r\n                element.innerHTML = ((_d = (_c = MarkdownRenderer._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, tokenization)) !== null && _d !== void 0 ? _d : tokenizeToString(value, tokenization));\r\n                // use \"good\" font\r\n                let fontFamily = this._options.codeBlockFontFamily;\r\n                if (this._options.editor) {\r\n                    fontFamily = this._options.editor.getOption(42 /* fontInfo */).fontFamily;\r\n                }\r\n                if (fontFamily) {\r\n                    element.style.fontFamily = fontFamily;\r\n                }\r\n                return element;\r\n            }),\r\n            asyncRenderCallback: () => this._onDidRenderAsync.fire(),\r\n            actionHandler: {\r\n                callback: (content) => this._openerService.open(content, { fromUserGesture: true, allowContributedOpeners: true, allowCommands: markdown.isTrusted }).catch(onUnexpectedError),\r\n                disposables: disposeables\r\n            }\r\n        };\r\n    }\r\n};\r\nMarkdownRenderer._ttpTokenizer = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('tokenizeToString', {\r\n    createHTML(value, tokenizer) {\r\n        return tokenizeToString(value, tokenizer);\r\n    }\r\n});\r\nMarkdownRenderer = __decorate([\r\n    __param(1, IModeService),\r\n    __param(2, IOpenerService)\r\n], MarkdownRenderer);\r\nexport { MarkdownRenderer };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { HoverProviderRegistry } from '../../common/modes.js';\r\nexport function getHover(model, position, token) {\r\n    const supports = HoverProviderRegistry.ordered(model);\r\n    const promises = supports.map(support => {\r\n        return Promise.resolve(support.provideHover(model, position, token)).then(hover => {\r\n            return hover && isValid(hover) ? hover : undefined;\r\n        }, err => {\r\n            onUnexpectedExternalError(err);\r\n            return undefined;\r\n        });\r\n    });\r\n    return Promise.all(promises).then(coalesce);\r\n}\r\nregisterModelAndPositionCommand('_executeHoverProvider', (model, position) => getHover(model, position, CancellationToken.None));\r\nfunction isValid(result) {\r\n    const hasRange = (typeof result.range !== 'undefined');\r\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\r\n    return hasRange && hasHtmlContent;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { MarkdownString, isEmptyMarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { asArray } from '../../../base/common/arrays.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { HoverProviderRegistry } from '../../common/modes.js';\r\nimport { getHover } from './getHover.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst $ = dom.$;\r\nexport class MarkdownHover {\r\n    constructor(owner, range, contents) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.contents = contents;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\r\n    constructor(_editor, _hover, _modeService, _openerService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._configurationService = _configurationService;\r\n    }\r\n    createLoadingMessage(anchor) {\r\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))]);\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const result = [];\r\n        for (const d of lineDecorations) {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            const hoverMessage = d.options.hoverMessage;\r\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\r\n                continue;\r\n            }\r\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\r\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage)));\r\n        }\r\n        const lineLength = this._editor.getModel().getLineLength(lineNumber);\r\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength');\r\n        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\r\n            result.push(new MarkdownHover(this, new Range(lineNumber, 1, lineNumber, lineLength + 1), [{\r\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\r\n                }]));\r\n        }\r\n        return result;\r\n    }\r\n    computeAsync(anchor, lineDecorations, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const model = this._editor.getModel();\r\n            if (!HoverProviderRegistry.has(model)) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const hovers = yield getHover(model, new Position(anchor.range.startLineNumber, anchor.range.startColumn), token);\r\n            const result = [];\r\n            for (const hover of hovers) {\r\n                if (isEmptyMarkdownString(hover.contents)) {\r\n                    continue;\r\n                }\r\n                const rng = hover.range ? Range.lift(hover.range) : anchor.range;\r\n                result.push(new MarkdownHover(this, rng, hover.contents));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        const disposables = new DisposableStore();\r\n        for (const hoverPart of hoverParts) {\r\n            for (const contents of hoverPart.contents) {\r\n                if (isEmptyMarkdownString(contents)) {\r\n                    continue;\r\n                }\r\n                const markdownHoverElement = $('div.hover-row.markdown-hover');\r\n                const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\r\n                const renderer = disposables.add(new MarkdownRenderer({ editor: this._editor }, this._modeService, this._openerService));\r\n                disposables.add(renderer.onDidRenderAsync(() => {\r\n                    hoverContentsElement.className = 'hover-contents code-hover-contents';\r\n                    this._hover.onContentsChanged();\r\n                }));\r\n                const renderedContents = disposables.add(renderer.render(contents));\r\n                hoverContentsElement.appendChild(renderedContents.element);\r\n                fragment.appendChild(markdownHoverElement);\r\n            }\r\n        }\r\n        return disposables;\r\n    }\r\n};\r\nMarkdownHoverParticipant = __decorate([\r\n    __param(2, IModeService),\r\n    __param(3, IOpenerService),\r\n    __param(4, IConfigurationService)\r\n], MarkdownHoverParticipant);\r\nexport { MarkdownHoverParticipant };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class HoverRangeAnchor {\r\n    constructor(priority, range) {\r\n        this.priority = priority;\r\n        this.range = range;\r\n        this.type = 1 /* Range */;\r\n    }\r\n    equals(other) {\r\n        return (other.type === 1 /* Range */ && this.range.equalsRange(other.range));\r\n    }\r\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\r\n        return (lastAnchor.type === 1 /* Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\r\n    }\r\n}\r\nexport class HoverForeignElementAnchor {\r\n    constructor(priority, owner, range) {\r\n        this.priority = priority;\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.type = 2 /* ForeignElement */;\r\n    }\r\n    equals(other) {\r\n        return (other.type === 2 /* ForeignElement */ && this.owner === other.owner);\r\n    }\r\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\r\n        return (lastAnchor.type === 2 /* ForeignElement */ && this.owner === lastAnchor.owner);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './ghostText.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport { Configuration } from '../../browser/config/configuration.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { ghostTextBorder, ghostTextForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { RGBA, Color } from '../../../base/common/color.js';\r\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\r\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\r\n    constructor(editor, model, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.model = model;\r\n        this.instantiationService = instantiationService;\r\n        this.disposed = false;\r\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\r\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor));\r\n        this.viewMoreContentWidget = undefined;\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(28 /* disableMonospaceOptimizations */)\r\n                || e.hasChanged(105 /* stopRenderingLineAfter */)\r\n                || e.hasChanged(88 /* renderWhitespace */)\r\n                || e.hasChanged(82 /* renderControlCharacters */)\r\n                || e.hasChanged(43 /* fontLigatures */)\r\n                || e.hasChanged(42 /* fontInfo */)\r\n                || e.hasChanged(58 /* lineHeight */)) {\r\n                this.update();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            var _a;\r\n            this.disposed = true;\r\n            this.update();\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }));\r\n        this._register(model.onDidChange(() => {\r\n            this.update();\r\n        }));\r\n        this.update();\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\r\n    }\r\n    update() {\r\n        var _a;\r\n        const ghostText = this.model.ghostText;\r\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\r\n            this.partsWidget.clear();\r\n            this.additionalLinesWidget.clear();\r\n            return;\r\n        }\r\n        const inlineTexts = new Array();\r\n        const additionalLines = new Array();\r\n        function addToAdditionalLines(lines, className) {\r\n            if (additionalLines.length > 0) {\r\n                const lastLine = additionalLines[additionalLines.length - 1];\r\n                if (className) {\r\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\r\n                }\r\n                lastLine.content += lines[0];\r\n                lines = lines.slice(1);\r\n            }\r\n            for (const line of lines) {\r\n                additionalLines.push({\r\n                    content: line,\r\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\r\n                });\r\n            }\r\n        }\r\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\r\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\r\n        let hiddenTextStartColumn = undefined;\r\n        let lastIdx = 0;\r\n        for (const part of ghostText.parts) {\r\n            let lines = part.lines;\r\n            if (hiddenTextStartColumn === undefined) {\r\n                inlineTexts.push({\r\n                    column: part.column,\r\n                    text: lines[0],\r\n                    preview: part.preview,\r\n                });\r\n                lines = lines.slice(1);\r\n            }\r\n            else {\r\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\r\n            }\r\n            if (lines.length > 0) {\r\n                addToAdditionalLines(lines, 'ghost-text');\r\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\r\n                    hiddenTextStartColumn = part.column;\r\n                }\r\n            }\r\n            lastIdx = part.column - 1;\r\n        }\r\n        if (hiddenTextStartColumn !== undefined) {\r\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\r\n        }\r\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\r\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\r\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\r\n            // Not supported at the moment, condition is always false.\r\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\r\n        }\r\n        else {\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }\r\n    }\r\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\r\n        const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'suggest-preview-additional-widget';\r\n        Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n        const spacer = document.createElement('span');\r\n        spacer.className = 'content-spacer';\r\n        spacer.append(firstLineText);\r\n        domNode.append(spacer);\r\n        const newline = document.createElement('span');\r\n        newline.className = 'content-newline suggest-preview-text';\r\n        newline.append('⏎  ');\r\n        domNode.append(newline);\r\n        const disposableStore = new DisposableStore();\r\n        const button = document.createElement('div');\r\n        button.className = 'button suggest-preview-text';\r\n        button.append(`+${remainingLinesLength} lines…`);\r\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\r\n            var _a;\r\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\r\n            e.preventDefault();\r\n            this.editor.focus();\r\n        }));\r\n        domNode.append(button);\r\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\r\n    }\r\n};\r\nGhostTextWidget = __decorate([\r\n    __param(2, IInstantiationService)\r\n], GhostTextWidget);\r\nexport { GhostTextWidget };\r\nlet DecorationsWidget = class DecorationsWidget {\r\n    constructor(editor, codeEditorService, themeService, contextKeyService) {\r\n        this.editor = editor;\r\n        this.codeEditorService = codeEditorService;\r\n        this.themeService = themeService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.decorationIds = [];\r\n        this.disposableStore = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this.clear();\r\n        this.disposableStore.dispose();\r\n    }\r\n    clear() {\r\n        this.editor.deltaDecorations(this.decorationIds, []);\r\n        this.disposableStore.clear();\r\n    }\r\n    setParts(lineNumber, parts, hiddenText) {\r\n        this.disposableStore.clear();\r\n        const colorTheme = this.themeService.getColorTheme();\r\n        const foreground = colorTheme.getColor(ghostTextForeground);\r\n        let opacity = undefined;\r\n        let color = undefined;\r\n        if (foreground) {\r\n            opacity = String(foreground.rgba.a);\r\n            color = Color.Format.CSS.format(opaque(foreground));\r\n        }\r\n        const borderColor = colorTheme.getColor(ghostTextBorder);\r\n        let border = undefined;\r\n        if (borderColor) {\r\n            border = `2px dashed ${borderColor}`;\r\n        }\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        const line = textModel.getLineContent(lineNumber) || '';\r\n        let lastIndex = 0;\r\n        let currentLinePrefix = '';\r\n        const hiddenTextDecorations = new Array();\r\n        if (hiddenText) {\r\n            hiddenTextDecorations.push({\r\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\r\n                options: {\r\n                    inlineClassName: 'ghost-text-hidden',\r\n                    description: 'ghost-text-hidden'\r\n                }\r\n            });\r\n        }\r\n        const key = this.contextKeyService.getContextKeyValue('config.editor.useInjectedText');\r\n        const shouldUseInjectedText = key === undefined ? true : !!key;\r\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\r\n            currentLinePrefix += line.substring(lastIndex, p.column - 1);\r\n            lastIndex = p.column - 1;\r\n            // To avoid visual confusion, we don't want to render visible whitespace\r\n            const contentText = shouldUseInjectedText ? p.text : this.renderSingleLineText(p.text, currentLinePrefix, tabSize, false);\r\n            const decorationType = this.disposableStore.add(registerDecorationType(this.codeEditorService, 'ghost-text', '0-ghost-text-', {\r\n                after: {\r\n                    // TODO: escape?\r\n                    contentText,\r\n                    opacity,\r\n                    color,\r\n                    border,\r\n                    fontWeight: p.preview ? 'bold' : 'normal',\r\n                },\r\n            }));\r\n            return ({\r\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\r\n                options: shouldUseInjectedText ? {\r\n                    description: 'ghost-text',\r\n                    after: { content: contentText, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration' }\r\n                } : Object.assign({}, decorationType.resolve())\r\n            });\r\n        }).concat(hiddenTextDecorations));\r\n    }\r\n    renderSingleLineText(text, lineStart, tabSize, renderWhitespace) {\r\n        const newLine = lineStart + text;\r\n        const visibleColumnsByColumns = CursorColumns.visibleColumnsByColumns(newLine, tabSize);\r\n        let contentText = '';\r\n        let curCol = lineStart.length + 1;\r\n        for (const c of text) {\r\n            if (c === '\\t') {\r\n                const width = visibleColumnsByColumns[curCol + 1] - visibleColumnsByColumns[curCol];\r\n                if (renderWhitespace) {\r\n                    contentText += '→';\r\n                    for (let i = 1; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n            }\r\n            else if (c === ' ') {\r\n                if (renderWhitespace) {\r\n                    contentText += '·';\r\n                }\r\n                else {\r\n                    contentText += '\\xa0';\r\n                }\r\n            }\r\n            else {\r\n                contentText += c;\r\n            }\r\n            curCol += 1;\r\n        }\r\n        return contentText;\r\n    }\r\n};\r\nDecorationsWidget = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService),\r\n    __param(3, IContextKeyService)\r\n], DecorationsWidget);\r\nfunction opaque(color) {\r\n    const { r, b, g } = color.rgba;\r\n    return new Color(new RGBA(r, g, b, 255));\r\n}\r\nclass AdditionalLinesWidget {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this._viewZoneId = undefined;\r\n    }\r\n    get viewZoneId() { return this._viewZoneId; }\r\n    dispose() {\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n        });\r\n    }\r\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\r\n            if (heightInLines > 0) {\r\n                const domNode = document.createElement('div');\r\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions());\r\n                this._viewZoneId = changeAccessor.addZone({\r\n                    afterLineNumber: lineNumber,\r\n                    heightInLines: heightInLines,\r\n                    domNode,\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction renderLines(domNode, tabSize, lines, opts) {\r\n    const disableMonospaceOptimizations = opts.get(28 /* disableMonospaceOptimizations */);\r\n    const stopRenderingLineAfter = opts.get(105 /* stopRenderingLineAfter */);\r\n    // To avoid visual confusion, we don't want to render visible whitespace\r\n    const renderWhitespace = 'none';\r\n    const renderControlCharacters = opts.get(82 /* renderControlCharacters */);\r\n    const fontLigatures = opts.get(43 /* fontLigatures */);\r\n    const fontInfo = opts.get(42 /* fontInfo */);\r\n    const lineHeight = opts.get(58 /* lineHeight */);\r\n    const sb = createStringBuilder(10000);\r\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\r\n    for (let i = 0, len = lines.length; i < len; i++) {\r\n        const lineData = lines[i];\r\n        const line = lineData.content;\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(i * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = strings.isBasicASCII(line);\r\n        const containsRTL = strings.containsRTL(line);\r\n        const lineTokens = LineTokens.createEmpty(line);\r\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\r\n        sb.appendASCIIString('</div>');\r\n    }\r\n    sb.appendASCIIString('</div>');\r\n    Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n    const html = sb.build();\r\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n    domNode.innerHTML = trustedhtml;\r\n}\r\nlet keyCounter = 0;\r\nfunction registerDecorationType(service, description, keyPrefix, options) {\r\n    const key = keyPrefix + (keyCounter++);\r\n    service.registerDecorationType(description, key, options);\r\n    return {\r\n        dispose() {\r\n            service.removeDecorationType(key);\r\n        },\r\n        resolve() {\r\n            return service.resolveDecorationOptions(key, true);\r\n        }\r\n    };\r\n}\r\nclass ViewMoreLinesContentWidget extends Disposable {\r\n    constructor(editor, position, domNode, disposableStore) {\r\n        super();\r\n        this.editor = editor;\r\n        this.position = position;\r\n        this.domNode = domNode;\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = false;\r\n        this._register(disposableStore);\r\n        this._register(toDisposable(() => {\r\n            this.editor.removeContentWidget(this);\r\n        }));\r\n        this.editor.addContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'editor.widget.viewMoreLinesWidget';\r\n    }\r\n    getDomNode() {\r\n        return this.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this.position,\r\n            preference: [0 /* EXACT */]\r\n        };\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foreground = theme.getColor(ghostTextForeground);\r\n    if (foreground) {\r\n        const opacity = String(foreground.rgba.a);\r\n        const color = Color.Format.CSS.format(opaque(foreground));\r\n        collector.addRule(`.monaco-editor .ghost-text-decoration { opacity: ${opacity}; color: ${color}; }`);\r\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()}; }`);\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { opacity: ${opacity}; color: ${color}; }`);\r\n    }\r\n    const border = theme.getColor(ghostTextBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 2px dashed ${border}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class GhostText {\r\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\r\n        this.lineNumber = lineNumber;\r\n        this.parts = parts;\r\n        this.additionalReservedLineCount = additionalReservedLineCount;\r\n    }\r\n    renderForScreenReader(lineText) {\r\n        if (this.parts.length === 0) {\r\n            return '';\r\n        }\r\n        const lastPart = this.parts[this.parts.length - 1];\r\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\r\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\r\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\r\n            text: p.lines.join('\\n')\r\n        })));\r\n        return text.substring(this.parts[0].column - 1);\r\n    }\r\n}\r\nclass PositionOffsetTransformer {\r\n    constructor(text) {\r\n        this.lineStartOffsetByLineIdx = [];\r\n        this.lineStartOffsetByLineIdx.push(0);\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text.charAt(i) === '\\n') {\r\n                this.lineStartOffsetByLineIdx.push(i + 1);\r\n            }\r\n        }\r\n    }\r\n    getOffset(position) {\r\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\r\n    }\r\n}\r\nfunction applyEdits(text, edits) {\r\n    const transformer = new PositionOffsetTransformer(text);\r\n    const offsetEdits = edits.map(e => {\r\n        const range = Range.lift(e.range);\r\n        return ({\r\n            startOffset: transformer.getOffset(range.getStartPosition()),\r\n            endOffset: transformer.getOffset(range.getEndPosition()),\r\n            text: e.text\r\n        });\r\n    });\r\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\r\n    for (const edit of offsetEdits) {\r\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\r\n    }\r\n    return text;\r\n}\r\nexport class GhostTextPart {\r\n    constructor(column, lines, \r\n    /**\r\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\r\n    */\r\n    preview) {\r\n        this.column = column;\r\n        this.lines = lines;\r\n        this.preview = preview;\r\n    }\r\n}\r\nexport class BaseGhostTextWidgetModel extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._expanded = undefined;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(106 /* suggest */) && this._expanded === undefined) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n    }\r\n    setExpanded(expanded) {\r\n        this._expanded = true;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport { GhostText, GhostTextPart } from './ghostText.js';\r\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\r\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\r\n        // Only single line replacements are supported.\r\n        return undefined;\r\n    }\r\n    const modifiedLength = inlineCompletion.text.length;\r\n    const previewStartInModified = modifiedLength - previewSuffixLength;\r\n    // This is a single line string\r\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\r\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.text);\r\n    const lineNumber = inlineCompletion.range.startLineNumber;\r\n    const parts = new Array();\r\n    if (mode === 'prefix') {\r\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\r\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\r\n            // Prefixes only have a single change.\r\n            return undefined;\r\n        }\r\n    }\r\n    for (const c of changes) {\r\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\r\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\r\n            // No ghost text before cursor\r\n            return undefined;\r\n        }\r\n        if (c.originalLength > 0) {\r\n            const originalText = valueToBeReplaced.substr(c.originalStart, c.originalLength);\r\n            const firstNonWsCol = textModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n            if (!(/^(\\t| )*$/.test(originalText) && (firstNonWsCol === 0 || insertColumn <= firstNonWsCol))) {\r\n                return undefined;\r\n            }\r\n        }\r\n        if (c.modifiedLength === 0) {\r\n            continue;\r\n        }\r\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\r\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInModified));\r\n        const nonPreviewText = inlineCompletion.text.substring(c.modifiedStart, nonPreviewTextEnd);\r\n        const italicText = inlineCompletion.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\r\n        if (nonPreviewText.length > 0) {\r\n            const lines = strings.splitLines(nonPreviewText);\r\n            parts.push(new GhostTextPart(insertColumn, lines, false));\r\n        }\r\n        if (italicText.length > 0) {\r\n            const lines = strings.splitLines(italicText);\r\n            parts.push(new GhostTextPart(insertColumn, lines, true));\r\n        }\r\n    }\r\n    return new GhostText(lineNumber, parts, 0);\r\n}\r\nlet lastRequest = undefined;\r\nfunction cachingDiff(originalValue, newValue) {\r\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\r\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\r\n    }\r\n    else {\r\n        const changes = smartDiff(originalValue, newValue);\r\n        lastRequest = {\r\n            originalValue,\r\n            newValue,\r\n            changes\r\n        };\r\n        return changes;\r\n    }\r\n}\r\n/**\r\n * When matching `if ()` with `if (f() = 1) { g(); }`,\r\n * align it like this:        `if (       )`\r\n * Not like this:\t\t\t  `if (  )`\r\n * Also not like this:\t\t  `if (             )`.\r\n *\r\n * The parenthesis are preprocessed to ensure that they match correctly.\r\n */\r\nfunction smartDiff(originalValue, newValue) {\r\n    function getMaxCharCode(val) {\r\n        let maxCharCode = 0;\r\n        for (let i = 0, len = val.length; i < len; i++) {\r\n            const charCode = val.charCodeAt(i);\r\n            if (charCode > maxCharCode) {\r\n                maxCharCode = charCode;\r\n            }\r\n        }\r\n        return maxCharCode;\r\n    }\r\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\r\n    function getUniqueCharCode(id) {\r\n        if (id < 0) {\r\n            throw new Error('unexpected');\r\n        }\r\n        return maxCharCode + id + 1;\r\n    }\r\n    function getElements(source) {\r\n        let level = 0;\r\n        let group = 0;\r\n        const characters = new Int32Array(source.length);\r\n        for (let i = 0, len = source.length; i < len; i++) {\r\n            const id = group * 100 + level;\r\n            // TODO support more brackets\r\n            if (source[i] === '(') {\r\n                characters[i] = getUniqueCharCode(2 * id);\r\n                level++;\r\n            }\r\n            else if (source[i] === ')') {\r\n                characters[i] = getUniqueCharCode(2 * id + 1);\r\n                if (level === 1) {\r\n                    group++;\r\n                }\r\n                level = Math.max(level - 1, 0);\r\n            }\r\n            else {\r\n                characters[i] = source.charCodeAt(i);\r\n            }\r\n        }\r\n        return characters;\r\n    }\r\n    const elements1 = getElements(originalValue);\r\n    const elements2 = getElements(newValue);\r\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { InlineCompletionsProviderRegistry, InlineCompletionTriggerKind } from '../../common/modes.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { RedoCommand, UndoCommand } from '../../browser/editorExtensions.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { BaseGhostTextWidgetModel } from './ghostText.js';\r\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\r\nimport { inlineSuggestCommitId } from './consts.js';\r\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\r\n    constructor(editor, cache, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.cache = cache;\r\n        this.commandService = commandService;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.completionSession = this._register(new MutableDisposable());\r\n        this.active = false;\r\n        this.disposed = false;\r\n        this._register(commandService.onDidExecuteCommand(e => {\r\n            // These commands don't trigger onDidType.\r\n            const commands = new Set([\r\n                UndoCommand.id,\r\n                RedoCommand.id,\r\n                CoreEditingCommands.Tab.id,\r\n                CoreEditingCommands.DeleteLeft.id,\r\n                CoreEditingCommands.DeleteRight.id,\r\n                inlineSuggestCommitId,\r\n                'acceptSelectedSuggestion'\r\n            ]);\r\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\r\n                this.handleUserInput();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidType((e) => {\r\n            this.handleUserInput();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.session && !this.session.isValid) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            this.disposed = true;\r\n        }));\r\n    }\r\n    handleUserInput() {\r\n        if (this.session && !this.session.isValid) {\r\n            this.hide();\r\n        }\r\n        setTimeout(() => {\r\n            if (this.disposed) {\r\n                return;\r\n            }\r\n            // Wait for the cursor update that happens in the same iteration loop iteration\r\n            this.startSessionIfTriggered();\r\n        }, 0);\r\n    }\r\n    get session() {\r\n        return this.completionSession.value;\r\n    }\r\n    get ghostText() {\r\n        var _a;\r\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.session ? this.session.minReservedLineCount : 0;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    setActive(active) {\r\n        var _a;\r\n        this.active = active;\r\n        if (active) {\r\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\r\n        }\r\n    }\r\n    startSessionIfTriggered() {\r\n        const suggestOptions = this.editor.getOption(54 /* inlineSuggest */);\r\n        if (!suggestOptions.enabled) {\r\n            return;\r\n        }\r\n        if (this.session && this.session.isValid) {\r\n            return;\r\n        }\r\n        this.trigger(InlineCompletionTriggerKind.Automatic);\r\n    }\r\n    trigger(triggerKind) {\r\n        if (this.completionSession.value) {\r\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\r\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\r\n            }\r\n            return;\r\n        }\r\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind);\r\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n    }\r\n    hide() {\r\n        this.completionSession.clear();\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    commitCurrentSuggestion() {\r\n        var _a;\r\n        // Don't dispose the session, so that after committing, more suggestions are shown.\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\r\n    }\r\n    showNext() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPrevious() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nInlineCompletionsModel = __decorate([\r\n    __param(2, ICommandService)\r\n], InlineCompletionsModel);\r\nexport { InlineCompletionsModel };\r\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\r\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind) {\r\n        super(editor);\r\n        this.triggerPosition = triggerPosition;\r\n        this.shouldUpdate = shouldUpdate;\r\n        this.commandService = commandService;\r\n        this.cache = cache;\r\n        this.initialTriggerKind = initialTriggerKind;\r\n        this.minReservedLineCount = 0;\r\n        this.updateOperation = this._register(new MutableDisposable());\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\r\n            let triggerKind = this.initialTriggerKind;\r\n            // All subsequent triggers are automatic.\r\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\r\n            return this.update(triggerKind);\r\n        }, 50));\r\n        //#region Selection\r\n        // We use a semantic id to track the selection even if the cache changes.\r\n        this.currentlySelectedCompletionId = undefined;\r\n        let lastCompletionItem = undefined;\r\n        this._register(this.onDidChange(() => {\r\n            const currentCompletion = this.currentCompletion;\r\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\r\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\r\n                const provider = currentCompletion.sourceProvider;\r\n                if (provider.handleItemDidShow) {\r\n                    provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);\r\n                }\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            this.cache.clear();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.cache.value) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidChangeModelContent((e) => {\r\n            this.scheduleAutomaticUpdate();\r\n        }));\r\n        this._register(InlineCompletionsProviderRegistry.onDidChange(() => {\r\n            this.updateSoon.schedule();\r\n        }));\r\n        this.scheduleAutomaticUpdate();\r\n    }\r\n    fixAndGetIndexOfCurrentSelection() {\r\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\r\n            return 0;\r\n        }\r\n        if (this.cache.value.completions.length === 0) {\r\n            // don't reset the selection in this case\r\n            return 0;\r\n        }\r\n        const idx = this.cache.value.completions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\r\n        if (idx === -1) {\r\n            // Reset the selection so that the selection does not jump back when it appears again\r\n            this.currentlySelectedCompletionId = undefined;\r\n            return 0;\r\n        }\r\n        return idx;\r\n    }\r\n    get currentCachedCompletion() {\r\n        if (!this.cache.value) {\r\n            return undefined;\r\n        }\r\n        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    ensureUpdateWithExplicitContext() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.updateOperation.value) {\r\n                // Restart or wait for current update operation\r\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\r\n                    yield this.updateOperation.value.promise;\r\n                }\r\n                else {\r\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\r\n                }\r\n            }\r\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\r\n                // Refresh cache\r\n                yield this.update(InlineCompletionTriggerKind.Explicit);\r\n            }\r\n        });\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\r\n        });\r\n    }\r\n    //#endregion\r\n    get ghostText() {\r\n        const currentCompletion = this.currentCompletion;\r\n        const mode = this.editor.getOptions().get(54 /* inlineSuggest */).mode;\r\n        return currentCompletion ? inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, this.editor.getPosition()) : undefined;\r\n    }\r\n    get currentCompletion() {\r\n        const completion = this.currentCachedCompletion;\r\n        if (!completion) {\r\n            return undefined;\r\n        }\r\n        return completion.toLiveInlineCompletion();\r\n    }\r\n    get isValid() {\r\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\r\n    }\r\n    scheduleAutomaticUpdate() {\r\n        // Since updateSoon debounces, starvation can happen.\r\n        // To prevent stale cache, we clear the current update operation.\r\n        this.updateOperation.clear();\r\n        this.updateSoon.schedule();\r\n    }\r\n    update(triggerKind) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.shouldUpdate()) {\r\n                return;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                let result;\r\n                try {\r\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token);\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                    return;\r\n                }\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                this.cache.setValue(this.editor, result, triggerKind);\r\n                this.onDidChangeEmitter.fire();\r\n            }));\r\n            const operation = new UpdateOperation(promise, triggerKind);\r\n            this.updateOperation.value = operation;\r\n            yield promise;\r\n            if (this.updateOperation.value === operation) {\r\n                this.updateOperation.clear();\r\n            }\r\n        });\r\n    }\r\n    takeOwnership(disposable) {\r\n        this._register(disposable);\r\n    }\r\n    commitCurrentCompletion() {\r\n        if (!this.ghostText) {\r\n            // No ghost text was shown for this completion.\r\n            // Thus, we don't want to commit anything.\r\n            return;\r\n        }\r\n        const completion = this.currentCompletion;\r\n        if (completion) {\r\n            this.commit(completion);\r\n        }\r\n    }\r\n    commit(completion) {\r\n        // Mark the cache as stale, but don't dispose it yet,\r\n        // otherwise command args might get disposed.\r\n        const cache = this.cache.clearAndLeak();\r\n        this.editor.executeEdits('inlineSuggestion.accept', [\r\n            EditOperation.replaceMove(completion.range, completion.text)\r\n        ]);\r\n        if (completion.command) {\r\n            this.commandService\r\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\r\n                .finally(() => {\r\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n            })\r\n                .then(undefined, onUnexpectedExternalError);\r\n        }\r\n        else {\r\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n        }\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\nexport class UpdateOperation {\r\n    constructor(promise, triggerKind) {\r\n        this.promise = promise;\r\n        this.triggerKind = triggerKind;\r\n    }\r\n    dispose() {\r\n        this.promise.cancel();\r\n    }\r\n}\r\n/**\r\n * The cache keeps itself in sync with the editor.\r\n * It also owns the completions result and disposes it when the cache is diposed.\r\n*/\r\nexport class SynchronizedInlineCompletionsCache extends Disposable {\r\n    constructor(editor, completionsSource, onChange, triggerKind) {\r\n        super();\r\n        this.triggerKind = triggerKind;\r\n        const decorationIds = editor.deltaDecorations([], completionsSource.items.map(i => ({\r\n            range: i.range,\r\n            options: {\r\n                description: 'inline-completion-tracking-range'\r\n            },\r\n        })));\r\n        this._register(toDisposable(() => {\r\n            editor.deltaDecorations(decorationIds, []);\r\n        }));\r\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            let hasChanged = false;\r\n            const model = editor.getModel();\r\n            for (const c of this.completions) {\r\n                const newRange = model.getDecorationRange(c.decorationId);\r\n                if (!newRange) {\r\n                    onUnexpectedError(new Error('Decoration has no range'));\r\n                    continue;\r\n                }\r\n                if (!c.synchronizedRange.equalsRange(newRange)) {\r\n                    hasChanged = true;\r\n                    c.synchronizedRange = newRange;\r\n                }\r\n            }\r\n            if (hasChanged) {\r\n                onChange();\r\n            }\r\n        }));\r\n        this._register(completionsSource);\r\n    }\r\n}\r\nclass CachedInlineCompletion {\r\n    constructor(inlineCompletion, decorationId) {\r\n        this.inlineCompletion = inlineCompletion;\r\n        this.decorationId = decorationId;\r\n        this.semanticId = JSON.stringify({\r\n            text: this.inlineCompletion.text,\r\n            startLine: this.inlineCompletion.range.startLineNumber,\r\n            startColumn: this.inlineCompletion.range.startColumn,\r\n            command: this.inlineCompletion.command\r\n        });\r\n        this.synchronizedRange = inlineCompletion.range;\r\n    }\r\n    toLiveInlineCompletion() {\r\n        return {\r\n            text: this.inlineCompletion.text,\r\n            range: this.synchronizedRange,\r\n            command: this.inlineCompletion.command,\r\n            sourceProvider: this.inlineCompletion.sourceProvider,\r\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\r\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\r\n        };\r\n    }\r\n}\r\nfunction getDefaultRange(position, model) {\r\n    const word = model.getWordAtPosition(position);\r\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\r\n    // By default, always replace up until the end of the current line.\r\n    // This default might be subject to change!\r\n    return word\r\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\r\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\r\n}\r\nexport function provideInlineCompletions(position, model, context, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const defaultReplaceRange = getDefaultRange(position, model);\r\n        const providers = InlineCompletionsProviderRegistry.all(model);\r\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n            const completions = yield provider.provideInlineCompletions(model, position, context, token);\r\n            return ({\r\n                completions,\r\n                provider,\r\n                dispose: () => {\r\n                    if (completions) {\r\n                        provider.freeInlineCompletions(completions);\r\n                    }\r\n                }\r\n            });\r\n        })));\r\n        const itemsByHash = new Map();\r\n        for (const result of results) {\r\n            const completions = result.completions;\r\n            if (completions) {\r\n                for (const item of completions.items.map(item => ({\r\n                    text: item.text,\r\n                    range: item.range ? Range.lift(item.range) : defaultReplaceRange,\r\n                    command: item.command,\r\n                    sourceProvider: result.provider,\r\n                    sourceInlineCompletions: completions,\r\n                    sourceInlineCompletion: item\r\n                }))) {\r\n                    if (item.range.startLineNumber !== item.range.endLineNumber) {\r\n                        // Ignore invalid ranges.\r\n                        continue;\r\n                    }\r\n                    itemsByHash.set(JSON.stringify({ text: item.text, range: item.range }), item);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            items: [...itemsByHash.values()],\r\n            dispose: () => {\r\n                for (const result of results) {\r\n                    result.dispose();\r\n                }\r\n            },\r\n        };\r\n    });\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Scanner {\r\n    constructor() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    static isDigitCharacter(ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    }\r\n    static isVariableCharacter(ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    }\r\n    text(value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    }\r\n    tokenText(token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    }\r\n    next() {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        let pos = this.pos;\r\n        let len = 0;\r\n        let ch = this.value.charCodeAt(pos);\r\n        let type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type, pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type, pos, len };\r\n    }\r\n}\r\nScanner._table = {\r\n    [36 /* DollarSign */]: 0 /* Dollar */,\r\n    [58 /* Colon */]: 1 /* Colon */,\r\n    [44 /* Comma */]: 2 /* Comma */,\r\n    [123 /* OpenCurlyBrace */]: 3 /* CurlyOpen */,\r\n    [125 /* CloseCurlyBrace */]: 4 /* CurlyClose */,\r\n    [92 /* Backslash */]: 5 /* Backslash */,\r\n    [47 /* Slash */]: 6 /* Forwardslash */,\r\n    [124 /* Pipe */]: 7 /* Pipe */,\r\n    [43 /* Plus */]: 11 /* Plus */,\r\n    [45 /* Dash */]: 12 /* Dash */,\r\n    [63 /* QuestionMark */]: 13 /* QuestionMark */,\r\n};\r\nexport class Marker {\r\n    constructor() {\r\n        this._children = [];\r\n    }\r\n    appendChild(child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    }\r\n    replace(child, others) {\r\n        const { parent } = child;\r\n        const idx = parent.children.indexOf(child);\r\n        const newChildren = parent.children.slice(0);\r\n        newChildren.splice(idx, 1, ...others);\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (const child of children) {\r\n                child.parent = parent;\r\n                _fixParent(child.children, child);\r\n            }\r\n        })(others, parent);\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get snippet() {\r\n        let candidate = this;\r\n        while (true) {\r\n            if (!candidate) {\r\n                return undefined;\r\n            }\r\n            if (candidate instanceof TextmateSnippet) {\r\n                return candidate;\r\n            }\r\n            candidate = candidate.parent;\r\n        }\r\n    }\r\n    toString() {\r\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\r\n    }\r\n    len() {\r\n        return 0;\r\n    }\r\n}\r\nexport class Text extends Marker {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    len() {\r\n        return this.value.length;\r\n    }\r\n    clone() {\r\n        return new Text(this.value);\r\n    }\r\n}\r\nexport class TransformableMarker extends Marker {\r\n}\r\nexport class Placeholder extends TransformableMarker {\r\n    constructor(index) {\r\n        super();\r\n        this.index = index;\r\n    }\r\n    static compareByIndex(a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    get isFinalTabstop() {\r\n        return this.index === 0;\r\n    }\r\n    get choice() {\r\n        return this._children.length === 1 && this._children[0] instanceof Choice\r\n            ? this._children[0]\r\n            : undefined;\r\n    }\r\n    clone() {\r\n        let ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class Choice extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.options = [];\r\n    }\r\n    appendChild(marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    }\r\n    toString() {\r\n        return this.options[0].value;\r\n    }\r\n    len() {\r\n        return this.options[0].len();\r\n    }\r\n    clone() {\r\n        let ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    }\r\n}\r\nexport class Transform extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.regexp = new RegExp('');\r\n    }\r\n    resolve(value) {\r\n        const _this = this;\r\n        let didMatch = false;\r\n        let ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    }\r\n    _replace(groups) {\r\n        let ret = '';\r\n        for (const marker of this._children) {\r\n            if (marker instanceof FormatString) {\r\n                let value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    toString() {\r\n        return '';\r\n    }\r\n    clone() {\r\n        let ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class FormatString extends Marker {\r\n    constructor(index, shorthandName, ifValue, elseValue) {\r\n        super();\r\n        this.index = index;\r\n        this.shorthandName = shorthandName;\r\n        this.ifValue = ifValue;\r\n        this.elseValue = elseValue;\r\n    }\r\n    resolve(value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (this.shorthandName === 'camelcase') {\r\n            return !value ? '' : this._toCamelCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    }\r\n    _toPascalCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(word => {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    }\r\n    _toCamelCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map((word, index) => {\r\n            if (index === 0) {\r\n                return word.toLowerCase();\r\n            }\r\n            else {\r\n                return word.charAt(0).toUpperCase()\r\n                    + word.substr(1).toLowerCase();\r\n            }\r\n        })\r\n            .join('');\r\n    }\r\n    clone() {\r\n        let ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    }\r\n}\r\nexport class Variable extends TransformableMarker {\r\n    constructor(name) {\r\n        super();\r\n        this.name = name;\r\n    }\r\n    resolve(resolver) {\r\n        let value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clone() {\r\n        const ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nfunction walk(marker, visitor) {\r\n    const stack = [...marker];\r\n    while (stack.length > 0) {\r\n        const marker = stack.shift();\r\n        const recurse = visitor(marker);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift(...marker.children);\r\n    }\r\n}\r\nexport class TextmateSnippet extends Marker {\r\n    get placeholderInfo() {\r\n        if (!this._placeholders) {\r\n            // fill in placeholders\r\n            let all = [];\r\n            let last;\r\n            this.walk(function (candidate) {\r\n                if (candidate instanceof Placeholder) {\r\n                    all.push(candidate);\r\n                    last = !last || last.index < candidate.index ? candidate : last;\r\n                }\r\n                return true;\r\n            });\r\n            this._placeholders = { all, last };\r\n        }\r\n        return this._placeholders;\r\n    }\r\n    get placeholders() {\r\n        const { all } = this.placeholderInfo;\r\n        return all;\r\n    }\r\n    offset(marker) {\r\n        let pos = 0;\r\n        let found = false;\r\n        this.walk(candidate => {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    }\r\n    fullLen(marker) {\r\n        let ret = 0;\r\n        walk([marker], marker => {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    }\r\n    enclosingPlaceholders(placeholder) {\r\n        let ret = [];\r\n        let { parent } = placeholder;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    }\r\n    resolveVariables(resolver) {\r\n        this.walk(candidate => {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    this._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    }\r\n    appendChild(child) {\r\n        this._placeholders = undefined;\r\n        return super.appendChild(child);\r\n    }\r\n    replace(child, others) {\r\n        this._placeholders = undefined;\r\n        return super.replace(child, others);\r\n    }\r\n    clone() {\r\n        let ret = new TextmateSnippet();\r\n        this._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n    walk(visitor) {\r\n        walk(this.children, visitor);\r\n    }\r\n}\r\nexport class SnippetParser {\r\n    constructor() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    static escape(value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    }\r\n    static guessNeedsClipboard(template) {\r\n        return /\\${?CLIPBOARD/.test(template);\r\n    }\r\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        const snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        const placeholderDefaultValues = new Map();\r\n        const incompletePlaceholders = [];\r\n        let placeholderCount = 0;\r\n        snippet.walk(marker => {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (const placeholder of incompletePlaceholders) {\r\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                const clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (const child of defaultValues) {\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    }\r\n    _accept(type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            let ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    }\r\n    _backTo(token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    }\r\n    _until(type) {\r\n        const start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                const nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    }\r\n    _parse(marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    }\r\n    // \\$, \\\\, \\} -> just text\r\n    _parseEscaped(marker) {\r\n        let value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // $foo -> variable, $1 -> tabstop\r\n    _parseTabstopOrVariableName(parent) {\r\n        let value;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    }\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    _parseComplexPlaceholder(parent) {\r\n        let index;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            const choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseChoiceElement(parent) {\r\n        const token = this._token;\r\n        const values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            let value;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    }\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    _parseComplexVariable(parent) {\r\n        let name;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseTransform(parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        let transform = new Transform();\r\n        let regexValue = '';\r\n        let regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    }\r\n    _parseFormatString(parent) {\r\n        const token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        let complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        let index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            let shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            let ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            let ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                let elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    }\r\n    _parseAnything(marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { URI } from '../../../base/common/uri.js';\r\nexport const WORKSPACE_EXTENSION = 'code-workspace';\r\nexport function isSingleFolderWorkspaceIdentifier(obj) {\r\n    const singleFolderIdentifier = obj;\r\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\r\n}\r\nexport function toWorkspaceIdentifier(workspace) {\r\n    // Multi root\r\n    if (workspace.configuration) {\r\n        return {\r\n            id: workspace.id,\r\n            configPath: workspace.configuration\r\n        };\r\n    }\r\n    // Single folder\r\n    if (workspace.folders.length === 1) {\r\n        return {\r\n            id: workspace.id,\r\n            uri: workspace.folders[0].uri\r\n        };\r\n    }\r\n    // Empty workspace\r\n    return undefined;\r\n}\r\n//#endregion\r\n","// prep-work\r\nconst _data = new Uint8Array(16);\r\nconst _hex = [];\r\nfor (let i = 0; i < 256; i++) {\r\n    _hex.push(i.toString(16).padStart(2, '0'));\r\n}\r\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\r\nlet _fillRandomValues;\r\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\r\n    // browser\r\n    _fillRandomValues = crypto.getRandomValues.bind(crypto);\r\n}\r\nelse {\r\n    _fillRandomValues = function (bucket) {\r\n        for (let i = 0; i < bucket.length; i++) {\r\n            bucket[i] = Math.floor(Math.random() * 256);\r\n        }\r\n        return bucket;\r\n    };\r\n}\r\nexport function generateUuid() {\r\n    // get data\r\n    _fillRandomValues(_data);\r\n    // set version bits\r\n    _data[6] = (_data[6] & 0x0f) | 0x40;\r\n    _data[8] = (_data[8] & 0x3f) | 0x80;\r\n    // print as string\r\n    let i = 0;\r\n    let result = '';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    return result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport * as path from '../../../base/common/path.js';\r\nimport { dirname } from '../../../base/common/resources.js';\r\nimport { Text } from './snippetParser.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { getLeadingWhitespace, commonPrefixLength, isFalsyOrWhitespace, splitLines } from '../../../base/common/strings.js';\r\nimport { toWorkspaceIdentifier, WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier } from '../../../platform/workspaces/common/workspaces.js';\r\nimport { normalizeDriveLetter } from '../../../base/common/labels.js';\r\nimport { generateUuid } from '../../../base/common/uuid.js';\r\nexport class CompositeSnippetVariableResolver {\r\n    constructor(_delegates) {\r\n        this._delegates = _delegates;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        for (const delegate of this._delegates) {\r\n            let value = delegate.resolve(variable);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class SelectionBasedVariableResolver {\r\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._overtypingCapturer = _overtypingCapturer;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\r\n            let value = this._model.getValueInRange(this._selection) || undefined;\r\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\r\n            // If there was no selected text, try to get last overtyped text\r\n            if (!value && this._overtypingCapturer) {\r\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\r\n                if (info) {\r\n                    value = info.value;\r\n                    isMultiline = info.multiline;\r\n                }\r\n            }\r\n            if (value && isMultiline && variable.snippet) {\r\n                // Selection is a multiline string which we indentation we now\r\n                // need to adjust. We compare the indentation of this variable\r\n                // with the indentation at the editor position and add potential\r\n                // extra indentation to the value\r\n                const line = this._model.getLineContent(this._selection.startLineNumber);\r\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\r\n                let varLeadingWhitespace = lineLeadingWhitespace;\r\n                variable.snippet.walk(marker => {\r\n                    if (marker === variable) {\r\n                        return false;\r\n                    }\r\n                    if (marker instanceof Text) {\r\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\r\n                    }\r\n                    return true;\r\n                });\r\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\r\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\r\n            }\r\n            return value;\r\n        }\r\n        else if (name === 'TM_CURRENT_LINE') {\r\n            return this._model.getLineContent(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'TM_CURRENT_WORD') {\r\n            const info = this._model.getWordAtPosition({\r\n                lineNumber: this._selection.positionLineNumber,\r\n                column: this._selection.positionColumn\r\n            });\r\n            return info && info.word || undefined;\r\n        }\r\n        else if (name === 'TM_LINE_INDEX') {\r\n            return String(this._selection.positionLineNumber - 1);\r\n        }\r\n        else if (name === 'TM_LINE_NUMBER') {\r\n            return String(this._selection.positionLineNumber);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ModelBasedVariableResolver {\r\n    constructor(_labelService, _model) {\r\n        this._labelService = _labelService;\r\n        this._model = _model;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'TM_FILENAME') {\r\n            return path.basename(this._model.uri.fsPath);\r\n        }\r\n        else if (name === 'TM_FILENAME_BASE') {\r\n            const name = path.basename(this._model.uri.fsPath);\r\n            const idx = name.lastIndexOf('.');\r\n            if (idx <= 0) {\r\n                return name;\r\n            }\r\n            else {\r\n                return name.slice(0, idx);\r\n            }\r\n        }\r\n        else if (name === 'TM_DIRECTORY' && this._labelService) {\r\n            if (path.dirname(this._model.uri.fsPath) === '.') {\r\n                return '';\r\n            }\r\n            return this._labelService.getUriLabel(dirname(this._model.uri));\r\n        }\r\n        else if (name === 'TM_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri);\r\n        }\r\n        else if (name === 'RELATIVE_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ClipboardBasedVariableResolver {\r\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\r\n        this._readClipboardText = _readClipboardText;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._selectionCount = _selectionCount;\r\n        this._spread = _spread;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (variable.name !== 'CLIPBOARD') {\r\n            return undefined;\r\n        }\r\n        const clipboardText = this._readClipboardText();\r\n        if (!clipboardText) {\r\n            return undefined;\r\n        }\r\n        // `spread` is assigning each cursor a line of the clipboard\r\n        // text whenever there the line count equals the cursor count\r\n        // and when enabled\r\n        if (this._spread) {\r\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\r\n            if (lines.length === this._selectionCount) {\r\n                return lines[this._selectionIdx];\r\n            }\r\n        }\r\n        return clipboardText;\r\n    }\r\n}\r\nexport class CommentBasedVariableResolver {\r\n    constructor(_model, _selection) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(langId);\r\n        if (!config) {\r\n            return undefined;\r\n        }\r\n        if (name === 'LINE_COMMENT') {\r\n            return config.lineCommentToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_START') {\r\n            return config.blockCommentStartToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_END') {\r\n            return config.blockCommentEndToken || undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class TimeBasedVariableResolver {\r\n    constructor() {\r\n        this._date = new Date();\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'CURRENT_YEAR') {\r\n            return String(this._date.getFullYear());\r\n        }\r\n        else if (name === 'CURRENT_YEAR_SHORT') {\r\n            return String(this._date.getFullYear()).slice(-2);\r\n        }\r\n        else if (name === 'CURRENT_MONTH') {\r\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DATE') {\r\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_HOUR') {\r\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_MINUTE') {\r\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_SECOND') {\r\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME') {\r\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME') {\r\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_SECONDS_UNIX') {\r\n            return String(Math.floor(this._date.getTime() / 1000));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\r\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\r\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\r\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\r\nexport class WorkspaceBasedVariableResolver {\r\n    constructor(_workspaceService) {\r\n        this._workspaceService = _workspaceService;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (!this._workspaceService) {\r\n            return undefined;\r\n        }\r\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\r\n        if (!workspaceIdentifier) {\r\n            return undefined;\r\n        }\r\n        if (variable.name === 'WORKSPACE_NAME') {\r\n            return this._resolveWorkspaceName(workspaceIdentifier);\r\n        }\r\n        else if (variable.name === 'WORKSPACE_FOLDER') {\r\n            return this._resoveWorkspacePath(workspaceIdentifier);\r\n        }\r\n        return undefined;\r\n    }\r\n    _resolveWorkspaceName(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return path.basename(workspaceIdentifier.uri.path);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\r\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\r\n        }\r\n        return filename;\r\n    }\r\n    _resoveWorkspacePath(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        let folderpath = workspaceIdentifier.configPath.fsPath;\r\n        if (folderpath.endsWith(filename)) {\r\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\r\n        }\r\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\r\n    }\r\n}\r\nexport class RandomBasedVariableResolver {\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'RANDOM') {\r\n            return Math.random().toString().slice(-6);\r\n        }\r\n        else if (name === 'RANDOM_HEX') {\r\n            return Math.random().toString(16).slice(-6);\r\n        }\r\n        else if (name === 'UUID') {\r\n            return generateUuid();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { groupBy } from '../../../base/common/arrays.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport './snippetSession.css';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { optional } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Choice, Placeholder, SnippetParser, Text } from './snippetParser.js';\r\nimport { ClipboardBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, CommentBasedVariableResolver, WorkspaceBasedVariableResolver, RandomBasedVariableResolver } from './snippetVariables.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport * as colors from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nregisterThemingParticipant((theme, collector) => {\r\n    function getColorGraceful(name) {\r\n        const color = theme.getColor(name);\r\n        return color ? color.toString() : 'transparent';\r\n    }\r\n    collector.addRule(`.monaco-editor .snippet-placeholder { background-color: ${getColorGraceful(colors.snippetTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetTabstopHighlightBorder)}; }`);\r\n    collector.addRule(`.monaco-editor .finish-snippet-placeholder { background-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBorder)}; }`);\r\n});\r\nexport class OneSnippet {\r\n    constructor(_editor, _snippet, _offset, _snippetLineLeadingWhitespace) {\r\n        this._editor = _editor;\r\n        this._snippet = _snippet;\r\n        this._offset = _offset;\r\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\r\n        this._nestingLevel = 1;\r\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\r\n        this._placeholderGroupsIdx = -1;\r\n    }\r\n    dispose() {\r\n        if (this._placeholderDecorations) {\r\n            this._editor.deltaDecorations([...this._placeholderDecorations.values()], []);\r\n        }\r\n        this._placeholderGroups.length = 0;\r\n    }\r\n    _initDecorations() {\r\n        if (this._placeholderDecorations) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        this._placeholderDecorations = new Map();\r\n        const model = this._editor.getModel();\r\n        this._editor.changeDecorations(accessor => {\r\n            // create a decoration for each placeholder\r\n            for (const placeholder of this._snippet.placeholders) {\r\n                const placeholderOffset = this._snippet.offset(placeholder);\r\n                const placeholderLen = this._snippet.fullLen(placeholder);\r\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\r\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\r\n                const handle = accessor.addDecoration(range, options);\r\n                this._placeholderDecorations.set(placeholder, handle);\r\n            }\r\n        });\r\n    }\r\n    move(fwd) {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this._initDecorations();\r\n        // Transform placeholder text if necessary\r\n        if (this._placeholderGroupsIdx >= 0) {\r\n            let operations = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                // Check if the placeholder has a transformation\r\n                if (placeholder.transform) {\r\n                    const id = this._placeholderDecorations.get(placeholder);\r\n                    const range = this._editor.getModel().getDecorationRange(id);\r\n                    const currentValue = this._editor.getModel().getValueInRange(range);\r\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\r\n                    // fix indentation for transformed lines\r\n                    for (let i = 1; i < transformedValueLines.length; i++) {\r\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\r\n                    }\r\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\r\n                }\r\n            }\r\n            if (operations.length > 0) {\r\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\r\n            }\r\n        }\r\n        let couldSkipThisPlaceholder = false;\r\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\r\n            this._placeholderGroupsIdx += 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\r\n            this._placeholderGroupsIdx -= 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else {\r\n            // the selection of the current placeholder might\r\n            // not acurate any more -> simply restore it\r\n        }\r\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\r\n            const activePlaceholders = new Set();\r\n            // change stickiness to always grow when typing at its edges\r\n            // because these decorations represent the currently active\r\n            // tabstop.\r\n            // Special case #1: reaching the final tabstop\r\n            // Special case #2: placeholders enclosing active placeholders\r\n            const selections = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\r\n                // consider to skip this placeholder index when the decoration\r\n                // range is empty but when the placeholder wasn't. that's a strong\r\n                // hint that the placeholder has been deleted. (all placeholder must match this)\r\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\r\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                activePlaceholders.add(placeholder);\r\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\r\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\r\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                    activePlaceholders.add(enclosingPlaceholder);\r\n                }\r\n            }\r\n            // change stickness to never grow when typing at its edges\r\n            // so that in-active tabstops never grow\r\n            for (const [placeholder, id] of this._placeholderDecorations) {\r\n                if (!activePlaceholders.has(placeholder)) {\r\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\r\n                }\r\n            }\r\n            return selections;\r\n        });\r\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\r\n    }\r\n    _hasPlaceholderBeenCollapsed(placeholder) {\r\n        // A placeholder is empty when it wasn't empty when authored but\r\n        // when its tracking decoration is empty. This also applies to all\r\n        // potential parent placeholders\r\n        let marker = placeholder;\r\n        while (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                const id = this._placeholderDecorations.get(marker);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (range.isEmpty() && marker.toString().length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            marker = marker.parent;\r\n        }\r\n        return false;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippet.placeholders.length > 0;\r\n    }\r\n    computePossibleSelections() {\r\n        const result = new Map();\r\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\r\n            let ranges;\r\n            for (const placeholder of placeholdersWithEqualIndex) {\r\n                if (placeholder.isFinalTabstop) {\r\n                    // ignore those\r\n                    break;\r\n                }\r\n                if (!ranges) {\r\n                    ranges = [];\r\n                    result.set(placeholder.index, ranges);\r\n                }\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (!range) {\r\n                    // one of the placeholder lost its decoration and\r\n                    // therefore we bail out and pretend the placeholder\r\n                    // (with its mirrors) doesn't exist anymore.\r\n                    result.delete(placeholder.index);\r\n                    break;\r\n                }\r\n                ranges.push(range);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get choice() {\r\n        return this._placeholderGroups[this._placeholderGroupsIdx][0].choice;\r\n    }\r\n    merge(others) {\r\n        const model = this._editor.getModel();\r\n        this._nestingLevel *= 10;\r\n        this._editor.changeDecorations(accessor => {\r\n            // For each active placeholder take one snippet and merge it\r\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\r\n            // everything is sorted by editor selection we can simply remove\r\n            // elements from the beginning of the array\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const nested = others.shift();\r\n                console.assert(!nested._placeholderDecorations);\r\n                // Massage placeholder-indicies of the nested snippet to be\r\n                // sorted right after the insertion point. This ensures we move\r\n                // through the placeholders in the correct order\r\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\r\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\r\n                    if (nestedPlaceholder.isFinalTabstop) {\r\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\r\n                    }\r\n                    else {\r\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\r\n                    }\r\n                }\r\n                this._snippet.replace(placeholder, nested._snippet.children);\r\n                // Remove the placeholder at which position are inserting\r\n                // the snippet and also remove its decoration.\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                accessor.removeDecoration(id);\r\n                this._placeholderDecorations.delete(placeholder);\r\n                // For each *new* placeholder we create decoration to monitor\r\n                // how and if it grows/shrinks.\r\n                for (const placeholder of nested._snippet.placeholders) {\r\n                    const placeholderOffset = nested._snippet.offset(placeholder);\r\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\r\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\r\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\r\n                    this._placeholderDecorations.set(placeholder, handle);\r\n                }\r\n            }\r\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\r\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\r\n        });\r\n    }\r\n}\r\nOneSnippet._decor = {\r\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n};\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nexport class SnippetSession {\r\n    constructor(editor, template, options = _defaultOptions) {\r\n        this._templateMerges = [];\r\n        this._snippets = [];\r\n        this._editor = editor;\r\n        this._template = template;\r\n        this._options = options;\r\n    }\r\n    static adjustWhitespace(model, position, snippet, adjustIndentation, adjustNewlines) {\r\n        const line = model.getLineContent(position.lineNumber);\r\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\r\n        // the snippet as inserted\r\n        let snippetTextString;\r\n        snippet.walk(marker => {\r\n            // all text elements that are not inside choice\r\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\r\n                return true;\r\n            }\r\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\r\n            if (adjustIndentation) {\r\n                // adjust indentation of snippet test\r\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\r\n                // -all N+1 lines get extra-indented and normalized\r\n                // -the text start get extra-indented and normalized when following a linebreak\r\n                const offset = snippet.offset(marker);\r\n                if (offset === 0) {\r\n                    // snippet start\r\n                    lines[0] = model.normalizeIndentation(lines[0]);\r\n                }\r\n                else {\r\n                    // check if text start is after a linebreak\r\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\r\n                    let prevChar = snippetTextString.charCodeAt(offset - 1);\r\n                    if (prevChar === 10 /* LineFeed */ || prevChar === 13 /* CarriageReturn */) {\r\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\r\n                    }\r\n                }\r\n                for (let i = 1; i < lines.length; i++) {\r\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\r\n                }\r\n            }\r\n            const newValue = lines.join(model.getEOL());\r\n            if (newValue !== marker.value) {\r\n                marker.parent.replace(marker, [new Text(newValue)]);\r\n                snippetTextString = undefined;\r\n            }\r\n            return true;\r\n        });\r\n        return lineLeadingWhitespace;\r\n    }\r\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\r\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\r\n            // overwrite[Before|After] is compute using the position, not the whole\r\n            // selection. therefore we adjust the selection around that position\r\n            const { positionLineNumber, positionColumn } = selection;\r\n            const positionColumnBefore = positionColumn - overwriteBefore;\r\n            const positionColumnAfter = positionColumn + overwriteAfter;\r\n            const range = model.validateRange({\r\n                startLineNumber: positionLineNumber,\r\n                startColumn: positionColumnBefore,\r\n                endLineNumber: positionLineNumber,\r\n                endColumn: positionColumnAfter\r\n            });\r\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\r\n        }\r\n        return selection;\r\n    }\r\n    static createEditsAndSnippets(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer) {\r\n        const edits = [];\r\n        const snippets = [];\r\n        if (!editor.hasModel()) {\r\n            return { edits, snippets };\r\n        }\r\n        const model = editor.getModel();\r\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService, optional));\r\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService, optional), model));\r\n        const readClipboardText = () => clipboardText;\r\n        let delta = 0;\r\n        // know what text the overwrite[Before|After] extensions\r\n        // of the primary curser have selected because only when\r\n        // secondary selections extend to the same text we can grow them\r\n        let firstBeforeText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\r\n        let firstAfterText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\r\n        // remember the first non-whitespace column to decide if\r\n        // `keepWhitespace` should be overruled for secondary selections\r\n        let firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\r\n        // sort selections by their start position but remeber\r\n        // the original index. that allows you to create correct\r\n        // offset-based selection logic without changing the\r\n        // primary selection\r\n        const indexedSelections = editor.getSelections()\r\n            .map((selection, idx) => ({ selection, idx }))\r\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        for (const { selection, idx } of indexedSelections) {\r\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\r\n            // compare if this matches the extensions of the primary selection\r\n            let extensionBefore = SnippetSession.adjustSelection(model, selection, overwriteBefore, 0);\r\n            let extensionAfter = SnippetSession.adjustSelection(model, selection, 0, overwriteAfter);\r\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\r\n                extensionBefore = selection;\r\n            }\r\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\r\n                extensionAfter = selection;\r\n            }\r\n            // merge the before and after selection into one\r\n            const snippetSelection = selection\r\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\r\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\r\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\r\n            // adjust the template string to match the indentation and\r\n            // whitespace rules of this insert location (can be different for each cursor)\r\n            // happens when being asked for (default) or when this is a secondary\r\n            // cursor and the leading whitespace is different\r\n            const start = snippetSelection.getStartPosition();\r\n            const snippetLineLeadingWhitespace = SnippetSession.adjustWhitespace(model, start, snippet, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), true);\r\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\r\n                modelBasedVariableResolver,\r\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(70 /* multiCursorPaste */) === 'spread'),\r\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\r\n                new CommentBasedVariableResolver(model, selection),\r\n                new TimeBasedVariableResolver,\r\n                new WorkspaceBasedVariableResolver(workspaceService),\r\n                new RandomBasedVariableResolver,\r\n            ]));\r\n            const offset = model.getOffsetAt(start) + delta;\r\n            delta += snippet.toString().length - model.getValueLengthInRange(snippetSelection);\r\n            // store snippets with the index of their originating selection.\r\n            // that ensures the primiary cursor stays primary despite not being\r\n            // the one with lowest start position\r\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\r\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\r\n            snippets[idx] = new OneSnippet(editor, snippet, offset, snippetLineLeadingWhitespace);\r\n        }\r\n        return { edits, snippets };\r\n    }\r\n    dispose() {\r\n        dispose(this._snippets);\r\n    }\r\n    _logInfo() {\r\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\r\n    }\r\n    insert() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // make insert edit and start with first selections\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer);\r\n        this._snippets = snippets;\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(true);\r\n            }\r\n            else {\r\n                return undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\r\n            }\r\n        });\r\n        this._editor.revealRange(this._editor.getSelections()[0]);\r\n    }\r\n    merge(template, options = _defaultOptions) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer);\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            for (const snippet of this._snippets) {\r\n                snippet.merge(snippets);\r\n            }\r\n            console.assert(snippets.length === 0);\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(undefined);\r\n            }\r\n            else {\r\n                return (undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition())));\r\n            }\r\n        });\r\n    }\r\n    next() {\r\n        const newSelections = this._move(true);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    prev() {\r\n        const newSelections = this._move(false);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    _move(fwd) {\r\n        const selections = [];\r\n        for (const snippet of this._snippets) {\r\n            const oneSelection = snippet.move(fwd);\r\n            selections.push(...oneSelection);\r\n        }\r\n        return selections;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._snippets[0].isAtFirstPlaceholder;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._snippets[0].isAtLastPlaceholder;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippets[0].hasPlaceholder;\r\n    }\r\n    get choice() {\r\n        return this._snippets[0].choice;\r\n    }\r\n    isSelectionWithinPlaceholders() {\r\n        if (!this.hasPlaceholder) {\r\n            return false;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length < this._snippets.length) {\r\n            // this means we started snippet mode with N\r\n            // selections and have M (N > M) selections.\r\n            // So one snippet is without selection -> cancel\r\n            return false;\r\n        }\r\n        let allPossibleSelections = new Map();\r\n        for (const snippet of this._snippets) {\r\n            const possibleSelections = snippet.computePossibleSelections();\r\n            // for the first snippet find the placeholder (and its ranges)\r\n            // that contain at least one selection. for all remaining snippets\r\n            // the same placeholder (and their ranges) must be used.\r\n            if (allPossibleSelections.size === 0) {\r\n                for (const [index, ranges] of possibleSelections) {\r\n                    ranges.sort(Range.compareRangesUsingStarts);\r\n                    for (const selection of selections) {\r\n                        if (ranges[0].containsRange(selection)) {\r\n                            allPossibleSelections.set(index, []);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (allPossibleSelections.size === 0) {\r\n                // return false if we couldn't associate a selection to\r\n                // this (the first) snippet\r\n                return false;\r\n            }\r\n            // add selections from 'this' snippet so that we know all\r\n            // selections for this placeholder\r\n            allPossibleSelections.forEach((array, index) => {\r\n                array.push(...possibleSelections.get(index));\r\n            });\r\n        }\r\n        // sort selections (and later placeholder-ranges). then walk both\r\n        // arrays and make sure the placeholder-ranges contain the corresponding\r\n        // selection\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        for (let [index, ranges] of allPossibleSelections) {\r\n            if (ranges.length !== selections.length) {\r\n                allPossibleSelections.delete(index);\r\n                continue;\r\n            }\r\n            ranges.sort(Range.compareRangesUsingStarts);\r\n            for (let i = 0; i < ranges.length; i++) {\r\n                if (!ranges[i].containsRange(selections[i])) {\r\n                    allPossibleSelections.delete(index);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // from all possible selections we have deleted those\r\n        // that don't match with the current selection. if we don't\r\n        // have any left, we don't have a selection anymore\r\n        return allPossibleSelections.size > 0;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError, canceled, isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { FuzzyScore } from '../../../base/common/filters.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { localize } from '../../../nls.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\r\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\r\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\r\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\r\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\r\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\r\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\r\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\r\n};\r\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\r\nexport class CompletionItem {\r\n    constructor(position, completion, container, provider) {\r\n        this.position = position;\r\n        this.completion = completion;\r\n        this.container = container;\r\n        this.provider = provider;\r\n        // validation\r\n        this.isInvalid = false;\r\n        // sorting, filtering\r\n        this.score = FuzzyScore.Default;\r\n        this.distance = 0;\r\n        this.textLabel = typeof completion.label === 'string'\r\n            ? completion.label\r\n            : completion.label.label;\r\n        // ensure lower-variants (perf)\r\n        this.labelLow = this.textLabel.toLowerCase();\r\n        // validate label\r\n        this.isInvalid = !this.textLabel;\r\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\r\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\r\n        // normalize ranges\r\n        if (Range.isIRange(completion.range)) {\r\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            // validate range\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\r\n        }\r\n        else {\r\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\r\n            // validate ranges\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\r\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\r\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\r\n        }\r\n        // create the suggestion resolver\r\n        if (typeof provider.resolveCompletionItem !== 'function') {\r\n            this._resolveCache = Promise.resolve();\r\n            this._isResolved = true;\r\n        }\r\n    }\r\n    // ---- resolving\r\n    get isResolved() {\r\n        return !!this._isResolved;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._resolveCache) {\r\n                const sub = token.onCancellationRequested(() => {\r\n                    this._resolveCache = undefined;\r\n                    this._isResolved = false;\r\n                });\r\n                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\r\n                    Object.assign(this.completion, value);\r\n                    this._isResolved = true;\r\n                    sub.dispose();\r\n                }, err => {\r\n                    if (isPromiseCanceledError(err)) {\r\n                        // the IPC queue will reject the request with the\r\n                        // cancellation error -> reset cached\r\n                        this._resolveCache = undefined;\r\n                        this._isResolved = false;\r\n                    }\r\n                });\r\n            }\r\n            return this._resolveCache;\r\n        });\r\n    }\r\n}\r\nexport class CompletionOptions {\r\n    constructor(snippetSortOrder = 2 /* Bottom */, kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true) {\r\n        this.snippetSortOrder = snippetSortOrder;\r\n        this.kindFilter = kindFilter;\r\n        this.providerFilter = providerFilter;\r\n        this.showDeprecated = showDeprecated;\r\n    }\r\n}\r\nCompletionOptions.default = new CompletionOptions();\r\nlet _snippetSuggestSupport;\r\nexport function getSnippetSuggestSupport() {\r\n    return _snippetSuggestSupport;\r\n}\r\nexport class CompletionItemModel {\r\n    constructor(items, needsClipboard, durations, disposable) {\r\n        this.items = items;\r\n        this.needsClipboard = needsClipboard;\r\n        this.durations = durations;\r\n        this.disposable = disposable;\r\n    }\r\n}\r\nexport function provideSuggestionItems(model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* Invoke */ }, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const sw = new StopWatch(true);\r\n        position = position.clone();\r\n        const word = model.getWordAtPosition(position);\r\n        const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\r\n        const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\r\n        const result = [];\r\n        const disposables = new DisposableStore();\r\n        const durations = [];\r\n        let needsClipboard = false;\r\n        const onCompletionList = (provider, container, sw) => {\r\n            var _a, _b, _c;\r\n            if (!container) {\r\n                return;\r\n            }\r\n            for (let suggestion of container.suggestions) {\r\n                if (!options.kindFilter.has(suggestion.kind)) {\r\n                    // skip if not showing deprecated suggestions\r\n                    if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* Deprecated */))) {\r\n                        continue;\r\n                    }\r\n                    // fill in default range when missing\r\n                    if (!suggestion.range) {\r\n                        suggestion.range = defaultRange;\r\n                    }\r\n                    // fill in default sortText when missing\r\n                    if (!suggestion.sortText) {\r\n                        suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\r\n                    }\r\n                    if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n                        needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\r\n                    }\r\n                    result.push(new CompletionItem(position, suggestion, container, provider));\r\n                }\r\n            }\r\n            if (isDisposable(container)) {\r\n                disposables.add(container);\r\n            }\r\n            durations.push({\r\n                providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\r\n            });\r\n        };\r\n        // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\r\n        // do so - no snippet filter, no special-providers-only request\r\n        const snippetCompletions = (() => __awaiter(this, void 0, void 0, function* () {\r\n            if (!_snippetSuggestSupport || options.kindFilter.has(27 /* Snippet */)) {\r\n                return;\r\n            }\r\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\r\n                return;\r\n            }\r\n            const sw = new StopWatch(true);\r\n            const list = yield _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\r\n            onCompletionList(_snippetSuggestSupport, list, sw);\r\n        }))();\r\n        // add suggestions from contributed providers - providers are ordered in groups of\r\n        // equal score and once a group produces a result the process stops\r\n        // get provider groups, always add snippet suggestion provider\r\n        for (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\r\n            // for each support in the group ask for suggestions\r\n            let lenBefore = result.length;\r\n            yield Promise.all(providerGroup.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n                if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\r\n                    return;\r\n                }\r\n                try {\r\n                    const sw = new StopWatch(true);\r\n                    const list = yield provider.provideCompletionItems(model, position, context, token);\r\n                    onCompletionList(provider, list, sw);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n            })));\r\n            if (lenBefore !== result.length || token.isCancellationRequested) {\r\n                break;\r\n            }\r\n        }\r\n        yield snippetCompletions;\r\n        if (token.isCancellationRequested) {\r\n            disposables.dispose();\r\n            return Promise.reject(canceled());\r\n        }\r\n        return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\r\n    });\r\n}\r\nfunction defaultComparator(a, b) {\r\n    // check with 'sortText'\r\n    if (a.sortTextLow && b.sortTextLow) {\r\n        if (a.sortTextLow < b.sortTextLow) {\r\n            return -1;\r\n        }\r\n        else if (a.sortTextLow > b.sortTextLow) {\r\n            return 1;\r\n        }\r\n    }\r\n    // check with 'label'\r\n    if (a.completion.label < b.completion.label) {\r\n        return -1;\r\n    }\r\n    else if (a.completion.label > b.completion.label) {\r\n        return 1;\r\n    }\r\n    // check with 'type'\r\n    return a.completion.kind - b.completion.kind;\r\n}\r\nfunction snippetUpComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nfunction snippetDownComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nconst _snippetComparators = new Map();\r\n_snippetComparators.set(0 /* Top */, snippetUpComparator);\r\n_snippetComparators.set(2 /* Bottom */, snippetDownComparator);\r\n_snippetComparators.set(1 /* Inline */, defaultComparator);\r\nexport function getSuggestionComparator(snippetConfig) {\r\n    return _snippetComparators.get(snippetConfig);\r\n}\r\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = {\r\n            incomplete: false,\r\n            suggestions: []\r\n        };\r\n        const resolving = [];\r\n        const completions = yield provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, { triggerCharacter, triggerKind: triggerCharacter ? 1 /* TriggerCharacter */ : 0 /* Invoke */ });\r\n        for (const item of completions.items) {\r\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\r\n                resolving.push(item.resolve(CancellationToken.None));\r\n            }\r\n            result.incomplete = result.incomplete || item.container.incomplete;\r\n            result.suggestions.push(item.completion);\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return result;\r\n        }\r\n        finally {\r\n            setTimeout(() => completions.disposable.dispose(), 100);\r\n        }\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\nconst _provider = new class {\r\n    constructor() {\r\n        this.onlyOnceSuggestions = [];\r\n    }\r\n    provideCompletionItems() {\r\n        let suggestions = this.onlyOnceSuggestions.slice(0);\r\n        let result = { suggestions };\r\n        this.onlyOnceSuggestions.length = 0;\r\n        return result;\r\n    }\r\n};\r\nmodes.CompletionProviderRegistry.register('*', _provider);\r\nexport function showSimpleSuggestions(editor, suggestions) {\r\n    setTimeout(() => {\r\n        _provider.onlyOnceSuggestions.push(...suggestions);\r\n        editor.getContribution('editor.contrib.suggestController').triggerSuggest(new Set().add(_provider));\r\n    }, 0);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nimport { localize } from '../../../nls.js';\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetController2 = class SnippetController2 {\r\n    constructor(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._snippetListener.dispose();\r\n    }\r\n    insert(template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    }\r\n    _doInsert(template, opts) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\r\n    }\r\n    _updateState() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    }\r\n    _handleChoice() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        const { choice } = this._session;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(s => Selection.fromPositions(s.getStartPosition())));\r\n            const [first] = choice.options;\r\n            showSimpleSuggestions(this._editor, choice.options.map((option, i) => {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: 'a'.repeat(i + 1),\r\n                    range: Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))\r\n                };\r\n            }));\r\n        }\r\n    }\r\n    finish() {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    }\r\n    cancel(resetSelection = false) {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    }\r\n    prev() {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    }\r\n    next() {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    }\r\n    isInSnippet() {\r\n        return Boolean(this._inSnippet.get());\r\n    }\r\n};\r\nSnippetController2.ID = 'snippetController2';\r\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\r\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\r\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\r\nSnippetController2 = __decorate([\r\n    __param(1, ILogService),\r\n    __param(2, IContextKeyService)\r\n], SnippetController2);\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: ctrl => ctrl.next(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: ctrl => ctrl.prev(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.cancel(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.finish(),\r\n    // kbOpts: {\r\n    // \tweight: KeybindingWeight.EditorContrib + 30,\r\n    // \tkbExpr: EditorContextKeys.textFocus,\r\n    // \tprimary: KeyCode.Enter,\r\n    // }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { LRUCache, TernarySearchTree } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { completionKindFromString } from '../../common/modes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nexport class Memory {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        let topScore = items[0].score[0];\r\n        for (let i = 0; i < items.length; i++) {\r\n            const { score, completion: suggestion } = items[i];\r\n            if (score[0] !== topScore) {\r\n                // stop when leaving the group of top matches\r\n                break;\r\n            }\r\n            if (suggestion.preselect) {\r\n                // stop when seeing an auto-select-item\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport class NoMemory extends Memory {\r\n    constructor() {\r\n        super('first');\r\n    }\r\n    memorize(model, pos, item) {\r\n        // no-op\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    fromJSON() {\r\n        //\r\n    }\r\n}\r\nexport class LRUMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsed');\r\n        this._cache = new LRUCache(300, 0.66);\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const key = `${model.getLanguageIdentifier().language}/${item.textLabel}`;\r\n        this._cache.set(key, {\r\n            touch: this._seq++,\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\r\n        if (/\\s$/.test(lineSuffix)) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let topScore = items[0].score[0];\r\n        let indexPreselect = -1;\r\n        let indexRecency = -1;\r\n        let seq = -1;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].score[0] !== topScore) {\r\n                // consider only top items\r\n                break;\r\n            }\r\n            const key = `${model.getLanguageIdentifier().language}/${items[i].textLabel}`;\r\n            const item = this._cache.peek(key);\r\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\r\n                seq = item.touch;\r\n                indexRecency = i;\r\n            }\r\n            if (items[i].completion.preselect && indexPreselect === -1) {\r\n                // stop when seeing an auto-select-item\r\n                return indexPreselect = i;\r\n            }\r\n        }\r\n        if (indexRecency !== -1) {\r\n            return indexRecency;\r\n        }\r\n        else if (indexPreselect !== -1) {\r\n            return indexPreselect;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return this._cache.toJSON();\r\n    }\r\n    fromJSON(data) {\r\n        this._cache.clear();\r\n        let seq = 0;\r\n        for (const [key, value] of data) {\r\n            value.touch = seq;\r\n            value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n            this._cache.set(key, value);\r\n        }\r\n        this._seq = this._cache.size;\r\n    }\r\n}\r\nexport class PrefixMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsedByPrefix');\r\n        this._trie = TernarySearchTree.forStrings();\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const { word } = model.getWordUntilPosition(pos);\r\n        const key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        this._trie.set(key, {\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText,\r\n            touch: this._seq++\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        let { word } = model.getWordUntilPosition(pos);\r\n        if (!word) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        let item = this._trie.get(key);\r\n        if (!item) {\r\n            item = this._trie.findSubstr(key);\r\n        }\r\n        if (item) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                let { kind, insertText } = items[i].completion;\r\n                if (kind === item.type && insertText === item.insertText) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return super.select(model, pos, items);\r\n    }\r\n    toJSON() {\r\n        let entries = [];\r\n        this._trie.forEach((value, key) => entries.push([key, value]));\r\n        // sort by last recently used (touch), then\r\n        // take the top 200 item and normalize their\r\n        // touch\r\n        entries\r\n            .sort((a, b) => -(a[1].touch - b[1].touch))\r\n            .forEach((value, i) => value[1].touch = i);\r\n        return entries.slice(0, 200);\r\n    }\r\n    fromJSON(data) {\r\n        this._trie.clear();\r\n        if (data.length > 0) {\r\n            this._seq = data[0][1].touch + 1;\r\n            for (const [key, value] of data) {\r\n                value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n                this._trie.set(key, value);\r\n            }\r\n        }\r\n    }\r\n}\r\nlet SuggestMemoryService = class SuggestMemoryService {\r\n    constructor(_storageService, _modeService, _configService) {\r\n        this._storageService = _storageService;\r\n        this._modeService = _modeService;\r\n        this._configService = _configService;\r\n        this._disposables = new DisposableStore();\r\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\r\n        this._disposables.add(_storageService.onWillSaveState(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                this._saveState();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._persistSoon.dispose();\r\n    }\r\n    memorize(model, pos, item) {\r\n        this._withStrategy(model, pos).memorize(model, pos, item);\r\n        this._persistSoon.schedule();\r\n    }\r\n    select(model, pos, items) {\r\n        return this._withStrategy(model, pos).select(model, pos, items);\r\n    }\r\n    _withStrategy(model, pos) {\r\n        var _a, _b;\r\n        const mode = this._configService.getValue('editor.suggestSelection', {\r\n            overrideIdentifier: (_a = this._modeService.getLanguageIdentifier(model.getLanguageIdAtPosition(pos.lineNumber, pos.column))) === null || _a === void 0 ? void 0 : _a.language,\r\n            resource: model.uri\r\n        });\r\n        if (((_b = this._strategy) === null || _b === void 0 ? void 0 : _b.name) !== mode) {\r\n            this._saveState();\r\n            const ctor = SuggestMemoryService._strategyCtors.get(mode) || NoMemory;\r\n            this._strategy = new ctor();\r\n            try {\r\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n                const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n                const raw = this._storageService.get(`${SuggestMemoryService._storagePrefix}/${mode}`, scope);\r\n                if (raw) {\r\n                    this._strategy.fromJSON(JSON.parse(raw));\r\n                }\r\n            }\r\n            catch (e) {\r\n                // things can go wrong with JSON...\r\n            }\r\n        }\r\n        return this._strategy;\r\n    }\r\n    _saveState() {\r\n        if (this._strategy) {\r\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n            const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n            const raw = JSON.stringify(this._strategy);\r\n            this._storageService.store(`${SuggestMemoryService._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* MACHINE */);\r\n        }\r\n    }\r\n};\r\nSuggestMemoryService._strategyCtors = new Map([\r\n    ['recentlyUsedByPrefix', PrefixMemory],\r\n    ['recentlyUsed', LRUMemory],\r\n    ['first', NoMemory]\r\n]);\r\nSuggestMemoryService._storagePrefix = 'suggest/memories';\r\nSuggestMemoryService = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IModeService),\r\n    __param(2, IConfigurationService)\r\n], SuggestMemoryService);\r\nexport { SuggestMemoryService };\r\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\r\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, true);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nlet SuggestAlternatives = class SuggestAlternatives {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._index = 0;\r\n        this._ckOtherSuggestions = SuggestAlternatives.OtherSuggestions.bindTo(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        var _a;\r\n        this._ckOtherSuggestions.reset();\r\n        (_a = this._listener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._model = undefined;\r\n        this._acceptNext = undefined;\r\n        this._ignore = false;\r\n    }\r\n    set({ model, index }, acceptNext) {\r\n        // no suggestions -> nothing to do\r\n        if (model.items.length === 0) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        // no alternative suggestions -> nothing to do\r\n        let nextIndex = SuggestAlternatives._moveIndex(true, model, index);\r\n        if (nextIndex === index) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._acceptNext = acceptNext;\r\n        this._model = model;\r\n        this._index = index;\r\n        this._listener = this._editor.onDidChangeCursorPosition(() => {\r\n            if (!this._ignore) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._ckOtherSuggestions.set(true);\r\n    }\r\n    static _moveIndex(fwd, model, index) {\r\n        let newIndex = index;\r\n        while (true) {\r\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\r\n            if (newIndex === index) {\r\n                break;\r\n            }\r\n            if (!model.items[newIndex].completion.additionalTextEdits) {\r\n                break;\r\n            }\r\n        }\r\n        return newIndex;\r\n    }\r\n    next() {\r\n        this._move(true);\r\n    }\r\n    prev() {\r\n        this._move(false);\r\n    }\r\n    _move(fwd) {\r\n        if (!this._model) {\r\n            // nothing to reason about\r\n            return;\r\n        }\r\n        try {\r\n            this._ignore = true;\r\n            this._index = SuggestAlternatives._moveIndex(fwd, this._model, this._index);\r\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\r\n        }\r\n        finally {\r\n            this._ignore = false;\r\n        }\r\n    }\r\n};\r\nSuggestAlternatives.OtherSuggestions = new RawContextKey('hasOtherSuggestions', false);\r\nSuggestAlternatives = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SuggestAlternatives);\r\nexport { SuggestAlternatives };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nimport { quickSelect } from '../../../base/common/arrays.js';\r\nexport class LineContext {\r\n    constructor(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n}\r\n/**\r\n * Sorted, filtered completion view model\r\n * */\r\nexport class CompletionModel {\r\n    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, clipboardText) {\r\n        this.clipboardText = clipboardText;\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    get lineContext() {\r\n        return this._lineContext;\r\n    }\r\n    set lineContext(value) {\r\n        if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n            || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n            this._lineContext = value;\r\n        }\r\n    }\r\n    get items() {\r\n        this._ensureCachedState();\r\n        return this._filteredItems;\r\n    }\r\n    get allProvider() {\r\n        this._ensureCachedState();\r\n        return this._providerInfo.keys();\r\n    }\r\n    get incomplete() {\r\n        this._ensureCachedState();\r\n        const result = new Set();\r\n        for (let [provider, incomplete] of this._providerInfo) {\r\n            if (incomplete) {\r\n                result.add(provider);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    adopt(except) {\r\n        let res = [];\r\n        for (let i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    }\r\n    get stats() {\r\n        this._ensureCachedState();\r\n        return this._stats;\r\n    }\r\n    _ensureCachedState() {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    }\r\n    _createCachedState() {\r\n        this._providerInfo = new Map();\r\n        const labelLengths = [];\r\n        const { leadingLineContent, characterCountDelta } = this._lineContext;\r\n        let word = '';\r\n        let wordLow = '';\r\n        // incrementally filter less\r\n        const source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        const target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        const scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (let i = 0; i < source.length; i++) {\r\n            const item = source[i];\r\n            if (item.isInvalid) {\r\n                continue; // SKIP invalid items\r\n            }\r\n            // collect all support, know if their result is incomplete\r\n            this._providerInfo.set(item.provider, Boolean(item.container.incomplete));\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            const overwriteBefore = item.position.column - item.editStart.column;\r\n            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                let wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    const ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    let match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    let match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            labelLengths.push(item.textLabel.length);\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n        this._stats = {\r\n            pLabelLen: labelLengths.length ?\r\n                quickSelect(labelLengths.length - .85, labelLengths, (a, b) => a - b)\r\n                : 0\r\n        };\r\n    }\r\n    static _compareCompletionItems(a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    static _compareCompletionItemsSnippetsDown(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n    static _compareCompletionItemsSnippetsUp(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class BracketSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = [];\r\n            for (const position of positions) {\r\n                const bucket = [];\r\n                result.push(bucket);\r\n                const ranges = new Map();\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findNextBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (bracket.isOpen) {\r\n                // wait for closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // process closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (!list) {\r\n                        list = new LinkedList();\r\n                        ranges.set(key, list);\r\n                    }\r\n                    list.push(bracket.range);\r\n                }\r\n            }\r\n            pos = bracket.range.getEndPosition();\r\n        }\r\n    }\r\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findPrevBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (!bracket.isOpen) {\r\n                // wait for opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (list) {\r\n                        let closing = list.shift();\r\n                        if (list.size === 0) {\r\n                            ranges.delete(key);\r\n                        }\r\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\r\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\r\n                        bucket.push({ range: innerBracket });\r\n                        bucket.push({ range: outerBracket });\r\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\r\n                    }\r\n                }\r\n            }\r\n            pos = bracket.range.getStartPosition();\r\n        }\r\n    }\r\n    static _addBracketLeading(model, bracket, bucket) {\r\n        if (bracket.startLineNumber === bracket.endLineNumber) {\r\n            return;\r\n        }\r\n        // xxxxxxxx {\r\n        //\r\n        // }\r\n        const startLine = bracket.startLineNumber;\r\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\r\n        if (column !== 0 && column !== bracket.startColumn) {\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\r\n        }\r\n        // xxxxxxxx\r\n        // {\r\n        //\r\n        // }\r\n        const aboveLine = startLine - 1;\r\n        if (aboveLine > 0) {\r\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\r\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\r\n            }\r\n        }\r\n    }\r\n}\r\nBracketSelectionRangeProvider._maxDuration = 30;\r\nBracketSelectionRangeProvider._maxRounds = 2;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { binarySearch, isFalsyOrEmpty } from '../../../base/common/arrays.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { BracketSelectionRangeProvider } from '../smartSelect/bracketSelections.js';\r\nexport class WordDistance {\r\n    static create(service, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.getOption(106 /* suggest */).localityBonus) {\r\n                return WordDistance.None;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return WordDistance.None;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!service.canComputeWordRanges(model.uri)) {\r\n                return WordDistance.None;\r\n            }\r\n            const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\r\n            if (ranges.length === 0) {\r\n                return WordDistance.None;\r\n            }\r\n            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\r\n            if (!wordRanges) {\r\n                return WordDistance.None;\r\n            }\r\n            // remove current word\r\n            const wordUntilPos = model.getWordUntilPosition(position);\r\n            delete wordRanges[wordUntilPos.word];\r\n            return new class extends WordDistance {\r\n                distance(anchor, item) {\r\n                    if (!position.equals(editor.getPosition())) {\r\n                        return 0;\r\n                    }\r\n                    if (item.kind === 17 /* Keyword */) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let word = typeof item.label === 'string' ? item.label : item.label.label;\r\n                    let wordLines = wordRanges[word];\r\n                    if (isFalsyOrEmpty(wordLines)) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\r\n                    let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\r\n                    let blockDistance = ranges.length;\r\n                    for (const range of ranges) {\r\n                        if (!Range.containsRange(range.range, bestWordRange)) {\r\n                            break;\r\n                        }\r\n                        blockDistance -= 1;\r\n                    }\r\n                    return blockDistance;\r\n                }\r\n            };\r\n        });\r\n    }\r\n}\r\nWordDistance.None = new class extends WordDistance {\r\n    distance() { return 0; }\r\n};\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { CompletionProviderRegistry } from '../../common/modes.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { isLowSurrogate, isHighSurrogate, getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nexport class LineContext {\r\n    constructor(model, position, auto, shy) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.auto = auto;\r\n        this.shy = shy;\r\n    }\r\n    static shouldAutoTrigger(editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        model.tokenizeIfCheap(pos.lineNumber);\r\n        const word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction shouldPreventQuickSuggest(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowQuickSuggestions')));\r\n}\r\nfunction shouldPreventSuggestOnTriggerCharacters(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowSuggestOnTriggerCharacters')));\r\n}\r\nlet SuggestModel = class SuggestModel {\r\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._editorWorkerService = _editorWorkerService;\r\n        this._clipboardService = _clipboardService;\r\n        this._telemetryService = _telemetryService;\r\n        this._logService = _logService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._toDispose = new DisposableStore();\r\n        this._quickSuggestDelay = 10;\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._state = 0 /* Idle */;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._telemetryGate = 0;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateQuickSuggest();\r\n        }));\r\n        this._toDispose.add(CompletionProviderRegistry.onDidChange(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateActiveSuggestSession();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\r\n            this._onCursorChange(e);\r\n        }));\r\n        let editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\r\n            // refilter when composition ends\r\n            editorIsComposing = false;\r\n            this._refilterCompletionItems();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            // only filter completions when the editor isn't\r\n            // composing a character, e.g. ¨ + u makes ü but just\r\n            // ¨ cannot be used for filtering\r\n            if (!editorIsComposing) {\r\n                this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n        this._updateQuickSuggest();\r\n    }\r\n    dispose() {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    }\r\n    // --- handle configuration & precondition changes\r\n    _updateQuickSuggest() {\r\n        this._quickSuggestDelay = this._editor.getOption(79 /* quickSuggestionsDelay */);\r\n        if (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\r\n            this._quickSuggestDelay = 10;\r\n        }\r\n    }\r\n    _updateTriggerCharacters() {\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(80 /* readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(109 /* suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        const supportsByTriggerCharacter = new Map();\r\n        for (const support of CompletionProviderRegistry.all(this._editor.getModel())) {\r\n            for (const ch of support.triggerCharacters || []) {\r\n                let set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        const checkTriggerCharacter = (text) => {\r\n            if (shouldPreventSuggestOnTriggerCharacters(this._contextKeyService, this._configurationService)) {\r\n                return;\r\n            }\r\n            if (LineContext.shouldAutoTrigger(this._editor)) {\r\n                // don't trigger by trigger characters when this is a case for quick suggest\r\n                return;\r\n            }\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                const position = this._editor.getPosition();\r\n                const model = this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            let lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            const supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                const existing = this._completionModel\r\n                    ? { items: this._completionModel.adopt(supports), clipboardText: this._completionModel.clipboardText }\r\n                    : undefined;\r\n                this.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(this._completionModel), supports, existing);\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\r\n    }\r\n    // --- trigger/retrigger/cancel suggest\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    cancel(retrigger = false) {\r\n        var _a;\r\n        if (this._state !== 0 /* Idle */) {\r\n            this._triggerQuickSuggest.cancel();\r\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._requestToken = undefined;\r\n            this._state = 0 /* Idle */;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger });\r\n        }\r\n    }\r\n    clear() {\r\n        this._completionDisposables.clear();\r\n    }\r\n    _updateActiveSuggestSession() {\r\n        if (this._state !== 0 /* Idle */) {\r\n            if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true);\r\n            }\r\n        }\r\n    }\r\n    _onCursorChange(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || (e.reason !== 0 /* NotSet */ && e.reason !== 3 /* Explicit */)\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (!CompletionProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        if (this._state === 0 /* Idle */ && e.reason === 0 /* NotSet */) {\r\n            if (this._editor.getOption(78 /* quickSuggestions */) === false) {\r\n                // not enabled\r\n                return;\r\n            }\r\n            if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor didn't move RIGHT\r\n                return;\r\n            }\r\n            if (this._editor.getOption(106 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\r\n                // no quick suggestion when in snippet mode\r\n                return;\r\n            }\r\n            this.cancel();\r\n            this._triggerQuickSuggest.cancelAndSet(() => {\r\n                if (this._state !== 0 /* Idle */) {\r\n                    return;\r\n                }\r\n                if (!LineContext.shouldAutoTrigger(this._editor)) {\r\n                    return;\r\n                }\r\n                if (!this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const pos = this._editor.getPosition();\r\n                // validate enabled now\r\n                const quickSuggestions = this._editor.getOption(78 /* quickSuggestions */);\r\n                if (quickSuggestions === false) {\r\n                    return;\r\n                }\r\n                else if (quickSuggestions === true) {\r\n                    // all good\r\n                }\r\n                else {\r\n                    // Check the type of the token that triggered this\r\n                    model.tokenizeIfCheap(pos.lineNumber);\r\n                    const lineTokens = model.getLineTokens(pos.lineNumber);\r\n                    const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                    const inValidScope = quickSuggestions.other && tokenType === 0 /* Other */\r\n                        || quickSuggestions.comments && tokenType === 1 /* Comment */\r\n                        || quickSuggestions.strings && tokenType === 2 /* String */;\r\n                    if (!inValidScope) {\r\n                        return;\r\n                    }\r\n                }\r\n                if (shouldPreventQuickSuggest(this._contextKeyService, this._configurationService)) {\r\n                    // do not trigger quick suggestions if inline suggestions are shown\r\n                    return;\r\n                }\r\n                // we made it till here -> trigger now\r\n                this.trigger({ auto: true, shy: false });\r\n            }, this._quickSuggestDelay);\r\n        }\r\n        else if (this._state !== 0 /* Idle */ && e.reason === 3 /* Explicit */) {\r\n            // suggest is active and something like cursor keys are used to move\r\n            // the cursor. this means we can refilter at the new position\r\n            this._refilterCompletionItems();\r\n        }\r\n    }\r\n    _refilterCompletionItems() {\r\n        // Re-filter suggestions. This MUST run async because filtering/scoring\r\n        // uses the model content AND the cursor position. The latter is NOT\r\n        // updated when the document has changed (the event which drives this method)\r\n        // and therefore a little pause (next mirco task) is needed. See:\r\n        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\r\n        Promise.resolve().then(() => {\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const position = this._editor.getPosition();\r\n            const ctx = new LineContext(model, position, this._state === 2 /* Auto */, false);\r\n            this._onNewContext(ctx);\r\n        });\r\n    }\r\n    trigger(context, retrigger = false, onlyFrom, existing) {\r\n        var _a;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const auto = context.auto;\r\n        const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(retrigger);\r\n        this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\r\n        this._onDidTrigger.fire({ auto, shy: context.shy, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        let suggestCtx = { triggerKind: (_a = context.triggerKind) !== null && _a !== void 0 ? _a : 0 /* Invoke */ };\r\n        if (context.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* TriggerCharacter */,\r\n                triggerCharacter: context.triggerCharacter\r\n            };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        const snippetSuggestions = this._editor.getOption(101 /* snippetSuggestions */);\r\n        let snippetSortOrder = 1 /* Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* Top */;\r\n                break;\r\n            // \t↓ that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* Bottom */;\r\n                break;\r\n        }\r\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel._createSuggestFilter(this._editor);\r\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\r\n        const completions = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom, showDeprecated), suggestCtx, this._requestToken.token);\r\n        Promise.all([completions, wordDistance]).then(([completions, wordDistance]) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b;\r\n            (_b = this._requestToken) === null || _b === void 0 ? void 0 : _b.dispose();\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            let clipboardText = existing === null || existing === void 0 ? void 0 : existing.clipboardText;\r\n            if (!clipboardText && completions.needsClipboard) {\r\n                clipboardText = yield this._clipboardService.readText();\r\n            }\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            let items = completions.items;\r\n            if (existing) {\r\n                const cmpFn = getSuggestionComparator(snippetSortOrder);\r\n                items = items.concat(existing.items).sort(cmpFn);\r\n            }\r\n            const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n            this._completionModel = new CompletionModel(items, this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            }, wordDistance, this._editor.getOption(106 /* suggest */), this._editor.getOption(101 /* snippetSuggestions */), clipboardText);\r\n            // store containers so that they can be disposed later\r\n            this._completionDisposables.add(completions.disposable);\r\n            this._onNewContext(ctx);\r\n            // finally report telemetry about durations\r\n            this._reportDurationsTelemetry(completions.durations);\r\n        })).catch(onUnexpectedError);\r\n    }\r\n    _reportDurationsTelemetry(durations) {\r\n        if (this._telemetryGate++ % 230 !== 0) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\r\n            this._logService.debug('suggest.durations.json', durations);\r\n        });\r\n    }\r\n    static _createSuggestFilter(editor) {\r\n        // kind filter and snippet sort rules\r\n        const result = new Set();\r\n        // snippet setting\r\n        const snippetSuggestions = editor.getOption(101 /* snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        // type setting\r\n        const suggestOptions = editor.getOption(106 /* suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        if (!suggestOptions.showUsers) {\r\n            result.add(25 /* User */);\r\n        }\r\n        if (!suggestOptions.showIssues) {\r\n            result.add(26 /* Issue */);\r\n        }\r\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\r\n    }\r\n    _onNewContext(ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\r\n            // cancel IntelliSense when line start changes\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.auto, shy: false }, true);\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\r\n            // started a new word while IntelliSense shows -> retrigger\r\n            // Select those providers have not contributed to this completion model and re-trigger completions for\r\n            // them. Also adopt the existing items and merge them into the new completion model\r\n            const inactiveProvider = new Set(CompletionProviderRegistry.all(this._editor.getModel()));\r\n            for (let provider of this._completionModel.allProvider) {\r\n                inactiveProvider.delete(provider);\r\n            }\r\n            const items = this._completionModel.adopt(new Set());\r\n            this.trigger({ auto: this._context.auto, shy: false }, true, inactiveProvider, { items, clipboardText: this._completionModel.clipboardText });\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            const { incomplete } = this._completionModel;\r\n            const items = this._completionModel.adopt(incomplete);\r\n            this.trigger({ auto: this._state === 2 /* Auto */, shy: false, triggerKind: 2 /* TriggerForIncompleteCompletions */ }, true, incomplete, { items, clipboardText: this._completionModel.clipboardText });\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            let oldLineContext = this._completionModel.lineContext;\r\n            let isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.auto, shy: false }, true);\r\n                    return;\r\n                }\r\n                if (!this._context.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                auto: this._context.auto,\r\n                shy: this._context.shy,\r\n                isFrozen,\r\n            });\r\n        }\r\n    }\r\n};\r\nSuggestModel = __decorate([\r\n    __param(1, IEditorWorkerService),\r\n    __param(2, IClipboardService),\r\n    __param(3, ITelemetryService),\r\n    __param(4, ILogService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IConfigurationService)\r\n], SuggestModel);\r\nexport { SuggestModel };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, foreground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport const SYMBOL_ICON_ARRAY_FOREGROUND = registerColor('symbolIcon.arrayForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.arrayForeground', 'The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_BOOLEAN_FOREGROUND = registerColor('symbolIcon.booleanForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.booleanForeground', 'The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CLASS_FOREGROUND = registerColor('symbolIcon.classForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.classForeground', 'The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_COLOR_FOREGROUND = registerColor('symbolIcon.colorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.colorForeground', 'The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTANT_FOREGROUND = registerColor('symbolIcon.constantForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.constantForeground', 'The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTRUCTOR_FOREGROUND = registerColor('symbolIcon.constructorForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.constructorForeground', 'The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_FOREGROUND = registerColor('symbolIcon.enumeratorForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.enumeratorForeground', 'The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND = registerColor('symbolIcon.enumeratorMemberForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.enumeratorMemberForeground', 'The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_EVENT_FOREGROUND = registerColor('symbolIcon.eventForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.eventForeground', 'The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FIELD_FOREGROUND = registerColor('symbolIcon.fieldForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.fieldForeground', 'The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FILE_FOREGROUND = registerColor('symbolIcon.fileForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.fileForeground', 'The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FOLDER_FOREGROUND = registerColor('symbolIcon.folderForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.folderForeground', 'The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FUNCTION_FOREGROUND = registerColor('symbolIcon.functionForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.functionForeground', 'The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_INTERFACE_FOREGROUND = registerColor('symbolIcon.interfaceForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.interfaceForeground', 'The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEY_FOREGROUND = registerColor('symbolIcon.keyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keyForeground', 'The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEYWORD_FOREGROUND = registerColor('symbolIcon.keywordForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keywordForeground', 'The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_METHOD_FOREGROUND = registerColor('symbolIcon.methodForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.methodForeground', 'The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_MODULE_FOREGROUND = registerColor('symbolIcon.moduleForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.moduleForeground', 'The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NAMESPACE_FOREGROUND = registerColor('symbolIcon.namespaceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.namespaceForeground', 'The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NULL_FOREGROUND = registerColor('symbolIcon.nullForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.nullForeground', 'The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NUMBER_FOREGROUND = registerColor('symbolIcon.numberForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.numberForeground', 'The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OBJECT_FOREGROUND = registerColor('symbolIcon.objectForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.objectForeground', 'The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OPERATOR_FOREGROUND = registerColor('symbolIcon.operatorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.operatorForeground', 'The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PACKAGE_FOREGROUND = registerColor('symbolIcon.packageForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.packageForeground', 'The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PROPERTY_FOREGROUND = registerColor('symbolIcon.propertyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.propertyForeground', 'The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_REFERENCE_FOREGROUND = registerColor('symbolIcon.referenceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.referenceForeground', 'The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_SNIPPET_FOREGROUND = registerColor('symbolIcon.snippetForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.snippetForeground', 'The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRING_FOREGROUND = registerColor('symbolIcon.stringForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.stringForeground', 'The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRUCT_FOREGROUND = registerColor('symbolIcon.structForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.structForeground', 'The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TEXT_FOREGROUND = registerColor('symbolIcon.textForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.textForeground', 'The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TYPEPARAMETER_FOREGROUND = registerColor('symbolIcon.typeParameterForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.typeParameterForeground', 'The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_UNIT_FOREGROUND = registerColor('symbolIcon.unitForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.unitForeground', 'The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_VARIABLE_FOREGROUND = registerColor('symbolIcon.variableForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.variableForeground', 'The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const symbolIconArrayColor = theme.getColor(SYMBOL_ICON_ARRAY_FOREGROUND);\r\n    if (symbolIconArrayColor) {\r\n        collector.addRule(`${Codicon.symbolArray.cssSelector} { color: ${symbolIconArrayColor}; }`);\r\n    }\r\n    const symbolIconBooleanColor = theme.getColor(SYMBOL_ICON_BOOLEAN_FOREGROUND);\r\n    if (symbolIconBooleanColor) {\r\n        collector.addRule(`${Codicon.symbolBoolean.cssSelector} { color: ${symbolIconBooleanColor}; }`);\r\n    }\r\n    const symbolIconClassColor = theme.getColor(SYMBOL_ICON_CLASS_FOREGROUND);\r\n    if (symbolIconClassColor) {\r\n        collector.addRule(`${Codicon.symbolClass.cssSelector} { color: ${symbolIconClassColor}; }`);\r\n    }\r\n    const symbolIconMethodColor = theme.getColor(SYMBOL_ICON_METHOD_FOREGROUND);\r\n    if (symbolIconMethodColor) {\r\n        collector.addRule(`${Codicon.symbolMethod.cssSelector} { color: ${symbolIconMethodColor}; }`);\r\n    }\r\n    const symbolIconColorColor = theme.getColor(SYMBOL_ICON_COLOR_FOREGROUND);\r\n    if (symbolIconColorColor) {\r\n        collector.addRule(`${Codicon.symbolColor.cssSelector} { color: ${symbolIconColorColor}; }`);\r\n    }\r\n    const symbolIconConstantColor = theme.getColor(SYMBOL_ICON_CONSTANT_FOREGROUND);\r\n    if (symbolIconConstantColor) {\r\n        collector.addRule(`${Codicon.symbolConstant.cssSelector} { color: ${symbolIconConstantColor}; }`);\r\n    }\r\n    const symbolIconConstructorColor = theme.getColor(SYMBOL_ICON_CONSTRUCTOR_FOREGROUND);\r\n    if (symbolIconConstructorColor) {\r\n        collector.addRule(`${Codicon.symbolConstructor.cssSelector} { color: ${symbolIconConstructorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_FOREGROUND);\r\n    if (symbolIconEnumeratorColor) {\r\n        collector.addRule(`\n\t\t\t${Codicon.symbolValue.cssSelector},${Codicon.symbolEnum.cssSelector} { color: ${symbolIconEnumeratorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorMemberColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND);\r\n    if (symbolIconEnumeratorMemberColor) {\r\n        collector.addRule(`${Codicon.symbolEnumMember.cssSelector} { color: ${symbolIconEnumeratorMemberColor}; }`);\r\n    }\r\n    const symbolIconEventColor = theme.getColor(SYMBOL_ICON_EVENT_FOREGROUND);\r\n    if (symbolIconEventColor) {\r\n        collector.addRule(`${Codicon.symbolEvent.cssSelector} { color: ${symbolIconEventColor}; }`);\r\n    }\r\n    const symbolIconFieldColor = theme.getColor(SYMBOL_ICON_FIELD_FOREGROUND);\r\n    if (symbolIconFieldColor) {\r\n        collector.addRule(`${Codicon.symbolField.cssSelector} { color: ${symbolIconFieldColor}; }`);\r\n    }\r\n    const symbolIconFileColor = theme.getColor(SYMBOL_ICON_FILE_FOREGROUND);\r\n    if (symbolIconFileColor) {\r\n        collector.addRule(`${Codicon.symbolFile.cssSelector} { color: ${symbolIconFileColor}; }`);\r\n    }\r\n    const symbolIconFolderColor = theme.getColor(SYMBOL_ICON_FOLDER_FOREGROUND);\r\n    if (symbolIconFolderColor) {\r\n        collector.addRule(`${Codicon.symbolFolder.cssSelector} { color: ${symbolIconFolderColor}; }`);\r\n    }\r\n    const symbolIconFunctionColor = theme.getColor(SYMBOL_ICON_FUNCTION_FOREGROUND);\r\n    if (symbolIconFunctionColor) {\r\n        collector.addRule(`${Codicon.symbolFunction.cssSelector} { color: ${symbolIconFunctionColor}; }`);\r\n    }\r\n    const symbolIconInterfaceColor = theme.getColor(SYMBOL_ICON_INTERFACE_FOREGROUND);\r\n    if (symbolIconInterfaceColor) {\r\n        collector.addRule(`${Codicon.symbolInterface.cssSelector} { color: ${symbolIconInterfaceColor}; }`);\r\n    }\r\n    const symbolIconKeyColor = theme.getColor(SYMBOL_ICON_KEY_FOREGROUND);\r\n    if (symbolIconKeyColor) {\r\n        collector.addRule(`${Codicon.symbolKey.cssSelector} { color: ${symbolIconKeyColor}; }`);\r\n    }\r\n    const symbolIconKeywordColor = theme.getColor(SYMBOL_ICON_KEYWORD_FOREGROUND);\r\n    if (symbolIconKeywordColor) {\r\n        collector.addRule(`${Codicon.symbolKeyword.cssSelector} { color: ${symbolIconKeywordColor}; }`);\r\n    }\r\n    const symbolIconModuleColor = theme.getColor(SYMBOL_ICON_MODULE_FOREGROUND);\r\n    if (symbolIconModuleColor) {\r\n        collector.addRule(`${Codicon.symbolModule.cssSelector} { color: ${symbolIconModuleColor}; }`);\r\n    }\r\n    const outlineNamespaceColor = theme.getColor(SYMBOL_ICON_NAMESPACE_FOREGROUND);\r\n    if (outlineNamespaceColor) {\r\n        collector.addRule(`${Codicon.symbolNamespace.cssSelector} { color: ${outlineNamespaceColor}; }`);\r\n    }\r\n    const symbolIconNullColor = theme.getColor(SYMBOL_ICON_NULL_FOREGROUND);\r\n    if (symbolIconNullColor) {\r\n        collector.addRule(`${Codicon.symbolNull.cssSelector} { color: ${symbolIconNullColor}; }`);\r\n    }\r\n    const symbolIconNumberColor = theme.getColor(SYMBOL_ICON_NUMBER_FOREGROUND);\r\n    if (symbolIconNumberColor) {\r\n        collector.addRule(`${Codicon.symbolNumber.cssSelector} { color: ${symbolIconNumberColor}; }`);\r\n    }\r\n    const symbolIconObjectColor = theme.getColor(SYMBOL_ICON_OBJECT_FOREGROUND);\r\n    if (symbolIconObjectColor) {\r\n        collector.addRule(`${Codicon.symbolObject.cssSelector} { color: ${symbolIconObjectColor}; }`);\r\n    }\r\n    const symbolIconOperatorColor = theme.getColor(SYMBOL_ICON_OPERATOR_FOREGROUND);\r\n    if (symbolIconOperatorColor) {\r\n        collector.addRule(`${Codicon.symbolOperator.cssSelector} { color: ${symbolIconOperatorColor}; }`);\r\n    }\r\n    const symbolIconPackageColor = theme.getColor(SYMBOL_ICON_PACKAGE_FOREGROUND);\r\n    if (symbolIconPackageColor) {\r\n        collector.addRule(`${Codicon.symbolPackage.cssSelector} { color: ${symbolIconPackageColor}; }`);\r\n    }\r\n    const symbolIconPropertyColor = theme.getColor(SYMBOL_ICON_PROPERTY_FOREGROUND);\r\n    if (symbolIconPropertyColor) {\r\n        collector.addRule(`${Codicon.symbolProperty.cssSelector} { color: ${symbolIconPropertyColor}; }`);\r\n    }\r\n    const symbolIconReferenceColor = theme.getColor(SYMBOL_ICON_REFERENCE_FOREGROUND);\r\n    if (symbolIconReferenceColor) {\r\n        collector.addRule(`${Codicon.symbolReference.cssSelector} { color: ${symbolIconReferenceColor}; }`);\r\n    }\r\n    const symbolIconSnippetColor = theme.getColor(SYMBOL_ICON_SNIPPET_FOREGROUND);\r\n    if (symbolIconSnippetColor) {\r\n        collector.addRule(`${Codicon.symbolSnippet.cssSelector} { color: ${symbolIconSnippetColor}; }`);\r\n    }\r\n    const symbolIconStringColor = theme.getColor(SYMBOL_ICON_STRING_FOREGROUND);\r\n    if (symbolIconStringColor) {\r\n        collector.addRule(`${Codicon.symbolString.cssSelector} { color: ${symbolIconStringColor}; }`);\r\n    }\r\n    const symbolIconStructColor = theme.getColor(SYMBOL_ICON_STRUCT_FOREGROUND);\r\n    if (symbolIconStructColor) {\r\n        collector.addRule(`${Codicon.symbolStruct.cssSelector} { color: ${symbolIconStructColor}; }`);\r\n    }\r\n    const symbolIconTextColor = theme.getColor(SYMBOL_ICON_TEXT_FOREGROUND);\r\n    if (symbolIconTextColor) {\r\n        collector.addRule(`${Codicon.symbolText.cssSelector} { color: ${symbolIconTextColor}; }`);\r\n    }\r\n    const symbolIconTypeParameterColor = theme.getColor(SYMBOL_ICON_TYPEPARAMETER_FOREGROUND);\r\n    if (symbolIconTypeParameterColor) {\r\n        collector.addRule(`${Codicon.symbolTypeParameter.cssSelector} { color: ${symbolIconTypeParameterColor}; }`);\r\n    }\r\n    const symbolIconUnitColor = theme.getColor(SYMBOL_ICON_UNIT_FOREGROUND);\r\n    if (symbolIconUnitColor) {\r\n        collector.addRule(`${Codicon.symbolUnit.cssSelector} { color: ${symbolIconUnitColor}; }`);\r\n    }\r\n    const symbolIconVariableColor = theme.getColor(SYMBOL_ICON_VARIABLE_FOREGROUND);\r\n    if (symbolIconVariableColor) {\r\n        collector.addRule(`${Codicon.symbolVariable.cssSelector} { color: ${symbolIconVariableColor}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event, Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Dimension } from '../../../base/browser/dom.js';\r\nimport { OrthogonalEdge, Sash } from '../../../base/browser/ui/sash/sash.js';\r\nexport class ResizableHTMLElement {\r\n    constructor() {\r\n        this._onDidWillResize = new Emitter();\r\n        this.onDidWillResize = this._onDidWillResize.event;\r\n        this._onDidResize = new Emitter();\r\n        this.onDidResize = this._onDidResize.event;\r\n        this._sashListener = new DisposableStore();\r\n        this._size = new Dimension(0, 0);\r\n        this._minSize = new Dimension(0, 0);\r\n        this._maxSize = new Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.domNode = document.createElement('div');\r\n        this._eastSash = new Sash(this.domNode, { getVerticalSashLeft: () => this._size.width }, { orientation: 0 /* VERTICAL */ });\r\n        this._westSash = new Sash(this.domNode, { getVerticalSashLeft: () => 0 }, { orientation: 0 /* VERTICAL */ });\r\n        this._northSash = new Sash(this.domNode, { getHorizontalSashTop: () => 0 }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.North });\r\n        this._southSash = new Sash(this.domNode, { getHorizontalSashTop: () => this._size.height }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.South });\r\n        this._northSash.orthogonalStartSash = this._westSash;\r\n        this._northSash.orthogonalEndSash = this._eastSash;\r\n        this._southSash.orthogonalStartSash = this._westSash;\r\n        this._southSash.orthogonalEndSash = this._eastSash;\r\n        let currentSize;\r\n        let deltaY = 0;\r\n        let deltaX = 0;\r\n        this._sashListener.add(Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(() => {\r\n            if (currentSize === undefined) {\r\n                this._onDidWillResize.fire();\r\n                currentSize = this._size;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(() => {\r\n            if (currentSize !== undefined) {\r\n                currentSize = undefined;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._eastSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = e.currentX - e.startX;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, east: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._westSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = -(e.currentX - e.startX);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, west: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._northSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = -(e.currentY - e.startY);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, north: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._southSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = e.currentY - e.startY;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, south: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._size.height, this._preferredSize.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidReset, this._southSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._preferredSize.height, this._size.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._northSash.dispose();\r\n        this._southSash.dispose();\r\n        this._eastSash.dispose();\r\n        this._westSash.dispose();\r\n        this._sashListener.dispose();\r\n        this._onDidResize.dispose();\r\n        this._onDidWillResize.dispose();\r\n        this.domNode.remove();\r\n    }\r\n    enableSashes(north, east, south, west) {\r\n        this._northSash.state = north ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._eastSash.state = east ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._southSash.state = south ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._westSash.state = west ? 3 /* Enabled */ : 0 /* Disabled */;\r\n    }\r\n    layout(height = this.size.height, width = this.size.width) {\r\n        const { height: minHeight, width: minWidth } = this._minSize;\r\n        const { height: maxHeight, width: maxWidth } = this._maxSize;\r\n        height = Math.max(minHeight, Math.min(maxHeight, height));\r\n        width = Math.max(minWidth, Math.min(maxWidth, width));\r\n        const newSize = new Dimension(width, height);\r\n        if (!Dimension.equals(newSize, this._size)) {\r\n            this.domNode.style.height = height + 'px';\r\n            this.domNode.style.width = width + 'px';\r\n            this._size = newSize;\r\n            this._northSash.layout();\r\n            this._eastSash.layout();\r\n            this._southSash.layout();\r\n            this._westSash.layout();\r\n        }\r\n    }\r\n    clearSashHoverState() {\r\n        this._eastSash.clearSashHoverState();\r\n        this._westSash.clearSashHoverState();\r\n        this._northSash.clearSashHoverState();\r\n        this._southSash.clearSashHoverState();\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    set maxSize(value) {\r\n        this._maxSize = value;\r\n    }\r\n    get maxSize() {\r\n        return this._maxSize;\r\n    }\r\n    set minSize(value) {\r\n        this._minSize = value;\r\n    }\r\n    get minSize() {\r\n        return this._minSize;\r\n    }\r\n    set preferredSize(value) {\r\n        this._preferredSize = value;\r\n    }\r\n    get preferredSize() {\r\n        return this._preferredSize;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nexport function canExpandCompletionItem(item) {\r\n    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);\r\n}\r\nlet SuggestDetailsWidget = class SuggestDetailsWidget {\r\n    constructor(_editor, instaService) {\r\n        this._editor = _editor;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        this._onDidChangeContents = new Emitter();\r\n        this.onDidChangeContents = this._onDidChangeContents.event;\r\n        this._disposables = new DisposableStore();\r\n        this._renderDisposeable = new DisposableStore();\r\n        this._borderWidth = 1;\r\n        this._size = new dom.Dimension(330, 0);\r\n        this.domNode = dom.$('.suggest-details');\r\n        this.domNode.classList.add('no-docs');\r\n        this._markdownRenderer = instaService.createInstance(MarkdownRenderer, { editor: _editor });\r\n        this._body = dom.$('.body');\r\n        this._scrollbar = new DomScrollableElement(this._body, {});\r\n        dom.append(this.domNode, this._scrollbar.getDomNode());\r\n        this._disposables.add(this._scrollbar);\r\n        this._header = dom.append(this._body, dom.$('.header'));\r\n        this._close = dom.append(this._header, dom.$('span' + Codicon.close.cssSelector));\r\n        this._close.title = nls.localize('details.close', \"Close\");\r\n        this._type = dom.append(this._header, dom.$('p.type'));\r\n        this._docs = dom.append(this._body, dom.$('p.docs'));\r\n        this._configureFont();\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this._configureFont();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._renderDisposeable.dispose();\r\n    }\r\n    _configureFont() {\r\n        const options = this._editor.getOptions();\r\n        const fontInfo = options.get(42 /* fontInfo */);\r\n        const fontFamily = fontInfo.fontFamily;\r\n        const fontSize = options.get(107 /* suggestFontSize */) || fontInfo.fontSize;\r\n        const lineHeight = options.get(108 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n        const fontWeight = fontInfo.fontWeight;\r\n        const fontSizePx = `${fontSize}px`;\r\n        const lineHeightPx = `${lineHeight}px`;\r\n        this.domNode.style.fontSize = fontSizePx;\r\n        this.domNode.style.lineHeight = lineHeightPx;\r\n        this.domNode.style.fontWeight = fontWeight;\r\n        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n        this._type.style.fontFamily = fontFamily;\r\n        this._close.style.height = lineHeightPx;\r\n        this._close.style.width = lineHeightPx;\r\n    }\r\n    getLayoutInfo() {\r\n        const lineHeight = this._editor.getOption(108 /* suggestLineHeight */) || this._editor.getOption(42 /* fontInfo */).lineHeight;\r\n        const borderWidth = this._borderWidth;\r\n        const borderHeight = borderWidth * 2;\r\n        return {\r\n            lineHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14\r\n        };\r\n    }\r\n    renderLoading() {\r\n        this._type.textContent = nls.localize('loading', \"Loading...\");\r\n        this._docs.textContent = '';\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    renderItem(item, explainMode) {\r\n        var _a, _b;\r\n        this._renderDisposeable.clear();\r\n        let { detail, documentation } = item.completion;\r\n        if (explainMode) {\r\n            let md = '';\r\n            md += `score: ${item.score[0]}\\n`;\r\n            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\\n`;\r\n            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\\n`;\r\n            md += `distance: ${item.distance} (localityBonus-setting)\\n`;\r\n            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: \"${item.completion.sortText}\"` || 'label'}\\n`;\r\n            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\\n`;\r\n            documentation = new MarkdownString().appendCodeblock('empty', md);\r\n            detail = `Provider: ${item.provider._debugDisplayName}`;\r\n        }\r\n        if (!explainMode && !canExpandCompletionItem(item)) {\r\n            this.clearContents();\r\n            return;\r\n        }\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        // --- details\r\n        if (detail) {\r\n            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}…` : detail;\r\n            this._type.textContent = cappedDetail;\r\n            this._type.title = cappedDetail;\r\n            dom.show(this._type);\r\n            this._type.classList.toggle('auto-wrap', !/\\r?\\n^\\s+/gmi.test(cappedDetail));\r\n        }\r\n        else {\r\n            dom.clearNode(this._type);\r\n            this._type.title = '';\r\n            dom.hide(this._type);\r\n            this.domNode.classList.add('no-type');\r\n        }\r\n        // --- documentation\r\n        dom.clearNode(this._docs);\r\n        if (typeof documentation === 'string') {\r\n            this._docs.classList.remove('markdown-docs');\r\n            this._docs.textContent = documentation;\r\n        }\r\n        else if (documentation) {\r\n            this._docs.classList.add('markdown-docs');\r\n            dom.clearNode(this._docs);\r\n            const renderedContents = this._markdownRenderer.render(documentation);\r\n            this._docs.appendChild(renderedContents.element);\r\n            this._renderDisposeable.add(renderedContents);\r\n            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(() => {\r\n                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n                this._onDidChangeContents.fire(this);\r\n            }));\r\n        }\r\n        this.domNode.style.userSelect = 'text';\r\n        this.domNode.tabIndex = -1;\r\n        this._close.onmousedown = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        this._close.onclick = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._onDidClose.fire();\r\n        };\r\n        this._body.scrollTop = 0;\r\n        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    clearContents() {\r\n        this.domNode.classList.add('no-docs');\r\n        this._type.textContent = '';\r\n        this._docs.textContent = '';\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    layout(width, height) {\r\n        const newSize = new dom.Dimension(width, height);\r\n        if (!dom.Dimension.equals(newSize, this._size)) {\r\n            this._size = newSize;\r\n            dom.size(this.domNode, width, height);\r\n        }\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n    scrollDown(much = 8) {\r\n        this._body.scrollTop += much;\r\n    }\r\n    scrollUp(much = 8) {\r\n        this._body.scrollTop -= much;\r\n    }\r\n    scrollTop() {\r\n        this._body.scrollTop = 0;\r\n    }\r\n    scrollBottom() {\r\n        this._body.scrollTop = this._body.scrollHeight;\r\n    }\r\n    pageDown() {\r\n        this.scrollDown(80);\r\n    }\r\n    pageUp() {\r\n        this.scrollUp(80);\r\n    }\r\n    set borderWidth(width) {\r\n        this._borderWidth = width;\r\n    }\r\n    get borderWidth() {\r\n        return this._borderWidth;\r\n    }\r\n};\r\nSuggestDetailsWidget = __decorate([\r\n    __param(1, IInstantiationService)\r\n], SuggestDetailsWidget);\r\nexport { SuggestDetailsWidget };\r\nexport class SuggestDetailsOverlay {\r\n    constructor(widget, _editor) {\r\n        this.widget = widget;\r\n        this._editor = _editor;\r\n        this._disposables = new DisposableStore();\r\n        this._added = false;\r\n        this._resizable = new ResizableHTMLElement();\r\n        this._resizable.domNode.classList.add('suggest-details-container');\r\n        this._resizable.domNode.appendChild(widget.domNode);\r\n        this._resizable.enableSashes(false, true, true, false);\r\n        let topLeftNow;\r\n        let sizeNow;\r\n        let deltaTop = 0;\r\n        let deltaLeft = 0;\r\n        this._disposables.add(this._resizable.onDidWillResize(() => {\r\n            topLeftNow = this._topLeft;\r\n            sizeNow = this._resizable.size;\r\n        }));\r\n        this._disposables.add(this._resizable.onDidResize(e => {\r\n            if (topLeftNow && sizeNow) {\r\n                this.widget.layout(e.dimension.width, e.dimension.height);\r\n                let updateTopLeft = false;\r\n                if (e.west) {\r\n                    deltaLeft = sizeNow.width - e.dimension.width;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (e.north) {\r\n                    deltaTop = sizeNow.height - e.dimension.height;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (updateTopLeft) {\r\n                    this._applyTopLeft({\r\n                        top: topLeftNow.top + deltaTop,\r\n                        left: topLeftNow.left + deltaLeft,\r\n                    });\r\n                }\r\n            }\r\n            if (e.done) {\r\n                topLeftNow = undefined;\r\n                sizeNow = undefined;\r\n                deltaTop = 0;\r\n                deltaLeft = 0;\r\n                this._userSize = e.dimension;\r\n            }\r\n        }));\r\n        this._disposables.add(this.widget.onDidChangeContents(() => {\r\n            var _a;\r\n            if (this._anchorBox) {\r\n                this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._resizable.dispose();\r\n        this._disposables.dispose();\r\n        this.hide();\r\n    }\r\n    getId() {\r\n        return 'suggest.details';\r\n    }\r\n    getDomNode() {\r\n        return this._resizable.domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    show() {\r\n        if (!this._added) {\r\n            this._editor.addOverlayWidget(this);\r\n            this.getDomNode().style.position = 'fixed';\r\n            this._added = true;\r\n        }\r\n    }\r\n    hide(sessionEnded = false) {\r\n        this._resizable.clearSashHoverState();\r\n        if (this._added) {\r\n            this._editor.removeOverlayWidget(this);\r\n            this._added = false;\r\n            this._anchorBox = undefined;\r\n            this._topLeft = undefined;\r\n        }\r\n        if (sessionEnded) {\r\n            this._userSize = undefined;\r\n            this.widget.clearContents();\r\n        }\r\n    }\r\n    placeAtAnchor(anchor) {\r\n        var _a;\r\n        const anchorBox = dom.getDomNodePagePosition(anchor);\r\n        this._anchorBox = anchorBox;\r\n        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n    }\r\n    _placeAtAnchor(anchorBox, size) {\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.widget.getLayoutInfo();\r\n        let maxSizeTop;\r\n        let maxSizeBottom;\r\n        let minSize = new dom.Dimension(220, 2 * info.lineHeight);\r\n        let left = 0;\r\n        let top = anchorBox.top;\r\n        let bottom = anchorBox.top + anchorBox.height - info.borderHeight;\r\n        let alignAtTop;\r\n        let alignEast;\r\n        // position: EAST, west, south\r\n        let width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);\r\n        left = -info.borderWidth + anchorBox.left + anchorBox.width;\r\n        alignEast = true;\r\n        maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\r\n        maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\r\n        // find a better place if the widget is wider than there is space available\r\n        if (size.width > width) {\r\n            // position: east, WEST, south\r\n            if (anchorBox.left > width) {\r\n                // pos = SuggestDetailsPosition.West;\r\n                width = anchorBox.left - info.borderWidth - info.horizontalPadding;\r\n                alignEast = false;\r\n                left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);\r\n                maxSizeTop = maxSizeTop.with(width);\r\n                maxSizeBottom = maxSizeTop.with(undefined, maxSizeBottom.height);\r\n            }\r\n            // position: east, west, SOUTH\r\n            if (anchorBox.width > width * 1.3 && bodyBox.height - (anchorBox.top + anchorBox.height) > anchorBox.height) {\r\n                width = anchorBox.width;\r\n                left = anchorBox.left;\r\n                top = -info.borderWidth + anchorBox.top + anchorBox.height;\r\n                maxSizeTop = new dom.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);\r\n                maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top - info.verticalPadding);\r\n                minSize = minSize.with(maxSizeTop.width);\r\n            }\r\n        }\r\n        // top/bottom placement\r\n        let height = size.height;\r\n        let maxHeight = Math.max(maxSizeTop.height, maxSizeBottom.height);\r\n        if (height > maxHeight) {\r\n            height = maxHeight;\r\n        }\r\n        let maxSize;\r\n        if (height <= maxSizeTop.height) {\r\n            alignAtTop = true;\r\n            maxSize = maxSizeTop;\r\n        }\r\n        else {\r\n            alignAtTop = false;\r\n            maxSize = maxSizeBottom;\r\n        }\r\n        this._applyTopLeft({ left, top: alignAtTop ? top : bottom - height });\r\n        this.getDomNode().style.position = 'fixed';\r\n        this._resizable.enableSashes(!alignAtTop, alignEast, alignAtTop, !alignEast);\r\n        this._resizable.minSize = minSize;\r\n        this._resizable.maxSize = maxSize;\r\n        this._resizable.layout(height, Math.min(maxSize.width, size.width));\r\n        this.widget.layout(this._resizable.size.width, this._resizable.size.height);\r\n    }\r\n    _applyTopLeft(topLeft) {\r\n        this._topLeft = topLeft;\r\n        this.getDomNode().style.left = `${this._topLeft.left}px`;\r\n        this.getDomNode().style.top = `${this._topLeft.top}px`;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuEntryActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IMenuService, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nclass StatusBarViewItem extends MenuEntryActionViewItem {\r\n    updateLabel() {\r\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\r\n        if (!kb) {\r\n            return super.updateLabel();\r\n        }\r\n        if (this.label) {\r\n            this.label.textContent = localize('ddd', '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\r\n        }\r\n    }\r\n    static symbolPrintEnter(kb) {\r\n        var _a;\r\n        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\\benter\\b/gi, '\\u23CE');\r\n    }\r\n}\r\nlet SuggestWidgetStatus = class SuggestWidgetStatus {\r\n    constructor(container, instantiationService, _menuService, _contextKeyService) {\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuDisposables = new DisposableStore();\r\n        this.element = dom.append(container, dom.$('.suggest-status-bar'));\r\n        const actionViewItemProvider = (action => {\r\n            return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\r\n        });\r\n        this._leftActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._rightActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._leftActions.domNode.classList.add('left');\r\n        this._rightActions.domNode.classList.add('right');\r\n    }\r\n    dispose() {\r\n        this._menuDisposables.dispose();\r\n        this.element.remove();\r\n    }\r\n    show() {\r\n        const menu = this._menuService.createMenu(suggestWidgetStatusbarMenu, this._contextKeyService);\r\n        const renderMenu = () => {\r\n            const left = [];\r\n            const right = [];\r\n            for (let [group, actions] of menu.getActions()) {\r\n                if (group === 'left') {\r\n                    left.push(...actions);\r\n                }\r\n                else {\r\n                    right.push(...actions);\r\n                }\r\n            }\r\n            this._leftActions.clear();\r\n            this._leftActions.push(left);\r\n            this._rightActions.clear();\r\n            this._rightActions.push(right);\r\n        };\r\n        this._menuDisposables.add(menu.onDidChange(() => renderMenu()));\r\n        this._menuDisposables.add(menu);\r\n    }\r\n    hide() {\r\n        this._menuDisposables.clear();\r\n    }\r\n};\r\nSuggestWidgetStatus = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IMenuService),\r\n    __param(3, IContextKeyService)\r\n], SuggestWidgetStatus);\r\nexport { SuggestWidgetStatus };\r\n","//#endregion\r\n//#region Utilities\r\nexport var FileKind;\r\n(function (FileKind) {\r\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\r\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\r\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\r\n})(FileKind || (FileKind = {}));\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { DataUri, basenameOrAuthority } from '../../../base/common/resources.js';\r\nimport { PLAINTEXT_MODE_ID } from '../modes/modesRegistry.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nexport function getIconClasses(modelService, modeService, resource, fileKind) {\r\n    // we always set these base classes even if we do not have a path\r\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\r\n    if (resource) {\r\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\r\n        let name;\r\n        if (resource.scheme === Schemas.data) {\r\n            const metadata = DataUri.parseMetaData(resource);\r\n            name = metadata.get(DataUri.META_DATA_LABEL);\r\n        }\r\n        else {\r\n            name = cssEscape(basenameOrAuthority(resource).toLowerCase());\r\n        }\r\n        // Folders\r\n        if (fileKind === FileKind.FOLDER) {\r\n            classes.push(`${name}-name-folder-icon`);\r\n        }\r\n        // Files\r\n        else {\r\n            // Name & Extension(s)\r\n            if (name) {\r\n                classes.push(`${name}-name-file-icon`);\r\n                // Avoid doing an explosive combination of extensions for very long filenames\r\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\r\n                // https://github.com/microsoft/vscode/issues/116199\r\n                if (name.length <= 255) {\r\n                    const dotSegments = name.split('.');\r\n                    for (let i = 1; i < dotSegments.length; i++) {\r\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\r\n                    }\r\n                }\r\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\r\n            }\r\n            // Detected Mode\r\n            const detectedModeId = detectModeId(modelService, modeService, resource);\r\n            if (detectedModeId) {\r\n                classes.push(`${cssEscape(detectedModeId)}-lang-file-icon`);\r\n            }\r\n        }\r\n    }\r\n    return classes;\r\n}\r\nexport function detectModeId(modelService, modeService, resource) {\r\n    if (!resource) {\r\n        return null; // we need a resource at least\r\n    }\r\n    let modeId = null;\r\n    // Data URI: check for encoded metadata\r\n    if (resource.scheme === Schemas.data) {\r\n        const metadata = DataUri.parseMetaData(resource);\r\n        const mime = metadata.get(DataUri.META_DATA_MIME);\r\n        if (mime) {\r\n            modeId = modeService.getModeId(mime);\r\n        }\r\n    }\r\n    // Any other URI: check for model if existing\r\n    else {\r\n        const model = modelService.getModel(resource);\r\n        if (model) {\r\n            modeId = model.getModeId();\r\n        }\r\n    }\r\n    // only take if the mode is specific (aka no just plain text)\r\n    if (modeId && modeId !== PLAINTEXT_MODE_ID) {\r\n        return modeId;\r\n    }\r\n    // otherwise fallback to path based detection\r\n    return modeService.getModeIdByFilepathOrFirstLine(resource);\r\n}\r\nexport function cssEscape(str) {\r\n    return str.replace(/[\\11\\12\\14\\15\\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport * as nls from '../../../nls.js';\r\nimport { createMatches } from '../../../base/common/filters.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { append, $, hide, show } from '../../../base/browser/dom.js';\r\nimport { IThemeService, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { completionKindToCssClass } from '../../common/modes.js';\r\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { getIconClasses } from '../../common/services/getIconClasses.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nexport function getAriaId(index) {\r\n    return `suggest-aria-id:${index}`;\r\n}\r\nexport const suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\r\nconst _completionItemColor = new (_a = class ColorExtractor {\r\n        extract(item, out) {\r\n            if (item.textLabel.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.textLabel;\r\n                return true;\r\n            }\r\n            if (item.completion.detail && item.completion.detail.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.completion.detail;\r\n                return true;\r\n            }\r\n            if (typeof item.completion.documentation === 'string') {\r\n                const match = ColorExtractor._regexRelaxed.exec(item.completion.documentation);\r\n                if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {\r\n                    out[0] = match[0];\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\r\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\r\n    _a);\r\nlet ItemRenderer = class ItemRenderer {\r\n    constructor(_editor, _modelService, _modeService, _themeService) {\r\n        this._editor = _editor;\r\n        this._modelService = _modelService;\r\n        this._modeService = _modeService;\r\n        this._themeService = _themeService;\r\n        this._onDidToggleDetails = new Emitter();\r\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\r\n        this.templateId = 'suggestion';\r\n    }\r\n    dispose() {\r\n        this._onDidToggleDetails.dispose();\r\n    }\r\n    renderTemplate(container) {\r\n        const data = Object.create(null);\r\n        data.disposables = new DisposableStore();\r\n        data.root = container;\r\n        data.root.classList.add('show-file-icons');\r\n        data.icon = append(container, $('.icon'));\r\n        data.colorspan = append(data.icon, $('span.colorspan'));\r\n        const text = append(container, $('.contents'));\r\n        const main = append(text, $('.main'));\r\n        data.iconContainer = append(main, $('.icon-label.codicon'));\r\n        data.left = append(main, $('span.left'));\r\n        data.right = append(main, $('span.right'));\r\n        data.iconLabel = new IconLabel(data.left, { supportHighlights: true, supportIcons: true });\r\n        data.disposables.add(data.iconLabel);\r\n        data.parametersLabel = append(data.left, $('span.signature-label'));\r\n        data.qualifierLabel = append(data.left, $('span.qualifier-label'));\r\n        data.detailsLabel = append(data.right, $('span.details-label'));\r\n        data.readMore = append(data.right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\r\n        data.readMore.title = nls.localize('readMore', \"Read More\");\r\n        const configureFont = () => {\r\n            const options = this._editor.getOptions();\r\n            const fontInfo = options.get(42 /* fontInfo */);\r\n            const fontFamily = fontInfo.fontFamily;\r\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n            const fontSize = options.get(107 /* suggestFontSize */) || fontInfo.fontSize;\r\n            const lineHeight = options.get(108 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n            const fontWeight = fontInfo.fontWeight;\r\n            const fontSizePx = `${fontSize}px`;\r\n            const lineHeightPx = `${lineHeight}px`;\r\n            data.root.style.fontSize = fontSizePx;\r\n            data.root.style.fontWeight = fontWeight;\r\n            main.style.fontFamily = fontFamily;\r\n            main.style.fontFeatureSettings = fontFeatureSettings;\r\n            main.style.lineHeight = lineHeightPx;\r\n            data.icon.style.height = lineHeightPx;\r\n            data.icon.style.width = lineHeightPx;\r\n            data.readMore.style.height = lineHeightPx;\r\n            data.readMore.style.width = lineHeightPx;\r\n        };\r\n        configureFont();\r\n        data.disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(42 /* fontInfo */) || e.hasChanged(107 /* suggestFontSize */) || e.hasChanged(108 /* suggestLineHeight */)) {\r\n                configureFont();\r\n            }\r\n        }));\r\n        return data;\r\n    }\r\n    renderElement(element, index, data) {\r\n        const { completion } = element;\r\n        data.root.id = getAriaId(index);\r\n        data.colorspan.style.backgroundColor = '';\r\n        const labelOptions = {\r\n            labelEscapeNewLines: true,\r\n            matches: createMatches(element.score)\r\n        };\r\n        let color = [];\r\n        if (completion.kind === 19 /* Color */ && _completionItemColor.extract(element, color)) {\r\n            // special logic for 'color' completion items\r\n            data.icon.className = 'icon customcolor';\r\n            data.iconContainer.className = 'icon hide';\r\n            data.colorspan.style.backgroundColor = color[0];\r\n        }\r\n        else if (completion.kind === 20 /* File */ && this._themeService.getFileIconTheme().hasFileIcons) {\r\n            // special logic for 'file' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            const labelClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\r\n            const detailClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\r\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\r\n        }\r\n        else if (completion.kind === 23 /* Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\r\n            // special logic for 'folder' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            labelOptions.extraClasses = flatten([\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\r\n            ]);\r\n        }\r\n        else {\r\n            // normal icon\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = '';\r\n            data.iconContainer.classList.add('suggest-icon', ...completionKindToCssClass(completion.kind).split(' '));\r\n        }\r\n        if (completion.tags && completion.tags.indexOf(1 /* Deprecated */) >= 0) {\r\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\r\n            labelOptions.matches = [];\r\n        }\r\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\r\n        if (typeof completion.label === 'string') {\r\n            data.parametersLabel.textContent = '';\r\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\r\n            data.root.classList.add('string-label');\r\n        }\r\n        else {\r\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\r\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\r\n            data.root.classList.remove('string-label');\r\n        }\r\n        if (this._editor.getOption(106 /* suggest */).showInlineDetails) {\r\n            show(data.detailsLabel);\r\n        }\r\n        else {\r\n            hide(data.detailsLabel);\r\n        }\r\n        if (canExpandCompletionItem(element)) {\r\n            data.right.classList.add('can-expand-details');\r\n            show(data.readMore);\r\n            data.readMore.onmousedown = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            };\r\n            data.readMore.onclick = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                this._onDidToggleDetails.fire();\r\n            };\r\n        }\r\n        else {\r\n            data.right.classList.remove('can-expand-details');\r\n            hide(data.readMore);\r\n            data.readMore.onmousedown = null;\r\n            data.readMore.onclick = null;\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.disposables.dispose();\r\n    }\r\n};\r\nItemRenderer = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IModeService),\r\n    __param(3, IThemeService)\r\n], ItemRenderer);\r\nexport { ItemRenderer };\r\nfunction stripNewLines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/suggest.css';\r\nimport '../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport * as nls from '../../../nls.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Context as SuggestContext } from './suggest.js';\r\nimport { attachListStyler } from '../../../platform/theme/common/styler.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorWidgetBackground, quickInputListFocusBackground, activeContrastBorder, listHighlightForeground, editorForeground, editorWidgetBorder, focusBorder, textLinkForeground, textCodeBlockBackground, quickInputListFocusForeground, listFocusHighlightForeground, quickInputListFocusIconForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { TimeoutTimer, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { SuggestDetailsWidget, canExpandCompletionItem, SuggestDetailsOverlay } from './suggestWidgetDetails.js';\r\nimport { SuggestWidgetStatus } from './suggestWidgetStatus.js';\r\nimport { getAriaId, ItemRenderer } from './suggestWidgetRenderer.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { clamp } from '../../../base/common/numbers.js';\r\n/**\r\n * Suggest widget colors\r\n */\r\nexport const editorSuggestWidgetBackground = registerColor('editorSuggestWidget.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\r\nexport const editorSuggestWidgetBorder = registerColor('editorSuggestWidget.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\r\nexport const editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', { dark: editorForeground, light: editorForeground, hc: editorForeground }, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedForeground = registerColor('editorSuggestWidget.selectedForeground', { dark: quickInputListFocusForeground, light: quickInputListFocusForeground, hc: quickInputListFocusForeground }, nls.localize('editorSuggestWidgetSelectedForeground', 'Foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedIconForeground = registerColor('editorSuggestWidget.selectedIconForeground', { dark: quickInputListFocusIconForeground, light: quickInputListFocusIconForeground, hc: quickInputListFocusIconForeground }, nls.localize('editorSuggestWidgetSelectedIconForeground', 'Icon foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', { dark: quickInputListFocusBackground, light: quickInputListFocusBackground, hc: quickInputListFocusBackground }, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightForeground = registerColor('editorSuggestWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hc: listHighlightForeground }, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightFocusForeground = registerColor('editorSuggestWidget.focusHighlightForeground', { dark: listFocusHighlightForeground, light: listFocusHighlightForeground, hc: listFocusHighlightForeground }, nls.localize('editorSuggestWidgetFocusHighlightForeground', 'Color of the match highlights in the suggest widget when an item is focused.'));\r\nclass PersistedWidgetSize {\r\n    constructor(_service, editor) {\r\n        this._service = _service;\r\n        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof EmbeddedCodeEditorWidget}`;\r\n    }\r\n    restore() {\r\n        var _a;\r\n        const raw = (_a = this._service.get(this._key, 0 /* GLOBAL */)) !== null && _a !== void 0 ? _a : '';\r\n        try {\r\n            const obj = JSON.parse(raw);\r\n            if (dom.Dimension.is(obj)) {\r\n                return dom.Dimension.lift(obj);\r\n            }\r\n        }\r\n        catch (_b) {\r\n            // ignore\r\n        }\r\n        return undefined;\r\n    }\r\n    store(size) {\r\n        this._service.store(this._key, JSON.stringify(size), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n    }\r\n    reset() {\r\n        this._service.remove(this._key, 0 /* GLOBAL */);\r\n    }\r\n}\r\nlet SuggestWidget = class SuggestWidget {\r\n    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService) {\r\n        this.editor = editor;\r\n        this._storageService = _storageService;\r\n        this._state = 0 /* Hidden */;\r\n        this._isAuto = false;\r\n        this._ignoreFocusEvents = false;\r\n        this._forceRenderingAbove = false;\r\n        this._explainMode = false;\r\n        this._showTimeout = new TimeoutTimer();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidSelect = new Emitter();\r\n        this._onDidFocus = new Emitter();\r\n        this._onDidHide = new Emitter();\r\n        this._onDidShow = new Emitter();\r\n        this.onDidSelect = this._onDidSelect.event;\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this.onDidHide = this._onDidHide.event;\r\n        this.onDidShow = this._onDidShow.event;\r\n        this._onDetailsKeydown = new Emitter();\r\n        this.onDetailsKeyDown = this._onDetailsKeydown.event;\r\n        this.element = new ResizableHTMLElement();\r\n        this.element.domNode.classList.add('editor-widget', 'suggest-widget');\r\n        this._contentWidget = new SuggestContentWidget(this, editor);\r\n        this._persistedSize = new PersistedWidgetSize(_storageService, editor);\r\n        class ResizeState {\r\n            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false) {\r\n                this.persistedSize = persistedSize;\r\n                this.currentSize = currentSize;\r\n                this.persistHeight = persistHeight;\r\n                this.persistWidth = persistWidth;\r\n            }\r\n        }\r\n        let state;\r\n        this._disposables.add(this.element.onDidWillResize(() => {\r\n            this._contentWidget.lockPreference();\r\n            state = new ResizeState(this._persistedSize.restore(), this.element.size);\r\n        }));\r\n        this._disposables.add(this.element.onDidResize(e => {\r\n            var _a, _b, _c, _d;\r\n            this._resize(e.dimension.width, e.dimension.height);\r\n            if (state) {\r\n                state.persistHeight = state.persistHeight || !!e.north || !!e.south;\r\n                state.persistWidth = state.persistWidth || !!e.east || !!e.west;\r\n            }\r\n            if (!e.done) {\r\n                return;\r\n            }\r\n            if (state) {\r\n                // only store width or height value that have changed and also\r\n                // only store changes that are above a certain threshold\r\n                const { itemHeight, defaultSize } = this.getLayoutInfo();\r\n                const threshold = Math.round(itemHeight / 2);\r\n                let { width, height } = this.element.size;\r\n                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\r\n                    height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;\r\n                }\r\n                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\r\n                    width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;\r\n                }\r\n                this._persistedSize.store(new dom.Dimension(width, height));\r\n            }\r\n            // reset working state\r\n            this._contentWidget.unlockPreference();\r\n            state = undefined;\r\n        }));\r\n        this._messageElement = dom.append(this.element.domNode, dom.$('.message'));\r\n        this._listElement = dom.append(this.element.domNode, dom.$('.tree'));\r\n        const details = instantiationService.createInstance(SuggestDetailsWidget, this.editor);\r\n        details.onDidClose(this.toggleDetails, this, this._disposables);\r\n        this._details = new SuggestDetailsOverlay(details, this.editor);\r\n        const applyIconStyle = () => this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(106 /* suggest */).showIcons);\r\n        applyIconStyle();\r\n        const renderer = instantiationService.createInstance(ItemRenderer, this.editor);\r\n        this._disposables.add(renderer);\r\n        this._disposables.add(renderer.onDidToggleDetails(() => this.toggleDetails()));\r\n        this._list = new List('SuggestWidget', this._listElement, {\r\n            getHeight: (_element) => this.getLayoutInfo().itemHeight,\r\n            getTemplateId: (_element) => 'suggestion'\r\n        }, [renderer], {\r\n            alwaysConsumeMouseWheel: true,\r\n            useShadows: false,\r\n            mouseSupport: false,\r\n            accessibilityProvider: {\r\n                getRole: () => 'option',\r\n                getAriaLabel: (item) => {\r\n                    if (item.isResolved && this._isDetailsVisible()) {\r\n                        const { documentation, detail } = item.completion;\r\n                        const docs = strings.format('{0}{1}', detail || '', documentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\r\n                        return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", item.textLabel, docs);\r\n                    }\r\n                    else {\r\n                        return item.textLabel;\r\n                    }\r\n                },\r\n                getWidgetAriaLabel: () => nls.localize('suggest', \"Suggest\"),\r\n                getWidgetRole: () => 'listbox'\r\n            }\r\n        });\r\n        this._status = instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode);\r\n        const applyStatusBarStyle = () => this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(106 /* suggest */).showStatusBar);\r\n        applyStatusBarStyle();\r\n        this._disposables.add(attachListStyler(this._list, _themeService, {\r\n            listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\r\n            listInactiveFocusOutline: activeContrastBorder\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(t => this._onThemeChange(t)));\r\n        this._onThemeChange(_themeService.getColorTheme());\r\n        this._disposables.add(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onTap(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onDidChangeSelection(e => this._onListSelection(e)));\r\n        this._disposables.add(this._list.onDidChangeFocus(e => this._onListFocus(e)));\r\n        this._disposables.add(this.editor.onDidChangeCursorSelection(() => this._onCursorSelectionChanged()));\r\n        this._disposables.add(this.editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(106 /* suggest */)) {\r\n                applyStatusBarStyle();\r\n                applyIconStyle();\r\n            }\r\n        }));\r\n        this._ctxSuggestWidgetVisible = SuggestContext.Visible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetDetailsVisible = SuggestContext.DetailsVisible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(_contextKeyService);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._details.widget.domNode, 'keydown', e => {\r\n            this._onDetailsKeydown.fire(e);\r\n        }));\r\n        this._disposables.add(this.editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._details.widget.dispose();\r\n        this._details.dispose();\r\n        this._list.dispose();\r\n        this._status.dispose();\r\n        this._disposables.dispose();\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._showTimeout.dispose();\r\n        this._contentWidget.dispose();\r\n        this.element.dispose();\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        if (this._details.widget.domNode.contains(mouseEvent.target.element)) {\r\n            // Clicking inside details\r\n            this._details.widget.domNode.focus();\r\n        }\r\n        else {\r\n            // Clicking outside details and inside suggest\r\n            if (this.element.domNode.contains(mouseEvent.target.element)) {\r\n                this.editor.focus();\r\n            }\r\n        }\r\n    }\r\n    _onCursorSelectionChanged() {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            this._contentWidget.layout();\r\n        }\r\n    }\r\n    _onListMouseDownOrTap(e) {\r\n        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\r\n            return;\r\n        }\r\n        // prevent stealing browser focus from the editor\r\n        e.browserEvent.preventDefault();\r\n        e.browserEvent.stopPropagation();\r\n        this._select(e.element, e.index);\r\n    }\r\n    _onListSelection(e) {\r\n        if (e.elements.length) {\r\n            this._select(e.elements[0], e.indexes[0]);\r\n        }\r\n    }\r\n    _select(item, index) {\r\n        const completionModel = this._completionModel;\r\n        if (completionModel) {\r\n            this._onDidSelect.fire({ item, index, model: completionModel });\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    _onThemeChange(theme) {\r\n        const backgroundColor = theme.getColor(editorSuggestWidgetBackground);\r\n        if (backgroundColor) {\r\n            this.element.domNode.style.backgroundColor = backgroundColor.toString();\r\n            this._messageElement.style.backgroundColor = backgroundColor.toString();\r\n            this._details.widget.domNode.style.backgroundColor = backgroundColor.toString();\r\n        }\r\n        const borderColor = theme.getColor(editorSuggestWidgetBorder);\r\n        if (borderColor) {\r\n            this.element.domNode.style.borderColor = borderColor.toString();\r\n            this._messageElement.style.borderColor = borderColor.toString();\r\n            this._status.element.style.borderTopColor = borderColor.toString();\r\n            this._details.widget.domNode.style.borderColor = borderColor.toString();\r\n            this._detailsBorderColor = borderColor.toString();\r\n        }\r\n        const focusBorderColor = theme.getColor(focusBorder);\r\n        if (focusBorderColor) {\r\n            this._detailsFocusBorderColor = focusBorderColor.toString();\r\n        }\r\n        this._details.widget.borderWidth = theme.type === 'hc' ? 2 : 1;\r\n    }\r\n    _onListFocus(e) {\r\n        var _a;\r\n        if (this._ignoreFocusEvents) {\r\n            return;\r\n        }\r\n        if (!e.elements.length) {\r\n            if (this._currentSuggestionDetails) {\r\n                this._currentSuggestionDetails.cancel();\r\n                this._currentSuggestionDetails = undefined;\r\n                this._focusedItem = undefined;\r\n            }\r\n            this.editor.setAriaOptions({ activeDescendant: undefined });\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            return;\r\n        }\r\n        const item = e.elements[0];\r\n        const index = e.indexes[0];\r\n        if (item !== this._focusedItem) {\r\n            (_a = this._currentSuggestionDetails) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._currentSuggestionDetails = undefined;\r\n            this._focusedItem = item;\r\n            this._list.reveal(index);\r\n            this._currentSuggestionDetails = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                const loading = disposableTimeout(() => {\r\n                    if (this._isDetailsVisible()) {\r\n                        this.showDetails(true);\r\n                    }\r\n                }, 250);\r\n                token.onCancellationRequested(() => loading.dispose());\r\n                const result = yield item.resolve(token);\r\n                loading.dispose();\r\n                return result;\r\n            }));\r\n            this._currentSuggestionDetails.then(() => {\r\n                if (index >= this._list.length || item !== this._list.element(index)) {\r\n                    return;\r\n                }\r\n                // item can have extra information, so re-render\r\n                this._ignoreFocusEvents = true;\r\n                this._list.splice(index, 1, [item]);\r\n                this._list.setFocus([index]);\r\n                this._ignoreFocusEvents = false;\r\n                if (this._isDetailsVisible()) {\r\n                    this.showDetails(false);\r\n                }\r\n                else {\r\n                    this.element.domNode.classList.remove('docs-side');\r\n                }\r\n                this.editor.setAriaOptions({ activeDescendant: getAriaId(index) });\r\n            }).catch(onUnexpectedError);\r\n        }\r\n        // emit an event\r\n        this._onDidFocus.fire({ item, index, model: this._completionModel });\r\n    }\r\n    _setState(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        this._state = state;\r\n        this.element.domNode.classList.toggle('frozen', state === 4 /* Frozen */);\r\n        this.element.domNode.classList.remove('message');\r\n        switch (state) {\r\n            case 0 /* Hidden */:\r\n                dom.hide(this._messageElement, this._listElement, this._status.element);\r\n                this._details.hide(true);\r\n                this._status.hide();\r\n                this._contentWidget.hide();\r\n                this._ctxSuggestWidgetVisible.reset();\r\n                this._ctxSuggestWidgetMultipleSuggestions.reset();\r\n                this._showTimeout.cancel();\r\n                this.element.domNode.classList.remove('visible');\r\n                this._list.splice(0, this._list.length);\r\n                this._focusedItem = undefined;\r\n                this._cappedHeight = undefined;\r\n                this._explainMode = false;\r\n                break;\r\n            case 1 /* Loading */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.LOADING_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 2 /* Empty */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.NO_SUGGESTIONS_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 3 /* Open */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 4 /* Frozen */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 5 /* Details */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._details.show();\r\n                this._show();\r\n                break;\r\n        }\r\n    }\r\n    _show() {\r\n        this._status.show();\r\n        this._contentWidget.show();\r\n        this._layout(this._persistedSize.restore());\r\n        this._ctxSuggestWidgetVisible.set(true);\r\n        this._showTimeout.cancelAndSet(() => {\r\n            this.element.domNode.classList.add('visible');\r\n            this._onDidShow.fire(this);\r\n        }, 100);\r\n    }\r\n    showTriggered(auto, delay) {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            return;\r\n        }\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        this._isAuto = !!auto;\r\n        if (!this._isAuto) {\r\n            this._loadingTimeout = disposableTimeout(() => this._setState(1 /* Loading */), delay);\r\n        }\r\n    }\r\n    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto) {\r\n        var _a, _b;\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentSuggestionDetails) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._currentSuggestionDetails = undefined;\r\n        if (this._completionModel !== completionModel) {\r\n            this._completionModel = completionModel;\r\n        }\r\n        if (isFrozen && this._state !== 2 /* Empty */ && this._state !== 0 /* Hidden */) {\r\n            this._setState(4 /* Frozen */);\r\n            return;\r\n        }\r\n        const visibleCount = this._completionModel.items.length;\r\n        const isEmpty = visibleCount === 0;\r\n        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\r\n        if (isEmpty) {\r\n            this._setState(isAuto ? 0 /* Hidden */ : 2 /* Empty */);\r\n            this._completionModel = undefined;\r\n            return;\r\n        }\r\n        this._focusedItem = undefined;\r\n        this._list.splice(0, this._list.length, this._completionModel.items);\r\n        this._setState(isFrozen ? 4 /* Frozen */ : 3 /* Open */);\r\n        this._list.reveal(selectionIndex, 0);\r\n        this._list.setFocus([selectionIndex]);\r\n        this._layout(this.element.size);\r\n        // Reset focus border\r\n        if (this._detailsBorderColor) {\r\n            this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n        }\r\n    }\r\n    selectNextPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageDown();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNextPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectNext() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNext(1, true);\r\n                return true;\r\n        }\r\n    }\r\n    selectLast() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollBottom();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusLast();\r\n                return true;\r\n        }\r\n    }\r\n    selectPreviousPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageUp();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPreviousPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectPrevious() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPrevious(1, true);\r\n                return false;\r\n        }\r\n    }\r\n    selectFirst() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollTop();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusFirst();\r\n                return true;\r\n        }\r\n    }\r\n    getFocusedItem() {\r\n        if (this._state !== 0 /* Hidden */\r\n            && this._state !== 2 /* Empty */\r\n            && this._state !== 1 /* Loading */\r\n            && this._completionModel) {\r\n            return {\r\n                item: this._list.getFocusedElements()[0],\r\n                index: this._list.getFocus()[0],\r\n                model: this._completionModel\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    toggleDetailsFocus() {\r\n        if (this._state === 5 /* Details */) {\r\n            this._setState(3 /* Open */);\r\n            if (this._detailsBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n            }\r\n        }\r\n        else if (this._state === 3 /* Open */ && this._isDetailsVisible()) {\r\n            this._setState(5 /* Details */);\r\n            if (this._detailsFocusBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsFocusBorderColor;\r\n            }\r\n        }\r\n    }\r\n    toggleDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            // hide details widget\r\n            this._ctxSuggestWidgetDetailsVisible.set(false);\r\n            this._setDetailsVisible(false);\r\n            this._details.hide();\r\n            this.element.domNode.classList.remove('shows-details');\r\n        }\r\n        else if ((canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* Open */ || this._state === 5 /* Details */ || this._state === 4 /* Frozen */)) {\r\n            // show details widget (iff possible)\r\n            this._ctxSuggestWidgetDetailsVisible.set(true);\r\n            this._setDetailsVisible(true);\r\n            this.showDetails(false);\r\n        }\r\n    }\r\n    showDetails(loading) {\r\n        this._details.show();\r\n        if (loading) {\r\n            this._details.widget.renderLoading();\r\n        }\r\n        else {\r\n            this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);\r\n        }\r\n        this._positionDetails();\r\n        this.editor.focus();\r\n        this.element.domNode.classList.add('shows-details');\r\n    }\r\n    toggleExplainMode() {\r\n        if (this._list.getFocusedElements()[0]) {\r\n            this._explainMode = !this._explainMode;\r\n            if (!this._isDetailsVisible()) {\r\n                this.toggleDetails();\r\n            }\r\n            else {\r\n                this.showDetails(false);\r\n            }\r\n        }\r\n    }\r\n    resetPersistedSize() {\r\n        this._persistedSize.reset();\r\n    }\r\n    hideWidget() {\r\n        var _a;\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._setState(0 /* Hidden */);\r\n        this._onDidHide.fire(this);\r\n        this.element.clearSashHoverState();\r\n        // ensure that a reasonable widget height is persisted so that\r\n        // accidential \"resize-to-single-items\" cases aren't happening\r\n        const dim = this._persistedSize.restore();\r\n        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);\r\n        if (dim && dim.height < minPersistedHeight) {\r\n            this._persistedSize.store(dim.with(undefined, minPersistedHeight));\r\n        }\r\n    }\r\n    isFrozen() {\r\n        return this._state === 4 /* Frozen */;\r\n    }\r\n    _afterRender(position) {\r\n        if (position === null) {\r\n            if (this._isDetailsVisible()) {\r\n                this._details.hide(); //todo@jrieken soft-hide\r\n            }\r\n            return;\r\n        }\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // no special positioning when widget isn't showing list\r\n            return;\r\n        }\r\n        if (this._isDetailsVisible()) {\r\n            this._details.show();\r\n        }\r\n        this._positionDetails();\r\n    }\r\n    _layout(size) {\r\n        var _a, _b, _c;\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this.editor.getDomNode()) {\r\n            // happens when running tests\r\n            return;\r\n        }\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.getLayoutInfo();\r\n        if (!size) {\r\n            size = info.defaultSize;\r\n        }\r\n        let height = size.height;\r\n        let width = size.width;\r\n        // status bar\r\n        this._status.element.style.lineHeight = `${info.itemHeight}px`;\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // showing a message only\r\n            height = info.itemHeight + info.borderHeight;\r\n            width = info.defaultSize.width / 2;\r\n            this.element.enableSashes(false, false, false, false);\r\n            this.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\r\n            this._contentWidget.setPreference(2 /* BELOW */);\r\n        }\r\n        else {\r\n            // showing items\r\n            // width math\r\n            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\r\n            if (width > maxWidth) {\r\n                width = maxWidth;\r\n            }\r\n            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\r\n            // height math\r\n            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\r\n            const minHeight = info.itemHeight + info.statusBarHeight;\r\n            const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\r\n            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\r\n            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\r\n            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\r\n            const availableSpaceAbove = editorBox.top + cursorBox.top - info.verticalPadding;\r\n            const maxHeightAbove = Math.min(availableSpaceAbove, fullHeight);\r\n            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\r\n            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) {\r\n                // Restore the old (wanted) height when the current\r\n                // height is capped to fit\r\n                height = this._cappedHeight.wanted;\r\n            }\r\n            if (height < minHeight) {\r\n                height = minHeight;\r\n            }\r\n            if (height > maxHeight) {\r\n                height = maxHeight;\r\n            }\r\n            const forceRenderingAboveRequiredSpace = 150;\r\n            if (height > maxHeightBelow || (this._forceRenderingAbove && availableSpaceAbove > forceRenderingAboveRequiredSpace)) {\r\n                this._contentWidget.setPreference(1 /* ABOVE */);\r\n                this.element.enableSashes(true, true, false, false);\r\n                maxHeight = maxHeightAbove;\r\n            }\r\n            else {\r\n                this._contentWidget.setPreference(2 /* BELOW */);\r\n                this.element.enableSashes(false, true, true, false);\r\n                maxHeight = maxHeightBelow;\r\n            }\r\n            this.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\r\n            this.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\r\n            this.element.minSize = new dom.Dimension(220, minHeight);\r\n            // Know when the height was capped to fit and remember\r\n            // the wanted height for later. This is required when going\r\n            // left to widen suggestions.\r\n            this._cappedHeight = height === fullHeight\r\n                ? { wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height, capped: height }\r\n                : undefined;\r\n        }\r\n        this._resize(width, height);\r\n    }\r\n    _resize(width, height) {\r\n        const { width: maxWidth, height: maxHeight } = this.element.maxSize;\r\n        width = Math.min(maxWidth, width);\r\n        height = Math.min(maxHeight, height);\r\n        const { statusBarHeight } = this.getLayoutInfo();\r\n        this._list.layout(height - statusBarHeight, width);\r\n        this._listElement.style.height = `${height - statusBarHeight}px`;\r\n        this.element.layout(height, width);\r\n        this._contentWidget.layout();\r\n        this._positionDetails();\r\n    }\r\n    _positionDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            this._details.placeAtAnchor(this.element.domNode);\r\n        }\r\n    }\r\n    getLayoutInfo() {\r\n        const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n        const itemHeight = clamp(this.editor.getOption(108 /* suggestLineHeight */) || fontInfo.lineHeight, 8, 1000);\r\n        const statusBarHeight = !this.editor.getOption(106 /* suggest */).showStatusBar || this._state === 2 /* Empty */ || this._state === 1 /* Loading */ ? 0 : itemHeight;\r\n        const borderWidth = this._details.widget.borderWidth;\r\n        const borderHeight = 2 * borderWidth;\r\n        return {\r\n            itemHeight,\r\n            statusBarHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14,\r\n            defaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\r\n        };\r\n    }\r\n    _isDetailsVisible() {\r\n        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* GLOBAL */, false);\r\n    }\r\n    _setDetailsVisible(value) {\r\n        this._storageService.store('expandSuggestionDocs', value, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    forceRenderingAbove() {\r\n        if (!this._forceRenderingAbove) {\r\n            this._forceRenderingAbove = true;\r\n            this._layout(this._persistedSize.restore());\r\n        }\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this._forceRenderingAbove = false;\r\n    }\r\n};\r\nSuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\r\nSuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\r\nSuggestWidget = __decorate([\r\n    __param(1, IStorageService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IThemeService),\r\n    __param(4, IInstantiationService)\r\n], SuggestWidget);\r\nexport { SuggestWidget };\r\nexport class SuggestContentWidget {\r\n    constructor(_widget, _editor) {\r\n        this._widget = _widget;\r\n        this._editor = _editor;\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._preferenceLocked = false;\r\n        this._added = false;\r\n        this._hidden = false;\r\n    }\r\n    dispose() {\r\n        if (this._added) {\r\n            this._added = false;\r\n            this._editor.removeContentWidget(this);\r\n        }\r\n    }\r\n    getId() {\r\n        return 'editor.widget.suggestWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._widget.element.domNode;\r\n    }\r\n    show() {\r\n        this._hidden = false;\r\n        if (!this._added) {\r\n            this._added = true;\r\n            this._editor.addContentWidget(this);\r\n        }\r\n    }\r\n    hide() {\r\n        if (!this._hidden) {\r\n            this._hidden = true;\r\n            this.layout();\r\n        }\r\n    }\r\n    layout() {\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this._hidden || !this._position || !this._preference) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [this._preference]\r\n        };\r\n    }\r\n    beforeRender() {\r\n        const { height, width } = this._widget.element.size;\r\n        const { borderWidth, horizontalPadding } = this._widget.getLayoutInfo();\r\n        return new dom.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);\r\n    }\r\n    afterRender(position) {\r\n        this._widget._afterRender(position);\r\n    }\r\n    setPreference(preference) {\r\n        if (!this._preferenceLocked) {\r\n            this._preference = preference;\r\n        }\r\n    }\r\n    lockPreference() {\r\n        this._preferenceLocked = true;\r\n    }\r\n    unlockPreference() {\r\n        this._preferenceLocked = false;\r\n    }\r\n    setPosition(position) {\r\n        this._position = position;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const matchHighlight = theme.getColor(editorSuggestWidgetHighlightForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label .highlight { color: ${matchHighlight}; }`);\r\n    }\r\n    const matchHighlightFocus = theme.getColor(editorSuggestWidgetHighlightFocusForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .monaco-highlighted-label .highlight { color: ${matchHighlightFocus}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorSuggestWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget, .monaco-editor .suggest-details { color: ${foreground}; }`);\r\n    }\r\n    const selectedForeground = theme.getColor(editorSuggestWidgetSelectedForeground);\r\n    if (selectedForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused { color: ${selectedForeground}; }`);\r\n    }\r\n    const selectedIconForeground = theme.getColor(editorSuggestWidgetSelectedIconForeground);\r\n    if (selectedIconForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .codicon { color: ${selectedIconForeground}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .suggest-details a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .suggest-details a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .suggest-details code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nlet WordContextKey = class WordContextKey {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._enabled = false;\r\n        this._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\r\n        this._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(111 /* tabCompletion */) && this._update());\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._configListener.dispose();\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._ckAtEnd.reset();\r\n    }\r\n    _update() {\r\n        // only update this when tab completions are enabled\r\n        const enabled = this._editor.getOption(111 /* tabCompletion */) === 'on';\r\n        if (this._enabled === enabled) {\r\n            return;\r\n        }\r\n        this._enabled = enabled;\r\n        if (this._enabled) {\r\n            const checkForWordEnd = () => {\r\n                if (!this._editor.hasModel()) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const selection = this._editor.getSelection();\r\n                const word = model.getWordAtPosition(selection.getStartPosition());\r\n                if (!word) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\r\n            };\r\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\r\n            checkForWordEnd();\r\n        }\r\n        else if (this._selectionListener) {\r\n            this._ckAtEnd.reset();\r\n            this._selectionListener.dispose();\r\n            this._selectionListener = undefined;\r\n        }\r\n    }\r\n};\r\nWordContextKey.AtEnd = new RawContextKey('atEndOfWord', false);\r\nWordContextKey = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordContextKey);\r\nexport { WordContextKey };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nexport class CommitCharacterController {\r\n    constructor(editor, widget, accept) {\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(text => {\r\n            if (this._active && !widget.isFrozen()) {\r\n                const ch = text.charCodeAt(text.length - 1);\r\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    _onItem(selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        const acceptCharacters = new CharacterSet();\r\n        for (const ch of selected.item.completion.commitCharacters) {\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters, item: selected };\r\n    }\r\n    reset() {\r\n        this._active = undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nexport class OvertypingCapturer {\r\n    constructor(editor, suggestModel) {\r\n        this._disposables = new DisposableStore();\r\n        this._lastOvertyped = [];\r\n        this._empty = true;\r\n        this._disposables.add(editor.onWillType(() => {\r\n            if (!this._empty) {\r\n                return;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = editor.getSelections();\r\n            const selectionsLength = selections.length;\r\n            // Check if it will overtype any selections\r\n            let willOvertype = false;\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                if (!selections[i].isEmpty()) {\r\n                    willOvertype = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!willOvertype) {\r\n                return;\r\n            }\r\n            this._lastOvertyped = [];\r\n            const model = editor.getModel();\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                const selection = selections[i];\r\n                // Check for overtyping capturer restrictions\r\n                if (model.getValueLengthInRange(selection) > OvertypingCapturer._maxSelectionLength) {\r\n                    return;\r\n                }\r\n                this._lastOvertyped[i] = { value: model.getValueInRange(selection), multiline: selection.startLineNumber !== selection.endLineNumber };\r\n            }\r\n            this._empty = false;\r\n        }));\r\n        this._disposables.add(suggestModel.onDidCancel(e => {\r\n            if (!this._empty && !e.retrigger) {\r\n                this._empty = true;\r\n            }\r\n        }));\r\n    }\r\n    getLastOvertypedInfo(idx) {\r\n        if (!this._empty && idx >= 0 && idx < this._lastOvertyped.length) {\r\n            return this._lastOvertyped[idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\nOvertypingCapturer._maxSelectionLength = 51200;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { SimpleKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { dispose, DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { ISuggestMemoryService } from './suggestMemory.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService, CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { SuggestAlternatives } from './suggestAlternatives.js';\r\nimport { SuggestModel } from './suggestModel.js';\r\nimport { SuggestWidget } from './suggestWidget.js';\r\nimport { WordContextKey } from './wordContextKey.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { IdleValue } from '../../../base/common/async.js';\r\nimport { isObject, assertType } from '../../../base/common/types.js';\r\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\r\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n// sticky suggest widget which doesn't disappear on focus out and such\r\nlet _sticky = false;\r\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\r\nclass LineSuffix {\r\n    constructor(_model, _position) {\r\n        this._model = _model;\r\n        this._position = _position;\r\n        // spy on what's happening right of the cursor. two cases:\r\n        // 1. end of line -> check that it's still end of line\r\n        // 2. mid of line -> add a marker and compute the delta\r\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\r\n        if (maxColumn !== _position.column) {\r\n            const offset = _model.getOffsetAt(_position);\r\n            const end = _model.getPositionAt(offset + 1);\r\n            this._marker = _model.deltaDecorations([], [{\r\n                    range: Range.fromPositions(_position, end),\r\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }\r\n                }]);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._marker && !this._model.isDisposed()) {\r\n            this._model.deltaDecorations(this._marker, []);\r\n        }\r\n    }\r\n    delta(position) {\r\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\r\n            // bail out early if things seems fishy\r\n            return 0;\r\n        }\r\n        // read the marker (in case suggest was triggered at line end) or compare\r\n        // the cursor to the line end.\r\n        if (this._marker) {\r\n            const range = this._model.getDecorationRange(this._marker[0]);\r\n            const end = this._model.getOffsetAt(range.getStartPosition());\r\n            return end - this._model.getOffsetAt(position);\r\n        }\r\n        else {\r\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\r\n        }\r\n    }\r\n}\r\nlet SuggestController = class SuggestController {\r\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService) {\r\n        this._memoryService = _memoryService;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._instantiationService = _instantiationService;\r\n        this._logService = _logService;\r\n        this._lineSuffix = new MutableDisposable();\r\n        this._toDispose = new DisposableStore();\r\n        this.editor = editor;\r\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\r\n        // context key: update insert/replace mode\r\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\r\n        ctxInsertMode.set(editor.getOption(106 /* suggest */).insertMode);\r\n        this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(106 /* suggest */).insertMode));\r\n        this.widget = this._toDispose.add(new IdleValue(() => {\r\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\r\n            this._toDispose.add(widget);\r\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\r\n            // Wire up logic to accept a suggestion on certain characters\r\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\r\n            this._toDispose.add(commitCharacterController);\r\n            this._toDispose.add(this.model.onDidSuggest(e => {\r\n                if (e.completionModel.items.length === 0) {\r\n                    commitCharacterController.reset();\r\n                }\r\n            }));\r\n            // Wire up makes text edit context key\r\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\r\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\r\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\r\n            this._toDispose.add(toDisposable(() => {\r\n                ctxMakesTextEdit.reset();\r\n                ctxHasInsertAndReplace.reset();\r\n                ctxCanResolve.reset();\r\n            }));\r\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\r\n                // (ctx: makesTextEdit)\r\n                const position = this.editor.getPosition();\r\n                const startColumn = item.editStart.column;\r\n                const endColumn = position.column;\r\n                let value = true;\r\n                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart'\r\n                    && this.model.state === 2 /* Auto */\r\n                    && !item.completion.command\r\n                    && !item.completion.additionalTextEdits\r\n                    && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */)\r\n                    && endColumn - startColumn === item.completion.insertText.length) {\r\n                    const oldText = this.editor.getModel().getValueInRange({\r\n                        startLineNumber: position.lineNumber,\r\n                        startColumn,\r\n                        endLineNumber: position.lineNumber,\r\n                        endColumn\r\n                    });\r\n                    value = oldText !== item.completion.insertText;\r\n                }\r\n                ctxMakesTextEdit.set(value);\r\n                // (ctx: hasInsertAndReplaceRange)\r\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\r\n                // (ctx: canResolve)\r\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\r\n            }));\r\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\r\n                // cmd + c on macOS, ctrl + c on Win / Linux\r\n                if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KEY_C */)) ||\r\n                    (platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KEY_C */)))) {\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                if (!e.toKeybinding().isModifierKey()) {\r\n                    this.editor.focus();\r\n                }\r\n            }));\r\n            return widget;\r\n        }));\r\n        // Wire up text overtyping capture\r\n        this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\r\n        }));\r\n        this._alternatives = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\r\n        }));\r\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\r\n        this._toDispose.add(this.model.onDidTrigger(e => {\r\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\r\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\r\n        }));\r\n        this._toDispose.add(this.model.onDidSuggest(e => {\r\n            if (!e.shy) {\r\n                let index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\r\n                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\r\n            }\r\n        }));\r\n        this._toDispose.add(this.model.onDidCancel(e => {\r\n            if (!e.retrigger) {\r\n                this.widget.value.hideWidget();\r\n            }\r\n        }));\r\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\r\n            if (!_sticky) {\r\n                this.model.cancel();\r\n                this.model.clear();\r\n            }\r\n        }));\r\n        // Manage the acceptSuggestionsOnEnter context key\r\n        let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\r\n        let updateFromConfig = () => {\r\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\r\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\r\n        };\r\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\r\n        updateFromConfig();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SuggestController.ID);\r\n    }\r\n    dispose() {\r\n        this._alternatives.dispose();\r\n        this._toDispose.dispose();\r\n        this.widget.dispose();\r\n        this.model.dispose();\r\n        this._lineSuffix.dispose();\r\n    }\r\n    _insertSuggestion(event, flags) {\r\n        if (!event || !event.item) {\r\n            this._alternatives.value.reset();\r\n            this.model.cancel();\r\n            this.model.clear();\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        const modelVersionNow = model.getAlternativeVersionId();\r\n        const { item } = event;\r\n        //\r\n        const tasks = [];\r\n        const cts = new CancellationTokenSource();\r\n        // pushing undo stops *before* additional text edits and\r\n        // *after* the main edit\r\n        if (!(flags & 1 /* NoBeforeUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\r\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\r\n        // keep item in memory\r\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\r\n        if (Array.isArray(item.completion.additionalTextEdits)) {\r\n            // sync additional edits\r\n            const scrollState = StableEditorScrollState.capture(this.editor);\r\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n        }\r\n        else if (!item.isResolved) {\r\n            // async additional edits\r\n            const sw = new StopWatch(true);\r\n            let position;\r\n            const docListener = model.onDidChangeContent(e => {\r\n                if (e.isFlush) {\r\n                    cts.cancel();\r\n                    docListener.dispose();\r\n                    return;\r\n                }\r\n                for (let change of e.changes) {\r\n                    const thisPosition = Range.getEndPosition(change.range);\r\n                    if (!position || Position.isBefore(thisPosition, position)) {\r\n                        position = thisPosition;\r\n                    }\r\n                }\r\n            });\r\n            let oldFlags = flags;\r\n            flags |= 2 /* NoAfterUndoStop */;\r\n            let didType = false;\r\n            let typeListener = this.editor.onWillType(() => {\r\n                typeListener.dispose();\r\n                didType = true;\r\n                if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n            });\r\n            tasks.push(item.resolve(cts.token).then(() => {\r\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\r\n                    return false;\r\n                }\r\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\r\n                    return false;\r\n                }\r\n                if (didType) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                const scrollState = StableEditorScrollState.capture(this.editor);\r\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                return true;\r\n            }).then(applied => {\r\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\r\n                docListener.dispose();\r\n                typeListener.dispose();\r\n            }));\r\n        }\r\n        let { insertText } = item.completion;\r\n        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\r\n            insertText = SnippetParser.escape(insertText);\r\n        }\r\n        SnippetController2.get(this.editor).insert(insertText, {\r\n            overwriteBefore: info.overwriteBefore,\r\n            overwriteAfter: info.overwriteAfter,\r\n            undoStopBefore: false,\r\n            undoStopAfter: false,\r\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\r\n            clipboardText: event.model.clipboardText,\r\n            overtypingCapturer: this._overtypingCapturer.value\r\n        });\r\n        if (!(flags & 2 /* NoAfterUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        if (!item.completion.command) {\r\n            // done\r\n            this.model.cancel();\r\n        }\r\n        else if (item.completion.command.id === TriggerSuggestAction.id) {\r\n            // retigger\r\n            this.model.trigger({ auto: true, shy: false }, true);\r\n        }\r\n        else {\r\n            // exec command, done\r\n            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\r\n            this.model.cancel();\r\n        }\r\n        if (flags & 4 /* KeepAlternativeSuggestions */) {\r\n            this._alternatives.value.set(event, next => {\r\n                // cancel resolving of additional edits\r\n                cts.cancel();\r\n                // this is not so pretty. when inserting the 'next'\r\n                // suggestion we undo until we are at the state at\r\n                // which we were before inserting the previous suggestion...\r\n                while (model.canUndo()) {\r\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\r\n                        model.undo();\r\n                    }\r\n                    this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\r\n                    break;\r\n                }\r\n            });\r\n        }\r\n        this._alertCompletionItem(item);\r\n        // clear only now - after all tasks are done\r\n        Promise.all(tasks).finally(() => {\r\n            this.model.clear();\r\n            cts.dispose();\r\n        });\r\n    }\r\n    getOverwriteInfo(item, toggleMode) {\r\n        assertType(this.editor.hasModel());\r\n        let replace = this.editor.getOption(106 /* suggest */).insertMode === 'replace';\r\n        if (toggleMode) {\r\n            replace = !replace;\r\n        }\r\n        const overwriteBefore = item.position.column - item.editStart.column;\r\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\r\n        const columnDelta = this.editor.getPosition().column - item.position.column;\r\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\r\n        return {\r\n            overwriteBefore: overwriteBefore + columnDelta,\r\n            overwriteAfter: overwriteAfter + suffixDelta\r\n        };\r\n    }\r\n    _alertCompletionItem(item) {\r\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\r\n            let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\r\n            alert(msg);\r\n        }\r\n    }\r\n    triggerSuggest(onlyFrom) {\r\n        if (this.editor.hasModel()) {\r\n            this.model.trigger({ auto: false, shy: false }, false, onlyFrom);\r\n            this.editor.revealLine(this.editor.getPosition().lineNumber, 0 /* Smooth */);\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    triggerSuggestAndAcceptBest(arg) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const positionNow = this.editor.getPosition();\r\n        const fallback = () => {\r\n            if (positionNow.equals(this.editor.getPosition())) {\r\n                this._commandService.executeCommand(arg.fallback);\r\n            }\r\n        };\r\n        const makesTextEdit = (item) => {\r\n            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\r\n                // snippet, other editor -> makes edit\r\n                return true;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const startColumn = item.editStart.column;\r\n            const endColumn = position.column;\r\n            if (endColumn - startColumn !== item.completion.insertText.length) {\r\n                // unequal lengths -> makes edit\r\n                return true;\r\n            }\r\n            const textNow = this.editor.getModel().getValueInRange({\r\n                startLineNumber: position.lineNumber,\r\n                startColumn,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn\r\n            });\r\n            // unequal text -> makes edit\r\n            return textNow !== item.completion.insertText;\r\n        };\r\n        Event.once(this.model.onDidTrigger)(_ => {\r\n            // wait for trigger because only then the cancel-event is trustworthy\r\n            let listener = [];\r\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\r\n                // retrigger or cancel -> try to type default text\r\n                dispose(listener);\r\n                fallback();\r\n            }, undefined, listener);\r\n            this.model.onDidSuggest(({ completionModel }) => {\r\n                dispose(listener);\r\n                if (completionModel.items.length === 0) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\r\n                const item = completionModel.items[index];\r\n                if (!makesTextEdit(item)) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                this.editor.pushUndoStop();\r\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\r\n            }, undefined, listener);\r\n        });\r\n        this.model.trigger({ auto: false, shy: true });\r\n        this.editor.revealLine(positionNow.lineNumber, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\r\n        const item = this.widget.value.getFocusedItem();\r\n        let flags = 0;\r\n        if (keepAlternativeSuggestions) {\r\n            flags |= 4 /* KeepAlternativeSuggestions */;\r\n        }\r\n        if (alternativeOverwriteConfig) {\r\n            flags |= 8 /* AlternativeOverwriteConfig */;\r\n        }\r\n        this._insertSuggestion(item, flags);\r\n    }\r\n    acceptNextSuggestion() {\r\n        this._alternatives.value.next();\r\n    }\r\n    acceptPrevSuggestion() {\r\n        this._alternatives.value.prev();\r\n    }\r\n    cancelSuggestWidget() {\r\n        this.model.cancel();\r\n        this.model.clear();\r\n        this.widget.value.hideWidget();\r\n    }\r\n    selectNextSuggestion() {\r\n        this.widget.value.selectNext();\r\n    }\r\n    selectNextPageSuggestion() {\r\n        this.widget.value.selectNextPage();\r\n    }\r\n    selectLastSuggestion() {\r\n        this.widget.value.selectLast();\r\n    }\r\n    selectPrevSuggestion() {\r\n        this.widget.value.selectPrevious();\r\n    }\r\n    selectPrevPageSuggestion() {\r\n        this.widget.value.selectPreviousPage();\r\n    }\r\n    selectFirstSuggestion() {\r\n        this.widget.value.selectFirst();\r\n    }\r\n    toggleSuggestionDetails() {\r\n        this.widget.value.toggleDetails();\r\n    }\r\n    toggleExplainMode() {\r\n        this.widget.value.toggleExplainMode();\r\n    }\r\n    toggleSuggestionFocus() {\r\n        this.widget.value.toggleDetailsFocus();\r\n    }\r\n    resetWidgetSize() {\r\n        this.widget.value.resetPersistedSize();\r\n    }\r\n    forceRenderingAbove() {\r\n        this.widget.value.forceRenderingAbove();\r\n    }\r\n    stopForceRenderingAbove() {\r\n        if (!this.widget.isInitialized) {\r\n            // This method has no effect if the widget is not initialized yet.\r\n            return;\r\n        }\r\n        this.widget.value.stopForceRenderingAbove();\r\n    }\r\n};\r\nSuggestController.ID = 'editor.contrib.suggestController';\r\nSuggestController = __decorate([\r\n    __param(1, ISuggestMemoryService),\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ILogService)\r\n], SuggestController);\r\nexport { SuggestController };\r\nexport class TriggerSuggestAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TriggerSuggestAction.id,\r\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\r\n            alias: 'Trigger Suggest',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n                secondary: [2048 /* CtrlCmd */ | 39 /* KEY_I */],\r\n                mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KEY_I */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = SuggestController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.triggerSuggest();\r\n    }\r\n}\r\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\r\nregisterEditorContribution(SuggestController.ID, SuggestController);\r\nregisterEditorAction(TriggerSuggestAction);\r\nconst weight = 100 /* EditorContrib */ + 90;\r\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptSelectedSuggestion',\r\n    precondition: SuggestContext.Visible,\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(true, false);\r\n    }\r\n}));\r\n// normal tab\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    primary: 2 /* Tab */,\r\n    weight\r\n});\r\n// accept on enter has special rules\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\r\n    primary: 3 /* Enter */,\r\n    weight,\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.replace', \"Replace\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\r\n});\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptAlternativeSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 3 /* Enter */,\r\n        secondary: [1024 /* Shift */ | 2 /* Tab */],\r\n    },\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(false, true);\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\r\n            title: nls.localize('accept.replace', \"Replace\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\r\n            title: nls.localize('accept.insert', \"Insert\")\r\n        }]\r\n}));\r\n// continue to support the old command\r\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'hideSuggestWidget',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.cancelSuggestWidget(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 12 /* PageDown */,\r\n        secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectLastSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectLastSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 11 /* PageUp */,\r\n        secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectFirstSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectFirstSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionDetails',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionDetails(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 10 /* Space */ }\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\r\n            title: nls.localize('detail.more', \"show less\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\r\n            title: nls.localize('detail.less', \"show more\")\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleExplainMode',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleExplainMode(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */,\r\n        primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionFocus',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionFocus(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */ }\r\n    }\r\n}));\r\n//#region tab completions\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertBestCompletion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: (x, arg) => {\r\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\r\n    },\r\n    kbOpts: {\r\n        weight,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertNextSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorAction(class extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.resetSuggestSize',\r\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\r\n            alias: 'Reset Suggest Widget Size',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        SuggestController.get(editor).resetWidgetSize();\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { SnippetSession } from '../snippet/snippetSession.js';\r\nimport { SuggestController } from '../suggest/suggestController.js';\r\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this.isSuggestWidgetVisible = false;\r\n        this.isShiftKeyPressed = false;\r\n        this._isActive = false;\r\n        this._currentInlineCompletion = undefined;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\r\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\r\n            if (!this.isSuggestWidgetVisible) {\r\n                if (this._isActive) {\r\n                    this._isActive = false;\r\n                    this.onDidChangeEmitter.fire();\r\n                }\r\n            }\r\n        }, 100));\r\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\r\n        this._register(editor.onKeyDown(e => {\r\n            if (e.shiftKey && !this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = true;\r\n                this.update(this._isActive);\r\n            }\r\n        }));\r\n        this._register(editor.onKeyUp(e => {\r\n            if (e.shiftKey && this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = false;\r\n                this.update(this._isActive);\r\n            }\r\n        }));\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            let isBoundToSuggestWidget = false;\r\n            const bindToSuggestWidget = () => {\r\n                if (isBoundToSuggestWidget) {\r\n                    return;\r\n                }\r\n                isBoundToSuggestWidget = true;\r\n                this._register(suggestController.widget.value.onDidShow(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this.update(true);\r\n                }));\r\n                this._register(suggestController.widget.value.onDidHide(() => {\r\n                    this.isSuggestWidgetVisible = false;\r\n                    this.setInactiveDelayed.schedule();\r\n                    this.update(this._isActive);\r\n                }));\r\n                this._register(suggestController.widget.value.onDidFocus(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this.update(true);\r\n                }));\r\n            };\r\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\r\n                bindToSuggestWidget();\r\n            }));\r\n        }\r\n        this.update(this._isActive);\r\n    }\r\n    /**\r\n     * Returns undefined if the suggest widget is not active.\r\n    */\r\n    get state() {\r\n        if (!this._isActive) {\r\n            return undefined;\r\n        }\r\n        return { selectedItemAsInlineCompletion: this._currentInlineCompletion };\r\n    }\r\n    update(newActive) {\r\n        const newInlineCompletion = this.getInlineCompletion();\r\n        let shouldFire = false;\r\n        if (this._currentInlineCompletion !== newInlineCompletion) {\r\n            this._currentInlineCompletion = newInlineCompletion;\r\n            shouldFire = true;\r\n        }\r\n        if (this._isActive !== newActive) {\r\n            this._isActive = newActive;\r\n            shouldFire = true;\r\n        }\r\n        if (shouldFire) {\r\n            this.onDidChangeEmitter.fire();\r\n        }\r\n    }\r\n    getInlineCompletion() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (!suggestController) {\r\n            return undefined;\r\n        }\r\n        if (!this.isSuggestWidgetVisible) {\r\n            return undefined;\r\n        }\r\n        const focusedItem = suggestController.widget.value.getFocusedItem();\r\n        if (!focusedItem) {\r\n            return undefined;\r\n        }\r\n        // TODO: item.isResolved\r\n        return suggestionToInlineCompletion(suggestController, this.editor.getPosition(), focusedItem, this.isShiftKeyPressed);\r\n    }\r\n    stopForceRenderingAbove() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            suggestController.stopForceRenderingAbove();\r\n        }\r\n    }\r\n    forceRenderingAbove() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            suggestController.forceRenderingAbove();\r\n        }\r\n    }\r\n}\r\nfunction suggestionToInlineCompletion(suggestController, position, suggestion, toggleMode) {\r\n    const item = suggestion.item;\r\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\r\n        // cannot represent additional text edits\r\n        return {\r\n            text: '',\r\n            range: Range.fromPositions(position, position),\r\n        };\r\n    }\r\n    let { insertText } = item.completion;\r\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n        const snippet = new SnippetParser().parse(insertText);\r\n        const model = suggestController.editor.getModel();\r\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\r\n        insertText = snippet.toString();\r\n    }\r\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\r\n    return {\r\n        text: insertText,\r\n        range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { InlineCompletionTriggerKind } from '../../common/modes.js';\r\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\r\nimport { provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\r\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\r\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\r\nexport class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\r\n    constructor(editor, cache) {\r\n        super(editor);\r\n        this.cache = cache;\r\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor));\r\n        this.updateOperation = this._register(new MutableDisposable());\r\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\r\n        this.minReservedLineCount = 0;\r\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\r\n            this.updateCacheSoon.schedule();\r\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\r\n            if (!suggestWidgetState) {\r\n                this.minReservedLineCount = 0;\r\n            }\r\n            const newGhostText = this.ghostText;\r\n            if (newGhostText) {\r\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\r\n            }\r\n            if (this.minReservedLineCount >= 1 && this.isSuggestionPreviewEnabled()) {\r\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\r\n            }\r\n            else {\r\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n        this._register(this.cache.onDidChange(() => {\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.isSuggestionPreviewEnabled()) {\r\n                this.minReservedLineCount = 0;\r\n                this.updateCacheSoon.schedule();\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\r\n    }\r\n    get isActive() {\r\n        return this.suggestionInlineCompletionSource.state !== undefined;\r\n    }\r\n    isSuggestionPreviewEnabled() {\r\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\r\n        return suggestOptions.preview;\r\n    }\r\n    updateCache() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const state = this.suggestionInlineCompletionSource.state;\r\n            if (!state || !state.selectedItemAsInlineCompletion) {\r\n                return;\r\n            }\r\n            const info = {\r\n                text: state.selectedItemAsInlineCompletion.text,\r\n                range: state.selectedItemAsInlineCompletion.range,\r\n            };\r\n            const position = this.editor.getPosition();\r\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                let result;\r\n                try {\r\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                    return;\r\n                }\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\r\n                this.onDidChangeEmitter.fire();\r\n            }));\r\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\r\n            this.updateOperation.value = operation;\r\n            yield promise;\r\n            if (this.updateOperation.value === operation) {\r\n                this.updateOperation.clear();\r\n            }\r\n        });\r\n    }\r\n    get ghostText() {\r\n        var _a, _b;\r\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\r\n        const originalInlineCompletion = minimizeInlineCompletion(this.editor.getModel(), suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItemAsInlineCompletion);\r\n        const augmentedCompletion = minimizeInlineCompletion(this.editor.getModel(), (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\r\n        const finalCompletion = augmentedCompletion\r\n            && originalInlineCompletion\r\n            && augmentedCompletion.text.startsWith(originalInlineCompletion.text)\r\n            && augmentedCompletion.range.equalsRange(originalInlineCompletion.range)\r\n            ? augmentedCompletion : (originalInlineCompletion || augmentedCompletion);\r\n        const inlineCompletionPreviewLength = originalInlineCompletion ? ((finalCompletion === null || finalCompletion === void 0 ? void 0 : finalCompletion.text.length) || 0) - (originalInlineCompletion.text.length) : 0;\r\n        const toGhostText = (completion) => {\r\n            const mode = this.editor.getOptions().get(106 /* suggest */).previewMode;\r\n            return completion\r\n                ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\r\n                    // Show an invisible ghost text to reserve space\r\n                    new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\r\n                : undefined;\r\n        };\r\n        const newGhostText = toGhostText(finalCompletion);\r\n        return this.isSuggestionPreviewEnabled()\r\n            ? newGhostText\r\n            : undefined;\r\n    }\r\n}\r\nfunction sum(arr) {\r\n    return arr.reduce((a, b) => a + b, 0);\r\n}\r\nfunction lengthOfLongestCommonPrefix(str1, str2) {\r\n    let i = 0;\r\n    while (i < str1.length && i < str2.length && str1[i] === str2[i]) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\nfunction lengthOfLongestCommonSuffix(str1, str2) {\r\n    let i = 0;\r\n    while (i < str1.length && i < str2.length && str1[str1.length - i - 1] === str2[str2.length - i - 1]) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\nexport function minimizeInlineCompletion(model, inlineCompletion) {\r\n    if (!inlineCompletion) {\r\n        return inlineCompletion;\r\n    }\r\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\r\n    const commonPrefixLength = lengthOfLongestCommonPrefix(valueToReplace, inlineCompletion.text);\r\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLength;\r\n    const start = model.getPositionAt(startOffset);\r\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLength);\r\n    const commonSuffixLength = lengthOfLongestCommonSuffix(remainingValueToReplace, inlineCompletion.text);\r\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLength));\r\n    return {\r\n        range: Range.fromPositions(start, end),\r\n        text: inlineCompletion.text.substr(commonPrefixLength, inlineCompletion.text.length - commonPrefixLength - commonSuffixLength),\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function createDisposableRef(object, disposable) {\r\n    return {\r\n        object,\r\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\r\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { createDisposableRef } from './utils.js';\r\nimport { InlineCompletionTriggerKind } from '../../common/modes.js';\r\nexport class DelegatingModel extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.hasCachedGhostText = false;\r\n        this.currentModelRef = this._register(new MutableDisposable());\r\n    }\r\n    get targetModel() {\r\n        var _a;\r\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\r\n    }\r\n    setTargetModel(model) {\r\n        var _a;\r\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\r\n            return;\r\n        }\r\n        this.currentModelRef.clear();\r\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\r\n            this.hasCachedGhostText = false;\r\n            this.onDidChangeEmitter.fire();\r\n        })) : undefined;\r\n        this.hasCachedGhostText = false;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    get ghostText() {\r\n        var _a, _b;\r\n        if (!this.hasCachedGhostText) {\r\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\r\n            this.hasCachedGhostText = true;\r\n        }\r\n        return this.cachedGhostText;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\r\n    }\r\n}\r\n/**\r\n * A ghost text model that is both driven by inline completions and the suggest widget.\r\n*/\r\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\r\n    constructor(editor, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.commandService = commandService;\r\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\r\n        this.suggestWidgetAdapterModel = this._register(new SuggestWidgetPreviewModel(this.editor, this.sharedCache));\r\n        this.inlineCompletionsModel = this._register(new InlineCompletionsModel(this.editor, this.sharedCache, this.commandService));\r\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\r\n            this.updateModel();\r\n        }));\r\n        this.updateModel();\r\n    }\r\n    get activeInlineCompletionsModel() {\r\n        if (this.targetModel === this.inlineCompletionsModel) {\r\n            return this.inlineCompletionsModel;\r\n        }\r\n        return undefined;\r\n    }\r\n    updateModel() {\r\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\r\n            ? this.suggestWidgetAdapterModel\r\n            : this.inlineCompletionsModel);\r\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n        if (ghostText) {\r\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\r\n        }\r\n        return false;\r\n    }\r\n    triggerInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\r\n    }\r\n    commitInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\r\n    }\r\n    hideInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextModel = __decorate([\r\n    __param(1, ICommandService)\r\n], GhostTextModel);\r\nexport { GhostTextModel };\r\nexport class SharedInlineCompletionCache extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.cache = this._register(new MutableDisposable());\r\n    }\r\n    get value() {\r\n        return this.cache.value;\r\n    }\r\n    setValue(editor, completionsSource, triggerKind) {\r\n        this.cache.value = new SynchronizedInlineCompletionsCache(editor, completionsSource, () => this.onDidChangeEmitter.fire(), triggerKind);\r\n    }\r\n    clearAndLeak() {\r\n        return this.cache.clearAndLeak();\r\n    }\r\n    clear() {\r\n        this.cache.clear();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { GhostTextWidget } from './ghostTextWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { GhostTextModel } from './ghostTextModel.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { inlineSuggestCommitId } from './consts.js';\r\nlet GhostTextController = class GhostTextController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.triggeredExplicitly = false;\r\n        this.activeController = this._register(new MutableDisposable());\r\n        this._register(this.editor.onDidChangeModel(() => {\r\n            this.updateModelController();\r\n        }));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(106 /* suggest */)) {\r\n                this.updateModelController();\r\n            }\r\n            if (e.hasChanged(54 /* inlineSuggest */)) {\r\n                this.updateModelController();\r\n            }\r\n        }));\r\n        this.updateModelController();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GhostTextController.ID);\r\n    }\r\n    get activeModel() {\r\n        var _a;\r\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\r\n    }\r\n    // Don't call this method when not neccessary. It will recreate the activeController.\r\n    updateModelController() {\r\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\r\n        const inlineSuggestOptions = this.editor.getOption(54 /* inlineSuggest */);\r\n        this.activeController.value = undefined;\r\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\r\n        this.activeController.value =\r\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\r\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\r\n                : undefined;\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        var _a, _b;\r\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\r\n    }\r\n    trigger() {\r\n        var _a;\r\n        this.triggeredExplicitly = true;\r\n        if (!this.activeController.value) {\r\n            this.updateModelController();\r\n        }\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\r\n    }\r\n    commit() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\r\n    }\r\n    hide() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\r\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\r\nGhostTextController.ID = 'editor.contrib.ghostTextController';\r\nGhostTextController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], GhostTextController);\r\nexport { GhostTextController };\r\nclass GhostTextContextKeys {\r\n    constructor(contextKeyService) {\r\n        this.contextKeyService = contextKeyService;\r\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\r\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\r\n    }\r\n}\r\n/**\r\n * The controller for a text editor with an initialized text model.\r\n * Must be disposed as soon as the model detaches from the editor.\r\n*/\r\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\r\n    constructor(editor, instantiationService, contextKeyService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\r\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\r\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\r\n        this._register(toDisposable(() => {\r\n            this.contextKeys.inlineCompletionVisible.set(false);\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }));\r\n        this._register(this.model.onDidChange(() => {\r\n            this.updateContextKeys();\r\n        }));\r\n        this.updateContextKeys();\r\n    }\r\n    updateContextKeys() {\r\n        var _a;\r\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\r\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\r\n        if (ghostText && ghostText.parts.length > 0) {\r\n            const { column, lines } = ghostText.parts[0];\r\n            const suggestionStartsWithWs = lines[0].startsWith(' ') || lines[0].startsWith('\\t');\r\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\r\n            const inIndentation = column <= indentationEndColumn;\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(!!this.model.activeInlineCompletionsModel\r\n                && suggestionStartsWithWs && inIndentation);\r\n        }\r\n        else {\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }\r\n    }\r\n};\r\nActiveGhostTextController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IContextKeyService)\r\n], ActiveGhostTextController);\r\nexport { ActiveGhostTextController };\r\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\r\nexport const commitInlineSuggestionAction = new GhostTextCommand({\r\n    id: inlineSuggestCommitId,\r\n    precondition: GhostTextController.inlineSuggestionVisible,\r\n    handler(x) {\r\n        x.commit();\r\n        x.editor.focus();\r\n    }\r\n});\r\nregisterEditorCommand(commitInlineSuggestionAction);\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    primary: 2 /* Tab */,\r\n    weight: 200,\r\n    id: commitInlineSuggestionAction.id,\r\n    when: ContextKeyExpr.and(commitInlineSuggestionAction.precondition, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentation.toNegated()),\r\n});\r\nregisterEditorCommand(new GhostTextCommand({\r\n    id: 'editor.action.inlineSuggest.hide',\r\n    precondition: GhostTextController.inlineSuggestionVisible,\r\n    kbOpts: {\r\n        weight: 100,\r\n        primary: 9 /* Escape */,\r\n    },\r\n    handler(x) {\r\n        x.hide();\r\n    }\r\n}));\r\nexport class ShowNextInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowNextInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\r\n            alias: 'Show Next Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showNextInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\r\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowPreviousInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\r\n            alias: 'Show Previous Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showPreviousInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\r\nexport class TriggerInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.trigger',\r\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\r\n            alias: 'Trigger Inline Suggestion',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.trigger();\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\r\nregisterEditorAction(TriggerInlineSuggestionAction);\r\nregisterEditorAction(ShowNextInlineSuggestionAction);\r\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { HoverForeignElementAnchor } from '../hover/hoverTypes.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IMenuService, MenuId, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nexport class InlineCompletionsHover {\r\n    constructor(owner, range, controller) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.controller = controller;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n    hasMultipleSuggestions() {\r\n        return this.controller.hasMultipleInlineCompletions();\r\n    }\r\n}\r\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\r\n    constructor(_editor, _hover, _commandService, _menuService, _contextKeyService, _modeService, _openerService, accessibilityService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._commandService = _commandService;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this.accessibilityService = accessibilityService;\r\n    }\r\n    suggestHoverAnchor(mouseEvent) {\r\n        const controller = GhostTextController.get(this._editor);\r\n        if (!controller) {\r\n            return null;\r\n        }\r\n        if (mouseEvent.target.type === 8 /* CONTENT_VIEW_ZONE */) {\r\n            // handle the case where the mouse is over the view zone\r\n            const viewZoneData = mouseEvent.target.detail;\r\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\r\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\r\n            }\r\n        }\r\n        if (mouseEvent.target.type === 7 /* CONTENT_EMPTY */ && mouseEvent.target.range) {\r\n            // handle the case where the mouse is over the empty portion of a line following ghost text\r\n            if (controller.shouldShowHoverAt(mouseEvent.target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, mouseEvent.target.range);\r\n            }\r\n        }\r\n        if (mouseEvent.target.type === 6 /* CONTENT_TEXT */ && mouseEvent.target.range && mouseEvent.target.detail) {\r\n            // handle the case where the mouse is directly over ghost text\r\n            const mightBeForeignElement = mouseEvent.target.detail.mightBeForeignElement;\r\n            if (mightBeForeignElement && controller.shouldShowHoverAt(mouseEvent.target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, mouseEvent.target.range);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        const controller = GhostTextController.get(this._editor);\r\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\r\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\r\n        }\r\n        return [];\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        const disposableStore = new DisposableStore();\r\n        const part = hoverParts[0];\r\n        if (this.accessibilityService.isScreenReaderOptimized()) {\r\n            this.renderScreenReaderText(part, fragment, disposableStore);\r\n        }\r\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\r\n        const previousAction = statusBar.addAction({\r\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\r\n            commandId: ShowNextInlineSuggestionAction.ID,\r\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\r\n        });\r\n        const nextAction = statusBar.addAction({\r\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\r\n            commandId: ShowPreviousInlineSuggestionAction.ID,\r\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\r\n        });\r\n        statusBar.addAction({\r\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\r\n            commandId: commitInlineSuggestionAction.id,\r\n            run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\r\n        });\r\n        const actions = [previousAction, nextAction];\r\n        for (const action of actions) {\r\n            action.setEnabled(false);\r\n        }\r\n        part.hasMultipleSuggestions().then(hasMore => {\r\n            for (const action of actions) {\r\n                action.setEnabled(hasMore);\r\n            }\r\n        });\r\n        for (const [_, group] of menu.getActions()) {\r\n            for (const action of group) {\r\n                if (action instanceof MenuItemAction) {\r\n                    statusBar.addAction({\r\n                        label: action.label,\r\n                        commandId: action.item.id,\r\n                        run: () => this._commandService.executeCommand(action.item.id)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return disposableStore;\r\n    }\r\n    renderScreenReaderText(part, fragment, disposableStore) {\r\n        var _a, _b;\r\n        const $ = dom.$;\r\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\r\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\r\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._modeService, this._openerService));\r\n        const render = (code) => {\r\n            disposableStore.add(renderer.onDidRenderAsync(() => {\r\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\r\n                this._hover.onContentsChanged();\r\n            }));\r\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\r\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\r\n            hoverContentsElement.replaceChildren(renderedContents.element);\r\n        };\r\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\r\n        if (ghostText) {\r\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\r\n            render(ghostText.renderForScreenReader(lineText));\r\n        }\r\n        fragment.appendChild(markdownHoverElement);\r\n    }\r\n};\r\nInlineCompletionsHoverParticipant = __decorate([\r\n    __param(2, ICommandService),\r\n    __param(3, IMenuService),\r\n    __param(4, IContextKeyService),\r\n    __param(5, IModeService),\r\n    __param(6, IOpenerService),\r\n    __param(7, IAccessibilityService)\r\n], InlineCompletionsHoverParticipant);\r\nexport { InlineCompletionsHoverParticipant };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport class ColorPickerModel {\r\n    constructor(color, availableColorPresentations, presentationIndex) {\r\n        this.presentationIndex = presentationIndex;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this._onDidChangeColor = new Emitter();\r\n        this.onDidChangeColor = this._onDidChangeColor.event;\r\n        this._onDidChangePresentation = new Emitter();\r\n        this.onDidChangePresentation = this._onDidChangePresentation.event;\r\n        this.originalColor = color;\r\n        this._color = color;\r\n        this._colorPresentations = availableColorPresentations;\r\n    }\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(color) {\r\n        if (this._color.equals(color)) {\r\n            return;\r\n        }\r\n        this._color = color;\r\n        this._onDidChangeColor.fire(color);\r\n    }\r\n    get presentation() { return this.colorPresentations[this.presentationIndex]; }\r\n    get colorPresentations() {\r\n        return this._colorPresentations;\r\n    }\r\n    set colorPresentations(colorPresentations) {\r\n        this._colorPresentations = colorPresentations;\r\n        if (this.presentationIndex > colorPresentations.length - 1) {\r\n            this.presentationIndex = 0;\r\n        }\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    selectNextColorPresentation() {\r\n        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\r\n        this.flushColor();\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    guessColorPresentation(color, originalText) {\r\n        for (let i = 0; i < this.colorPresentations.length; i++) {\r\n            if (originalText.toLowerCase() === this.colorPresentations[i].label) {\r\n                this.presentationIndex = i;\r\n                this._onDidChangePresentation.fire(this.presentation);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    flushColor() {\r\n        this._onColorFlushed.fire(this._color);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './colorPicker.css';\r\nimport { onDidChangeZoomLevel } from '../../../base/browser/browser.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../base/browser/globalMouseMoveMonitor.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Color, HSVA, RGBA } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { editorHoverBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nconst $ = dom.$;\r\nexport class ColorPickerHeader extends Disposable {\r\n    constructor(container, model, themeService) {\r\n        super();\r\n        this.model = model;\r\n        this.domNode = $('.colorpicker-header');\r\n        dom.append(container, this.domNode);\r\n        this.pickedColorNode = dom.append(this.domNode, $('.picked-color'));\r\n        const colorBox = dom.append(this.domNode, $('.original-color'));\r\n        colorBox.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\r\n        this.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\r\n        this._register(registerThemingParticipant((theme, collector) => {\r\n            this.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\r\n        }));\r\n        this._register(dom.addDisposableListener(this.pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\r\n        this._register(dom.addDisposableListener(colorBox, dom.EventType.CLICK, () => {\r\n            this.model.color = this.model.originalColor;\r\n            this.model.flushColor();\r\n        }));\r\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\r\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\r\n        this.pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\r\n    }\r\n    onDidChangeColor(color) {\r\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\r\n        this.pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\r\n        this.onDidChangePresentation();\r\n    }\r\n    onDidChangePresentation() {\r\n        this.pickedColorNode.textContent = this.model.presentation ? this.model.presentation.label : '';\r\n    }\r\n}\r\nexport class ColorPickerBody extends Disposable {\r\n    constructor(container, model, pixelRatio) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this.domNode = $('.colorpicker-body');\r\n        dom.append(container, this.domNode);\r\n        this.saturationBox = new SaturationBox(this.domNode, this.model, this.pixelRatio);\r\n        this._register(this.saturationBox);\r\n        this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange, this));\r\n        this._register(this.saturationBox.onColorFlushed(this.flushColor, this));\r\n        this.opacityStrip = new OpacityStrip(this.domNode, this.model);\r\n        this._register(this.opacityStrip);\r\n        this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange, this));\r\n        this._register(this.opacityStrip.onColorFlushed(this.flushColor, this));\r\n        this.hueStrip = new HueStrip(this.domNode, this.model);\r\n        this._register(this.hueStrip);\r\n        this._register(this.hueStrip.onDidChange(this.onDidHueChange, this));\r\n        this._register(this.hueStrip.onColorFlushed(this.flushColor, this));\r\n    }\r\n    flushColor() {\r\n        this.model.flushColor();\r\n    }\r\n    onDidSaturationValueChange({ s, v }) {\r\n        const hsva = this.model.color.hsva;\r\n        this.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\r\n    }\r\n    onDidOpacityChange(a) {\r\n        const hsva = this.model.color.hsva;\r\n        this.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\r\n    }\r\n    onDidHueChange(value) {\r\n        const hsva = this.model.color.hsva;\r\n        const h = (1 - value) * 360;\r\n        this.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\r\n    }\r\n    layout() {\r\n        this.saturationBox.layout();\r\n        this.opacityStrip.layout();\r\n        this.hueStrip.layout();\r\n    }\r\n}\r\nclass SaturationBox extends Disposable {\r\n    constructor(container, model, pixelRatio) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this.domNode = $('.saturation-wrap');\r\n        dom.append(container, this.domNode);\r\n        // Create canvas, draw selected color\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.className = 'saturation-box';\r\n        dom.append(this.domNode, this.canvas);\r\n        // Add selection circle\r\n        this.selection = $('.saturation-selection');\r\n        dom.append(this.domNode, this.selection);\r\n        this.layout();\r\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\r\n        this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this.monitor = null;\r\n    }\r\n    onMouseDown(e) {\r\n        this.monitor = this._register(new GlobalMouseMoveMonitor());\r\n        const origin = dom.getDomNodePagePosition(this.domNode);\r\n        if (e.target !== this.selection) {\r\n            this.onDidChangePosition(e.offsetX, e.offsetY);\r\n        }\r\n        this.monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangePosition(event.posx - origin.left, event.posy - origin.top), () => null);\r\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\r\n            this._onColorFlushed.fire();\r\n            mouseUpListener.dispose();\r\n            if (this.monitor) {\r\n                this.monitor.stopMonitoring(true);\r\n                this.monitor = null;\r\n            }\r\n        }, true);\r\n    }\r\n    onDidChangePosition(left, top) {\r\n        const s = Math.max(0, Math.min(1, left / this.width));\r\n        const v = Math.max(0, Math.min(1, 1 - (top / this.height)));\r\n        this.paintSelection(s, v);\r\n        this._onDidChange.fire({ s, v });\r\n    }\r\n    layout() {\r\n        this.width = this.domNode.offsetWidth;\r\n        this.height = this.domNode.offsetHeight;\r\n        this.canvas.width = this.width * this.pixelRatio;\r\n        this.canvas.height = this.height * this.pixelRatio;\r\n        this.paint();\r\n        const hsva = this.model.color.hsva;\r\n        this.paintSelection(hsva.s, hsva.v);\r\n    }\r\n    paint() {\r\n        const hsva = this.model.color.hsva;\r\n        const saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\r\n        const ctx = this.canvas.getContext('2d');\r\n        const whiteGradient = ctx.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\r\n        whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\r\n        whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n        const blackGradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\r\n        blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\r\n        blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\r\n        ctx.rect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.fillStyle = Color.Format.CSS.format(saturatedColor);\r\n        ctx.fill();\r\n        ctx.fillStyle = whiteGradient;\r\n        ctx.fill();\r\n        ctx.fillStyle = blackGradient;\r\n        ctx.fill();\r\n    }\r\n    paintSelection(s, v) {\r\n        this.selection.style.left = `${s * this.width}px`;\r\n        this.selection.style.top = `${this.height - v * this.height}px`;\r\n    }\r\n    onDidChangeColor() {\r\n        if (this.monitor && this.monitor.isMonitoring()) {\r\n            return;\r\n        }\r\n        this.paint();\r\n    }\r\n}\r\nclass Strip extends Disposable {\r\n    constructor(container, model) {\r\n        super();\r\n        this.model = model;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this.domNode = dom.append(container, $('.strip'));\r\n        this.overlay = dom.append(this.domNode, $('.overlay'));\r\n        this.slider = dom.append(this.domNode, $('.slider'));\r\n        this.slider.style.top = `0px`;\r\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\r\n        this.layout();\r\n    }\r\n    layout() {\r\n        this.height = this.domNode.offsetHeight - this.slider.offsetHeight;\r\n        const value = this.getValue(this.model.color);\r\n        this.updateSliderPosition(value);\r\n    }\r\n    onMouseDown(e) {\r\n        const monitor = this._register(new GlobalMouseMoveMonitor());\r\n        const origin = dom.getDomNodePagePosition(this.domNode);\r\n        this.domNode.classList.add('grabbing');\r\n        if (e.target !== this.slider) {\r\n            this.onDidChangeTop(e.offsetY);\r\n        }\r\n        monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangeTop(event.posy - origin.top), () => null);\r\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\r\n            this._onColorFlushed.fire();\r\n            mouseUpListener.dispose();\r\n            monitor.stopMonitoring(true);\r\n            this.domNode.classList.remove('grabbing');\r\n        }, true);\r\n    }\r\n    onDidChangeTop(top) {\r\n        const value = Math.max(0, Math.min(1, 1 - (top / this.height)));\r\n        this.updateSliderPosition(value);\r\n        this._onDidChange.fire(value);\r\n    }\r\n    updateSliderPosition(value) {\r\n        this.slider.style.top = `${(1 - value) * this.height}px`;\r\n    }\r\n}\r\nclass OpacityStrip extends Strip {\r\n    constructor(container, model) {\r\n        super(container, model);\r\n        this.domNode.classList.add('opacity-strip');\r\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this.onDidChangeColor(this.model.color);\r\n    }\r\n    onDidChangeColor(color) {\r\n        const { r, g, b } = color.rgba;\r\n        const opaque = new Color(new RGBA(r, g, b, 1));\r\n        const transparent = new Color(new RGBA(r, g, b, 0));\r\n        this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\r\n    }\r\n    getValue(color) {\r\n        return color.hsva.a;\r\n    }\r\n}\r\nclass HueStrip extends Strip {\r\n    constructor(container, model) {\r\n        super(container, model);\r\n        this.domNode.classList.add('hue-strip');\r\n    }\r\n    getValue(color) {\r\n        return 1 - (color.hsva.h / 360);\r\n    }\r\n}\r\nexport class ColorPickerWidget extends Widget {\r\n    constructor(container, model, pixelRatio, themeService) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this._register(onDidChangeZoomLevel(() => this.layout()));\r\n        const element = $('.colorpicker-widget');\r\n        container.appendChild(element);\r\n        const header = new ColorPickerHeader(element, this.model, themeService);\r\n        this.body = new ColorPickerBody(element, this.model, this.pixelRatio);\r\n        this._register(header);\r\n        this._register(this.body);\r\n    }\r\n    layout() {\r\n        this.body.layout();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { getColorPresentations } from '../colorPicker/color.js';\r\nimport { ColorDetector } from '../colorPicker/colorDetector.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { ColorPickerModel } from '../colorPicker/colorPickerModel.js';\r\nimport { ColorPickerWidget } from '../colorPicker/colorPickerWidget.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nexport class ColorHover {\r\n    constructor(owner, range, model, provider) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.model = model;\r\n        this.provider = provider;\r\n        /**\r\n         * Force the hover to always be rendered at this specific range,\r\n         * even in the case of multiple hover parts.\r\n         */\r\n        this.forceShowAtRange = true;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet ColorHoverParticipant = class ColorHoverParticipant {\r\n    constructor(_editor, _hover, _themeService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._themeService = _themeService;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        return [];\r\n    }\r\n    computeAsync(anchor, lineDecorations, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return [];\r\n            }\r\n            const colorDetector = ColorDetector.get(this._editor);\r\n            for (const d of lineDecorations) {\r\n                const colorData = colorDetector.getColorData(d.range.getStartPosition());\r\n                if (colorData) {\r\n                    const colorHover = yield this._createColorHover(this._editor.getModel(), colorData.colorInfo, colorData.provider);\r\n                    return [colorHover];\r\n                }\r\n            }\r\n            return [];\r\n        });\r\n    }\r\n    _createColorHover(editorModel, colorInfo, provider) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const originalText = editorModel.getValueInRange(colorInfo.range);\r\n            const { red, green, blue, alpha } = colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            const color = new Color(rgba);\r\n            const colorPresentations = yield getColorPresentations(editorModel, colorInfo, provider, CancellationToken.None);\r\n            const model = new ColorPickerModel(color, [], 0);\r\n            model.colorPresentations = colorPresentations || [];\r\n            model.guessColorPresentation(color, originalText);\r\n            return new ColorHover(this, Range.lift(colorInfo.range), model, provider);\r\n        });\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        if (hoverParts.length === 0 || !this._editor.hasModel()) {\r\n            return Disposable.None;\r\n        }\r\n        const disposables = new DisposableStore();\r\n        const colorHover = hoverParts[0];\r\n        const editorModel = this._editor.getModel();\r\n        const model = colorHover.model;\r\n        const widget = disposables.add(new ColorPickerWidget(fragment, model, this._editor.getOption(128 /* pixelRatio */), this._themeService));\r\n        let range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\r\n        const updateEditorModel = () => {\r\n            let textEdits;\r\n            let newRange;\r\n            if (model.presentation.textEdit) {\r\n                textEdits = [model.presentation.textEdit];\r\n                newRange = new Range(model.presentation.textEdit.range.startLineNumber, model.presentation.textEdit.range.startColumn, model.presentation.textEdit.range.endLineNumber, model.presentation.textEdit.range.endColumn);\r\n                const trackedRange = this._editor.getModel()._setTrackedRange(null, newRange, 3 /* GrowsOnlyWhenTypingAfter */);\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n                newRange = this._editor.getModel()._getTrackedRange(trackedRange) || newRange;\r\n            }\r\n            else {\r\n                textEdits = [{ identifier: null, range, text: model.presentation.label, forceMoveMarkers: false }];\r\n                newRange = range.setEndPosition(range.endLineNumber, range.startColumn + model.presentation.label.length);\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n            }\r\n            if (model.presentation.additionalTextEdits) {\r\n                textEdits = [...model.presentation.additionalTextEdits];\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n                this._hover.hide();\r\n            }\r\n            this._editor.pushUndoStop();\r\n            range = newRange;\r\n        };\r\n        const updateColorPresentations = (color) => {\r\n            return getColorPresentations(editorModel, {\r\n                range: range,\r\n                color: {\r\n                    red: color.rgba.r / 255,\r\n                    green: color.rgba.g / 255,\r\n                    blue: color.rgba.b / 255,\r\n                    alpha: color.rgba.a\r\n                }\r\n            }, colorHover.provider, CancellationToken.None).then((colorPresentations) => {\r\n                model.colorPresentations = colorPresentations || [];\r\n            });\r\n        };\r\n        disposables.add(model.onColorFlushed((color) => {\r\n            updateColorPresentations(color).then(updateEditorModel);\r\n        }));\r\n        disposables.add(model.onDidChangeColor(updateColorPresentations));\r\n        this._hover.setColorPicker(widget);\r\n        return disposables;\r\n    }\r\n};\r\nColorHoverParticipant = __decorate([\r\n    __param(2, IThemeService)\r\n], ColorHoverParticipant);\r\nexport { ColorHoverParticipant };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { coalesce, flatten } from '../../../base/common/arrays.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { HoverWidget, HoverAction } from '../../../base/browser/ui/hover/hoverWidget.js';\r\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\r\nimport { InlineCompletionsHoverParticipant } from '../inlineCompletions/inlineCompletionsHoverParticipant.js';\r\nimport { ColorHoverParticipant } from './colorHoverParticipant.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { HoverRangeAnchor } from './hoverTypes.js';\r\nconst $ = dom.$;\r\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\r\n    constructor(_keybindingService) {\r\n        super();\r\n        this._keybindingService = _keybindingService;\r\n        this._hasContent = false;\r\n        this.hoverElement = $('div.hover-row.status-bar');\r\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\r\n    }\r\n    get hasContent() {\r\n        return this._hasContent;\r\n    }\r\n    addAction(actionOptions) {\r\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\r\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\r\n        this._hasContent = true;\r\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\r\n    }\r\n    append(element) {\r\n        const result = dom.append(this.actionsElement, element);\r\n        this._hasContent = true;\r\n        return result;\r\n    }\r\n};\r\nEditorHoverStatusBar = __decorate([\r\n    __param(0, IKeybindingService)\r\n], EditorHoverStatusBar);\r\nclass ModesContentComputer {\r\n    constructor(editor, _participants) {\r\n        this._participants = _participants;\r\n        this._editor = editor;\r\n        this._result = [];\r\n        this._anchor = null;\r\n    }\r\n    setAnchor(anchor) {\r\n        this._anchor = anchor;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    static _getLineDecorations(editor, anchor) {\r\n        if (anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        return editor.getLineDecorations(lineNumber).filter((d) => {\r\n            if (d.options.isWholeLine) {\r\n                return true;\r\n            }\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    computeAsync(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const anchor = this._anchor;\r\n            if (!this._editor.hasModel() || !anchor) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, anchor);\r\n            const allResults = yield Promise.all(this._participants.map(p => this._computeAsync(p, lineDecorations, anchor, token)));\r\n            return flatten(allResults);\r\n        });\r\n    }\r\n    _computeAsync(participant, lineDecorations, anchor, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!participant.computeAsync) {\r\n                return [];\r\n            }\r\n            return participant.computeAsync(anchor, lineDecorations, token);\r\n        });\r\n    }\r\n    computeSync() {\r\n        if (!this._editor.hasModel() || !this._anchor) {\r\n            return [];\r\n        }\r\n        const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, this._anchor);\r\n        let result = [];\r\n        for (const participant of this._participants) {\r\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\r\n        }\r\n        return coalesce(result);\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        // Always put synchronous messages before asynchronous ones\r\n        if (isFromSynchronousComputation) {\r\n            this._result = result.concat(this._result);\r\n        }\r\n        else {\r\n            this._result = this._result.concat(result);\r\n        }\r\n    }\r\n    getResult() {\r\n        return this._result.slice(0);\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        if (this._anchor) {\r\n            for (const participant of this._participants) {\r\n                if (participant.createLoadingMessage) {\r\n                    const loadingMessage = participant.createLoadingMessage(this._anchor);\r\n                    if (loadingMessage) {\r\n                        return this._result.slice(0).concat([loadingMessage]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._result.slice(0);\r\n    }\r\n}\r\nlet ModesContentHoverWidget = class ModesContentHoverWidget extends Widget {\r\n    constructor(editor, _hoverVisibleKey, instantiationService, _keybindingService) {\r\n        super();\r\n        this._hoverVisibleKey = _hoverVisibleKey;\r\n        this._keybindingService = _keybindingService;\r\n        // IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._participants = [\r\n            instantiationService.createInstance(ColorHoverParticipant, editor, this),\r\n            instantiationService.createInstance(MarkdownHoverParticipant, editor, this),\r\n            instantiationService.createInstance(InlineCompletionsHoverParticipant, editor, this),\r\n            instantiationService.createInstance(MarkerHoverParticipant, editor, this),\r\n        ];\r\n        this._hover = this._register(new HoverWidget());\r\n        this._id = ModesContentHoverWidget.ID;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._stoleFocus = false;\r\n        this._renderDisposable = null;\r\n        this.onkeydown(this._hover.containerDomNode, (e) => {\r\n            if (e.equals(9 /* Escape */)) {\r\n                this.hide();\r\n            }\r\n        });\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._editor.onDidLayoutChange(() => this.layout());\r\n        this.layout();\r\n        this._editor.addContentWidget(this);\r\n        this._showAtPosition = null;\r\n        this._showAtRange = null;\r\n        this._stoleFocus = false;\r\n        this._messages = [];\r\n        this._lastAnchor = null;\r\n        this._computer = new ModesContentComputer(this._editor, this._participants);\r\n        this._highlightDecorations = [];\r\n        this._isChangingDecorations = false;\r\n        this._shouldFocus = false;\r\n        this._colorPicker = null;\r\n        this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(52 /* hover */).delay);\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\r\n            if (this._colorPicker) {\r\n                this.getDomNode().classList.add('colorpicker-hover');\r\n            }\r\n        }));\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\r\n            this.getDomNode().classList.remove('colorpicker-hover');\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration(() => {\r\n            this._hoverOperation.setHoverTime(this._editor.getOption(52 /* hover */).delay);\r\n        }));\r\n        this._register(TokenizationRegistry.onDidChange(() => {\r\n            if (this._isVisible && this._lastAnchor && this._messages.length > 0) {\r\n                this._hover.contentsDomNode.textContent = '';\r\n                this._renderMessages(this._lastAnchor, this._messages);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._hover.containerDomNode;\r\n    }\r\n    _shouldShowAt(mouseEvent) {\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType === 6 /* CONTENT_TEXT */) {\r\n            return true;\r\n        }\r\n        if (targetType === 7 /* CONTENT_EMPTY */) {\r\n            const epsilon = this._editor.getOption(42 /* fontInfo */).typicalHalfwidthCharacterWidth / 2;\r\n            const data = mouseEvent.target.detail;\r\n            if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\r\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    maybeShowAt(mouseEvent) {\r\n        var _a;\r\n        const anchorCandidates = [];\r\n        for (const participant of this._participants) {\r\n            if (typeof participant.suggestHoverAnchor === 'function') {\r\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\r\n                if (anchor) {\r\n                    anchorCandidates.push(anchor);\r\n                }\r\n            }\r\n        }\r\n        if (this._shouldShowAt(mouseEvent) && mouseEvent.target.range) {\r\n            // TODO@rebornix. This should be removed if we move Color Picker out of Hover component.\r\n            // Check if mouse is hovering on color decorator\r\n            const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'))\r\n                && mouseEvent.target.range.endColumn - mouseEvent.target.range.startColumn === 1;\r\n            const showAtRange = (hoverOnColorDecorator // shift the mouse focus by one as color decorator is a `before` decoration of next character.\r\n                ? new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1)\r\n                : mouseEvent.target.range);\r\n            anchorCandidates.push(new HoverRangeAnchor(0, showAtRange));\r\n        }\r\n        if (anchorCandidates.length === 0) {\r\n            return false;\r\n        }\r\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\r\n        this._startShowingAt(anchorCandidates[0], 0 /* Delayed */, false);\r\n        return true;\r\n    }\r\n    _showAt(position, range, focus) {\r\n        // Position has changed\r\n        this._showAtPosition = position;\r\n        this._showAtRange = range;\r\n        this._hoverVisibleKey.set(true);\r\n        this._isVisible = true;\r\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n        this._editor.layoutContentWidget(this);\r\n        // Simply force a synchronous render on the editor\r\n        // such that the widget does not really render with left = '0px'\r\n        this._editor.render();\r\n        this._stoleFocus = focus;\r\n        if (focus) {\r\n            this._hover.containerDomNode.focus();\r\n        }\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                position: this._showAtPosition,\r\n                range: this._showAtRange,\r\n                preference: [\r\n                    1 /* ABOVE */,\r\n                    2 /* BELOW */\r\n                ]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _updateFont() {\r\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\r\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    _updateContents(node) {\r\n        this._hover.contentsDomNode.textContent = '';\r\n        this._hover.contentsDomNode.appendChild(node);\r\n        this._updateFont();\r\n        this._editor.layoutContentWidget(this);\r\n        this._hover.onContentsChanged();\r\n    }\r\n    layout() {\r\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\r\n        const { fontSize, lineHeight } = this._editor.getOption(42 /* fontInfo */);\r\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\r\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight}px`;\r\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\r\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this._isChangingDecorations) {\r\n            return;\r\n        }\r\n        if (this._isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            if (!this._colorPicker) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\r\n                this._hoverOperation.start(0 /* Delayed */);\r\n            }\r\n        }\r\n    }\r\n    startShowingAtRange(range, mode, focus) {\r\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\r\n    }\r\n    _startShowingAt(anchor, mode, focus) {\r\n        if (this._lastAnchor && this._lastAnchor.equals(anchor)) {\r\n            // We have to show the widget at the exact same range as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            // The range might have changed, but the hover is visible\r\n            // Instead of hiding it completely, filter out messages that are still in the new range and\r\n            // kick off a new computation\r\n            if (!this._showAtPosition || !this._lastAnchor || !anchor.canAdoptVisibleHover(this._lastAnchor, this._showAtPosition)) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\r\n                if (filteredMessages.length === 0) {\r\n                    this.hide();\r\n                }\r\n                else if (filteredMessages.length === this._messages.length) {\r\n                    // no change\r\n                    return;\r\n                }\r\n                else {\r\n                    this._renderMessages(anchor, filteredMessages);\r\n                }\r\n            }\r\n        }\r\n        this._lastAnchor = anchor;\r\n        this._computer.setAnchor(anchor);\r\n        this._shouldFocus = focus;\r\n        this._hoverOperation.start(mode);\r\n    }\r\n    hide() {\r\n        this._lastAnchor = null;\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            setTimeout(() => {\r\n                // Give commands a chance to see the key\r\n                if (!this._isVisible) {\r\n                    this._hoverVisibleKey.set(false);\r\n                }\r\n            }, 0);\r\n            this._isVisible = false;\r\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n            this._editor.layoutContentWidget(this);\r\n            if (this._stoleFocus) {\r\n                this._editor.focus();\r\n            }\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\r\n        this._isChangingDecorations = false;\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null;\r\n    }\r\n    isColorPickerVisible() {\r\n        return !!this._colorPicker;\r\n    }\r\n    setColorPicker(widget) {\r\n        this._colorPicker = widget;\r\n    }\r\n    onContentsChanged() {\r\n        this._hover.onContentsChanged();\r\n    }\r\n    _withResult(result, complete) {\r\n        this._messages = result;\r\n        if (this._lastAnchor && this._messages.length > 0) {\r\n            this._renderMessages(this._lastAnchor, this._messages);\r\n        }\r\n        else if (complete) {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(anchor, messages) {\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null; // TODO: TypeScript thinks this is always null\r\n        // update column from which to show\r\n        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let highlightRange = messages[0].range;\r\n        let forceShowAtRange = null;\r\n        let fragment = document.createDocumentFragment();\r\n        const disposables = new DisposableStore();\r\n        const hoverParts = new Map();\r\n        for (const msg of messages) {\r\n            renderColumn = Math.min(renderColumn, msg.range.startColumn);\r\n            highlightRange = Range.plusRange(highlightRange, msg.range);\r\n            if (msg.forceShowAtRange) {\r\n                forceShowAtRange = msg.range;\r\n            }\r\n            if (!hoverParts.has(msg.owner)) {\r\n                hoverParts.set(msg.owner, []);\r\n            }\r\n            const dest = hoverParts.get(msg.owner);\r\n            dest.push(msg);\r\n        }\r\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\r\n        for (const [participant, participantHoverParts] of hoverParts) {\r\n            disposables.add(participant.renderHoverParts(participantHoverParts, fragment, statusBar));\r\n        }\r\n        if (statusBar.hasContent) {\r\n            fragment.appendChild(statusBar.hoverElement);\r\n        }\r\n        this._renderDisposable = disposables;\r\n        // show\r\n        if (fragment.hasChildNodes()) {\r\n            if (forceShowAtRange) {\r\n                this._showAt(forceShowAtRange.getStartPosition(), forceShowAtRange, this._shouldFocus);\r\n            }\r\n            else {\r\n                this._showAt(new Position(anchor.range.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\r\n            }\r\n            this._updateContents(fragment);\r\n        }\r\n        if (this._colorPicker) {\r\n            this._colorPicker.layout();\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\r\n                range: highlightRange,\r\n                options: ModesContentHoverWidget._DECORATION_OPTIONS\r\n            }] : []);\r\n        this._isChangingDecorations = false;\r\n    }\r\n};\r\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\r\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'content-hover-highlight',\r\n    className: 'hoverHighlight'\r\n});\r\nModesContentHoverWidget = __decorate([\r\n    __param(2, IInstantiationService),\r\n    __param(3, IKeybindingService)\r\n], ModesContentHoverWidget);\r\nexport { ModesContentHoverWidget };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nexport class GlyphHoverWidget extends Widget {\r\n    constructor(id, editor) {\r\n        super();\r\n        this._id = id;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'monaco-hover hidden';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._domNode.setAttribute('role', 'tooltip');\r\n        this._showAtLineNumber = -1;\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this.updateFont();\r\n            }\r\n        }));\r\n        this._editor.addOverlayWidget(this);\r\n    }\r\n    get isVisible() {\r\n        return this._isVisible;\r\n    }\r\n    set isVisible(value) {\r\n        this._isVisible = value;\r\n        this._domNode.classList.toggle('hidden', !this._isVisible);\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    showAt(lineNumber) {\r\n        this._showAtLineNumber = lineNumber;\r\n        if (!this.isVisible) {\r\n            this.isVisible = true;\r\n        }\r\n        const editorLayout = this._editor.getLayoutInfo();\r\n        const topForLineNumber = this._editor.getTopForLineNumber(this._showAtLineNumber);\r\n        const editorScrollTop = this._editor.getScrollTop();\r\n        const lineHeight = this._editor.getOption(58 /* lineHeight */);\r\n        const nodeHeight = this._domNode.clientHeight;\r\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\r\n        this._domNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\r\n        this._domNode.style.top = `${Math.max(Math.round(top), 0)}px`;\r\n    }\r\n    hide() {\r\n        if (!this.isVisible) {\r\n            return;\r\n        }\r\n        this.isVisible = false;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    updateFont() {\r\n        const codeTags = Array.prototype.slice.call(this._domNode.getElementsByTagName('code'));\r\n        const codeClasses = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\r\n        [...codeTags, ...codeClasses].forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    updateContents(node) {\r\n        this._domNode.textContent = '';\r\n        this._domNode.appendChild(node);\r\n        this.updateFont();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $ } from '../../../base/browser/dom.js';\r\nimport { isEmptyMarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { GlyphHoverWidget } from './hoverWidgets.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { NullOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { asArray } from '../../../base/common/arrays.js';\r\nclass MarginComputer {\r\n    constructor(editor) {\r\n        this._editor = editor;\r\n        this._lineNumber = -1;\r\n        this._result = [];\r\n    }\r\n    setLineNumber(lineNumber) {\r\n        this._lineNumber = lineNumber;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    computeSync() {\r\n        const toHoverMessage = (contents) => {\r\n            return {\r\n                value: contents\r\n            };\r\n        };\r\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\r\n        const result = [];\r\n        if (!lineDecorations) {\r\n            return result;\r\n        }\r\n        for (const d of lineDecorations) {\r\n            if (!d.options.glyphMarginClassName) {\r\n                continue;\r\n            }\r\n            const hoverMessage = d.options.glyphMarginHoverMessage;\r\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\r\n                continue;\r\n            }\r\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\r\n        }\r\n        return result;\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        this._result = this._result.concat(result);\r\n    }\r\n    getResult() {\r\n        return this._result;\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        return this.getResult();\r\n    }\r\n}\r\nexport class ModesGlyphHoverWidget extends GlyphHoverWidget {\r\n    constructor(editor, modeService, openerService = NullOpenerService) {\r\n        super(ModesGlyphHoverWidget.ID, editor);\r\n        this._renderDisposeables = this._register(new DisposableStore());\r\n        this._messages = [];\r\n        this._lastLineNumber = -1;\r\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, modeService, openerService));\r\n        this._computer = new MarginComputer(this._editor);\r\n        this._hoverOperation = new HoverOperation(this._computer, (result) => this._withResult(result), undefined, (result) => this._withResult(result), 300);\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        super.dispose();\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this.isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            this._hoverOperation.start(0 /* Delayed */);\r\n        }\r\n    }\r\n    startShowingAt(lineNumber) {\r\n        if (this._lastLineNumber === lineNumber) {\r\n            // We have to show the widget at the exact same line number as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        this.hide();\r\n        this._lastLineNumber = lineNumber;\r\n        this._computer.setLineNumber(lineNumber);\r\n        this._hoverOperation.start(0 /* Delayed */);\r\n    }\r\n    hide() {\r\n        this._lastLineNumber = -1;\r\n        this._hoverOperation.cancel();\r\n        super.hide();\r\n    }\r\n    _withResult(result) {\r\n        this._messages = result;\r\n        if (this._messages.length > 0) {\r\n            this._renderMessages(this._lastLineNumber, this._messages);\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(lineNumber, messages) {\r\n        this._renderDisposeables.clear();\r\n        const fragment = document.createDocumentFragment();\r\n        for (const msg of messages) {\r\n            const renderedContents = this._markdownRenderer.render(msg.value);\r\n            this._renderDisposeables.add(renderedContents);\r\n            fragment.appendChild($('div.hover-row', undefined, renderedContents.element));\r\n        }\r\n        this.updateContents(fragment);\r\n        this.showAt(lineNumber);\r\n    }\r\n}\r\nModesGlyphHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { basename, extUri } from '../../../base/common/resources.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { defaultGenerator } from '../../../base/common/idGenerator.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nexport class OneReference {\r\n    constructor(isProviderFirst, parent, link, _rangeCallback) {\r\n        this.isProviderFirst = isProviderFirst;\r\n        this.parent = parent;\r\n        this.link = link;\r\n        this._rangeCallback = _rangeCallback;\r\n        this.id = defaultGenerator.nextId();\r\n    }\r\n    get uri() {\r\n        return this.link.uri;\r\n    }\r\n    get range() {\r\n        var _a, _b;\r\n        return (_b = (_a = this._range) !== null && _a !== void 0 ? _a : this.link.targetSelectionRange) !== null && _b !== void 0 ? _b : this.link.range;\r\n    }\r\n    set range(value) {\r\n        this._range = value;\r\n        this._rangeCallback(this);\r\n    }\r\n    get ariaMessage() {\r\n        var _a;\r\n        const preview = (_a = this.parent.getPreview(this)) === null || _a === void 0 ? void 0 : _a.preview(this.range);\r\n        if (!preview) {\r\n            return localize('aria.oneReference', \"symbol in {0} on line {1} at column {2}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn);\r\n        }\r\n        else {\r\n            return localize({ key: 'aria.oneReference.preview', comment: ['Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code'] }, \"symbol in {0} on line {1} at column {2}, {3}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn, preview.value);\r\n        }\r\n    }\r\n}\r\nexport class FilePreview {\r\n    constructor(_modelReference) {\r\n        this._modelReference = _modelReference;\r\n    }\r\n    dispose() {\r\n        this._modelReference.dispose();\r\n    }\r\n    preview(range, n = 8) {\r\n        const model = this._modelReference.object.textEditorModel;\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\r\n        const word = model.getWordUntilPosition({ lineNumber: startLineNumber, column: startColumn - n });\r\n        const beforeRange = new Range(startLineNumber, word.startColumn, startLineNumber, startColumn);\r\n        const afterRange = new Range(endLineNumber, endColumn, endLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        const before = model.getValueInRange(beforeRange).replace(/^\\s+/, '');\r\n        const inside = model.getValueInRange(range);\r\n        const after = model.getValueInRange(afterRange).replace(/\\s+$/, '');\r\n        return {\r\n            value: before + inside + after,\r\n            highlight: { start: before.length, end: before.length + inside.length }\r\n        };\r\n    }\r\n}\r\nexport class FileReferences {\r\n    constructor(parent, uri) {\r\n        this.parent = parent;\r\n        this.uri = uri;\r\n        this.children = [];\r\n        this._previews = new ResourceMap();\r\n    }\r\n    dispose() {\r\n        dispose(this._previews.values());\r\n        this._previews.clear();\r\n    }\r\n    getPreview(child) {\r\n        return this._previews.get(child.uri);\r\n    }\r\n    get ariaMessage() {\r\n        const len = this.children.length;\r\n        if (len === 1) {\r\n            return localize('aria.fileReferences.1', \"1 symbol in {0}, full path {1}\", basename(this.uri), this.uri.fsPath);\r\n        }\r\n        else {\r\n            return localize('aria.fileReferences.N', \"{0} symbols in {1}, full path {2}\", len, basename(this.uri), this.uri.fsPath);\r\n        }\r\n    }\r\n    resolve(textModelResolverService) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._previews.size !== 0) {\r\n                return this;\r\n            }\r\n            for (let child of this.children) {\r\n                if (this._previews.has(child.uri)) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    const ref = yield textModelResolverService.createModelReference(child.uri);\r\n                    this._previews.set(child.uri, new FilePreview(ref));\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedError(err);\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nexport class ReferencesModel {\r\n    constructor(links, title) {\r\n        this.groups = [];\r\n        this.references = [];\r\n        this._onDidChangeReferenceRange = new Emitter();\r\n        this.onDidChangeReferenceRange = this._onDidChangeReferenceRange.event;\r\n        this._links = links;\r\n        this._title = title;\r\n        // grouping and sorting\r\n        const [providersFirst] = links;\r\n        links.sort(ReferencesModel._compareReferences);\r\n        let current;\r\n        for (let link of links) {\r\n            if (!current || !extUri.isEqual(current.uri, link.uri, true)) {\r\n                // new group\r\n                current = new FileReferences(this, link.uri);\r\n                this.groups.push(current);\r\n            }\r\n            // append, check for equality first!\r\n            if (current.children.length === 0 || ReferencesModel._compareReferences(link, current.children[current.children.length - 1]) !== 0) {\r\n                const oneRef = new OneReference(providersFirst === link, current, link, ref => this._onDidChangeReferenceRange.fire(ref));\r\n                this.references.push(oneRef);\r\n                current.children.push(oneRef);\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        dispose(this.groups);\r\n        this._onDidChangeReferenceRange.dispose();\r\n        this.groups.length = 0;\r\n    }\r\n    clone() {\r\n        return new ReferencesModel(this._links, this._title);\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    get isEmpty() {\r\n        return this.groups.length === 0;\r\n    }\r\n    get ariaMessage() {\r\n        if (this.isEmpty) {\r\n            return localize('aria.result.0', \"No results found\");\r\n        }\r\n        else if (this.references.length === 1) {\r\n            return localize('aria.result.1', \"Found 1 symbol in {0}\", this.references[0].uri.fsPath);\r\n        }\r\n        else if (this.groups.length === 1) {\r\n            return localize('aria.result.n1', \"Found {0} symbols in {1}\", this.references.length, this.groups[0].uri.fsPath);\r\n        }\r\n        else {\r\n            return localize('aria.result.nm', \"Found {0} symbols in {1} files\", this.references.length, this.groups.length);\r\n        }\r\n    }\r\n    nextOrPreviousReference(reference, next) {\r\n        let { parent } = reference;\r\n        let idx = parent.children.indexOf(reference);\r\n        let childCount = parent.children.length;\r\n        let groupCount = parent.parent.groups.length;\r\n        if (groupCount === 1 || next && idx + 1 < childCount || !next && idx > 0) {\r\n            // cycling within one file\r\n            if (next) {\r\n                idx = (idx + 1) % childCount;\r\n            }\r\n            else {\r\n                idx = (idx + childCount - 1) % childCount;\r\n            }\r\n            return parent.children[idx];\r\n        }\r\n        idx = parent.parent.groups.indexOf(parent);\r\n        if (next) {\r\n            idx = (idx + 1) % groupCount;\r\n            return parent.parent.groups[idx].children[0];\r\n        }\r\n        else {\r\n            idx = (idx + groupCount - 1) % groupCount;\r\n            return parent.parent.groups[idx].children[parent.parent.groups[idx].children.length - 1];\r\n        }\r\n    }\r\n    nearestReference(resource, position) {\r\n        const nearest = this.references.map((ref, idx) => {\r\n            return {\r\n                idx,\r\n                prefixLen: strings.commonPrefixLength(ref.uri.toString(), resource.toString()),\r\n                offsetDist: Math.abs(ref.range.startLineNumber - position.lineNumber) * 100 + Math.abs(ref.range.startColumn - position.column)\r\n            };\r\n        }).sort((a, b) => {\r\n            if (a.prefixLen > b.prefixLen) {\r\n                return -1;\r\n            }\r\n            else if (a.prefixLen < b.prefixLen) {\r\n                return 1;\r\n            }\r\n            else if (a.offsetDist < b.offsetDist) {\r\n                return -1;\r\n            }\r\n            else if (a.offsetDist > b.offsetDist) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        })[0];\r\n        if (nearest) {\r\n            return this.references[nearest.idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    referenceAt(resource, position) {\r\n        for (const ref of this.references) {\r\n            if (ref.uri.toString() === resource.toString()) {\r\n                if (Range.containsPosition(ref.range, position)) {\r\n                    return ref;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    firstReference() {\r\n        for (const ref of this.references) {\r\n            if (ref.isProviderFirst) {\r\n                return ref;\r\n            }\r\n        }\r\n        return this.references[0];\r\n    }\r\n    static _compareReferences(a, b) {\r\n        return extUri.compare(a.uri, b.uri) || Range.compareRangesUsingStarts(a.range, b.range);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { DefinitionProviderRegistry, ImplementationProviderRegistry, TypeDefinitionProviderRegistry, DeclarationProviderRegistry, ReferenceProviderRegistry } from '../../common/modes.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nfunction getLocationLinks(model, position, registry, provide) {\r\n    const provider = registry.ordered(model);\r\n    // get results\r\n    const promises = provider.map((provider) => {\r\n        return Promise.resolve(provide(provider, model, position)).then(undefined, err => {\r\n            onUnexpectedExternalError(err);\r\n            return undefined;\r\n        });\r\n    });\r\n    return Promise.all(promises).then(values => {\r\n        const result = [];\r\n        for (let value of values) {\r\n            if (Array.isArray(value)) {\r\n                result.push(...value);\r\n            }\r\n            else if (value) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n}\r\nexport function getDefinitionsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, DefinitionProviderRegistry, (provider, model, position) => {\r\n        return provider.provideDefinition(model, position, token);\r\n    });\r\n}\r\nexport function getDeclarationsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, DeclarationProviderRegistry, (provider, model, position) => {\r\n        return provider.provideDeclaration(model, position, token);\r\n    });\r\n}\r\nexport function getImplementationsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, ImplementationProviderRegistry, (provider, model, position) => {\r\n        return provider.provideImplementation(model, position, token);\r\n    });\r\n}\r\nexport function getTypeDefinitionsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, TypeDefinitionProviderRegistry, (provider, model, position) => {\r\n        return provider.provideTypeDefinition(model, position, token);\r\n    });\r\n}\r\nexport function getReferencesAtPosition(model, position, compact, token) {\r\n    return getLocationLinks(model, position, ReferenceProviderRegistry, (provider, model, position) => __awaiter(this, void 0, void 0, function* () {\r\n        const result = yield provider.provideReferences(model, position, { includeDeclaration: true }, token);\r\n        if (!compact || !result || result.length !== 2) {\r\n            return result;\r\n        }\r\n        const resultWithoutDeclaration = yield provider.provideReferences(model, position, { includeDeclaration: false }, token);\r\n        if (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\r\n            return resultWithoutDeclaration;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\n// -- API commands ----\r\nfunction _sortedAndDeduped(callback) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const rawLinks = yield callback();\r\n        const model = new ReferencesModel(rawLinks, '');\r\n        const modelLinks = model.references.map(ref => ref.link);\r\n        model.dispose();\r\n        return modelLinks;\r\n    });\r\n}\r\nregisterModelAndPositionCommand('_executeDefinitionProvider', (model, position) => _sortedAndDeduped(() => getDefinitionsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeDeclarationProvider', (model, position) => _sortedAndDeduped(() => getDeclarationsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeImplementationProvider', (model, position) => _sortedAndDeduped(() => getImplementationsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (model, position) => _sortedAndDeduped(() => getTypeDefinitionsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeReferenceProvider', (model, position) => _sortedAndDeduped(() => getReferencesAtPosition(model, position, false, CancellationToken.None)));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { ReferencesModel, FileReferences, OneReference } from '../referencesModel.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { CountBadge } from '../../../../base/browser/ui/countBadge/countBadge.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\r\nimport { attachBadgeStyler } from '../../../../platform/theme/common/styler.js';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { getBaseLabel } from '../../../../base/common/labels.js';\r\nimport { dirname, basename } from '../../../../base/common/resources.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { FuzzyScore, createMatches } from '../../../../base/common/filters.js';\r\nimport { HighlightedLabel } from '../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\r\nlet DataSource = class DataSource {\r\n    constructor(_resolverService) {\r\n        this._resolverService = _resolverService;\r\n    }\r\n    hasChildren(element) {\r\n        if (element instanceof ReferencesModel) {\r\n            return true;\r\n        }\r\n        if (element instanceof FileReferences) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getChildren(element) {\r\n        if (element instanceof ReferencesModel) {\r\n            return element.groups;\r\n        }\r\n        if (element instanceof FileReferences) {\r\n            return element.resolve(this._resolverService).then(val => {\r\n                // if (element.failure) {\r\n                // \t// refresh the element on failure so that\r\n                // \t// we can update its rendering\r\n                // \treturn tree.refresh(element).then(() => val.children);\r\n                // }\r\n                return val.children;\r\n            });\r\n        }\r\n        throw new Error('bad tree');\r\n    }\r\n};\r\nDataSource = __decorate([\r\n    __param(0, ITextModelService)\r\n], DataSource);\r\nexport { DataSource };\r\n//#endregion\r\nexport class Delegate {\r\n    getHeight() {\r\n        return 23;\r\n    }\r\n    getTemplateId(element) {\r\n        if (element instanceof FileReferences) {\r\n            return FileReferencesRenderer.id;\r\n        }\r\n        else {\r\n            return OneReferenceRenderer.id;\r\n        }\r\n    }\r\n}\r\nlet StringRepresentationProvider = class StringRepresentationProvider {\r\n    constructor(_keybindingService) {\r\n        this._keybindingService = _keybindingService;\r\n    }\r\n    getKeyboardNavigationLabel(element) {\r\n        var _a;\r\n        if (element instanceof OneReference) {\r\n            const parts = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\r\n            if (parts) {\r\n                return parts.value;\r\n            }\r\n        }\r\n        // FileReferences or unresolved OneReference\r\n        return basename(element.uri);\r\n    }\r\n};\r\nStringRepresentationProvider = __decorate([\r\n    __param(0, IKeybindingService)\r\n], StringRepresentationProvider);\r\nexport { StringRepresentationProvider };\r\nexport class IdentityProvider {\r\n    getId(element) {\r\n        return element instanceof OneReference ? element.id : element.uri;\r\n    }\r\n}\r\n//#region render: File\r\nlet FileReferencesTemplate = class FileReferencesTemplate extends Disposable {\r\n    constructor(container, _uriLabel, themeService) {\r\n        super();\r\n        this._uriLabel = _uriLabel;\r\n        const parent = document.createElement('div');\r\n        parent.classList.add('reference-file');\r\n        this.file = this._register(new IconLabel(parent, { supportHighlights: true }));\r\n        this.badge = new CountBadge(dom.append(parent, dom.$('.count')));\r\n        this._register(attachBadgeStyler(this.badge, themeService));\r\n        container.appendChild(parent);\r\n    }\r\n    set(element, matches) {\r\n        let parent = dirname(element.uri);\r\n        this.file.setLabel(getBaseLabel(element.uri), this._uriLabel.getUriLabel(parent, { relative: true }), { title: this._uriLabel.getUriLabel(element.uri), matches });\r\n        const len = element.children.length;\r\n        this.badge.setCount(len);\r\n        if (len > 1) {\r\n            this.badge.setTitleFormat(localize('referencesCount', \"{0} references\", len));\r\n        }\r\n        else {\r\n            this.badge.setTitleFormat(localize('referenceCount', \"{0} reference\", len));\r\n        }\r\n    }\r\n};\r\nFileReferencesTemplate = __decorate([\r\n    __param(1, ILabelService),\r\n    __param(2, IThemeService)\r\n], FileReferencesTemplate);\r\nlet FileReferencesRenderer = class FileReferencesRenderer {\r\n    constructor(_instantiationService) {\r\n        this._instantiationService = _instantiationService;\r\n        this.templateId = FileReferencesRenderer.id;\r\n    }\r\n    renderTemplate(container) {\r\n        return this._instantiationService.createInstance(FileReferencesTemplate, container);\r\n    }\r\n    renderElement(node, index, template) {\r\n        template.set(node.element, createMatches(node.filterData));\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.dispose();\r\n    }\r\n};\r\nFileReferencesRenderer.id = 'FileReferencesRenderer';\r\nFileReferencesRenderer = __decorate([\r\n    __param(0, IInstantiationService)\r\n], FileReferencesRenderer);\r\nexport { FileReferencesRenderer };\r\n//#endregion\r\n//#region render: Reference\r\nclass OneReferenceTemplate {\r\n    constructor(container) {\r\n        this.label = new HighlightedLabel(container, false);\r\n    }\r\n    set(element, score) {\r\n        var _a;\r\n        const preview = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\r\n        if (!preview || !preview.value) {\r\n            // this means we FAILED to resolve the document or the value is the empty string\r\n            this.label.set(`${basename(element.uri)}:${element.range.startLineNumber + 1}:${element.range.startColumn + 1}`);\r\n        }\r\n        else {\r\n            // render search match as highlight unless\r\n            // we have score, then render the score\r\n            const { value, highlight } = preview;\r\n            if (score && !FuzzyScore.isDefault(score)) {\r\n                this.label.element.classList.toggle('referenceMatch', false);\r\n                this.label.set(value, createMatches(score));\r\n            }\r\n            else {\r\n                this.label.element.classList.toggle('referenceMatch', true);\r\n                this.label.set(value, [highlight]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class OneReferenceRenderer {\r\n    constructor() {\r\n        this.templateId = OneReferenceRenderer.id;\r\n    }\r\n    renderTemplate(container) {\r\n        return new OneReferenceTemplate(container);\r\n    }\r\n    renderElement(node, index, templateData) {\r\n        templateData.set(node.element, node.filterData);\r\n    }\r\n    disposeTemplate() {\r\n    }\r\n}\r\nOneReferenceRenderer.id = 'OneReferenceRenderer';\r\n//#endregion\r\nexport class AccessibilityProvider {\r\n    getWidgetAriaLabel() {\r\n        return localize('treeAriaLabel', \"References\");\r\n    }\r\n    getAriaLabel(element) {\r\n        return element.ariaMessage;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './referencesWidget.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { Emitter, Event } from '../../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { Schemas } from '../../../../base/common/network.js';\r\nimport { basenameOrAuthority, dirname } from '../../../../base/common/resources.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { ModelDecorationOptions, TextModel } from '../../../common/model/textModel.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { AccessibilityProvider, DataSource, Delegate, FileReferencesRenderer, OneReferenceRenderer, StringRepresentationProvider, IdentityProvider } from './referencesTree.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { WorkbenchAsyncDataTree } from '../../../../platform/list/browser/listService.js';\r\nimport { activeContrastBorder } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport * as peekView from '../../peekView/peekView.js';\r\nimport { FileReferences, OneReference } from '../referencesModel.js';\r\nimport { SplitView, Sizing } from '../../../../base/browser/ui/splitview/splitview.js';\r\nimport { IUndoRedoService } from '../../../../platform/undoRedo/common/undoRedo.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nclass DecorationsManager {\r\n    constructor(_editor, _model) {\r\n        this._editor = _editor;\r\n        this._model = _model;\r\n        this._decorations = new Map();\r\n        this._decorationIgnoreSet = new Set();\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModelChange = new DisposableStore();\r\n        this._callOnDispose.add(this._editor.onDidChangeModel(() => this._onModelChanged()));\r\n        this._onModelChanged();\r\n    }\r\n    dispose() {\r\n        this._callOnModelChange.dispose();\r\n        this._callOnDispose.dispose();\r\n        this.removeDecorations();\r\n    }\r\n    _onModelChanged() {\r\n        this._callOnModelChange.clear();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (let ref of this._model.references) {\r\n            if (ref.uri.toString() === model.uri.toString()) {\r\n                this._addDecorations(ref.parent);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _addDecorations(reference) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(() => this._onDecorationChanged()));\r\n        const newDecorations = [];\r\n        const newDecorationsActualIndex = [];\r\n        for (let i = 0, len = reference.children.length; i < len; i++) {\r\n            let oneReference = reference.children[i];\r\n            if (this._decorationIgnoreSet.has(oneReference.id)) {\r\n                continue;\r\n            }\r\n            if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) {\r\n                continue;\r\n            }\r\n            newDecorations.push({\r\n                range: oneReference.range,\r\n                options: DecorationsManager.DecorationOptions\r\n            });\r\n            newDecorationsActualIndex.push(i);\r\n        }\r\n        const decorations = this._editor.deltaDecorations([], newDecorations);\r\n        for (let i = 0; i < decorations.length; i++) {\r\n            this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\r\n        }\r\n    }\r\n    _onDecorationChanged() {\r\n        const toRemove = [];\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (let [decorationId, reference] of this._decorations) {\r\n            const newRange = model.getDecorationRange(decorationId);\r\n            if (!newRange) {\r\n                continue;\r\n            }\r\n            let ignore = false;\r\n            if (Range.equalsRange(newRange, reference.range)) {\r\n                continue;\r\n            }\r\n            if (Range.spansMultipleLines(newRange)) {\r\n                ignore = true;\r\n            }\r\n            else {\r\n                const lineLength = reference.range.endColumn - reference.range.startColumn;\r\n                const newLineLength = newRange.endColumn - newRange.startColumn;\r\n                if (lineLength !== newLineLength) {\r\n                    ignore = true;\r\n                }\r\n            }\r\n            if (ignore) {\r\n                this._decorationIgnoreSet.add(reference.id);\r\n                toRemove.push(decorationId);\r\n            }\r\n            else {\r\n                reference.range = newRange;\r\n            }\r\n        }\r\n        for (let i = 0, len = toRemove.length; i < len; i++) {\r\n            this._decorations.delete(toRemove[i]);\r\n        }\r\n        this._editor.deltaDecorations(toRemove, []);\r\n    }\r\n    removeDecorations() {\r\n        this._editor.deltaDecorations([...this._decorations.keys()], []);\r\n        this._decorations.clear();\r\n    }\r\n}\r\nDecorationsManager.DecorationOptions = ModelDecorationOptions.register({\r\n    description: 'reference-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'reference-decoration'\r\n});\r\nexport class LayoutData {\r\n    constructor() {\r\n        this.ratio = 0.7;\r\n        this.heightInLines = 18;\r\n    }\r\n    static fromJSON(raw) {\r\n        let ratio;\r\n        let heightInLines;\r\n        try {\r\n            const data = JSON.parse(raw);\r\n            ratio = data.ratio;\r\n            heightInLines = data.heightInLines;\r\n        }\r\n        catch (_a) {\r\n            //\r\n        }\r\n        return {\r\n            ratio: ratio || 0.7,\r\n            heightInLines: heightInLines || 18\r\n        };\r\n    }\r\n}\r\nclass ReferencesTree extends WorkbenchAsyncDataTree {\r\n}\r\n/**\r\n * ZoneWidget that is shown inside the editor\r\n */\r\nlet ReferenceWidget = class ReferenceWidget extends peekView.PeekViewWidget {\r\n    constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService) {\r\n        super(editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true, supportOnTitleClick: true }, _instantiationService);\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this.layoutData = layoutData;\r\n        this._textModelResolverService = _textModelResolverService;\r\n        this._instantiationService = _instantiationService;\r\n        this._peekViewService = _peekViewService;\r\n        this._uriLabel = _uriLabel;\r\n        this._undoRedoService = _undoRedoService;\r\n        this._keybindingService = _keybindingService;\r\n        this._disposeOnNewModel = new DisposableStore();\r\n        this._callOnDispose = new DisposableStore();\r\n        this._onDidSelectReference = new Emitter();\r\n        this.onDidSelectReference = this._onDidSelectReference.event;\r\n        this._dim = new dom.Dimension(0, 0);\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._peekViewService.addExclusiveWidget(editor, this);\r\n        this.create();\r\n    }\r\n    dispose() {\r\n        this.setModel(undefined);\r\n        this._callOnDispose.dispose();\r\n        this._disposeOnNewModel.dispose();\r\n        dispose(this._preview);\r\n        dispose(this._previewNotAvailableMessage);\r\n        dispose(this._tree);\r\n        dispose(this._previewModelReference);\r\n        this._splitView.dispose();\r\n        super.dispose();\r\n    }\r\n    _applyTheme(theme) {\r\n        const borderColor = theme.getColor(peekView.peekViewBorder) || Color.transparent;\r\n        this.style({\r\n            arrowColor: borderColor,\r\n            frameColor: borderColor,\r\n            headerBackgroundColor: theme.getColor(peekView.peekViewTitleBackground) || Color.transparent,\r\n            primaryHeadingColor: theme.getColor(peekView.peekViewTitleForeground),\r\n            secondaryHeadingColor: theme.getColor(peekView.peekViewTitleInfoForeground)\r\n        });\r\n    }\r\n    show(where) {\r\n        this.editor.revealRangeInCenterIfOutsideViewport(where, 0 /* Smooth */);\r\n        super.show(where, this.layoutData.heightInLines || 18);\r\n    }\r\n    focusOnReferenceTree() {\r\n        this._tree.domFocus();\r\n    }\r\n    focusOnPreviewEditor() {\r\n        this._preview.focus();\r\n    }\r\n    isPreviewEditorFocused() {\r\n        return this._preview.hasTextFocus();\r\n    }\r\n    _onTitleClick(e) {\r\n        if (this._preview && this._preview.getModel()) {\r\n            this._onDidSelectReference.fire({\r\n                element: this._getFocusedReference(),\r\n                kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\r\n                source: 'title'\r\n            });\r\n        }\r\n    }\r\n    _fillBody(containerElement) {\r\n        this.setCssClass('reference-zone-widget');\r\n        // message pane\r\n        this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\r\n        dom.hide(this._messageContainer);\r\n        this._splitView = new SplitView(containerElement, { orientation: 1 /* HORIZONTAL */ });\r\n        // editor\r\n        this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\r\n        let options = {\r\n            scrollBeyondLastLine: false,\r\n            scrollbar: {\r\n                verticalScrollbarSize: 14,\r\n                horizontal: 'auto',\r\n                useShadows: true,\r\n                verticalHasArrows: false,\r\n                horizontalHasArrows: false,\r\n                alwaysConsumeMouseWheel: false\r\n            },\r\n            overviewRulerLanes: 2,\r\n            fixedOverflowWidgets: true,\r\n            minimap: {\r\n                enabled: false\r\n            }\r\n        };\r\n        this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);\r\n        dom.hide(this._previewContainer);\r\n        this._previewNotAvailableMessage = new TextModel(nls.localize('missingPreviewMessage', \"no preview available\"), TextModel.DEFAULT_CREATION_OPTIONS, null, null, this._undoRedoService);\r\n        // tree\r\n        this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\r\n        const treeOptions = {\r\n            keyboardSupport: this._defaultTreeKeyboardSupport,\r\n            accessibilityProvider: new AccessibilityProvider(),\r\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\r\n            identityProvider: new IdentityProvider(),\r\n            openOnSingleClick: true,\r\n            selectionNavigation: true,\r\n            overrideStyles: {\r\n                listBackground: peekView.peekViewResultsBackground\r\n            }\r\n        };\r\n        if (this._defaultTreeKeyboardSupport) {\r\n            // the tree will consume `Escape` and prevent the widget from closing\r\n            this._callOnDispose.add(dom.addStandardDisposableListener(this._treeContainer, 'keydown', (e) => {\r\n                if (e.equals(9 /* Escape */)) {\r\n                    this._keybindingService.dispatchEvent(e, e.target);\r\n                    e.stopPropagation();\r\n                }\r\n            }, true));\r\n        }\r\n        this._tree = this._instantiationService.createInstance(ReferencesTree, 'ReferencesWidget', this._treeContainer, new Delegate(), [\r\n            this._instantiationService.createInstance(FileReferencesRenderer),\r\n            this._instantiationService.createInstance(OneReferenceRenderer),\r\n        ], this._instantiationService.createInstance(DataSource), treeOptions);\r\n        // split stuff\r\n        this._splitView.addView({\r\n            onDidChange: Event.None,\r\n            element: this._previewContainer,\r\n            minimumSize: 200,\r\n            maximumSize: Number.MAX_VALUE,\r\n            layout: (width) => {\r\n                this._preview.layout({ height: this._dim.height, width });\r\n            }\r\n        }, Sizing.Distribute);\r\n        this._splitView.addView({\r\n            onDidChange: Event.None,\r\n            element: this._treeContainer,\r\n            minimumSize: 100,\r\n            maximumSize: Number.MAX_VALUE,\r\n            layout: (width) => {\r\n                this._treeContainer.style.height = `${this._dim.height}px`;\r\n                this._treeContainer.style.width = `${width}px`;\r\n                this._tree.layout(this._dim.height, width);\r\n            }\r\n        }, Sizing.Distribute);\r\n        this._disposables.add(this._splitView.onDidSashChange(() => {\r\n            if (this._dim.width) {\r\n                this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\r\n            }\r\n        }, undefined));\r\n        // listen on selection and focus\r\n        let onEvent = (element, kind) => {\r\n            if (element instanceof OneReference) {\r\n                if (kind === 'show') {\r\n                    this._revealReference(element, false);\r\n                }\r\n                this._onDidSelectReference.fire({ element, kind, source: 'tree' });\r\n            }\r\n        };\r\n        this._tree.onDidOpen(e => {\r\n            if (e.sideBySide) {\r\n                onEvent(e.element, 'side');\r\n            }\r\n            else if (e.editorOptions.pinned) {\r\n                onEvent(e.element, 'goto');\r\n            }\r\n            else {\r\n                onEvent(e.element, 'show');\r\n            }\r\n        });\r\n        dom.hide(this._treeContainer);\r\n    }\r\n    _onWidth(width) {\r\n        if (this._dim) {\r\n            this._doLayoutBody(this._dim.height, width);\r\n        }\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        super._doLayoutBody(heightInPixel, widthInPixel);\r\n        this._dim = new dom.Dimension(widthInPixel, heightInPixel);\r\n        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\r\n        this._splitView.layout(widthInPixel);\r\n        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\r\n    }\r\n    setSelection(selection) {\r\n        return this._revealReference(selection, true).then(() => {\r\n            if (!this._model) {\r\n                // disposed\r\n                return;\r\n            }\r\n            // show in tree\r\n            this._tree.setSelection([selection]);\r\n            this._tree.setFocus([selection]);\r\n        });\r\n    }\r\n    setModel(newModel) {\r\n        // clean up\r\n        this._disposeOnNewModel.clear();\r\n        this._model = newModel;\r\n        if (this._model) {\r\n            return this._onNewModel();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _onNewModel() {\r\n        if (!this._model) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        if (this._model.isEmpty) {\r\n            this.setTitle('');\r\n            this._messageContainer.innerText = nls.localize('noResults', \"No results\");\r\n            dom.show(this._messageContainer);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        dom.hide(this._messageContainer);\r\n        this._decorationsManager = new DecorationsManager(this._preview, this._model);\r\n        this._disposeOnNewModel.add(this._decorationsManager);\r\n        // listen on model changes\r\n        this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\r\n        // listen on editor\r\n        this._disposeOnNewModel.add(this._preview.onMouseDown(e => {\r\n            const { event, target } = e;\r\n            if (event.detail !== 2) {\r\n                return;\r\n            }\r\n            const element = this._getFocusedReference();\r\n            if (!element) {\r\n                return;\r\n            }\r\n            this._onDidSelectReference.fire({\r\n                element: { uri: element.uri, range: target.range },\r\n                kind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\r\n                source: 'editor'\r\n            });\r\n        }));\r\n        // make sure things are rendered\r\n        this.container.classList.add('results-loaded');\r\n        dom.show(this._treeContainer);\r\n        dom.show(this._previewContainer);\r\n        this._splitView.layout(this._dim.width);\r\n        this.focusOnReferenceTree();\r\n        // pick input and a reference to begin with\r\n        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\r\n    }\r\n    _getFocusedReference() {\r\n        const [element] = this._tree.getFocus();\r\n        if (element instanceof OneReference) {\r\n            return element;\r\n        }\r\n        else if (element instanceof FileReferences) {\r\n            if (element.children.length > 0) {\r\n                return element.children[0];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._revealReference(reference, false);\r\n            this._onDidSelectReference.fire({ element: reference, kind: 'goto', source: 'tree' });\r\n        });\r\n    }\r\n    _revealReference(reference, revealParent) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // check if there is anything to do...\r\n            if (this._revealedReference === reference) {\r\n                return;\r\n            }\r\n            this._revealedReference = reference;\r\n            // Update widget header\r\n            if (reference.uri.scheme !== Schemas.inMemory) {\r\n                this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\r\n            }\r\n            else {\r\n                this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\r\n            }\r\n            const promise = this._textModelResolverService.createModelReference(reference.uri);\r\n            if (this._tree.getInput() === reference.parent) {\r\n                this._tree.reveal(reference);\r\n            }\r\n            else {\r\n                if (revealParent) {\r\n                    this._tree.reveal(reference.parent);\r\n                }\r\n                yield this._tree.expand(reference.parent);\r\n                this._tree.reveal(reference);\r\n            }\r\n            const ref = yield promise;\r\n            if (!this._model) {\r\n                // disposed\r\n                ref.dispose();\r\n                return;\r\n            }\r\n            dispose(this._previewModelReference);\r\n            // show in editor\r\n            const model = ref.object;\r\n            if (model) {\r\n                const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* Smooth */ : 1 /* Immediate */;\r\n                const sel = Range.lift(reference.range).collapseToStart();\r\n                this._previewModelReference = ref;\r\n                this._preview.setModel(model.textEditorModel);\r\n                this._preview.setSelection(sel);\r\n                this._preview.revealRangeInCenter(sel, scrollType);\r\n            }\r\n            else {\r\n                this._preview.setModel(this._previewNotAvailableMessage);\r\n                ref.dispose();\r\n            }\r\n        });\r\n    }\r\n};\r\nReferenceWidget = __decorate([\r\n    __param(3, IThemeService),\r\n    __param(4, ITextModelService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, peekView.IPeekViewService),\r\n    __param(7, ILabelService),\r\n    __param(8, IUndoRedoService),\r\n    __param(9, IKeybindingService)\r\n], ReferenceWidget);\r\nexport { ReferenceWidget };\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const findMatchHighlightColor = theme.getColor(peekView.peekViewResultsMatchHighlight);\r\n    if (findMatchHighlightColor) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { background-color: ${findMatchHighlightColor}; }`);\r\n    }\r\n    const referenceHighlightColor = theme.getColor(peekView.peekViewEditorMatchHighlight);\r\n    if (referenceHighlightColor) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: ${referenceHighlightColor}; }`);\r\n    }\r\n    const referenceHighlightBorder = theme.getColor(peekView.peekViewEditorMatchHighlightBorder);\r\n    if (referenceHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid ${referenceHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const hcOutline = theme.getColor(activeContrastBorder);\r\n    if (hcOutline) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { border: 1px dotted ${hcOutline}; box-sizing: border-box; }`);\r\n    }\r\n    const resultsBackground = theme.getColor(peekView.peekViewResultsBackground);\r\n    if (resultsBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { background-color: ${resultsBackground}; }`);\r\n    }\r\n    const resultsMatchForeground = theme.getColor(peekView.peekViewResultsMatchForeground);\r\n    if (resultsMatchForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { color: ${resultsMatchForeground}; }`);\r\n    }\r\n    const resultsFileForeground = theme.getColor(peekView.peekViewResultsFileForeground);\r\n    if (resultsFileForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .reference-file { color: ${resultsFileForeground}; }`);\r\n    }\r\n    const resultsSelectedBackground = theme.getColor(peekView.peekViewResultsSelectionBackground);\r\n    if (resultsSelectedBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: ${resultsSelectedBackground}; }`);\r\n    }\r\n    const resultsSelectedForeground = theme.getColor(peekView.peekViewResultsSelectionForeground);\r\n    if (resultsSelectedForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: ${resultsSelectedForeground} !important; }`);\r\n    }\r\n    const editorBackground = theme.getColor(peekView.peekViewEditorBackground);\r\n    if (editorBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,` +\r\n            `.monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {` +\r\n            `\tbackground-color: ${editorBackground};` +\r\n            `}`);\r\n    }\r\n    const editorGutterBackground = theme.getColor(peekView.peekViewEditorGutterBackground);\r\n    if (editorGutterBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .margin {` +\r\n            `\tbackground-color: ${editorGutterBackground};` +\r\n            `}`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../../nls.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IContextKeyService, RawContextKey, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nimport { OneReference } from '../referencesModel.js';\r\nimport { ReferenceWidget, LayoutData } from './referencesWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { getOuterEditor, PeekContext } from '../../peekView/peekView.js';\r\nimport { IListService, WorkbenchListFocusContextKey } from '../../../../platform/list/browser/listService.js';\r\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\r\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\r\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\r\nlet ReferencesController = class ReferencesController {\r\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this._editor = _editor;\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._instantiationService = _instantiationService;\r\n        this._storageService = _storageService;\r\n        this._configurationService = _configurationService;\r\n        this._disposables = new DisposableStore();\r\n        this._requestIdPool = 0;\r\n        this._ignoreModelChangeEvent = false;\r\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ReferencesController.ID);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.dispose();\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    toggleWidget(range, modelPromise, peekMode) {\r\n        // close current widget and return early is position didn't change\r\n        let widgetPosition;\r\n        if (this._widget) {\r\n            widgetPosition = this._widget.position;\r\n        }\r\n        this.closeWidget();\r\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\r\n            return;\r\n        }\r\n        this._peekMode = peekMode;\r\n        this._referenceSearchVisible.set(true);\r\n        // close the widget on model/mode changes\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\r\n        this._disposables.add(this._editor.onDidChangeModel(() => {\r\n            if (!this._ignoreModelChangeEvent) {\r\n                this.closeWidget();\r\n            }\r\n        }));\r\n        const storageKey = 'peekViewLayout';\r\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */, '{}'));\r\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\r\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\r\n        this._widget.show(range);\r\n        this._disposables.add(this._widget.onDidClose(() => {\r\n            modelPromise.cancel();\r\n            if (this._widget) {\r\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n                this._widget = undefined;\r\n            }\r\n            this.closeWidget();\r\n        }));\r\n        this._disposables.add(this._widget.onDidSelectReference(event => {\r\n            let { element, kind } = event;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            switch (kind) {\r\n                case 'open':\r\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\r\n                        // when stable peek is configured we don't close\r\n                        // the peek window on selecting the editor\r\n                        this.openReference(element, false, false);\r\n                    }\r\n                    break;\r\n                case 'side':\r\n                    this.openReference(element, true, false);\r\n                    break;\r\n                case 'goto':\r\n                    if (peekMode) {\r\n                        this._gotoReference(element);\r\n                    }\r\n                    else {\r\n                        this.openReference(element, false, true);\r\n                    }\r\n                    break;\r\n            }\r\n        }));\r\n        const requestId = ++this._requestIdPool;\r\n        modelPromise.then(model => {\r\n            var _a;\r\n            // still current request? widget still open?\r\n            if (requestId !== this._requestIdPool || !this._widget) {\r\n                model.dispose();\r\n                return undefined;\r\n            }\r\n            (_a = this._model) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this._model = model;\r\n            // show widget\r\n            return this._widget.setModel(this._model).then(() => {\r\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\r\n                    // set title\r\n                    if (!this._model.isEmpty) {\r\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\r\n                    }\r\n                    else {\r\n                        this._widget.setMetaTitle('');\r\n                    }\r\n                    // set 'best' selection\r\n                    let uri = this._editor.getModel().uri;\r\n                    let pos = new Position(range.startLineNumber, range.startColumn);\r\n                    let selection = this._model.nearestReference(uri, pos);\r\n                    if (selection) {\r\n                        return this._widget.setSelection(selection).then(() => {\r\n                            if (this._widget && this._editor.getOption(76 /* peekWidgetDefaultFocus */) === 'editor') {\r\n                                this._widget.focusOnPreviewEditor();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                return undefined;\r\n            });\r\n        }, error => {\r\n            this._notificationService.error(error);\r\n        });\r\n    }\r\n    changeFocusBetweenPreviewAndReferences() {\r\n        if (!this._widget) {\r\n            // can be called while still resolving...\r\n            return;\r\n        }\r\n        if (this._widget.isPreviewEditorFocused()) {\r\n            this._widget.focusOnReferenceTree();\r\n        }\r\n        else {\r\n            this._widget.focusOnPreviewEditor();\r\n        }\r\n    }\r\n    goToNextOrPreviousReference(fwd) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            const currentPosition = this._widget.position;\r\n            if (!currentPosition) {\r\n                return;\r\n            }\r\n            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\r\n            if (!source) {\r\n                return;\r\n            }\r\n            const target = this._model.nextOrPreviousReference(source, fwd);\r\n            const editorFocus = this._editor.hasTextFocus();\r\n            const previewEditorFocus = this._widget.isPreviewEditorFocused();\r\n            yield this._widget.setSelection(target);\r\n            yield this._gotoReference(target);\r\n            if (editorFocus) {\r\n                this._editor.focus();\r\n            }\r\n            else if (this._widget && previewEditorFocus) {\r\n                this._widget.focusOnPreviewEditor();\r\n            }\r\n        });\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            yield this._widget.revealReference(reference);\r\n        });\r\n    }\r\n    closeWidget(focusEditor = true) {\r\n        var _a, _b;\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n        this._requestIdPool += 1; // Cancel pending requests\r\n    }\r\n    _gotoReference(ref) {\r\n        if (this._widget) {\r\n            this._widget.hide();\r\n        }\r\n        this._ignoreModelChangeEvent = true;\r\n        const range = Range.lift(ref.range).collapseToStart();\r\n        return this._editorService.openCodeEditor({\r\n            resource: ref.uri,\r\n            options: { selection: range }\r\n        }, this._editor).then(openedEditor => {\r\n            var _a;\r\n            this._ignoreModelChangeEvent = false;\r\n            if (!openedEditor || !this._widget) {\r\n                // something went wrong...\r\n                this.closeWidget();\r\n                return;\r\n            }\r\n            if (this._editor === openedEditor) {\r\n                //\r\n                this._widget.show(range);\r\n                this._widget.focusOnReferenceTree();\r\n            }\r\n            else {\r\n                // we opened a different editor instance which means a different controller instance.\r\n                // therefore we stop with this controller and continue with the other\r\n                const other = ReferencesController.get(openedEditor);\r\n                const model = this._model.clone();\r\n                this.closeWidget();\r\n                openedEditor.focus();\r\n                other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\r\n            }\r\n        }, (err) => {\r\n            this._ignoreModelChangeEvent = false;\r\n            onUnexpectedError(err);\r\n        });\r\n    }\r\n    openReference(ref, sideBySide, pinned) {\r\n        // clear stage\r\n        if (!sideBySide) {\r\n            this.closeWidget();\r\n        }\r\n        const { uri, range } = ref;\r\n        this._editorService.openCodeEditor({\r\n            resource: uri,\r\n            options: { selection: range, pinned }\r\n        }, this._editor, sideBySide);\r\n    }\r\n};\r\nReferencesController.ID = 'editor.contrib.referencesController';\r\nReferencesController = __decorate([\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, INotificationService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IConfigurationService)\r\n], ReferencesController);\r\nexport { ReferencesController };\r\nfunction withController(accessor, fn) {\r\n    const outerEditor = getOuterEditor(accessor);\r\n    if (!outerEditor) {\r\n        return;\r\n    }\r\n    let controller = ReferencesController.get(outerEditor);\r\n    if (controller) {\r\n        fn(controller);\r\n    }\r\n}\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'togglePeekWidgetFocus',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 60 /* F2 */),\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.changeFocusBetweenPreviewAndReferences();\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToNextReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 62 /* F4 */,\r\n    secondary: [70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(true);\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToPreviousReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 1024 /* Shift */ | 62 /* F4 */,\r\n    secondary: [1024 /* Shift */ | 70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(false);\r\n        });\r\n    }\r\n});\r\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\r\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\r\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\r\n// close\r\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\r\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 100 /* EditorContrib */ - 101,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 200 /* WorkbenchContrib */ + 50,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'revealReference',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    primary: 3 /* Enter */,\r\n    mac: {\r\n        primary: 3 /* Enter */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */]\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.revealReference(focus[0]));\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'openReferenceToSide',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n    mac: {\r\n        primary: 256 /* WinCtrl */ | 3 /* Enter */\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\r\n        }\r\n    }\r\n});\r\nCommandsRegistry.registerCommand('openReference', (accessor) => {\r\n    var _a;\r\n    const listService = accessor.get(IListService);\r\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { registerEditorCommand, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { dispose, combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { isEqual } from '../../../base/common/resources.js';\r\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\r\nexport const ISymbolNavigationService = createDecorator('ISymbolNavigationService');\r\nlet SymbolNavigationService = class SymbolNavigationService {\r\n    constructor(contextKeyService, _editorService, _notificationService, _keybindingService) {\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._keybindingService = _keybindingService;\r\n        this._currentModel = undefined;\r\n        this._currentIdx = -1;\r\n        this._ignoreEditorChange = false;\r\n        this._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\r\n    }\r\n    reset() {\r\n        var _a, _b;\r\n        this._ctxHasSymbols.reset();\r\n        (_a = this._currentState) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentMessage) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._currentModel = undefined;\r\n        this._currentIdx = -1;\r\n    }\r\n    put(anchor) {\r\n        const refModel = anchor.parent.parent;\r\n        if (refModel.references.length <= 1) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._currentModel = refModel;\r\n        this._currentIdx = refModel.references.indexOf(anchor);\r\n        this._ctxHasSymbols.set(true);\r\n        this._showMessage();\r\n        const editorState = new EditorState(this._editorService);\r\n        const listener = editorState.onDidChange(_ => {\r\n            if (this._ignoreEditorChange) {\r\n                return;\r\n            }\r\n            const editor = this._editorService.getActiveCodeEditor();\r\n            if (!editor) {\r\n                return;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!model || !position) {\r\n                return;\r\n            }\r\n            let seenUri = false;\r\n            let seenPosition = false;\r\n            for (const reference of refModel.references) {\r\n                if (isEqual(reference.uri, model.uri)) {\r\n                    seenUri = true;\r\n                    seenPosition = seenPosition || Range.containsPosition(reference.range, position);\r\n                }\r\n                else if (seenUri) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!seenUri || !seenPosition) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._currentState = combinedDisposable(editorState, listener);\r\n    }\r\n    revealNext(source) {\r\n        if (!this._currentModel) {\r\n            return Promise.resolve();\r\n        }\r\n        // get next result and advance\r\n        this._currentIdx += 1;\r\n        this._currentIdx %= this._currentModel.references.length;\r\n        const reference = this._currentModel.references[this._currentIdx];\r\n        // status\r\n        this._showMessage();\r\n        // open editor, ignore events while that happens\r\n        this._ignoreEditorChange = true;\r\n        return this._editorService.openCodeEditor({\r\n            resource: reference.uri,\r\n            options: {\r\n                selection: Range.collapseToStart(reference.range),\r\n                selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n            }\r\n        }, source).finally(() => {\r\n            this._ignoreEditorChange = false;\r\n        });\r\n    }\r\n    _showMessage() {\r\n        var _a;\r\n        (_a = this._currentMessage) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\r\n        const message = kb\r\n            ? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel())\r\n            : localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel.references.length);\r\n        this._currentMessage = this._notificationService.status(message);\r\n    }\r\n};\r\nSymbolNavigationService = __decorate([\r\n    __param(0, IContextKeyService),\r\n    __param(1, ICodeEditorService),\r\n    __param(2, INotificationService),\r\n    __param(3, IKeybindingService)\r\n], SymbolNavigationService);\r\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, true);\r\nregisterEditorCommand(new class extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoNextSymbolFromResult',\r\n            precondition: ctxHasSymbols,\r\n            kbOpts: {\r\n                weight: 100 /* EditorContrib */,\r\n                primary: 70 /* F12 */\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(accessor, editor) {\r\n        return accessor.get(ISymbolNavigationService).revealNext(editor);\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'editor.gotoNextSymbolFromResult.cancel',\r\n    weight: 100 /* EditorContrib */,\r\n    when: ctxHasSymbols,\r\n    primary: 9 /* Escape */,\r\n    handler(accessor) {\r\n        accessor.get(ISymbolNavigationService).reset();\r\n    }\r\n});\r\n//\r\nlet EditorState = class EditorState {\r\n    constructor(editorService) {\r\n        this._listener = new Map();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\r\n        this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\r\n        editorService.listCodeEditors().forEach(this._onDidAddEditor, this);\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._onDidChange.dispose();\r\n        dispose(this._listener.values());\r\n    }\r\n    _onDidAddEditor(editor) {\r\n        this._listener.set(editor, combinedDisposable(editor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })), editor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor }))));\r\n    }\r\n    _onDidRemoveEditor(editor) {\r\n        var _a;\r\n        (_a = this._listener.get(editor)) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._listener.delete(editor);\r\n    }\r\n};\r\nEditorState = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], EditorState);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { createCancelablePromise, raceCancellation } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { isWeb } from '../../../base/common/platform.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as corePosition from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { isLocationLink } from '../../common/modes.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { PeekContext } from '../peekView/peekView.js';\r\nimport { ReferencesController } from './peek/referencesController.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition, getReferencesAtPosition } from './goToSymbol.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { ISymbolNavigationService } from './symbolNavigation.js';\r\nimport { isStandalone } from '../../../base/browser/browser.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\r\n    submenu: MenuId.EditorContextPeek,\r\n    title: nls.localize('peek.submenu', \"Peek\"),\r\n    group: 'navigation',\r\n    order: 100\r\n});\r\nconst _goToActionIds = new Set();\r\nfunction registerGoToAction(ctor) {\r\n    const result = new ctor();\r\n    registerInstantiatedEditorAction(result);\r\n    _goToActionIds.add(result.id);\r\n    return result;\r\n}\r\nclass SymbolNavigationAction extends EditorAction {\r\n    constructor(configuration, opts) {\r\n        super(opts);\r\n        this._configuration = configuration;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        const notificationService = accessor.get(INotificationService);\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const progressService = accessor.get(IEditorProgressService);\r\n        const symbolNavService = accessor.get(ISymbolNavigationService);\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* Value */ | 4 /* Position */);\r\n        const promise = raceCancellation(this._getLocationModel(model, pos, cts.token), cts.token).then((references) => __awaiter(this, void 0, void 0, function* () {\r\n            if (!references || cts.token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            alert(references.ariaMessage);\r\n            let altAction;\r\n            if (references.referenceAt(model.uri, pos)) {\r\n                const altActionId = this._getAlternativeCommand(editor);\r\n                if (altActionId !== this.id && _goToActionIds.has(altActionId)) {\r\n                    altAction = editor.getAction(altActionId);\r\n                }\r\n            }\r\n            const referenceCount = references.references.length;\r\n            if (referenceCount === 0) {\r\n                // no result -> show message\r\n                if (!this._configuration.muteMessage) {\r\n                    const info = model.getWordAtPosition(pos);\r\n                    MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);\r\n                }\r\n            }\r\n            else if (referenceCount === 1 && altAction) {\r\n                // already at the only result, run alternative\r\n                altAction.run();\r\n            }\r\n            else {\r\n                // normal results handling\r\n                return this._onResult(editorService, symbolNavService, editor, references);\r\n            }\r\n        }), (err) => {\r\n            // report an error\r\n            notificationService.error(err);\r\n        }).finally(() => {\r\n            cts.dispose();\r\n        });\r\n        progressService.showWhile(promise, 250);\r\n        return promise;\r\n    }\r\n    _onResult(editorService, symbolNavService, editor, model) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const gotoLocation = this._getGoToPreference(editor);\r\n            if (!(editor instanceof EmbeddedCodeEditorWidget) && (this._configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\r\n                this._openInPeek(editor, model);\r\n            }\r\n            else {\r\n                const next = model.firstReference();\r\n                const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\r\n                const targetEditor = yield this._openReference(editor, editorService, next, this._configuration.openToSide, !peek);\r\n                if (peek && targetEditor) {\r\n                    this._openInPeek(targetEditor, model);\r\n                }\r\n                else {\r\n                    model.dispose();\r\n                }\r\n                // keep remaining locations around when using\r\n                // 'goto'-mode\r\n                if (gotoLocation === 'goto') {\r\n                    symbolNavService.put(next);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _openReference(editor, editorService, reference, sideBySide, highlight) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // range is the target-selection-range when we have one\r\n            // and the fallback is the 'full' range\r\n            let range = undefined;\r\n            if (isLocationLink(reference)) {\r\n                range = reference.targetSelectionRange;\r\n            }\r\n            if (!range) {\r\n                range = reference.range;\r\n            }\r\n            if (!range) {\r\n                return undefined;\r\n            }\r\n            const targetEditor = yield editorService.openCodeEditor({\r\n                resource: reference.uri,\r\n                options: {\r\n                    selection: Range.collapseToStart(range),\r\n                    selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n                }\r\n            }, editor, sideBySide);\r\n            if (!targetEditor) {\r\n                return undefined;\r\n            }\r\n            if (highlight) {\r\n                const modelNow = targetEditor.getModel();\r\n                const ids = targetEditor.deltaDecorations([], [{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\r\n                setTimeout(() => {\r\n                    if (targetEditor.getModel() === modelNow) {\r\n                        targetEditor.deltaDecorations(ids, []);\r\n                    }\r\n                }, 350);\r\n            }\r\n            return targetEditor;\r\n        });\r\n    }\r\n    _openInPeek(target, model) {\r\n        let controller = ReferencesController.get(target);\r\n        if (controller && target.hasModel()) {\r\n            controller.toggleWidget(target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this._configuration.openInPeek);\r\n        }\r\n        else {\r\n            model.dispose();\r\n        }\r\n    }\r\n}\r\n//#region --- DEFINITION\r\nexport class DefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDefinitionsAtPosition(model, position, token), nls.localize('def.title', 'Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\r\n            : nls.localize('generic.noResults', \"No definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleDefinitions;\r\n    }\r\n}\r\nconst goToDefinitionKb = isWeb && !isStandalone\r\n    ? 2048 /* CtrlCmd */ | 70 /* F12 */\r\n    : 70 /* F12 */;\r\nregisterGoToAction((_a = class GoToDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDefinitionAction.id,\r\n                label: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\r\n                alias: 'Go to Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: goToDefinitionKb,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.1\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\r\n        }\r\n    },\r\n    _a.id = 'editor.action.revealDefinition',\r\n    _a));\r\nregisterGoToAction((_b = class OpenDefinitionToSideAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: true,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: OpenDefinitionToSideAction.id,\r\n                label: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\r\n                alias: 'Open Definition to the Side',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, goToDefinitionKb),\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\r\n        }\r\n    },\r\n    _b.id = 'editor.action.revealDefinitionAside',\r\n    _b));\r\nregisterGoToAction((_c = class PeekDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekDefinitionAction.id,\r\n                label: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\r\n                alias: 'Peek Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 512 /* Alt */ | 70 /* F12 */,\r\n                    linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 68 /* F10 */ },\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 2\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\r\n        }\r\n    },\r\n    _c.id = 'editor.action.peekDefinition',\r\n    _c));\r\n//#endregion\r\n//#region --- DECLARATION\r\nclass DeclarationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDeclarationsAtPosition(model, position, token), nls.localize('decl.title', 'Declarations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeDeclarationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleDeclarations;\r\n    }\r\n}\r\nregisterGoToAction((_d = class GoToDeclarationAction extends DeclarationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDeclarationAction.id,\r\n                label: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\r\n                alias: 'Go to Declaration',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.3\r\n                },\r\n            });\r\n        }\r\n        _getNoResultFoundMessage(info) {\r\n            return info && info.word\r\n                ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n                : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n        }\r\n    },\r\n    _d.id = 'editor.action.revealDeclaration',\r\n    _d));\r\nregisterGoToAction(class PeekDeclarationAction extends DeclarationAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.peekDeclaration',\r\n            label: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\r\n            alias: 'Peek Declaration',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- TYPE DEFINITION\r\nclass TypeDefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getTypeDefinitionsAtPosition(model, position, token), nls.localize('typedef.title', 'Type Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\r\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeTypeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleTypeDefinitions;\r\n    }\r\n}\r\nregisterGoToAction((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\r\n                alias: 'Go to Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 0,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.4\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _e.ID = 'editor.action.goToTypeDefinition',\r\n    _e));\r\nregisterGoToAction((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\r\n                alias: 'Peek Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 4\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _f.ID = 'editor.action.peekTypeDefinition',\r\n    _f));\r\n//#endregion\r\n//#region --- IMPLEMENTATION\r\nclass ImplementationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getImplementationsAtPosition(model, position, token), nls.localize('impl.title', 'Implementations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\r\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeImplementationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleImplementations;\r\n    }\r\n}\r\nregisterGoToAction((_g = class GoToImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToImplementationAction.ID,\r\n                label: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\r\n                alias: 'Go to Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.45\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _g.ID = 'editor.action.goToImplementation',\r\n    _g));\r\nregisterGoToAction((_h = class PeekImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekImplementationAction.ID,\r\n                label: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\r\n                alias: 'Peek Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 5\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _h.ID = 'editor.action.peekImplementation',\r\n    _h));\r\n//#endregion\r\n//#region --- REFERENCES\r\nclass ReferencesAction extends SymbolNavigationAction {\r\n    _getNoResultFoundMessage(info) {\r\n        return info\r\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\r\n            : nls.localize('references.noGeneric', \"No references found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeReferenceCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleReferences;\r\n    }\r\n}\r\nregisterGoToAction(class GoToReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: false,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.goToReferences',\r\n            label: nls.localize('goToReferences.label', \"Go to References\"),\r\n            alias: 'Go to References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 70 /* F12 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 1.45\r\n            }\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, true, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\nregisterGoToAction(class PeekReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.referenceSearch.trigger',\r\n            label: nls.localize('references.action.label', \"Peek References\"),\r\n            alias: 'Peek References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, false, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- GENERIC goto symbols command\r\nclass GenericGoToLocationAction extends SymbolNavigationAction {\r\n    constructor(config, _references, _gotoMultipleBehaviour) {\r\n        super(config, {\r\n            id: 'editor.action.goToLocation',\r\n            label: nls.localize('label.generic', \"Go To Any Symbol\"),\r\n            alias: 'Go To Any Symbol',\r\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n        });\r\n        this._references = _references;\r\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\r\n    }\r\n    _getLocationModel(_model, _position, _token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\r\n    }\r\n    _getGoToPreference(editor) {\r\n        var _a;\r\n        return (_a = this._gotoMultipleBehaviour) !== null && _a !== void 0 ? _a : editor.getOption(49 /* gotoLocation */).multipleReferences;\r\n    }\r\n    _getAlternativeCommand() { return ''; }\r\n}\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.goToLocations',\r\n    description: {\r\n        description: 'Go to locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => __awaiter(void 0, void 0, void 0, function* () {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        assertType(Array.isArray(references));\r\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\r\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const editor = yield editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\r\n        if (isCodeEditor(editor)) {\r\n            editor.setPosition(position);\r\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n            return editor.invokeWithinContext(accessor => {\r\n                const command = new class extends GenericGoToLocationAction {\r\n                    _getNoResultFoundMessage(info) {\r\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\r\n                    }\r\n                }({\r\n                    muteMessage: !Boolean(noResultsMessage),\r\n                    openInPeek: Boolean(openInPeek),\r\n                    openToSide: false\r\n                }, references, multiple);\r\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\r\n            });\r\n        }\r\n    })\r\n});\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.peekLocations',\r\n    description: {\r\n        description: 'Peek locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple) => __awaiter(void 0, void 0, void 0, function* () {\r\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\r\n    })\r\n});\r\n//#endregion\r\n//#region --- REFERENCE search special commands\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.findReferences',\r\n    handler: (accessor, resource, position) => {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\r\n            if (!isCodeEditor(control) || !control.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const controller = ReferencesController.get(control);\r\n            if (!controller) {\r\n                return undefined;\r\n            }\r\n            const references = createCancelablePromise(token => getReferencesAtPosition(control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\r\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n            return Promise.resolve(controller.toggleWidget(range, references, false));\r\n        });\r\n    }\r\n});\r\n// use NEW command\r\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\r\n//#endregion\r\n// -- unconditionally register goto-action\r\nMenuRegistry.appendMenuItems([\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.revealDefinition',\r\n                title: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 2,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.revealDeclaration',\r\n                title: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 3,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.goToTypeDefinition',\r\n                title: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 3,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.goToImplementation',\r\n                title: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 4,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.goToReferences',\r\n                title: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 5,\r\n        },\r\n    },\r\n]);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../../base/common/event.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nfunction hasModifier(e, modifier) {\r\n    return !!e[modifier];\r\n}\r\n/**\r\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\r\n */\r\nexport class ClickLinkMouseEvent {\r\n    constructor(source, opts) {\r\n        this.target = source.target;\r\n        this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\r\n        this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\r\n        this.isNoneOrSingleMouseDown = (source.event.detail <= 1);\r\n    }\r\n}\r\n/**\r\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\r\n */\r\nexport class ClickLinkKeyboardEvent {\r\n    constructor(source, opts) {\r\n        this.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\r\n        this.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\r\n        this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\r\n    }\r\n}\r\nexport class ClickLinkOptions {\r\n    constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\r\n        this.triggerKey = triggerKey;\r\n        this.triggerModifier = triggerModifier;\r\n        this.triggerSideBySideKey = triggerSideBySideKey;\r\n        this.triggerSideBySideModifier = triggerSideBySideModifier;\r\n    }\r\n    equals(other) {\r\n        return (this.triggerKey === other.triggerKey\r\n            && this.triggerModifier === other.triggerModifier\r\n            && this.triggerSideBySideKey === other.triggerSideBySideKey\r\n            && this.triggerSideBySideModifier === other.triggerSideBySideModifier);\r\n    }\r\n}\r\nfunction createOptions(multiCursorModifier) {\r\n    if (multiCursorModifier === 'altKey') {\r\n        if (platform.isMacintosh) {\r\n            return new ClickLinkOptions(57 /* Meta */, 'metaKey', 6 /* Alt */, 'altKey');\r\n        }\r\n        return new ClickLinkOptions(5 /* Ctrl */, 'ctrlKey', 6 /* Alt */, 'altKey');\r\n    }\r\n    if (platform.isMacintosh) {\r\n        return new ClickLinkOptions(6 /* Alt */, 'altKey', 57 /* Meta */, 'metaKey');\r\n    }\r\n    return new ClickLinkOptions(6 /* Alt */, 'altKey', 5 /* Ctrl */, 'ctrlKey');\r\n}\r\nexport class ClickLinkGesture extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._onMouseMoveOrRelevantKeyDown = this._register(new Emitter());\r\n        this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;\r\n        this._onExecute = this._register(new Emitter());\r\n        this.onExecute = this._onExecute.event;\r\n        this._onCancel = this._register(new Emitter());\r\n        this.onCancel = this._onCancel.event;\r\n        this._editor = editor;\r\n        this._opts = createOptions(this._editor.getOption(69 /* multiCursorModifier */));\r\n        this._lastMouseMoveEvent = null;\r\n        this._hasTriggerKeyOnMouseDown = false;\r\n        this._lineNumberOnMouseDown = 0;\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(69 /* multiCursorModifier */)) {\r\n                const newOpts = createOptions(this._editor.getOption(69 /* multiCursorModifier */));\r\n                if (this._opts.equals(newOpts)) {\r\n                    return;\r\n                }\r\n                this._opts = newOpts;\r\n                this._lastMouseMoveEvent = null;\r\n                this._hasTriggerKeyOnMouseDown = false;\r\n                this._lineNumberOnMouseDown = 0;\r\n                this._onCancel.fire();\r\n            }\r\n        }));\r\n        this._register(this._editor.onMouseMove((e) => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onKeyDown((e) => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\r\n        this._register(this._editor.onKeyUp((e) => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseDrag(() => this._resetHandler()));\r\n        this._register(this._editor.onDidChangeCursorSelection((e) => this._onDidChangeCursorSelection(e)));\r\n        this._register(this._editor.onDidChangeModel((e) => this._resetHandler()));\r\n        this._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\r\n        this._register(this._editor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged || e.scrollLeftChanged) {\r\n                this._resetHandler();\r\n            }\r\n        }));\r\n    }\r\n    _onDidChangeCursorSelection(e) {\r\n        if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\r\n            this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\r\n        }\r\n    }\r\n    _onEditorMouseMove(mouseEvent) {\r\n        this._lastMouseMoveEvent = mouseEvent;\r\n        this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        // We need to record if we had the trigger key on mouse down because someone might select something in the editor\r\n        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\r\n        // release the mouse button without wanting to do the navigation.\r\n        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\r\n        this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\r\n        this._lineNumberOnMouseDown = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        const currentLineNumber = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\r\n        if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\r\n            this._onExecute.fire(mouseEvent);\r\n        }\r\n    }\r\n    _onEditorKeyDown(e) {\r\n        if (this._lastMouseMoveEvent\r\n            && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\r\n                || (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\r\n            )) {\r\n            this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\r\n        }\r\n        else if (e.hasTriggerModifier) {\r\n            this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\r\n        }\r\n    }\r\n    _onEditorKeyUp(e) {\r\n        if (e.keyCodeIsTriggerKey) {\r\n            this._onCancel.fire();\r\n        }\r\n    }\r\n    _resetHandler() {\r\n        this._lastMouseMoveEvent = null;\r\n        this._hasTriggerKeyOnMouseDown = false;\r\n        this._onCancel.fire();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './goToDefinitionAtPosition.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { DefinitionProviderRegistry } from '../../../common/modes.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { EditorState } from '../../../browser/core/editorState.js';\r\nimport { DefinitionAction } from '../goToCommands.js';\r\nimport { ClickLinkGesture } from './clickLinkGesture.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { PeekContext } from '../../peekView/peekView.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\r\n    constructor(editor, textModelResolverService, modeService) {\r\n        this.textModelResolverService = textModelResolverService;\r\n        this.modeService = modeService;\r\n        this.toUnhook = new DisposableStore();\r\n        this.toUnhookForKeyboard = new DisposableStore();\r\n        this.linkDecorations = [];\r\n        this.currentWordAtPosition = null;\r\n        this.previousPromise = null;\r\n        this.editor = editor;\r\n        let linkGesture = new ClickLinkGesture(editor);\r\n        this.toUnhook.add(linkGesture);\r\n        this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\r\n        }));\r\n        this.toUnhook.add(linkGesture.onExecute((mouseEvent) => {\r\n            if (this.isEnabled(mouseEvent)) {\r\n                this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\r\n                    this.removeLinkDecorations();\r\n                }, (error) => {\r\n                    this.removeLinkDecorations();\r\n                    onUnexpectedError(error);\r\n                });\r\n            }\r\n        }));\r\n        this.toUnhook.add(linkGesture.onCancel(() => {\r\n            this.removeLinkDecorations();\r\n            this.currentWordAtPosition = null;\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\r\n    }\r\n    startFindDefinitionFromCursor(position) {\r\n        // For issue: https://github.com/microsoft/vscode/issues/46257\r\n        // equivalent to mouse move with meta/ctrl key\r\n        // First find the definition and add decorations\r\n        // to the editor to be shown with the content hover widget\r\n        return this.startFindDefinition(position).then(() => {\r\n            // Add listeners for editor cursor move and key down events\r\n            // Dismiss the \"extended\" editor decorations when the user hides\r\n            // the hover widget. There is no event for the widget itself so these\r\n            // serve as a best effort. After removing the link decorations, the hover\r\n            // widget is clean and will only show declarations per next request.\r\n            this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\r\n                this.currentWordAtPosition = null;\r\n                this.removeLinkDecorations();\r\n                this.toUnhookForKeyboard.clear();\r\n            }));\r\n            this.toUnhookForKeyboard.add(this.editor.onKeyDown((e) => {\r\n                if (e) {\r\n                    this.currentWordAtPosition = null;\r\n                    this.removeLinkDecorations();\r\n                    this.toUnhookForKeyboard.clear();\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    startFindDefinitionFromMouse(mouseEvent, withKey) {\r\n        // check if we are active and on a content widget\r\n        if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */ && this.linkDecorations.length > 0) {\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return;\r\n        }\r\n        const position = mouseEvent.target.position;\r\n        this.startFindDefinition(position);\r\n    }\r\n    startFindDefinition(position) {\r\n        var _a;\r\n        // Dispose listeners for updating decorations when using keyboard to show definition hover\r\n        this.toUnhookForKeyboard.clear();\r\n        // Find word at mouse position\r\n        const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\r\n        if (!word) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return Promise.resolve(0);\r\n        }\r\n        // Return early if word at position is still the same\r\n        if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\r\n            return Promise.resolve(0);\r\n        }\r\n        this.currentWordAtPosition = word;\r\n        // Find definition and decorate word if found\r\n        let state = new EditorState(this.editor, 4 /* Position */ | 1 /* Value */ | 2 /* Selection */ | 8 /* Scroll */);\r\n        if (this.previousPromise) {\r\n            this.previousPromise.cancel();\r\n            this.previousPromise = null;\r\n        }\r\n        this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\r\n        return this.previousPromise.then(results => {\r\n            if (!results || !results.length || !state.validate(this.editor)) {\r\n                this.removeLinkDecorations();\r\n                return;\r\n            }\r\n            // Multiple results\r\n            if (results.length > 1) {\r\n                this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\r\n            }\r\n            // Single result\r\n            else {\r\n                let result = results[0];\r\n                if (!result.uri) {\r\n                    return;\r\n                }\r\n                this.textModelResolverService.createModelReference(result.uri).then(ref => {\r\n                    if (!ref.object || !ref.object.textEditorModel) {\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const { object: { textEditorModel } } = ref;\r\n                    const { startLineNumber } = result.range;\r\n                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\r\n                        // invalid range\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\r\n                    let wordRange;\r\n                    if (result.originSelectionRange) {\r\n                        wordRange = Range.lift(result.originSelectionRange);\r\n                    }\r\n                    else {\r\n                        wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n                    }\r\n                    const modeId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri);\r\n                    this.addDecoration(wordRange, new MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue));\r\n                    ref.dispose();\r\n                });\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    getPreviewValue(textEditorModel, startLineNumber, result) {\r\n        let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\r\n        const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\r\n        if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\r\n            rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\r\n        }\r\n        const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\r\n        return previewValue;\r\n    }\r\n    stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        let minIndent = startIndent;\r\n        for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\r\n            const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            minIndent = Math.min(minIndent, endIndent);\r\n        }\r\n        const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\r\n        return previewValue;\r\n    }\r\n    getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        let endLineNumber = startLineNumber + 1;\r\n        for (; endLineNumber < maxLineNumber; endLineNumber++) {\r\n            let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            if (startIndent === endIndent) {\r\n                break;\r\n            }\r\n        }\r\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\r\n    }\r\n    getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        const brackets = [];\r\n        let ignoreFirstEmpty = true;\r\n        let currentBracket = textEditorModel.findNextBracket(new Position(startLineNumber, 1));\r\n        while (currentBracket !== null) {\r\n            if (brackets.length === 0) {\r\n                brackets.push(currentBracket);\r\n            }\r\n            else {\r\n                const lastBracket = brackets[brackets.length - 1];\r\n                if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\r\n                    brackets.pop();\r\n                }\r\n                else {\r\n                    brackets.push(currentBracket);\r\n                }\r\n                if (brackets.length === 0) {\r\n                    if (ignoreFirstEmpty) {\r\n                        ignoreFirstEmpty = false;\r\n                    }\r\n                    else {\r\n                        return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\r\n                    }\r\n                }\r\n            }\r\n            const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\r\n            let nextLineNumber = currentBracket.range.endLineNumber;\r\n            let nextColumn = currentBracket.range.endColumn;\r\n            if (maxColumn === currentBracket.range.endColumn) {\r\n                nextLineNumber++;\r\n                nextColumn = 1;\r\n            }\r\n            if (nextLineNumber > maxLineNumber) {\r\n                return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n            }\r\n            currentBracket = textEditorModel.findNextBracket(new Position(nextLineNumber, nextColumn));\r\n        }\r\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n    }\r\n    addDecoration(range, hoverMessage) {\r\n        const newDecorations = {\r\n            range: range,\r\n            options: {\r\n                description: 'goto-definition-link',\r\n                inlineClassName: 'goto-definition-link',\r\n                hoverMessage\r\n            }\r\n        };\r\n        this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\r\n    }\r\n    removeLinkDecorations() {\r\n        if (this.linkDecorations.length > 0) {\r\n            this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\r\n        }\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return this.editor.hasModel() &&\r\n            mouseEvent.isNoneOrSingleMouseDown &&\r\n            (mouseEvent.target.type === 6 /* CONTENT_TEXT */) &&\r\n            (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\r\n            DefinitionProviderRegistry.has(this.editor.getModel());\r\n    }\r\n    findDefinition(position, token) {\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return getDefinitionsAtPosition(model, position, token);\r\n    }\r\n    gotoDefinition(position, openToSide) {\r\n        this.editor.setPosition(position);\r\n        return this.editor.invokeWithinContext((accessor) => {\r\n            const canPeek = !openToSide && this.editor.getOption(77 /* definitionLinkOpensInPeek */) && !this.isInPeekEditor(accessor);\r\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\r\n            return action.run(accessor, this.editor);\r\n        });\r\n    }\r\n    isInPeekEditor(accessor) {\r\n        const contextKeyService = accessor.get(IContextKeyService);\r\n        return PeekContext.inPeekEditor.getValue(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.toUnhook.dispose();\r\n    }\r\n};\r\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\r\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\r\nGotoDefinitionAtPositionEditorContribution = __decorate([\r\n    __param(1, ITextModelService),\r\n    __param(2, IModeService)\r\n], GotoDefinitionAtPositionEditorContribution);\r\nexport { GotoDefinitionAtPositionEditorContribution };\r\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { ModesContentHoverWidget } from './modesContentHover.js';\r\nimport { ModesGlyphHoverWidget } from './modesGlyphHover.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorHoverBackground, editorHoverBorder, editorHoverHighlight, textCodeBlockBackground, textLinkForeground, editorHoverStatusBarBackground, editorHoverForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { GotoDefinitionAtPositionEditorContribution } from '../gotoSymbol/link/goToDefinitionAtPosition.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nlet ModesHoverController = class ModesHoverController {\r\n    constructor(_editor, _instantiationService, _openerService, _modeService, _contextKeyService) {\r\n        this._editor = _editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._openerService = _openerService;\r\n        this._modeService = _modeService;\r\n        this._toUnhook = new DisposableStore();\r\n        this._isMouseDown = false;\r\n        this._hoverClicked = false;\r\n        this._contentWidget = null;\r\n        this._glyphWidget = null;\r\n        this._hookEvents();\r\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(52 /* hover */)) {\r\n                this._unhookEvents();\r\n                this._hookEvents();\r\n            }\r\n        });\r\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(_contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ModesHoverController.ID);\r\n    }\r\n    _hookEvents() {\r\n        const hideWidgetsEventHandler = () => this._hideWidgets();\r\n        const hoverOpts = this._editor.getOption(52 /* hover */);\r\n        this._isHoverEnabled = hoverOpts.enabled;\r\n        this._isHoverSticky = hoverOpts.sticky;\r\n        if (this._isHoverEnabled) {\r\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\r\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\r\n            this._toUnhook.add(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\r\n        }\r\n        else {\r\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\r\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\r\n        }\r\n        this._toUnhook.add(this._editor.onMouseLeave(hideWidgetsEventHandler));\r\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\r\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\r\n    }\r\n    _unhookEvents() {\r\n        this._toUnhook.clear();\r\n    }\r\n    _onModelDecorationsChanged() {\r\n        var _a, _b;\r\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.onModelDecorationsChanged();\r\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.onModelDecorationsChanged();\r\n    }\r\n    _onEditorScrollChanged(e) {\r\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\r\n            this._hideWidgets();\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._isMouseDown = true;\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\r\n            this._hoverClicked = true;\r\n            // mouse down on top of content hover widget\r\n            return;\r\n        }\r\n        if (targetType === 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\r\n            // mouse down on top of overlay hover widget\r\n            return;\r\n        }\r\n        if (targetType !== 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail !== ModesGlyphHoverWidget.ID) {\r\n            this._hoverClicked = false;\r\n        }\r\n        this._hideWidgets();\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._isMouseDown = false;\r\n    }\r\n    _onEditorMouseMove(mouseEvent) {\r\n        var _a, _b, _c, _d, _e;\r\n        let targetType = mouseEvent.target.type;\r\n        if (this._isMouseDown && this._hoverClicked) {\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\r\n            // mouse moved on top of content hover widget\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\r\n            // selected text within content hover widget\r\n            return;\r\n        }\r\n        if (!this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID\r\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\r\n            // though the hover is not sticky, the color picker needs to.\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && targetType === 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\r\n            // mouse moved on top of overlay hover widget\r\n            return;\r\n        }\r\n        if (!this._isHoverEnabled) {\r\n            this._hideWidgets();\r\n            return;\r\n        }\r\n        const contentWidget = this._getOrCreateContentWidget();\r\n        if (contentWidget.maybeShowAt(mouseEvent)) {\r\n            (_d = this._glyphWidget) === null || _d === void 0 ? void 0 : _d.hide();\r\n            return;\r\n        }\r\n        if (targetType === 2 /* GUTTER_GLYPH_MARGIN */ && mouseEvent.target.position) {\r\n            (_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.hide();\r\n            if (!this._glyphWidget) {\r\n                this._glyphWidget = new ModesGlyphHoverWidget(this._editor, this._modeService, this._openerService);\r\n            }\r\n            this._glyphWidget.startShowingAt(mouseEvent.target.position.lineNumber);\r\n            return;\r\n        }\r\n        this._hideWidgets();\r\n    }\r\n    _onKeyDown(e) {\r\n        if (e.keyCode !== 5 /* Ctrl */ && e.keyCode !== 6 /* Alt */ && e.keyCode !== 57 /* Meta */ && e.keyCode !== 4 /* Shift */) {\r\n            // Do not hide hover when a modifier key is pressed\r\n            this._hideWidgets();\r\n        }\r\n    }\r\n    _hideWidgets() {\r\n        var _a, _b, _c;\r\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()))) {\r\n            return;\r\n        }\r\n        this._hoverClicked = false;\r\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\r\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\r\n    }\r\n    _getOrCreateContentWidget() {\r\n        if (!this._contentWidget) {\r\n            this._contentWidget = this._instantiationService.createInstance(ModesContentHoverWidget, this._editor, this._hoverVisibleKey);\r\n        }\r\n        return this._contentWidget;\r\n    }\r\n    isColorPickerVisible() {\r\n        var _a;\r\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\r\n    }\r\n    showContentHover(range, mode, focus) {\r\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._unhookEvents();\r\n        this._toUnhook.dispose();\r\n        this._didChangeConfigurationHandler.dispose();\r\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\r\n    }\r\n};\r\nModesHoverController.ID = 'editor.contrib.hover';\r\nModesHoverController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IModeService),\r\n    __param(4, IContextKeyService)\r\n], ModesHoverController);\r\nexport { ModesHoverController };\r\nclass ShowHoverAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showHover',\r\n            label: nls.localize({\r\n                key: 'showHover',\r\n                comment: [\r\n                    'Label for action that will trigger the showing of a hover in the editor.',\r\n                    'This allows for users to show the hover without using the mouse.'\r\n                ]\r\n            }, \"Show Hover\"),\r\n            alias: 'Show Hover',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 39 /* KEY_I */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let controller = ModesHoverController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        const position = editor.getPosition();\r\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        const focus = editor.getOption(2 /* accessibilitySupport */) === 2 /* Enabled */;\r\n        controller.showContentHover(range, 1 /* Immediate */, focus);\r\n    }\r\n}\r\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showDefinitionPreviewHover',\r\n            label: nls.localize({\r\n                key: 'showDefinitionPreviewHover',\r\n                comment: [\r\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\r\n                    'This allows for users to show the definition preview hover without using the mouse.'\r\n                ]\r\n            }, \"Show Definition Preview Hover\"),\r\n            alias: 'Show Definition Preview Hover',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = ModesHoverController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        const position = editor.getPosition();\r\n        if (!position) {\r\n            return;\r\n        }\r\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\r\n        const promise = goto.startFindDefinitionFromCursor(position);\r\n        promise.then(() => {\r\n            controller.showContentHover(range, 1 /* Immediate */, true);\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController);\r\nregisterEditorAction(ShowHoverAction);\r\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\r\n    if (editorHoverHighlightColor) {\r\n        collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\r\n    }\r\n    const hoverBackground = theme.getColor(editorHoverBackground);\r\n    if (hoverBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);\r\n    }\r\n    const hoverBorder = theme.getColor(editorHoverBorder);\r\n    if (hoverBorder) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const hoverForeground = theme.getColor(editorHoverForeground);\r\n    if (hoverForeground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);\r\n    }\r\n    const actionsBackground = theme.getColor(editorHoverStatusBarBackground);\r\n    if (actionsBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// import color detector contribution\r\nimport './colorDetector.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ModesHoverController } from '../hover/hover.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class ColorContribution extends Disposable {\r\n    constructor(_editor) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    onMouseDown(mouseEvent) {\r\n        var _a;\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType !== 6 /* CONTENT_TEXT */) {\r\n            return;\r\n        }\r\n        const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'));\r\n        if (!hoverOnColorDecorator) {\r\n            return;\r\n        }\r\n        if (!mouseEvent.target.range) {\r\n            return;\r\n        }\r\n        const hoverController = this._editor.getContribution(ModesHoverController.ID);\r\n        if (!hoverController.isColorPickerVisible()) {\r\n            const range = new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1);\r\n            hoverController.showContentHover(range, 0 /* Delayed */, false);\r\n        }\r\n    }\r\n}\r\nColorContribution.ID = 'editor.contrib.colorContribution'; // ms\r\nregisterEditorContribution(ColorContribution.ID, ColorContribution);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nexport class BlockCommentCommand {\r\n    constructor(selection, insertSpace) {\r\n        this._selection = selection;\r\n        this._insertSpace = insertSpace;\r\n        this._usedEndToken = null;\r\n    }\r\n    static _haystackHasNeedleAtOffset(haystack, needle, offset) {\r\n        if (offset < 0) {\r\n            return false;\r\n        }\r\n        const needleLength = needle.length;\r\n        const haystackLength = haystack.length;\r\n        if (offset + needleLength > haystackLength) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < needleLength; i++) {\r\n            const codeA = haystack.charCodeAt(offset + i);\r\n            const codeB = needle.charCodeAt(i);\r\n            if (codeA === codeB) {\r\n                continue;\r\n            }\r\n            if (codeA >= 65 /* A */ && codeA <= 90 /* Z */ && codeA + 32 === codeB) {\r\n                // codeA is upper-case variant of codeB\r\n                continue;\r\n            }\r\n            if (codeB >= 65 /* A */ && codeB <= 90 /* Z */ && codeB + 32 === codeA) {\r\n                // codeB is upper-case variant of codeA\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    _createOperationsForBlockComment(selection, startToken, endToken, insertSpace, model, builder) {\r\n        const startLineNumber = selection.startLineNumber;\r\n        const startColumn = selection.startColumn;\r\n        const endLineNumber = selection.endLineNumber;\r\n        const endColumn = selection.endColumn;\r\n        const startLineText = model.getLineContent(startLineNumber);\r\n        const endLineText = model.getLineContent(endLineNumber);\r\n        let startTokenIndex = startLineText.lastIndexOf(startToken, startColumn - 1 + startToken.length);\r\n        let endTokenIndex = endLineText.indexOf(endToken, endColumn - 1 - endToken.length);\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            if (startLineNumber === endLineNumber) {\r\n                const lineBetweenTokens = startLineText.substring(startTokenIndex + startToken.length, endTokenIndex);\r\n                if (lineBetweenTokens.indexOf(endToken) >= 0) {\r\n                    // force to add a block comment\r\n                    startTokenIndex = -1;\r\n                    endTokenIndex = -1;\r\n                }\r\n            }\r\n            else {\r\n                const startLineAfterStartToken = startLineText.substring(startTokenIndex + startToken.length);\r\n                const endLineBeforeEndToken = endLineText.substring(0, endTokenIndex);\r\n                if (startLineAfterStartToken.indexOf(endToken) >= 0 || endLineBeforeEndToken.indexOf(endToken) >= 0) {\r\n                    // force to add a block comment\r\n                    startTokenIndex = -1;\r\n                    endTokenIndex = -1;\r\n                }\r\n            }\r\n        }\r\n        let ops;\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            // Consider spaces as part of the comment tokens\r\n            if (insertSpace && startTokenIndex + startToken.length < startLineText.length && startLineText.charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */) {\r\n                // Pretend the start token contains a trailing space\r\n                startToken = startToken + ' ';\r\n            }\r\n            if (insertSpace && endTokenIndex > 0 && endLineText.charCodeAt(endTokenIndex - 1) === 32 /* Space */) {\r\n                // Pretend the end token contains a leading space\r\n                endToken = ' ' + endToken;\r\n                endTokenIndex -= 1;\r\n            }\r\n            ops = BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\r\n        }\r\n        else {\r\n            ops = BlockCommentCommand._createAddBlockCommentOperations(selection, startToken, endToken, this._insertSpace);\r\n            this._usedEndToken = ops.length === 1 ? endToken : null;\r\n        }\r\n        for (const op of ops) {\r\n            builder.addTrackedEditOperation(op.range, op.text);\r\n        }\r\n    }\r\n    static _createRemoveBlockCommentOperations(r, startToken, endToken) {\r\n        let res = [];\r\n        if (!Range.isEmpty(r)) {\r\n            // Remove block comment start\r\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.startLineNumber, r.startColumn)));\r\n            // Remove block comment end\r\n            res.push(EditOperation.delete(new Range(r.endLineNumber, r.endColumn, r.endLineNumber, r.endColumn + endToken.length)));\r\n        }\r\n        else {\r\n            // Remove both continuously\r\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.endLineNumber, r.endColumn + endToken.length)));\r\n        }\r\n        return res;\r\n    }\r\n    static _createAddBlockCommentOperations(r, startToken, endToken, insertSpace) {\r\n        let res = [];\r\n        if (!Range.isEmpty(r)) {\r\n            // Insert block comment start\r\n            res.push(EditOperation.insert(new Position(r.startLineNumber, r.startColumn), startToken + (insertSpace ? ' ' : '')));\r\n            // Insert block comment end\r\n            res.push(EditOperation.insert(new Position(r.endLineNumber, r.endColumn), (insertSpace ? ' ' : '') + endToken));\r\n        }\r\n        else {\r\n            // Insert both continuously\r\n            res.push(EditOperation.replace(new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn), startToken + '  ' + endToken));\r\n        }\r\n        return res;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        const startLineNumber = this._selection.startLineNumber;\r\n        const startColumn = this._selection.startColumn;\r\n        model.tokenizeIfCheap(startLineNumber);\r\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, startColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(languageId);\r\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\r\n            // Mode does not support block comments\r\n            return;\r\n        }\r\n        this._createOperationsForBlockComment(this._selection, config.blockCommentStartToken, config.blockCommentEndToken, this._insertSpace, model, builder);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        if (inverseEditOperations.length === 2) {\r\n            const startTokenEditOperation = inverseEditOperations[0];\r\n            const endTokenEditOperation = inverseEditOperations[1];\r\n            return new Selection(startTokenEditOperation.range.endLineNumber, startTokenEditOperation.range.endColumn, endTokenEditOperation.range.startLineNumber, endTokenEditOperation.range.startColumn);\r\n        }\r\n        else {\r\n            const srcRange = inverseEditOperations[0].range;\r\n            const deltaColumn = this._usedEndToken ? -this._usedEndToken.length - 1 : 0; // minus 1 space before endToken\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn + deltaColumn, srcRange.endLineNumber, srcRange.endColumn + deltaColumn);\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { BlockCommentCommand } from './blockCommentCommand.js';\r\nexport class LineCommentCommand {\r\n    constructor(selection, tabSize, type, insertSpace, ignoreEmptyLines, ignoreFirstLine) {\r\n        this._selection = selection;\r\n        this._tabSize = tabSize;\r\n        this._type = type;\r\n        this._insertSpace = insertSpace;\r\n        this._selectionId = null;\r\n        this._deltaColumn = 0;\r\n        this._moveEndPositionDown = false;\r\n        this._ignoreEmptyLines = ignoreEmptyLines;\r\n        this._ignoreFirstLine = ignoreFirstLine || false;\r\n    }\r\n    /**\r\n     * Do an initial pass over the lines and gather info about the line comment string.\r\n     * Returns null if any of the lines doesn't support a line comment string.\r\n     */\r\n    static _gatherPreflightCommentStrings(model, startLineNumber, endLineNumber) {\r\n        model.tokenizeIfCheap(startLineNumber);\r\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, 1);\r\n        const config = LanguageConfigurationRegistry.getComments(languageId);\r\n        const commentStr = (config ? config.lineCommentToken : null);\r\n        if (!commentStr) {\r\n            // Mode does not support line comments\r\n            return null;\r\n        }\r\n        let lines = [];\r\n        for (let i = 0, lineCount = endLineNumber - startLineNumber + 1; i < lineCount; i++) {\r\n            lines[i] = {\r\n                ignore: false,\r\n                commentStr: commentStr,\r\n                commentStrOffset: 0,\r\n                commentStrLength: commentStr.length\r\n            };\r\n        }\r\n        return lines;\r\n    }\r\n    /**\r\n     * Analyze lines and decide which lines are relevant and what the toggle should do.\r\n     * Also, build up several offsets and lengths useful in the generation of editor operations.\r\n     */\r\n    static _analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine) {\r\n        let onlyWhitespaceLines = true;\r\n        let shouldRemoveComments;\r\n        if (type === 0 /* Toggle */) {\r\n            shouldRemoveComments = true;\r\n        }\r\n        else if (type === 1 /* ForceAdd */) {\r\n            shouldRemoveComments = false;\r\n        }\r\n        else {\r\n            shouldRemoveComments = true;\r\n        }\r\n        for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\r\n            const lineData = lines[i];\r\n            const lineNumber = startLineNumber + i;\r\n            if (lineNumber === startLineNumber && ignoreFirstLine) {\r\n                // first line ignored\r\n                lineData.ignore = true;\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(lineNumber);\r\n            const lineContentStartOffset = strings.firstNonWhitespaceIndex(lineContent);\r\n            if (lineContentStartOffset === -1) {\r\n                // Empty or whitespace only line\r\n                lineData.ignore = ignoreEmptyLines;\r\n                lineData.commentStrOffset = lineContent.length;\r\n                continue;\r\n            }\r\n            onlyWhitespaceLines = false;\r\n            lineData.ignore = false;\r\n            lineData.commentStrOffset = lineContentStartOffset;\r\n            if (shouldRemoveComments && !BlockCommentCommand._haystackHasNeedleAtOffset(lineContent, lineData.commentStr, lineContentStartOffset)) {\r\n                if (type === 0 /* Toggle */) {\r\n                    // Every line so far has been a line comment, but this one is not\r\n                    shouldRemoveComments = false;\r\n                }\r\n                else if (type === 1 /* ForceAdd */) {\r\n                    // Will not happen\r\n                }\r\n                else {\r\n                    lineData.ignore = true;\r\n                }\r\n            }\r\n            if (shouldRemoveComments && insertSpace) {\r\n                // Remove a following space if present\r\n                const commentStrEndOffset = lineContentStartOffset + lineData.commentStrLength;\r\n                if (commentStrEndOffset < lineContent.length && lineContent.charCodeAt(commentStrEndOffset) === 32 /* Space */) {\r\n                    lineData.commentStrLength += 1;\r\n                }\r\n            }\r\n        }\r\n        if (type === 0 /* Toggle */ && onlyWhitespaceLines) {\r\n            // For only whitespace lines, we insert comments\r\n            shouldRemoveComments = false;\r\n            // Also, no longer ignore them\r\n            for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\r\n                lines[i].ignore = false;\r\n            }\r\n        }\r\n        return {\r\n            supported: true,\r\n            shouldRemoveComments: shouldRemoveComments,\r\n            lines: lines\r\n        };\r\n    }\r\n    /**\r\n     * Analyze all lines and decide exactly what to do => not supported | insert line comments | remove line comments\r\n     */\r\n    static _gatherPreflightData(type, insertSpace, model, startLineNumber, endLineNumber, ignoreEmptyLines, ignoreFirstLine) {\r\n        const lines = LineCommentCommand._gatherPreflightCommentStrings(model, startLineNumber, endLineNumber);\r\n        if (lines === null) {\r\n            return {\r\n                supported: false\r\n            };\r\n        }\r\n        return LineCommentCommand._analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine);\r\n    }\r\n    /**\r\n     * Given a successful analysis, execute either insert line comments, either remove line comments\r\n     */\r\n    _executeLineComments(model, builder, data, s) {\r\n        let ops;\r\n        if (data.shouldRemoveComments) {\r\n            ops = LineCommentCommand._createRemoveLineCommentsOperations(data.lines, s.startLineNumber);\r\n        }\r\n        else {\r\n            LineCommentCommand._normalizeInsertionPoint(model, data.lines, s.startLineNumber, this._tabSize);\r\n            ops = this._createAddLineCommentsOperations(data.lines, s.startLineNumber);\r\n        }\r\n        const cursorPosition = new Position(s.positionLineNumber, s.positionColumn);\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            builder.addEditOperation(ops[i].range, ops[i].text);\r\n            if (Range.isEmpty(ops[i].range) && Range.getStartPosition(ops[i].range).equals(cursorPosition)) {\r\n                const lineContent = model.getLineContent(cursorPosition.lineNumber);\r\n                if (lineContent.length + 1 === cursorPosition.column) {\r\n                    this._deltaColumn = (ops[i].text || '').length;\r\n                }\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n    }\r\n    _attemptRemoveBlockComment(model, s, startToken, endToken) {\r\n        let startLineNumber = s.startLineNumber;\r\n        let endLineNumber = s.endLineNumber;\r\n        let startTokenAllowedBeforeColumn = endToken.length + Math.max(model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.startColumn);\r\n        let startTokenIndex = model.getLineContent(startLineNumber).lastIndexOf(startToken, startTokenAllowedBeforeColumn - 1);\r\n        let endTokenIndex = model.getLineContent(endLineNumber).indexOf(endToken, s.endColumn - 1 - startToken.length);\r\n        if (startTokenIndex !== -1 && endTokenIndex === -1) {\r\n            endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\r\n            endLineNumber = startLineNumber;\r\n        }\r\n        if (startTokenIndex === -1 && endTokenIndex !== -1) {\r\n            startTokenIndex = model.getLineContent(endLineNumber).lastIndexOf(startToken, endTokenIndex);\r\n            startLineNumber = endLineNumber;\r\n        }\r\n        if (s.isEmpty() && (startTokenIndex === -1 || endTokenIndex === -1)) {\r\n            startTokenIndex = model.getLineContent(startLineNumber).indexOf(startToken);\r\n            if (startTokenIndex !== -1) {\r\n                endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\r\n            }\r\n        }\r\n        // We have to adjust to possible inner white space.\r\n        // For Space after startToken, add Space to startToken - range math will work out.\r\n        if (startTokenIndex !== -1 && model.getLineContent(startLineNumber).charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */) {\r\n            startToken += ' ';\r\n        }\r\n        // For Space before endToken, add Space before endToken and shift index one left.\r\n        if (endTokenIndex !== -1 && model.getLineContent(endLineNumber).charCodeAt(endTokenIndex - 1) === 32 /* Space */) {\r\n            endToken = ' ' + endToken;\r\n            endTokenIndex -= 1;\r\n        }\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            return BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Given an unsuccessful analysis, delegate to the block comment command\r\n     */\r\n    _executeBlockComment(model, builder, s) {\r\n        model.tokenizeIfCheap(s.startLineNumber);\r\n        let languageId = model.getLanguageIdAtPosition(s.startLineNumber, 1);\r\n        let config = LanguageConfigurationRegistry.getComments(languageId);\r\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\r\n            // Mode does not support block comments\r\n            return;\r\n        }\r\n        const startToken = config.blockCommentStartToken;\r\n        const endToken = config.blockCommentEndToken;\r\n        let ops = this._attemptRemoveBlockComment(model, s, startToken, endToken);\r\n        if (!ops) {\r\n            if (s.isEmpty()) {\r\n                const lineContent = model.getLineContent(s.startLineNumber);\r\n                let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\r\n                if (firstNonWhitespaceIndex === -1) {\r\n                    // Line is empty or contains only whitespace\r\n                    firstNonWhitespaceIndex = lineContent.length;\r\n                }\r\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, firstNonWhitespaceIndex + 1, s.startLineNumber, lineContent.length + 1), startToken, endToken, this._insertSpace);\r\n            }\r\n            else {\r\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), startToken, endToken, this._insertSpace);\r\n            }\r\n            if (ops.length === 1) {\r\n                // Leave cursor after token and Space\r\n                this._deltaColumn = startToken.length + 1;\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        for (const op of ops) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let s = this._selection;\r\n        this._moveEndPositionDown = false;\r\n        if (s.startLineNumber === s.endLineNumber && this._ignoreFirstLine) {\r\n            builder.addEditOperation(new Range(s.startLineNumber, model.getLineMaxColumn(s.startLineNumber), s.startLineNumber + 1, 1), s.startLineNumber === model.getLineCount() ? '' : '\\n');\r\n            this._selectionId = builder.trackSelection(s);\r\n            return;\r\n        }\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._moveEndPositionDown = true;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        const data = LineCommentCommand._gatherPreflightData(this._type, this._insertSpace, model, s.startLineNumber, s.endLineNumber, this._ignoreEmptyLines, this._ignoreFirstLine);\r\n        if (data.supported) {\r\n            return this._executeLineComments(model, builder, data, s);\r\n        }\r\n        return this._executeBlockComment(model, builder, s);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._moveEndPositionDown) {\r\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\r\n        }\r\n        return new Selection(result.selectionStartLineNumber, result.selectionStartColumn + this._deltaColumn, result.positionLineNumber, result.positionColumn + this._deltaColumn);\r\n    }\r\n    /**\r\n     * Generate edit operations in the remove line comment case\r\n     */\r\n    static _createRemoveLineCommentsOperations(lines, startLineNumber) {\r\n        let res = [];\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            const lineData = lines[i];\r\n            if (lineData.ignore) {\r\n                continue;\r\n            }\r\n            res.push(EditOperation.delete(new Range(startLineNumber + i, lineData.commentStrOffset + 1, startLineNumber + i, lineData.commentStrOffset + lineData.commentStrLength + 1)));\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Generate edit operations in the add line comment case\r\n     */\r\n    _createAddLineCommentsOperations(lines, startLineNumber) {\r\n        let res = [];\r\n        const afterCommentStr = this._insertSpace ? ' ' : '';\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            const lineData = lines[i];\r\n            if (lineData.ignore) {\r\n                continue;\r\n            }\r\n            res.push(EditOperation.insert(new Position(startLineNumber + i, lineData.commentStrOffset + 1), lineData.commentStr + afterCommentStr));\r\n        }\r\n        return res;\r\n    }\r\n    static nextVisibleColumn(currentVisibleColumn, tabSize, isTab, columnSize) {\r\n        if (isTab) {\r\n            return currentVisibleColumn + (tabSize - (currentVisibleColumn % tabSize));\r\n        }\r\n        return currentVisibleColumn + columnSize;\r\n    }\r\n    /**\r\n     * Adjust insertion points to have them vertically aligned in the add line comment case\r\n     */\r\n    static _normalizeInsertionPoint(model, lines, startLineNumber, tabSize) {\r\n        let minVisibleColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let j;\r\n        let lenJ;\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].ignore) {\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(startLineNumber + i);\r\n            let currentVisibleColumn = 0;\r\n            for (let j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\r\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */, 1);\r\n            }\r\n            if (currentVisibleColumn < minVisibleColumn) {\r\n                minVisibleColumn = currentVisibleColumn;\r\n            }\r\n        }\r\n        minVisibleColumn = Math.floor(minVisibleColumn / tabSize) * tabSize;\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].ignore) {\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(startLineNumber + i);\r\n            let currentVisibleColumn = 0;\r\n            for (j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\r\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */, 1);\r\n            }\r\n            if (currentVisibleColumn > minVisibleColumn) {\r\n                lines[i].commentStrOffset = j - 1;\r\n            }\r\n            else {\r\n                lines[i].commentStrOffset = j;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { BlockCommentCommand } from './blockCommentCommand.js';\r\nimport { LineCommentCommand } from './lineCommentCommand.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nclass CommentLineAction extends EditorAction {\r\n    constructor(type, opts) {\r\n        super(opts);\r\n        this._type = type;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        const commands = [];\r\n        const modelOptions = model.getOptions();\r\n        const commentsOptions = editor.getOption(18 /* comments */);\r\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignoreFirstLine: false }));\r\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        // Remove selections that would result in copying the same line\r\n        let prev = selections[0];\r\n        for (let i = 1; i < selections.length; i++) {\r\n            const curr = selections[i];\r\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\r\n                // these two selections would copy the same line\r\n                if (prev.index < curr.index) {\r\n                    // prev wins\r\n                    curr.ignoreFirstLine = true;\r\n                }\r\n                else {\r\n                    // curr wins\r\n                    prev.ignoreFirstLine = true;\r\n                    prev = curr;\r\n                }\r\n            }\r\n        }\r\n        for (const selection of selections) {\r\n            commands.push(new LineCommentCommand(selection.selection, modelOptions.tabSize, this._type, commentsOptions.insertSpace, commentsOptions.ignoreEmptyLines, selection.ignoreFirstLine));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass ToggleCommentLineAction extends CommentLineAction {\r\n    constructor() {\r\n        super(0 /* Toggle */, {\r\n            id: 'editor.action.commentLine',\r\n            label: nls.localize('comment.line', \"Toggle Line Comment\"),\r\n            alias: 'Toggle Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '5_insert',\r\n                title: nls.localize({ key: 'miToggleLineComment', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Line Comment\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass AddLineCommentAction extends CommentLineAction {\r\n    constructor() {\r\n        super(1 /* ForceAdd */, {\r\n            id: 'editor.action.addCommentLine',\r\n            label: nls.localize('comment.line.add', \"Add Line Comment\"),\r\n            alias: 'Add Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 33 /* KEY_C */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass RemoveLineCommentAction extends CommentLineAction {\r\n    constructor() {\r\n        super(2 /* ForceRemove */, {\r\n            id: 'editor.action.removeCommentLine',\r\n            label: nls.localize('comment.line.remove', \"Remove Line Comment\"),\r\n            alias: 'Remove Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 51 /* KEY_U */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass BlockCommentAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.blockComment',\r\n            label: nls.localize('comment.block', \"Toggle Block Comment\"),\r\n            alias: 'Toggle Block Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 31 /* KEY_A */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 31 /* KEY_A */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '5_insert',\r\n                title: nls.localize({ key: 'miToggleBlockComment', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Block Comment\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const commentsOptions = editor.getOption(18 /* comments */);\r\n        const commands = [];\r\n        const selections = editor.getSelections();\r\n        for (const selection of selections) {\r\n            commands.push(new BlockCommentCommand(selection, commentsOptions.insertSpace));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nregisterEditorAction(ToggleCommentLineAction);\r\nregisterEditorAction(AddLineCommentAction);\r\nregisterEditorAction(RemoveLineCommentAction);\r\nregisterEditorAction(BlockCommentAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { IMenuService, MenuId, SubmenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { isIOS } from '../../../base/common/platform.js';\r\nlet ContextMenuController = class ContextMenuController {\r\n    constructor(editor, _contextMenuService, _contextViewService, _contextKeyService, _keybindingService, _menuService) {\r\n        this._contextMenuService = _contextMenuService;\r\n        this._contextViewService = _contextViewService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._keybindingService = _keybindingService;\r\n        this._menuService = _menuService;\r\n        this._toDispose = new DisposableStore();\r\n        this._contextMenuIsBeingShownCount = 0;\r\n        this._editor = editor;\r\n        this._toDispose.add(this._editor.onContextMenu((e) => this._onContextMenu(e)));\r\n        this._toDispose.add(this._editor.onMouseWheel((e) => {\r\n            if (this._contextMenuIsBeingShownCount > 0) {\r\n                const view = this._contextViewService.getContextViewElement();\r\n                const target = e.srcElement;\r\n                // Event triggers on shadow root host first\r\n                // Check if the context view is under this host before hiding it #103169\r\n                if (!(target.shadowRoot && dom.getShadowRoot(view) === target.shadowRoot)) {\r\n                    this._contextViewService.hideContextView();\r\n                }\r\n            }\r\n        }));\r\n        this._toDispose.add(this._editor.onKeyDown((e) => {\r\n            if (e.keyCode === 58 /* ContextMenu */) {\r\n                // Chrome is funny like that\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.showContextMenu();\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ContextMenuController.ID);\r\n    }\r\n    _onContextMenu(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(19 /* contextmenu */)) {\r\n            this._editor.focus();\r\n            // Ensure the cursor is at the position of the mouse click\r\n            if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\r\n                this._editor.setPosition(e.target.position);\r\n            }\r\n            return; // Context menu is turned off through configuration\r\n        }\r\n        if (e.target.type === 12 /* OVERLAY_WIDGET */) {\r\n            return; // allow native menu on widgets to support right click on input field for example in find\r\n        }\r\n        e.event.preventDefault();\r\n        e.event.stopPropagation();\r\n        if (e.target.type !== 6 /* CONTENT_TEXT */ && e.target.type !== 7 /* CONTENT_EMPTY */ && e.target.type !== 1 /* TEXTAREA */) {\r\n            return; // only support mouse click into text or native context menu key for now\r\n        }\r\n        // Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions\r\n        this._editor.focus();\r\n        // Ensure the cursor is at the position of the mouse click\r\n        if (e.target.position) {\r\n            let hasSelectionAtPosition = false;\r\n            for (const selection of this._editor.getSelections()) {\r\n                if (selection.containsPosition(e.target.position)) {\r\n                    hasSelectionAtPosition = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!hasSelectionAtPosition) {\r\n                this._editor.setPosition(e.target.position);\r\n            }\r\n        }\r\n        // Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position\r\n        let anchor = null;\r\n        if (e.target.type !== 1 /* TEXTAREA */) {\r\n            anchor = { x: e.event.posx - 1, width: 2, y: e.event.posy - 1, height: 2 };\r\n        }\r\n        // Show the context menu\r\n        this.showContextMenu(anchor);\r\n    }\r\n    showContextMenu(anchor) {\r\n        if (!this._editor.getOption(19 /* contextmenu */)) {\r\n            return; // Context menu is turned off through configuration\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._contextMenuService) {\r\n            this._editor.focus();\r\n            return; // We need the context menu service to function\r\n        }\r\n        // Find actions available for menu\r\n        const menuActions = this._getMenuActions(this._editor.getModel(), this._editor.isSimpleWidget ? MenuId.SimpleEditorContext : MenuId.EditorContext);\r\n        // Show menu if we have actions to show\r\n        if (menuActions.length > 0) {\r\n            this._doShowContextMenu(menuActions, anchor);\r\n        }\r\n    }\r\n    _getMenuActions(model, menuId) {\r\n        const result = [];\r\n        // get menu groups\r\n        const menu = this._menuService.createMenu(menuId, this._contextKeyService);\r\n        const groups = menu.getActions({ arg: model.uri });\r\n        menu.dispose();\r\n        // translate them into other actions\r\n        for (let group of groups) {\r\n            const [, actions] = group;\r\n            let addedItems = 0;\r\n            for (const action of actions) {\r\n                if (action instanceof SubmenuItemAction) {\r\n                    const subActions = this._getMenuActions(model, action.item.submenu);\r\n                    if (subActions.length > 0) {\r\n                        result.push(new SubmenuAction(action.id, action.label, subActions));\r\n                        addedItems++;\r\n                    }\r\n                }\r\n                else {\r\n                    result.push(action);\r\n                    addedItems++;\r\n                }\r\n            }\r\n            if (addedItems) {\r\n                result.push(new Separator());\r\n            }\r\n        }\r\n        if (result.length) {\r\n            result.pop(); // remove last separator\r\n        }\r\n        return result;\r\n    }\r\n    _doShowContextMenu(actions, anchor = null) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // Disable hover\r\n        const oldHoverSetting = this._editor.getOption(52 /* hover */);\r\n        this._editor.updateOptions({\r\n            hover: {\r\n                enabled: false\r\n            }\r\n        });\r\n        if (!anchor) {\r\n            // Ensure selection is visible\r\n            this._editor.revealPosition(this._editor.getPosition(), 1 /* Immediate */);\r\n            this._editor.render();\r\n            const cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());\r\n            // Translate to absolute editor position\r\n            const editorCoords = dom.getDomNodePagePosition(this._editor.getDomNode());\r\n            const posx = editorCoords.left + cursorCoords.left;\r\n            const posy = editorCoords.top + cursorCoords.top + cursorCoords.height;\r\n            anchor = { x: posx, y: posy };\r\n        }\r\n        const useShadowDOM = this._editor.getOption(114 /* useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\r\n        // Show menu\r\n        this._contextMenuIsBeingShownCount++;\r\n        this._contextMenuService.showContextMenu({\r\n            domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\r\n            getAnchor: () => anchor,\r\n            getActions: () => actions,\r\n            getActionViewItem: (action) => {\r\n                const keybinding = this._keybindingFor(action);\r\n                if (keybinding) {\r\n                    return new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel(), isMenu: true });\r\n                }\r\n                const customActionViewItem = action;\r\n                if (typeof customActionViewItem.getActionViewItem === 'function') {\r\n                    return customActionViewItem.getActionViewItem();\r\n                }\r\n                return new ActionViewItem(action, action, { icon: true, label: true, isMenu: true });\r\n            },\r\n            getKeyBinding: (action) => {\r\n                return this._keybindingFor(action);\r\n            },\r\n            onHide: (wasCancelled) => {\r\n                this._contextMenuIsBeingShownCount--;\r\n                this._editor.focus();\r\n                this._editor.updateOptions({\r\n                    hover: oldHoverSetting\r\n                });\r\n            }\r\n        });\r\n    }\r\n    _keybindingFor(action) {\r\n        return this._keybindingService.lookupKeybinding(action.id);\r\n    }\r\n    dispose() {\r\n        if (this._contextMenuIsBeingShownCount > 0) {\r\n            this._contextViewService.hideContextView();\r\n        }\r\n        this._toDispose.dispose();\r\n    }\r\n};\r\nContextMenuController.ID = 'editor.contrib.contextmenu';\r\nContextMenuController = __decorate([\r\n    __param(1, IContextMenuService),\r\n    __param(2, IContextViewService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IKeybindingService),\r\n    __param(5, IMenuService)\r\n], ContextMenuController);\r\nexport { ContextMenuController };\r\nclass ShowContextMenu extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showContextMenu',\r\n            label: nls.localize('action.showContextMenu.label', \"Show Editor Context Menu\"),\r\n            alias: 'Show Editor Context Menu',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 1024 /* Shift */ | 68 /* F10 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let contribution = ContextMenuController.get(editor);\r\n        contribution.showContextMenu();\r\n    }\r\n}\r\nregisterEditorContribution(ContextMenuController.ID, ContextMenuController);\r\nregisterEditorAction(ShowContextMenu);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nclass CursorState {\r\n    constructor(selections) {\r\n        this.selections = selections;\r\n    }\r\n    equals(other) {\r\n        const thisLen = this.selections.length;\r\n        const otherLen = other.selections.length;\r\n        if (thisLen !== otherLen) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < thisLen; i++) {\r\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nclass StackElement {\r\n    constructor(cursorState, scrollTop, scrollLeft) {\r\n        this.cursorState = cursorState;\r\n        this.scrollTop = scrollTop;\r\n        this.scrollLeft = scrollLeft;\r\n    }\r\n}\r\nexport class CursorUndoRedoController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._isCursorUndoRedo = false;\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (this._isCursorUndoRedo) {\r\n                return;\r\n            }\r\n            if (!e.oldSelections) {\r\n                return;\r\n            }\r\n            if (e.oldModelVersionId !== e.modelVersionId) {\r\n                return;\r\n            }\r\n            const prevState = new CursorState(e.oldSelections);\r\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\r\n            if (!isEqualToLastUndoStack) {\r\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\r\n                this._redoStack = [];\r\n                if (this._undoStack.length > 50) {\r\n                    // keep the cursor undo stack bounded\r\n                    this._undoStack.shift();\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CursorUndoRedoController.ID);\r\n    }\r\n    cursorUndo() {\r\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._undoStack.pop());\r\n    }\r\n    cursorRedo() {\r\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._redoStack.pop());\r\n    }\r\n    _applyState(stackElement) {\r\n        this._isCursorUndoRedo = true;\r\n        this._editor.setSelections(stackElement.cursorState.selections);\r\n        this._editor.setScrollPosition({\r\n            scrollTop: stackElement.scrollTop,\r\n            scrollLeft: stackElement.scrollLeft\r\n        });\r\n        this._isCursorUndoRedo = false;\r\n    }\r\n}\r\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\r\nexport class CursorUndo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorUndo',\r\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\r\n            alias: 'Cursor Undo',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 51 /* KEY_U */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorUndo();\r\n    }\r\n}\r\nexport class CursorRedo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorRedo',\r\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\r\n            alias: 'Cursor Redo',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorRedo();\r\n    }\r\n}\r\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController);\r\nregisterEditorAction(CursorUndo);\r\nregisterEditorAction(CursorRedo);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class DragAndDropCommand {\r\n    constructor(selection, targetPosition, copy) {\r\n        this.selection = selection;\r\n        this.targetPosition = targetPosition;\r\n        this.copy = copy;\r\n        this.targetSelection = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let text = model.getValueInRange(this.selection);\r\n        if (!this.copy) {\r\n            builder.addEditOperation(this.selection, null);\r\n        }\r\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\r\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\r\n        )) {\r\n            this.targetSelection = this.selection;\r\n            return;\r\n        }\r\n        if (this.copy) {\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\r\n            // Drag the selection downwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\r\n            // Drag the selection upwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        // The target position is at the same line as the selection's end position.\r\n        if (this.selection.endColumn <= this.targetPosition.column) {\r\n            // The target position is after the selection's end position\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column :\r\n                this.selection.endColumn);\r\n        }\r\n        else {\r\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return this.targetSelection;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dnd.css';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { isMacintosh } from '../../../base/common/platform.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nfunction hasTriggerModifier(e) {\r\n    if (isMacintosh) {\r\n        return e.altKey;\r\n    }\r\n    else {\r\n        return e.ctrlKey;\r\n    }\r\n}\r\nexport class DragAndDropController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\r\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\r\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\r\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\r\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\r\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\r\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\r\n        this._dndDecorationIds = [];\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        this._dragSelection = null;\r\n    }\r\n    onEditorBlur() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n    }\r\n    onEditorKeyDown(e) {\r\n        if (!this._editor.getOption(30 /* dragAndDrop */) || this._editor.getOption(17 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = true;\r\n        }\r\n        if (this._mouseDown && hasTriggerModifier(e)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n    }\r\n    onEditorKeyUp(e) {\r\n        if (!this._editor.getOption(30 /* dragAndDrop */) || this._editor.getOption(17 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = false;\r\n        }\r\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._mouseDown = true;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._mouseDown = false;\r\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n    }\r\n    _onEditorMouseDrag(mouseEvent) {\r\n        let target = mouseEvent.target;\r\n        if (this._dragSelection === null) {\r\n            const selections = this._editor.getSelections() || [];\r\n            let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\r\n            if (possibleSelections.length === 1) {\r\n                this._dragSelection = possibleSelections[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        if (hasTriggerModifier(mouseEvent.event)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n        else {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n        if (target.position) {\r\n            if (this._dragSelection.containsPosition(target.position)) {\r\n                this._removeDecoration();\r\n            }\r\n            else {\r\n                this.showAt(target.position);\r\n            }\r\n        }\r\n    }\r\n    _onEditorMouseDropCanceled() {\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    _onEditorMouseDrop(mouseEvent) {\r\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\r\n            let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\r\n            if (this._dragSelection === null) {\r\n                let newSelections = null;\r\n                if (mouseEvent.event.shiftKey) {\r\n                    let primarySelection = this._editor.getSelection();\r\n                    if (primarySelection) {\r\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\r\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\r\n                    }\r\n                }\r\n                else {\r\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\r\n                        if (selection.containsPosition(newCursorPosition)) {\r\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n                        }\r\n                        else {\r\n                            return selection;\r\n                        }\r\n                    });\r\n                }\r\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\r\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\r\n            }\r\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\r\n                ((hasTriggerModifier(mouseEvent.event) ||\r\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\r\n                )) {\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\r\n                this._editor.pushUndoStop();\r\n            }\r\n        }\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    showAt(position) {\r\n        let newDecorations = [{\r\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\r\n                options: DragAndDropController._DECORATION_OPTIONS\r\n            }];\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n    }\r\n    _removeDecoration() {\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\r\n    }\r\n    _hitContent(target) {\r\n        return target.type === 6 /* CONTENT_TEXT */ ||\r\n            target.type === 7 /* CONTENT_EMPTY */;\r\n    }\r\n    _hitMargin(target) {\r\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\r\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\r\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\r\n    }\r\n    dispose() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        super.dispose();\r\n    }\r\n}\r\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\r\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\r\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'dnd-target',\r\n    className: 'dnd-target'\r\n});\r\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { OverviewRulerLane, MinimapPosition } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { overviewRulerFindMatchForeground, minimapFindMatch } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nexport class FindDecorations {\r\n    constructor(editor) {\r\n        this._editor = editor;\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n        this._startPosition = this._editor.getPosition();\r\n    }\r\n    dispose() {\r\n        this._editor.deltaDecorations(this._allDecorations(), []);\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n    }\r\n    reset() {\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n    }\r\n    getCount() {\r\n        return this._decorations.length;\r\n    }\r\n    /** @deprecated use getFindScopes to support multiple selections */\r\n    getFindScope() {\r\n        if (this._findScopeDecorationIds[0]) {\r\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\r\n        }\r\n        return null;\r\n    }\r\n    getFindScopes() {\r\n        if (this._findScopeDecorationIds.length) {\r\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\r\n            if (scopes.length) {\r\n                return scopes;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getStartPosition() {\r\n        return this._startPosition;\r\n    }\r\n    setStartPosition(newStartPosition) {\r\n        this._startPosition = newStartPosition;\r\n        this.setCurrentFindMatch(null);\r\n    }\r\n    _getDecorationIndex(decorationId) {\r\n        const index = this._decorations.indexOf(decorationId);\r\n        if (index >= 0) {\r\n            return index + 1;\r\n        }\r\n        return 1;\r\n    }\r\n    getCurrentMatchesPosition(desiredRange) {\r\n        let candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\r\n        for (const candidate of candidates) {\r\n            const candidateOpts = candidate.options;\r\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\r\n                return this._getDecorationIndex(candidate.id);\r\n            }\r\n        }\r\n        // We don't know the current match position, so returns zero to show '?' in find widget\r\n        return 0;\r\n    }\r\n    setCurrentFindMatch(nextMatch) {\r\n        let newCurrentDecorationId = null;\r\n        let matchPosition = 0;\r\n        if (nextMatch) {\r\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\r\n                let range = this._editor.getModel().getDecorationRange(this._decorations[i]);\r\n                if (nextMatch.equalsRange(range)) {\r\n                    newCurrentDecorationId = this._decorations[i];\r\n                    matchPosition = (i + 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\r\n            this._editor.changeDecorations((changeAccessor) => {\r\n                if (this._highlightedDecorationId !== null) {\r\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\r\n                    this._highlightedDecorationId = null;\r\n                }\r\n                if (newCurrentDecorationId !== null) {\r\n                    this._highlightedDecorationId = newCurrentDecorationId;\r\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\r\n                }\r\n                if (this._rangeHighlightDecorationId !== null) {\r\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\r\n                    this._rangeHighlightDecorationId = null;\r\n                }\r\n                if (newCurrentDecorationId !== null) {\r\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\r\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\r\n                        let lineBeforeEnd = rng.endLineNumber - 1;\r\n                        let lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\r\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\r\n                    }\r\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\r\n                }\r\n            });\r\n        }\r\n        return matchPosition;\r\n    }\r\n    set(findMatches, findScopes) {\r\n        this._editor.changeDecorations((accessor) => {\r\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\r\n            let newOverviewRulerApproximateDecorations = [];\r\n            if (findMatches.length > 1000) {\r\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\r\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\r\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\r\n                // approximate a distance in lines where matches should be merged\r\n                const lineCount = this._editor.getModel().getLineCount();\r\n                const height = this._editor.getLayoutInfo().height;\r\n                const approxPixelsPerLine = height / lineCount;\r\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\r\n                // merge decorations as much as possible\r\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\r\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\r\n                for (let i = 1, len = findMatches.length; i < len; i++) {\r\n                    const range = findMatches[i].range;\r\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\r\n                        if (range.endLineNumber > prevEndLineNumber) {\r\n                            prevEndLineNumber = range.endLineNumber;\r\n                        }\r\n                    }\r\n                    else {\r\n                        newOverviewRulerApproximateDecorations.push({\r\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\r\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\r\n                        });\r\n                        prevStartLineNumber = range.startLineNumber;\r\n                        prevEndLineNumber = range.endLineNumber;\r\n                    }\r\n                }\r\n                newOverviewRulerApproximateDecorations.push({\r\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\r\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\r\n                });\r\n            }\r\n            // Find matches\r\n            let newFindMatchesDecorations = new Array(findMatches.length);\r\n            for (let i = 0, len = findMatches.length; i < len; i++) {\r\n                newFindMatchesDecorations[i] = {\r\n                    range: findMatches[i].range,\r\n                    options: findMatchesOptions\r\n                };\r\n            }\r\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\r\n            // Overview ruler approximate decorations\r\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\r\n            // Range highlight\r\n            if (this._rangeHighlightDecorationId) {\r\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\r\n                this._rangeHighlightDecorationId = null;\r\n            }\r\n            // Find scope\r\n            if (this._findScopeDecorationIds.length) {\r\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\r\n                this._findScopeDecorationIds = [];\r\n            }\r\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\r\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\r\n            }\r\n        });\r\n    }\r\n    matchBeforePosition(position) {\r\n        if (this._decorations.length === 0) {\r\n            return null;\r\n        }\r\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\r\n            let decorationId = this._decorations[i];\r\n            let r = this._editor.getModel().getDecorationRange(decorationId);\r\n            if (!r || r.endLineNumber > position.lineNumber) {\r\n                continue;\r\n            }\r\n            if (r.endLineNumber < position.lineNumber) {\r\n                return r;\r\n            }\r\n            if (r.endColumn > position.column) {\r\n                continue;\r\n            }\r\n            return r;\r\n        }\r\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\r\n    }\r\n    matchAfterPosition(position) {\r\n        if (this._decorations.length === 0) {\r\n            return null;\r\n        }\r\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\r\n            let decorationId = this._decorations[i];\r\n            let r = this._editor.getModel().getDecorationRange(decorationId);\r\n            if (!r || r.startLineNumber < position.lineNumber) {\r\n                continue;\r\n            }\r\n            if (r.startLineNumber > position.lineNumber) {\r\n                return r;\r\n            }\r\n            if (r.startColumn < position.column) {\r\n                continue;\r\n            }\r\n            return r;\r\n        }\r\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\r\n    }\r\n    _allDecorations() {\r\n        let result = [];\r\n        result = result.concat(this._decorations);\r\n        result = result.concat(this._overviewRulerApproximateDecorations);\r\n        if (this._findScopeDecorationIds.length) {\r\n            result.push(...this._findScopeDecorationIds);\r\n        }\r\n        if (this._rangeHighlightDecorationId) {\r\n            result.push(this._rangeHighlightDecorationId);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\r\n    description: 'current-find-match',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    zIndex: 13,\r\n    className: 'currentFindMatch',\r\n    showIfCollapsed: true,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    },\r\n    minimap: {\r\n        color: themeColorFromId(minimapFindMatch),\r\n        position: MinimapPosition.Inline\r\n    }\r\n});\r\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'findMatch',\r\n    showIfCollapsed: true,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    },\r\n    minimap: {\r\n        color: themeColorFromId(minimapFindMatch),\r\n        position: MinimapPosition.Inline\r\n    }\r\n});\r\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match-no-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'findMatch',\r\n    showIfCollapsed: true\r\n});\r\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match-only-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-range-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'rangeHighlight',\r\n    isWholeLine: true\r\n});\r\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-scope',\r\n    className: 'findScope',\r\n    isWholeLine: true\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nexport class ReplaceAllCommand {\r\n    constructor(editorSelection, ranges, replaceStrings) {\r\n        this._editorSelection = editorSelection;\r\n        this._ranges = ranges;\r\n        this._replaceStrings = replaceStrings;\r\n        this._trackedEditorSelectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        if (this._ranges.length > 0) {\r\n            // Collect all edit operations\r\n            let ops = [];\r\n            for (let i = 0; i < this._ranges.length; i++) {\r\n                ops.push({\r\n                    range: this._ranges[i],\r\n                    text: this._replaceStrings[i]\r\n                });\r\n            }\r\n            // Sort them in ascending order by range starts\r\n            ops.sort((o1, o2) => {\r\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\r\n            });\r\n            // Merge operations that touch each other\r\n            let resultOps = [];\r\n            let previousOp = ops[0];\r\n            for (let i = 1; i < ops.length; i++) {\r\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\r\n                    // These operations are one after another and can be merged\r\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\r\n                    previousOp.text = previousOp.text + ops[i].text;\r\n                }\r\n                else {\r\n                    resultOps.push(previousOp);\r\n                    previousOp = ops[i];\r\n                }\r\n            }\r\n            resultOps.push(previousOp);\r\n            for (const op of resultOps) {\r\n                builder.addEditOperation(op.range, op.text);\r\n            }\r\n        }\r\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from './strings.js';\r\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\r\n    if (matches && (matches[0] !== '')) {\r\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\r\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\r\n        if (containsHyphens && !containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\r\n        }\r\n        else if (!containsHyphens && containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\r\n        }\r\n        if (matches[0].toUpperCase() === matches[0]) {\r\n            return pattern.toUpperCase();\r\n        }\r\n        else if (matches[0].toLowerCase() === matches[0]) {\r\n            return pattern.toLowerCase();\r\n        }\r\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\r\n            return pattern[0].toUpperCase() + pattern.substr(1);\r\n        }\r\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\r\n            return pattern[0].toLowerCase() + pattern.substr(1);\r\n        }\r\n        else {\r\n            // we don't understand its pattern yet.\r\n            return pattern;\r\n        }\r\n    }\r\n    else {\r\n        return pattern;\r\n    }\r\n}\r\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\r\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\r\n}\r\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\r\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\r\n    let replaceString = '';\r\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\r\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\r\n    });\r\n    return replaceString.slice(0, -1);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\r\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\r\nclass StaticValueReplacePattern {\r\n    constructor(staticValue) {\r\n        this.staticValue = staticValue;\r\n        this.kind = 0 /* StaticValue */;\r\n    }\r\n}\r\n/**\r\n * Assigned when the replace pattern has replacement patterns.\r\n */\r\nclass DynamicPiecesReplacePattern {\r\n    constructor(pieces) {\r\n        this.pieces = pieces;\r\n        this.kind = 1 /* DynamicPieces */;\r\n    }\r\n}\r\nexport class ReplacePattern {\r\n    constructor(pieces) {\r\n        if (!pieces || pieces.length === 0) {\r\n            this._state = new StaticValueReplacePattern('');\r\n        }\r\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\r\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\r\n        }\r\n        else {\r\n            this._state = new DynamicPiecesReplacePattern(pieces);\r\n        }\r\n    }\r\n    static fromStaticValue(value) {\r\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\r\n    }\r\n    get hasReplacementPatterns() {\r\n        return (this._state.kind === 1 /* DynamicPieces */);\r\n    }\r\n    buildReplaceString(matches, preserveCase) {\r\n        if (this._state.kind === 0 /* StaticValue */) {\r\n            if (preserveCase) {\r\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\r\n            }\r\n            else {\r\n                return this._state.staticValue;\r\n            }\r\n        }\r\n        let result = '';\r\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\r\n            let piece = this._state.pieces[i];\r\n            if (piece.staticValue !== null) {\r\n                // static value ReplacePiece\r\n                result += piece.staticValue;\r\n                continue;\r\n            }\r\n            // match index ReplacePiece\r\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\r\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\r\n                let repl = [];\r\n                let lenOps = piece.caseOps.length;\r\n                let opIdx = 0;\r\n                for (let idx = 0, len = match.length; idx < len; idx++) {\r\n                    if (opIdx >= lenOps) {\r\n                        repl.push(match.slice(idx));\r\n                        break;\r\n                    }\r\n                    switch (piece.caseOps[opIdx]) {\r\n                        case 'U':\r\n                            repl.push(match[idx].toUpperCase());\r\n                            break;\r\n                        case 'u':\r\n                            repl.push(match[idx].toUpperCase());\r\n                            opIdx++;\r\n                            break;\r\n                        case 'L':\r\n                            repl.push(match[idx].toLowerCase());\r\n                            break;\r\n                        case 'l':\r\n                            repl.push(match[idx].toLowerCase());\r\n                            opIdx++;\r\n                            break;\r\n                        default:\r\n                            repl.push(match[idx]);\r\n                    }\r\n                }\r\n                match = repl.join('');\r\n            }\r\n            result += match;\r\n        }\r\n        return result;\r\n    }\r\n    static _substitute(matchIndex, matches) {\r\n        if (matches === null) {\r\n            return '';\r\n        }\r\n        if (matchIndex === 0) {\r\n            return matches[0];\r\n        }\r\n        let remainder = '';\r\n        while (matchIndex > 0) {\r\n            if (matchIndex < matches.length) {\r\n                // A match can be undefined\r\n                let match = (matches[matchIndex] || '');\r\n                return match + remainder;\r\n            }\r\n            remainder = String(matchIndex % 10) + remainder;\r\n            matchIndex = Math.floor(matchIndex / 10);\r\n        }\r\n        return '$' + remainder;\r\n    }\r\n}\r\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\r\nexport class ReplacePiece {\r\n    constructor(staticValue, matchIndex, caseOps) {\r\n        this.staticValue = staticValue;\r\n        this.matchIndex = matchIndex;\r\n        if (!caseOps || caseOps.length === 0) {\r\n            this.caseOps = null;\r\n        }\r\n        else {\r\n            this.caseOps = caseOps.slice(0);\r\n        }\r\n    }\r\n    static staticValue(value) {\r\n        return new ReplacePiece(value, -1, null);\r\n    }\r\n    static caseOps(index, caseOps) {\r\n        return new ReplacePiece(null, index, caseOps);\r\n    }\r\n}\r\nclass ReplacePieceBuilder {\r\n    constructor(source) {\r\n        this._source = source;\r\n        this._lastCharIndex = 0;\r\n        this._result = [];\r\n        this._resultLen = 0;\r\n        this._currentStaticPiece = '';\r\n    }\r\n    emitUnchanged(toCharIndex) {\r\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    emitStatic(value, toCharIndex) {\r\n        this._emitStatic(value);\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    _emitStatic(value) {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n        this._currentStaticPiece += value;\r\n    }\r\n    emitMatchIndex(index, toCharIndex, caseOps) {\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    finalize() {\r\n        this.emitUnchanged(this._source.length);\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        return new ReplacePattern(this._result);\r\n    }\r\n}\r\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * \\u\t\t\t=> upper-cases one character in a match.\r\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\r\n * \\l\t\t\t=> lower-cases one character in a match.\r\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\r\nexport function parseReplaceString(replaceString) {\r\n    if (!replaceString || replaceString.length === 0) {\r\n        return new ReplacePattern(null);\r\n    }\r\n    let caseOps = [];\r\n    let result = new ReplacePieceBuilder(replaceString);\r\n    for (let i = 0, len = replaceString.length; i < len; i++) {\r\n        let chCode = replaceString.charCodeAt(i);\r\n        if (chCode === 92 /* Backslash */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a \\\r\n                break;\r\n            }\r\n            let nextChCode = replaceString.charCodeAt(i);\r\n            // let replaceWithCharacter: string | null = null;\r\n            switch (nextChCode) {\r\n                case 92 /* Backslash */:\r\n                    // \\\\ => inserts a \"\\\"\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\\\', i + 1);\r\n                    break;\r\n                case 110 /* n */:\r\n                    // \\n => inserts a LF\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\n', i + 1);\r\n                    break;\r\n                case 116 /* t */:\r\n                    // \\t => inserts a TAB\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\t', i + 1);\r\n                    break;\r\n                // Case modification of string replacements, patterned after Boost, but only applied\r\n                // to the replacement text, not subsequent content.\r\n                case 117 /* u */:\r\n                // \\u => upper-cases one character.\r\n                case 85 /* U */:\r\n                // \\U => upper-cases ALL following characters.\r\n                case 108 /* l */:\r\n                // \\l => lower-cases one character.\r\n                case 76 /* L */:\r\n                    // \\L => lower-cases ALL following characters.\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('', i + 1);\r\n                    caseOps.push(String.fromCharCode(nextChCode));\r\n                    break;\r\n            }\r\n            continue;\r\n        }\r\n        if (chCode === 36 /* DollarSign */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a $\r\n                break;\r\n            }\r\n            let nextChCode = replaceString.charCodeAt(i);\r\n            if (nextChCode === 36 /* DollarSign */) {\r\n                // $$ => inserts a \"$\"\r\n                result.emitUnchanged(i - 1);\r\n                result.emitStatic('$', i + 1);\r\n                continue;\r\n            }\r\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\r\n                // $& and $0 => inserts the matched substring.\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(0, i + 1, caseOps);\r\n                caseOps.length = 0;\r\n                continue;\r\n            }\r\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\r\n                // $n\r\n                let matchIndex = nextChCode - 48 /* Digit0 */;\r\n                // peek next char to probe for $nn\r\n                if (i + 1 < len) {\r\n                    let nextNextChCode = replaceString.charCodeAt(i + 1);\r\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\r\n                        // $nn\r\n                        // move to next char\r\n                        i++;\r\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\r\n                        result.emitUnchanged(i - 2);\r\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\r\n                        caseOps.length = 0;\r\n                        continue;\r\n                    }\r\n                }\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\r\n                caseOps.length = 0;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    return result.finalize();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../common/commands/replaceCommand.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { SearchParams } from '../../common/model/textModelSearch.js';\r\nimport { FindDecorations } from './findDecorations.js';\r\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\r\nimport { ReplacePattern, parseReplaceString } from './replacePattern.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { findFirstInSorted } from '../../../base/common/arrays.js';\r\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\r\n// Keep ContextKey use of 'Focussed' to not break when clauses\r\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\r\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\r\nexport const ToggleCaseSensitiveKeybinding = {\r\n    primary: 512 /* Alt */ | 33 /* KEY_C */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 33 /* KEY_C */ }\r\n};\r\nexport const ToggleWholeWordKeybinding = {\r\n    primary: 512 /* Alt */ | 53 /* KEY_W */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 53 /* KEY_W */ }\r\n};\r\nexport const ToggleRegexKeybinding = {\r\n    primary: 512 /* Alt */ | 48 /* KEY_R */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 48 /* KEY_R */ }\r\n};\r\nexport const ToggleSearchScopeKeybinding = {\r\n    primary: 512 /* Alt */ | 42 /* KEY_L */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 42 /* KEY_L */ }\r\n};\r\nexport const TogglePreserveCaseKeybinding = {\r\n    primary: 512 /* Alt */ | 46 /* KEY_P */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 46 /* KEY_P */ }\r\n};\r\nexport const FIND_IDS = {\r\n    StartFindAction: 'actions.find',\r\n    StartFindWithSelection: 'actions.findWithSelection',\r\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\r\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\r\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\r\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\r\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\r\n    CloseFindWidgetCommand: 'closeFindWidget',\r\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\r\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\r\n    ToggleRegexCommand: 'toggleFindRegex',\r\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\r\n    TogglePreserveCaseCommand: 'togglePreserveCase',\r\n    ReplaceOneAction: 'editor.action.replaceOne',\r\n    ReplaceAllAction: 'editor.action.replaceAll',\r\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\r\n};\r\nexport const MATCHES_LIMIT = 19999;\r\nconst RESEARCH_DELAY = 240;\r\nexport class FindModelBoundToEditorModel {\r\n    constructor(editor, state) {\r\n        this._toDispose = new DisposableStore();\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._isDisposed = false;\r\n        this._startSearchingTimer = new TimeoutTimer();\r\n        this._decorations = new FindDecorations(editor);\r\n        this._toDispose.add(this._decorations);\r\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\r\n        this._toDispose.add(this._updateDecorationsScheduler);\r\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\r\n            if (e.reason === 3 /* Explicit */\r\n                || e.reason === 5 /* Undo */\r\n                || e.reason === 6 /* Redo */) {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n            }\r\n        }));\r\n        this._ignoreModelContentChanged = false;\r\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\r\n            if (this._ignoreModelContentChanged) {\r\n                return;\r\n            }\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                this._decorations.reset();\r\n            }\r\n            this._decorations.setStartPosition(this._editor.getPosition());\r\n            this._updateDecorationsScheduler.schedule();\r\n        }));\r\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this.research(false, this._state.searchScope);\r\n    }\r\n    dispose() {\r\n        this._isDisposed = true;\r\n        dispose(this._startSearchingTimer);\r\n        this._toDispose.dispose();\r\n    }\r\n    _onStateChanged(e) {\r\n        if (this._isDisposed) {\r\n            // The find model is disposed during a find state changed event\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            // The find model will be disposed momentarily\r\n            return;\r\n        }\r\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\r\n            let model = this._editor.getModel();\r\n            if (model.isTooLargeForSyncing()) {\r\n                this._startSearchingTimer.cancel();\r\n                this._startSearchingTimer.setIfNotSet(() => {\r\n                    if (e.searchScope) {\r\n                        this.research(e.moveCursor, this._state.searchScope);\r\n                    }\r\n                    else {\r\n                        this.research(e.moveCursor);\r\n                    }\r\n                }, RESEARCH_DELAY);\r\n            }\r\n            else {\r\n                if (e.searchScope) {\r\n                    this.research(e.moveCursor, this._state.searchScope);\r\n                }\r\n                else {\r\n                    this.research(e.moveCursor);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static _getSearchRange(model, findScope) {\r\n        // If we have set now or before a find scope, use it for computing the search range\r\n        if (findScope) {\r\n            return findScope;\r\n        }\r\n        return model.getFullModelRange();\r\n    }\r\n    research(moveCursor, newFindScope) {\r\n        let findScopes = null;\r\n        if (typeof newFindScope !== 'undefined') {\r\n            if (newFindScope !== null) {\r\n                if (!Array.isArray(newFindScope)) {\r\n                    findScopes = [newFindScope];\r\n                }\r\n                else {\r\n                    findScopes = newFindScope;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            findScopes = this._decorations.getFindScopes();\r\n        }\r\n        if (findScopes !== null) {\r\n            findScopes = findScopes.map(findScope => {\r\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\r\n                    let endLineNumber = findScope.endLineNumber;\r\n                    if (findScope.endColumn === 1) {\r\n                        endLineNumber = endLineNumber - 1;\r\n                    }\r\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\r\n                }\r\n                return findScope;\r\n            });\r\n        }\r\n        let findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\r\n        this._decorations.set(findMatches, findScopes);\r\n        const editorSelection = this._editor.getSelection();\r\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\r\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\r\n            // current selection is not on top of a match\r\n            // try to find its nearest result from the top of the document\r\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\r\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\r\n        }\r\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\r\n        if (moveCursor && this._editor.getOption(34 /* find */).cursorMoveOnType) {\r\n            this._moveToNextMatch(this._decorations.getStartPosition());\r\n        }\r\n    }\r\n    _hasMatches() {\r\n        return (this._state.matchesCount > 0);\r\n    }\r\n    _cannotFind() {\r\n        if (!this._hasMatches()) {\r\n            let findScope = this._decorations.getFindScope();\r\n            if (findScope) {\r\n                // Reveal the selection so user is reminded that 'selection find' is on.\r\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _setCurrentFindMatch(match) {\r\n        let matchesPosition = this._decorations.setCurrentFindMatch(match);\r\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\r\n        this._editor.setSelection(match);\r\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */);\r\n    }\r\n    _prevSearchPosition(before) {\r\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        let { lineNumber, column } = before;\r\n        let model = this._editor.getModel();\r\n        if (isUsingLineStops || column === 1) {\r\n            if (lineNumber === 1) {\r\n                lineNumber = model.getLineCount();\r\n            }\r\n            else {\r\n                lineNumber--;\r\n            }\r\n            column = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        else {\r\n            column--;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    }\r\n    _moveToPrevMatch(before, isRecursed = false) {\r\n        if (!this._state.canNavigateBack()) {\r\n            // we are beyond the first matched find result\r\n            // instead of doing nothing, we should refocus the first item\r\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\r\n                before = this._prevSearchPosition(before);\r\n                prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            }\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._cannotFind()) {\r\n            return;\r\n        }\r\n        let findScope = this._decorations.getFindScope();\r\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(before)) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (before.isBefore(searchRange.getStartPosition())) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        let { lineNumber, column } = before;\r\n        let model = this._editor.getModel();\r\n        let position = new Position(lineNumber, column);\r\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._prevSearchPosition(position);\r\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        }\r\n        if (!prevMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\r\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\r\n        }\r\n        this._setCurrentFindMatch(prevMatch.range);\r\n    }\r\n    moveToPrevMatch() {\r\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\r\n    }\r\n    _nextSearchPosition(after) {\r\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        let { lineNumber, column } = after;\r\n        let model = this._editor.getModel();\r\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\r\n            if (lineNumber === model.getLineCount()) {\r\n                lineNumber = 1;\r\n            }\r\n            else {\r\n                lineNumber++;\r\n            }\r\n            column = 1;\r\n        }\r\n        else {\r\n            column++;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    }\r\n    _moveToNextMatch(after) {\r\n        if (!this._state.canNavigateForward()) {\r\n            // we are beyond the last matched find result\r\n            // instead of doing nothing, we should refocus the last item\r\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\r\n                // Looks like we're stuck at this position, unacceptable!\r\n                after = this._nextSearchPosition(after);\r\n                nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            }\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        let nextMatch = this._getNextMatch(after, false, true);\r\n        if (nextMatch) {\r\n            this._setCurrentFindMatch(nextMatch.range);\r\n        }\r\n    }\r\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\r\n        if (this._cannotFind()) {\r\n            return null;\r\n        }\r\n        let findScope = this._decorations.getFindScope();\r\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(after)) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (after.isBefore(searchRange.getStartPosition())) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        let { lineNumber, column } = after;\r\n        let model = this._editor.getModel();\r\n        let position = new Position(lineNumber, column);\r\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, captureMatches);\r\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._nextSearchPosition(position);\r\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, captureMatches);\r\n        }\r\n        if (!nextMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return null;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\r\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\r\n        }\r\n        return nextMatch;\r\n    }\r\n    moveToNextMatch() {\r\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\r\n    }\r\n    _getReplacePattern() {\r\n        if (this._state.isRegex) {\r\n            return parseReplaceString(this._state.replaceString);\r\n        }\r\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\r\n    }\r\n    replace() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        let replacePattern = this._getReplacePattern();\r\n        let selection = this._editor.getSelection();\r\n        let nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\r\n        if (nextMatch) {\r\n            if (selection.equalsRange(nextMatch.range)) {\r\n                // selection sits on a find match => replace it!\r\n                let replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\r\n                let command = new ReplaceCommand(selection, replaceString);\r\n                this._executeEditorCommand('replace', command);\r\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\r\n                this.research(true);\r\n            }\r\n            else {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n                this._setCurrentFindMatch(nextMatch.range);\r\n            }\r\n        }\r\n    }\r\n    _findMatches(findScopes, captureMatches, limitResultCount) {\r\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\r\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, captureMatches, limitResultCount);\r\n    }\r\n    replaceAll() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        const findScopes = this._decorations.getFindScopes();\r\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\r\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\r\n            this._largeReplaceAll();\r\n        }\r\n        else {\r\n            this._regularReplaceAll(findScopes);\r\n        }\r\n        this.research(false);\r\n    }\r\n    _largeReplaceAll() {\r\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null);\r\n        const searchData = searchParams.parseSearchRequest();\r\n        if (!searchData) {\r\n            return;\r\n        }\r\n        let searchRegex = searchData.regex;\r\n        if (!searchRegex.multiline) {\r\n            let mod = 'mu';\r\n            if (searchRegex.ignoreCase) {\r\n                mod += 'i';\r\n            }\r\n            if (searchRegex.global) {\r\n                mod += 'g';\r\n            }\r\n            searchRegex = new RegExp(searchRegex.source, mod);\r\n        }\r\n        const model = this._editor.getModel();\r\n        const modelText = model.getValue(1 /* LF */);\r\n        const fullModelRange = model.getFullModelRange();\r\n        const replacePattern = this._getReplacePattern();\r\n        let resultText;\r\n        const preserveCase = this._state.preserveCase;\r\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\r\n            resultText = modelText.replace(searchRegex, function () {\r\n                return replacePattern.buildReplaceString(arguments, preserveCase);\r\n            });\r\n        }\r\n        else {\r\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\r\n        }\r\n        let command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\r\n        this._executeEditorCommand('replaceAll', command);\r\n    }\r\n    _regularReplaceAll(findScopes) {\r\n        const replacePattern = this._getReplacePattern();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        let matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        let replaceStrings = [];\r\n        for (let i = 0, len = matches.length; i < len; i++) {\r\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\r\n        }\r\n        let command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\r\n        this._executeEditorCommand('replaceAll', command);\r\n    }\r\n    selectAllMatches() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        let findScopes = this._decorations.getFindScopes();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        let matches = this._findMatches(findScopes, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\r\n        // If one of the ranges is the editor selection, then maintain it as primary\r\n        let editorSelection = this._editor.getSelection();\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let sel = selections[i];\r\n            if (sel.equalsRange(editorSelection)) {\r\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        this._editor.setSelections(selections);\r\n    }\r\n    _executeEditorCommand(source, command) {\r\n        try {\r\n            this._ignoreModelContentChanged = true;\r\n            this._editor.pushUndoStop();\r\n            this._editor.executeCommand(source, command);\r\n            this._editor.pushUndoStop();\r\n        }\r\n        finally {\r\n            this._ignoreModelContentChanged = false;\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Widget } from '../widget.js';\r\nimport { CSSIcon } from '../../../common/codicons.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './checkbox.css';\r\nconst defaultOpts = {\r\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\r\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\r\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\r\n};\r\nexport class Checkbox extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._onChange = this._register(new Emitter());\r\n        this.onChange = this._onChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\r\n        this._checked = this._opts.isChecked;\r\n        const classes = ['monaco-custom-checkbox'];\r\n        if (this._opts.icon) {\r\n            classes.push(...CSSIcon.asClassNameArray(this._opts.icon));\r\n        }\r\n        if (this._opts.actionClassName) {\r\n            classes.push(...this._opts.actionClassName.split(' '));\r\n        }\r\n        if (this._checked) {\r\n            classes.push('checked');\r\n        }\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.title = this._opts.title;\r\n        this.domNode.classList.add(...classes);\r\n        if (!this._opts.notFocusable) {\r\n            this.domNode.tabIndex = 0;\r\n        }\r\n        this.domNode.setAttribute('role', 'checkbox');\r\n        this.domNode.setAttribute('aria-checked', String(this._checked));\r\n        this.domNode.setAttribute('aria-label', this._opts.title);\r\n        this.applyStyles();\r\n        this.onclick(this.domNode, (ev) => {\r\n            this.checked = !this._checked;\r\n            this._onChange.fire(false);\r\n            ev.preventDefault();\r\n        });\r\n        this.ignoreGesture(this.domNode);\r\n        this.onkeydown(this.domNode, (keyboardEvent) => {\r\n            if (keyboardEvent.keyCode === 10 /* Space */ || keyboardEvent.keyCode === 3 /* Enter */) {\r\n                this.checked = !this._checked;\r\n                this._onChange.fire(true);\r\n                keyboardEvent.preventDefault();\r\n                return;\r\n            }\r\n            this._onKeyDown.fire(keyboardEvent);\r\n        });\r\n    }\r\n    get enabled() {\r\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\r\n    }\r\n    focus() {\r\n        this.domNode.focus();\r\n    }\r\n    get checked() {\r\n        return this._checked;\r\n    }\r\n    set checked(newIsChecked) {\r\n        this._checked = newIsChecked;\r\n        this.domNode.setAttribute('aria-checked', String(this._checked));\r\n        this.domNode.classList.toggle('checked', this._checked);\r\n        this.applyStyles();\r\n    }\r\n    width() {\r\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\r\n    }\r\n    style(styles) {\r\n        if (styles.inputActiveOptionBorder) {\r\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        }\r\n        if (styles.inputActiveOptionForeground) {\r\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        }\r\n        if (styles.inputActiveOptionBackground) {\r\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        }\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : 'transparent';\r\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\r\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : 'transparent';\r\n        }\r\n    }\r\n    enable() {\r\n        this.domNode.setAttribute('aria-disabled', String(false));\r\n    }\r\n    disable() {\r\n        this.domNode.setAttribute('aria-disabled', String(true));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\r\nconst NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\r\nconst NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\r\nexport class CaseSensitiveCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.caseSensitive,\r\n            title: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class WholeWordsCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.wholeWord,\r\n            title: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class RegexCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.regex,\r\n            title: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from '../../../base/browser/ui/findinput/findInputCheckboxes.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { FIND_IDS } from './findModel.js';\r\nimport { contrastBorder, editorWidgetBackground, inputActiveOptionBorder, inputActiveOptionBackground, widgetShadow, editorWidgetForeground, inputActiveOptionForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nexport class FindOptionsWidget extends Widget {\r\n    constructor(editor, state, keybindingService, themeService) {\r\n        super();\r\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\r\n        this._isVisible = false;\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._keybindingService = keybindingService;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'findOptionsWidget';\r\n        this._domNode.style.display = 'none';\r\n        this._domNode.style.top = '10px';\r\n        this._domNode.setAttribute('role', 'presentation');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor(inputActiveOptionBorder);\r\n        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor(inputActiveOptionForeground);\r\n        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor(inputActiveOptionBackground);\r\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            isChecked: this._state.matchCase,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.caseSensitive.domNode);\r\n        this._register(this.caseSensitive.onChange(() => {\r\n            this._state.change({\r\n                matchCase: this.caseSensitive.checked\r\n            }, false);\r\n        }));\r\n        this.wholeWords = this._register(new WholeWordsCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            isChecked: this._state.wholeWord,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.wholeWords.domNode);\r\n        this._register(this.wholeWords.onChange(() => {\r\n            this._state.change({\r\n                wholeWord: this.wholeWords.checked\r\n            }, false);\r\n        }));\r\n        this.regex = this._register(new RegexCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            isChecked: this._state.isRegex,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.regex.domNode);\r\n        this._register(this.regex.onChange(() => {\r\n            this._state.change({\r\n                isRegex: this.regex.checked\r\n            }, false);\r\n        }));\r\n        this._editor.addOverlayWidget(this);\r\n        this._register(this._state.onFindReplaceStateChange((e) => {\r\n            let somethingChanged = false;\r\n            if (e.isRegex) {\r\n                this.regex.checked = this._state.isRegex;\r\n                somethingChanged = true;\r\n            }\r\n            if (e.wholeWord) {\r\n                this.wholeWords.checked = this._state.wholeWord;\r\n                somethingChanged = true;\r\n            }\r\n            if (e.matchCase) {\r\n                this.caseSensitive.checked = this._state.matchCase;\r\n                somethingChanged = true;\r\n            }\r\n            if (!this._state.isRevealed && somethingChanged) {\r\n                this._revealTemporarily();\r\n            }\r\n        }));\r\n        this._register(dom.addDisposableNonBubblingMouseOutListener(this._domNode, (e) => this._onMouseOut()));\r\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n    }\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindOptionsWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: 0 /* TOP_RIGHT_CORNER */\r\n        };\r\n    }\r\n    highlightFindOptions() {\r\n        this._revealTemporarily();\r\n    }\r\n    _revealTemporarily() {\r\n        this._show();\r\n        this._hideSoon.schedule();\r\n    }\r\n    _onMouseOut() {\r\n        this._hideSoon.schedule();\r\n    }\r\n    _onMouseOver() {\r\n        this._hideSoon.cancel();\r\n    }\r\n    _show() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        this._domNode.style.display = 'block';\r\n    }\r\n    _hide() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        this._domNode.style.display = 'none';\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\r\n        };\r\n        this.caseSensitive.style(inputStyles);\r\n        this.wholeWords.style(inputStyles);\r\n        this.regex.style(inputStyles);\r\n    }\r\n}\r\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\r\nregisterThemingParticipant((theme, collector) => {\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    if (widgetBackground) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);\r\n    }\r\n    const widgetForeground = theme.getColor(editorWidgetForeground);\r\n    if (widgetForeground) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);\r\n    }\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MATCHES_LIMIT } from './findModel.js';\r\nfunction effectiveOptionValue(override, value) {\r\n    if (override === 1 /* True */) {\r\n        return true;\r\n    }\r\n    if (override === 2 /* False */) {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\nexport class FindReplaceState extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onFindReplaceStateChange = this._register(new Emitter());\r\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\r\n        this._searchString = '';\r\n        this._replaceString = '';\r\n        this._isRevealed = false;\r\n        this._isReplaceRevealed = false;\r\n        this._isRegex = false;\r\n        this._isRegexOverride = 0 /* NotSet */;\r\n        this._wholeWord = false;\r\n        this._wholeWordOverride = 0 /* NotSet */;\r\n        this._matchCase = false;\r\n        this._matchCaseOverride = 0 /* NotSet */;\r\n        this._preserveCase = false;\r\n        this._preserveCaseOverride = 0 /* NotSet */;\r\n        this._searchScope = null;\r\n        this._matchesPosition = 0;\r\n        this._matchesCount = 0;\r\n        this._currentMatch = null;\r\n        this._loop = true;\r\n    }\r\n    get searchString() { return this._searchString; }\r\n    get replaceString() { return this._replaceString; }\r\n    get isRevealed() { return this._isRevealed; }\r\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\r\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\r\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\r\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\r\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\r\n    get actualIsRegex() { return this._isRegex; }\r\n    get actualWholeWord() { return this._wholeWord; }\r\n    get actualMatchCase() { return this._matchCase; }\r\n    get actualPreserveCase() { return this._preserveCase; }\r\n    get searchScope() { return this._searchScope; }\r\n    get matchesPosition() { return this._matchesPosition; }\r\n    get matchesCount() { return this._matchesCount; }\r\n    get currentMatch() { return this._currentMatch; }\r\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\r\n        let changeEvent = {\r\n            moveCursor: false,\r\n            updateHistory: false,\r\n            searchString: false,\r\n            replaceString: false,\r\n            isRevealed: false,\r\n            isReplaceRevealed: false,\r\n            isRegex: false,\r\n            wholeWord: false,\r\n            matchCase: false,\r\n            preserveCase: false,\r\n            searchScope: false,\r\n            matchesPosition: false,\r\n            matchesCount: false,\r\n            currentMatch: false,\r\n            loop: false\r\n        };\r\n        let somethingChanged = false;\r\n        if (matchesCount === 0) {\r\n            matchesPosition = 0;\r\n        }\r\n        if (matchesPosition > matchesCount) {\r\n            matchesPosition = matchesCount;\r\n        }\r\n        if (this._matchesPosition !== matchesPosition) {\r\n            this._matchesPosition = matchesPosition;\r\n            changeEvent.matchesPosition = true;\r\n            somethingChanged = true;\r\n        }\r\n        if (this._matchesCount !== matchesCount) {\r\n            this._matchesCount = matchesCount;\r\n            changeEvent.matchesCount = true;\r\n            somethingChanged = true;\r\n        }\r\n        if (typeof currentMatch !== 'undefined') {\r\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\r\n                this._currentMatch = currentMatch;\r\n                changeEvent.currentMatch = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (somethingChanged) {\r\n            this._onFindReplaceStateChange.fire(changeEvent);\r\n        }\r\n    }\r\n    change(newState, moveCursor, updateHistory = true) {\r\n        var _a;\r\n        let changeEvent = {\r\n            moveCursor: moveCursor,\r\n            updateHistory: updateHistory,\r\n            searchString: false,\r\n            replaceString: false,\r\n            isRevealed: false,\r\n            isReplaceRevealed: false,\r\n            isRegex: false,\r\n            wholeWord: false,\r\n            matchCase: false,\r\n            preserveCase: false,\r\n            searchScope: false,\r\n            matchesPosition: false,\r\n            matchesCount: false,\r\n            currentMatch: false,\r\n            loop: false\r\n        };\r\n        let somethingChanged = false;\r\n        const oldEffectiveIsRegex = this.isRegex;\r\n        const oldEffectiveWholeWords = this.wholeWord;\r\n        const oldEffectiveMatchCase = this.matchCase;\r\n        const oldEffectivePreserveCase = this.preserveCase;\r\n        if (typeof newState.searchString !== 'undefined') {\r\n            if (this._searchString !== newState.searchString) {\r\n                this._searchString = newState.searchString;\r\n                changeEvent.searchString = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.replaceString !== 'undefined') {\r\n            if (this._replaceString !== newState.replaceString) {\r\n                this._replaceString = newState.replaceString;\r\n                changeEvent.replaceString = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isRevealed !== 'undefined') {\r\n            if (this._isRevealed !== newState.isRevealed) {\r\n                this._isRevealed = newState.isRevealed;\r\n                changeEvent.isRevealed = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\r\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\r\n                this._isReplaceRevealed = newState.isReplaceRevealed;\r\n                changeEvent.isReplaceRevealed = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isRegex !== 'undefined') {\r\n            this._isRegex = newState.isRegex;\r\n        }\r\n        if (typeof newState.wholeWord !== 'undefined') {\r\n            this._wholeWord = newState.wholeWord;\r\n        }\r\n        if (typeof newState.matchCase !== 'undefined') {\r\n            this._matchCase = newState.matchCase;\r\n        }\r\n        if (typeof newState.preserveCase !== 'undefined') {\r\n            this._preserveCase = newState.preserveCase;\r\n        }\r\n        if (typeof newState.searchScope !== 'undefined') {\r\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\r\n                var _a;\r\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\r\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\r\n                });\r\n            }))) {\r\n                this._searchScope = newState.searchScope;\r\n                changeEvent.searchScope = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.loop !== 'undefined') {\r\n            if (this._loop !== newState.loop) {\r\n                this._loop = newState.loop;\r\n                changeEvent.loop = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\r\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* NotSet */);\r\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* NotSet */);\r\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* NotSet */);\r\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* NotSet */);\r\n        if (oldEffectiveIsRegex !== this.isRegex) {\r\n            somethingChanged = true;\r\n            changeEvent.isRegex = true;\r\n        }\r\n        if (oldEffectiveWholeWords !== this.wholeWord) {\r\n            somethingChanged = true;\r\n            changeEvent.wholeWord = true;\r\n        }\r\n        if (oldEffectiveMatchCase !== this.matchCase) {\r\n            somethingChanged = true;\r\n            changeEvent.matchCase = true;\r\n        }\r\n        if (oldEffectivePreserveCase !== this.preserveCase) {\r\n            somethingChanged = true;\r\n            changeEvent.preserveCase = true;\r\n        }\r\n        if (somethingChanged) {\r\n            this._onFindReplaceStateChange.fire(changeEvent);\r\n        }\r\n    }\r\n    canNavigateBack() {\r\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\r\n    }\r\n    canNavigateForward() {\r\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\r\n    }\r\n    canNavigateInLoop() {\r\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from './findInputCheckboxes.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nexport class FindInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.imeSessionInProgress = false;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this.onMouseDown = this._onMouseDown.event;\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onCaseSensitiveKeyDown = this._register(new Emitter());\r\n        this.onCaseSensitiveKeyDown = this._onCaseSensitiveKeyDown.event;\r\n        this._onRegexKeyDown = this._register(new Emitter());\r\n        this.onRegexKeyDown = this._onRegexKeyDown.event;\r\n        this._lastHighlightFindOptions = 0;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendCaseSensitiveLabel = options.appendCaseSensitiveLabel || '';\r\n        const appendWholeWordsLabel = options.appendWholeWordsLabel || '';\r\n        const appendRegexLabel = options.appendRegexLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            placeholder: this.placeholder || '',\r\n            ariaLabel: this.label || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.regex = this._register(new RegexCheckbox({\r\n            appendTitle: appendRegexLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.regex.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.regex.onKeyDown(e => {\r\n            this._onRegexKeyDown.fire(e);\r\n        }));\r\n        this.wholeWords = this._register(new WholeWordsCheckbox({\r\n            appendTitle: appendWholeWordsLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.wholeWords.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\r\n            appendTitle: appendCaseSensitiveLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.caseSensitive.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.caseSensitive.onKeyDown(e => {\r\n            this._onCaseSensitiveKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.inputBox.paddingRight = this.caseSensitive.width() + this.wholeWords.width() + this.regex.width();\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.caseSensitive.domNode, this.wholeWords.domNode, this.regex.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.caseSensitive.domNode);\r\n        controls.appendChild(this.wholeWords.domNode);\r\n        controls.appendChild(this.regex.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionstart', (e) => {\r\n            this.imeSessionInProgress = true;\r\n        }));\r\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionend', (e) => {\r\n            this.imeSessionInProgress = false;\r\n            this._onInput.fire();\r\n        }));\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.regex.enable();\r\n        this.wholeWords.enable();\r\n        this.caseSensitive.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.regex.disable();\r\n        this.wholeWords.disable();\r\n        this.caseSensitive.disable();\r\n    }\r\n    setFocusInputOnOptionClick(value) {\r\n        this.fixFocusOnOptionClickEnabled = value;\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.inputBox.value;\r\n    }\r\n    setValue(value) {\r\n        if (this.inputBox.value !== value) {\r\n            this.inputBox.value = value;\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.regex.style(checkBoxStyles);\r\n            this.wholeWords.style(checkBoxStyles);\r\n            this.caseSensitive.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getCaseSensitive() {\r\n        return this.caseSensitive.checked;\r\n    }\r\n    setCaseSensitive(value) {\r\n        this.caseSensitive.checked = value;\r\n    }\r\n    getWholeWords() {\r\n        return this.wholeWords.checked;\r\n    }\r\n    setWholeWords(value) {\r\n        this.wholeWords.checked = value;\r\n    }\r\n    getRegex() {\r\n        return this.regex.checked;\r\n    }\r\n    setRegex(value) {\r\n        this.regex.checked = value;\r\n        this.validate();\r\n    }\r\n    focusOnCaseSensitive() {\r\n        this.caseSensitive.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this.domNode.classList.remove('highlight-' + (this._lastHighlightFindOptions));\r\n        this._lastHighlightFindOptions = 1 - this._lastHighlightFindOptions;\r\n        this.domNode.classList.add('highlight-' + (this._lastHighlightFindOptions));\r\n    }\r\n    validate() {\r\n        this.inputBox.validate();\r\n    }\r\n    clearMessage() {\r\n        this.inputBox.hideMessage();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\r\nexport class PreserveCaseCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            // TODO: does this need its own icon?\r\n            icon: Codicon.preserveCase,\r\n            title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class ReplaceInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.cachedOptionsWidth = 0;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onPreserveCaseKeyDown = this._register(new Emitter());\r\n        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            ariaLabel: this.label || '',\r\n            placeholder: this.placeholder || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.preserveCase = this._register(new PreserveCaseCheckbox({\r\n            appendTitle: appendPreserveCaseLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n        }));\r\n        this._register(this.preserveCase.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.preserveCase.onKeyDown(e => {\r\n            this._onPreserveCaseKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.cachedOptionsWidth = this.preserveCase.width();\r\n        }\r\n        else {\r\n            this.cachedOptionsWidth = 0;\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.preserveCase.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.preserveCase.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.preserveCase.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.preserveCase.disable();\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.preserveCase.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getPreserveCase() {\r\n        return this.preserveCase.checked;\r\n    }\r\n    setPreserveCase(value) {\r\n        this.preserveCase.checked = value;\r\n    }\r\n    focusOnPreserve() {\r\n        this.preserveCase.focus();\r\n    }\r\n    validate() {\r\n        if (this.inputBox) {\r\n            this.inputBox.validate();\r\n        }\r\n    }\r\n    set width(newWidth) {\r\n        this.inputBox.paddingRight = this.cachedOptionsWidth;\r\n        this.inputBox.width = newWidth;\r\n        this.domNode.style.width = newWidth + 'px';\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { FindInput } from '../../base/browser/ui/findinput/findInput.js';\r\nimport { ReplaceInput } from '../../base/browser/ui/findinput/replaceInput.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../contextkey/common/contextkey.js';\r\nimport { KeybindingsRegistry } from '../keybinding/common/keybindingsRegistry.js';\r\nexport const HistoryNavigationWidgetContext = 'historyNavigationWidget';\r\nconst HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';\r\nconst HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';\r\nfunction bindContextScopedWidget(contextKeyService, widget, contextKey) {\r\n    new RawContextKey(contextKey, widget).bindTo(contextKeyService);\r\n}\r\nfunction createWidgetScopedContextKeyService(contextKeyService, widget) {\r\n    return contextKeyService.createScoped(widget.target);\r\n}\r\nfunction getContextScopedWidget(contextKeyService, contextKey) {\r\n    return contextKeyService.getContext(document.activeElement).getValue(contextKey);\r\n}\r\nexport function createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, widget) {\r\n    const scopedContextKeyService = createWidgetScopedContextKeyService(contextKeyService, widget);\r\n    bindContextScopedWidget(scopedContextKeyService, widget, HistoryNavigationWidgetContext);\r\n    const historyNavigationForwardsEnablement = new RawContextKey(HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);\r\n    const historyNavigationBackwardsEnablement = new RawContextKey(HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);\r\n    return {\r\n        scopedContextKeyService,\r\n        historyNavigationForwardsEnablement,\r\n        historyNavigationBackwardsEnablement,\r\n    };\r\n}\r\nlet ContextScopedFindInput = class ContextScopedFindInput extends FindInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showFindOptions = false) {\r\n        super(container, contextViewProvider, showFindOptions, options);\r\n        this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: this.inputBox.element, historyNavigator: this.inputBox }).scopedContextKeyService);\r\n    }\r\n};\r\nContextScopedFindInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedFindInput);\r\nexport { ContextScopedFindInput };\r\nlet ContextScopedReplaceInput = class ContextScopedReplaceInput extends ReplaceInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false) {\r\n        super(container, contextViewProvider, showReplaceOptions, options);\r\n        this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: this.inputBox.element, historyNavigator: this.inputBox }).scopedContextKeyService);\r\n    }\r\n};\r\nContextScopedReplaceInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedReplaceInput);\r\nexport { ContextScopedReplaceInput };\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showPrevious',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext), ContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext, true)),\r\n    primary: 16 /* UpArrow */,\r\n    secondary: [512 /* Alt */ | 16 /* UpArrow */],\r\n    handler: (accessor) => {\r\n        const widget = getContextScopedWidget(accessor.get(IContextKeyService), HistoryNavigationWidgetContext);\r\n        if (widget) {\r\n            const historyInputBox = widget.historyNavigator;\r\n            historyInputBox.showPreviousValue();\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showNext',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext), ContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true)),\r\n    primary: 18 /* DownArrow */,\r\n    secondary: [512 /* Alt */ | 18 /* DownArrow */],\r\n    handler: (accessor) => {\r\n        const widget = getContextScopedWidget(accessor.get(IContextKeyService), HistoryNavigationWidgetContext);\r\n        if (widget) {\r\n            const historyInputBox = widget.historyNavigator;\r\n            historyInputBox.showNextValue();\r\n        }\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './findWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { alert as alertFn } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Checkbox } from '../../../base/browser/ui/checkbox/checkbox.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\r\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetResizeBorder, errorForeground, inputActiveOptionBorder, inputActiveOptionBackground, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, widgetShadow, editorWidgetForeground, focusBorder, toolbarHoverBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../platform/browser/contextScopedHistoryWidget.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { registerIcon, widgetClose } from '../../../platform/theme/common/iconRegistry.js';\r\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\r\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\r\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\r\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\r\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\r\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\r\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\r\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\r\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\r\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\r\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\r\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\r\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\r\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\r\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\r\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\r\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\r\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\r\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\r\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\r\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\r\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\r\nconst PART_WIDTH = 275;\r\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\r\nlet MAX_MATCHES_COUNT_WIDTH = 69;\r\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\r\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\r\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\r\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\r\nexport class FindWidgetViewZone {\r\n    constructor(afterLineNumber) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\r\n        this.suppressMouseDown = false;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.className = 'dock-find-viewzone';\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nexport class FindWidget extends Widget {\r\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\r\n        super();\r\n        this._cachedHeight = null;\r\n        this._revealTimeouts = [];\r\n        this._codeEditor = codeEditor;\r\n        this._controller = controller;\r\n        this._state = state;\r\n        this._contextViewProvider = contextViewProvider;\r\n        this._keybindingService = keybindingService;\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._notificationService = notificationService;\r\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\r\n        this._isVisible = false;\r\n        this._isReplaceVisible = false;\r\n        this._ignoreChangeEvent = false;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._buildDomNode();\r\n        this._updateButtons();\r\n        this._tryUpdateWidgetWidth();\r\n        this._findInput.inputBox.layout();\r\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(80 /* readOnly */)) {\r\n                if (this._codeEditor.getOption(80 /* readOnly */)) {\r\n                    // Hide replace part if editor becomes read only\r\n                    this._state.change({ isReplaceRevealed: false }, false);\r\n                }\r\n                this._updateButtons();\r\n            }\r\n            if (e.hasChanged(130 /* layoutInfo */)) {\r\n                this._tryUpdateWidgetWidth();\r\n            }\r\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\r\n                this.updateAccessibilitySupport();\r\n            }\r\n            if (e.hasChanged(34 /* find */)) {\r\n                const addExtraSpaceOnTop = this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop;\r\n                if (addExtraSpaceOnTop && !this._viewZone) {\r\n                    this._viewZone = new FindWidgetViewZone(0);\r\n                    this._showViewZone();\r\n                }\r\n                if (!addExtraSpaceOnTop && this._viewZone) {\r\n                    this._removeViewZone();\r\n                }\r\n            }\r\n        }));\r\n        this.updateAccessibilitySupport();\r\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\r\n            if (this._isVisible) {\r\n                this._updateToggleSelectionFindButton();\r\n            }\r\n        }));\r\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this._isVisible) {\r\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\r\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\r\n                    this._state.change({ searchString: globalBufferTerm }, false);\r\n                    this._findInput.select();\r\n                }\r\n            }\r\n        })));\r\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\r\n        this._register(this._findFocusTracker.onDidFocus(() => {\r\n            this._findInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._findFocusTracker.onDidBlur(() => {\r\n            this._findInputFocused.set(false);\r\n        }));\r\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\r\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\r\n            this._replaceInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\r\n            this._replaceInputFocused.set(false);\r\n        }));\r\n        this._codeEditor.addOverlayWidget(this);\r\n        if (this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop) {\r\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\r\n        }\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._register(this._codeEditor.onDidChangeModel(() => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            this._viewZoneId = undefined;\r\n        }));\r\n        this._register(this._codeEditor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged) {\r\n                this._layoutViewZone();\r\n                return;\r\n            }\r\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\r\n            setTimeout(() => {\r\n                this._layoutViewZone();\r\n            }, 0);\r\n        }));\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                preference: 0 /* TOP_RIGHT_CORNER */\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    // ----- React to state changes\r\n    _onStateChanged(e) {\r\n        if (e.searchString) {\r\n            try {\r\n                this._ignoreChangeEvent = true;\r\n                this._findInput.setValue(this._state.searchString);\r\n            }\r\n            finally {\r\n                this._ignoreChangeEvent = false;\r\n            }\r\n            this._updateButtons();\r\n        }\r\n        if (e.replaceString) {\r\n            this._replaceInput.inputBox.value = this._state.replaceString;\r\n        }\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._reveal();\r\n            }\r\n            else {\r\n                this._hide(true);\r\n            }\r\n        }\r\n        if (e.isReplaceRevealed) {\r\n            if (this._state.isReplaceRevealed) {\r\n                if (!this._codeEditor.getOption(80 /* readOnly */) && !this._isReplaceVisible) {\r\n                    this._isReplaceVisible = true;\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._updateButtons();\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n            }\r\n            else {\r\n                if (this._isReplaceVisible) {\r\n                    this._isReplaceVisible = false;\r\n                    this._updateButtons();\r\n                }\r\n            }\r\n        }\r\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }\r\n        if (e.isRegex) {\r\n            this._findInput.setRegex(this._state.isRegex);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._findInput.setWholeWords(this._state.wholeWord);\r\n        }\r\n        if (e.matchCase) {\r\n            this._findInput.setCaseSensitive(this._state.matchCase);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\r\n        }\r\n        if (e.searchScope) {\r\n            if (this._state.searchScope) {\r\n                this._toggleSelectionFind.checked = true;\r\n            }\r\n            else {\r\n                this._toggleSelectionFind.checked = false;\r\n            }\r\n            this._updateToggleSelectionFindButton();\r\n        }\r\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\r\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\r\n            this._domNode.classList.toggle('no-results', showRedOutline);\r\n            this._updateMatchesCount();\r\n            this._updateButtons();\r\n        }\r\n        if (e.searchString || e.currentMatch) {\r\n            this._layoutViewZone();\r\n        }\r\n        if (e.updateHistory) {\r\n            this._delayedUpdateHistory();\r\n        }\r\n        if (e.loop) {\r\n            this._updateButtons();\r\n        }\r\n    }\r\n    _delayedUpdateHistory() {\r\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\r\n    }\r\n    _updateHistory() {\r\n        if (this._state.searchString) {\r\n            this._findInput.inputBox.addToHistory();\r\n        }\r\n        if (this._state.replaceString) {\r\n            this._replaceInput.inputBox.addToHistory();\r\n        }\r\n    }\r\n    _updateMatchesCount() {\r\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\r\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\r\n        }\r\n        else {\r\n            this._matchesCount.title = '';\r\n        }\r\n        // remove previous content\r\n        if (this._matchesCount.firstChild) {\r\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\r\n        }\r\n        let label;\r\n        if (this._state.matchesCount > 0) {\r\n            let matchesCount = String(this._state.matchesCount);\r\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n                matchesCount += '+';\r\n            }\r\n            let matchesPosition = String(this._state.matchesPosition);\r\n            if (matchesPosition === '0') {\r\n                matchesPosition = '?';\r\n            }\r\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\r\n        }\r\n        else {\r\n            label = NLS_NO_RESULTS;\r\n        }\r\n        this._matchesCount.appendChild(document.createTextNode(label));\r\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\r\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\r\n    }\r\n    // ----- actions\r\n    _getAriaLabel(label, currentMatch, searchString) {\r\n        if (label === NLS_NO_RESULTS) {\r\n            return searchString === ''\r\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\r\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\r\n        }\r\n        if (currentMatch) {\r\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\r\n            const model = this._codeEditor.getModel();\r\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\r\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\r\n                return `${lineContent}, ${ariaLabel}`;\r\n            }\r\n            return ariaLabel;\r\n        }\r\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\r\n    }\r\n    /**\r\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\r\n     * If 'selection find' is OFF we enable the button only if there is a selection.\r\n     */\r\n    _updateToggleSelectionFindButton() {\r\n        let selection = this._codeEditor.getSelection();\r\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\r\n        let isChecked = this._toggleSelectionFind.checked;\r\n        if (this._isVisible && (isChecked || isSelection)) {\r\n            this._toggleSelectionFind.enable();\r\n        }\r\n        else {\r\n            this._toggleSelectionFind.disable();\r\n        }\r\n    }\r\n    _updateButtons() {\r\n        this._findInput.setEnabled(this._isVisible);\r\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\r\n        this._updateToggleSelectionFindButton();\r\n        this._closeBtn.setEnabled(this._isVisible);\r\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\r\n        let matchesCount = this._state.matchesCount ? true : false;\r\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\r\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\r\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        let canReplace = !this._codeEditor.getOption(80 /* readOnly */);\r\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\r\n    }\r\n    _reveal() {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (!this._isVisible) {\r\n            this._isVisible = true;\r\n            const selection = this._codeEditor.getSelection();\r\n            switch (this._codeEditor.getOption(34 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    this._toggleSelectionFind.checked = true;\r\n                    break;\r\n                case 'never':\r\n                    this._toggleSelectionFind.checked = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this._tryUpdateWidgetWidth();\r\n            this._updateButtons();\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._domNode.classList.add('visible');\r\n                this._domNode.setAttribute('aria-hidden', 'false');\r\n            }, 0));\r\n            // validate query again as it's being dismissed when we hide the find widget.\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._findInput.validate();\r\n            }, 200));\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            let adjustEditorScrollTop = true;\r\n            if (this._codeEditor.getOption(34 /* find */).seedSearchStringFromSelection && selection) {\r\n                const domNode = this._codeEditor.getDomNode();\r\n                if (domNode) {\r\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\r\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\r\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\r\n                    const startTop = startCoords ? startCoords.top : 0;\r\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\r\n                        if (selection.endLineNumber > selection.startLineNumber) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\r\n                        if (startLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\r\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\r\n                        if (endLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._showViewZone(adjustEditorScrollTop);\r\n        }\r\n    }\r\n    _hide(focusTheEditor) {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (this._isVisible) {\r\n            this._isVisible = false;\r\n            this._updateButtons();\r\n            this._domNode.classList.remove('visible');\r\n            this._domNode.setAttribute('aria-hidden', 'true');\r\n            this._findInput.clearMessage();\r\n            if (focusTheEditor) {\r\n                this._codeEditor.focus();\r\n            }\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            this._removeViewZone();\r\n        }\r\n    }\r\n    _layoutViewZone(targetScrollTop) {\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            this._removeViewZone();\r\n            return;\r\n        }\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const viewZone = this._viewZone;\r\n        if (this._viewZoneId !== undefined || !viewZone) {\r\n            return;\r\n        }\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            viewZone.heightInPx = this._getHeight();\r\n            this._viewZoneId = accessor.addZone(viewZone);\r\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\r\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\r\n        });\r\n    }\r\n    _showViewZone(adjustScroll = true) {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            return;\r\n        }\r\n        if (this._viewZone === undefined) {\r\n            this._viewZone = new FindWidgetViewZone(0);\r\n        }\r\n        const viewZone = this._viewZone;\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                // the view zone already exists, we need to update the height\r\n                const newHeight = this._getHeight();\r\n                if (newHeight === viewZone.heightInPx) {\r\n                    return;\r\n                }\r\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\r\n                viewZone.heightInPx = newHeight;\r\n                accessor.layoutZone(this._viewZoneId);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                let scrollAdjustment = this._getHeight();\r\n                // if the editor has top padding, factor that into the zone height\r\n                scrollAdjustment -= this._codeEditor.getOption(74 /* padding */).top;\r\n                if (scrollAdjustment <= 0) {\r\n                    return;\r\n                }\r\n                viewZone.heightInPx = scrollAdjustment;\r\n                this._viewZoneId = accessor.addZone(viewZone);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _removeViewZone() {\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                accessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n                if (this._viewZone) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\r\n                    this._viewZone = undefined;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputBackground: theme.getColor(inputBackground),\r\n            inputForeground: theme.getColor(inputForeground),\r\n            inputBorder: theme.getColor(inputBorder),\r\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\r\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\r\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\r\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\r\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\r\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\r\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\r\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\r\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\r\n        };\r\n        this._findInput.style(inputStyles);\r\n        this._replaceInput.style(inputStyles);\r\n        this._toggleSelectionFind.style(inputStyles);\r\n    }\r\n    _tryUpdateWidgetWidth() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        if (!dom.isInDOM(this._domNode)) {\r\n            // the widget is not in the DOM\r\n            return;\r\n        }\r\n        const layoutInfo = this._codeEditor.getLayoutInfo();\r\n        const editorContentWidth = layoutInfo.contentWidth;\r\n        if (editorContentWidth <= 0) {\r\n            // for example, diff view original editor\r\n            this._domNode.classList.add('hiddenEditor');\r\n            return;\r\n        }\r\n        else if (this._domNode.classList.contains('hiddenEditor')) {\r\n            this._domNode.classList.remove('hiddenEditor');\r\n        }\r\n        const editorWidth = layoutInfo.width;\r\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\r\n        let collapsedFindWidget = false;\r\n        let reducedFindWidget = false;\r\n        let narrowFindWidget = false;\r\n        if (this._resized) {\r\n            let widgetWidth = dom.getTotalWidth(this._domNode);\r\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\r\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\r\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                return;\r\n            }\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\r\n            reducedFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\r\n            narrowFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\r\n            collapsedFindWidget = true;\r\n        }\r\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\r\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\r\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\r\n        if (!narrowFindWidget && !collapsedFindWidget) {\r\n            // the minimal left offset of findwidget is 15px.\r\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n        }\r\n        if (this._resized) {\r\n            this._findInput.inputBox.layout();\r\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\r\n            if (findInputWidth > 0) {\r\n                this._replaceInput.width = findInputWidth;\r\n            }\r\n        }\r\n        else if (this._isReplaceVisible) {\r\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n        }\r\n    }\r\n    _getHeight() {\r\n        let totalheight = 0;\r\n        // find input margin top\r\n        totalheight += 4;\r\n        // find input height\r\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\r\n        if (this._isReplaceVisible) {\r\n            // replace input margin\r\n            totalheight += 4;\r\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\r\n        }\r\n        // margin bottom\r\n        totalheight += 4;\r\n        return totalheight;\r\n    }\r\n    _tryUpdateHeight() {\r\n        const totalHeight = this._getHeight();\r\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\r\n            return false;\r\n        }\r\n        this._cachedHeight = totalHeight;\r\n        this._domNode.style.height = `${totalHeight}px`;\r\n        return true;\r\n    }\r\n    // ----- Public\r\n    focusFindInput() {\r\n        this._findInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._findInput.focus();\r\n    }\r\n    focusReplaceInput() {\r\n        this._replaceInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._replaceInput.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this._findInput.highlightFindOptions();\r\n    }\r\n    _updateSearchScope() {\r\n        if (!this._codeEditor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._toggleSelectionFind.checked) {\r\n            let selections = this._codeEditor.getSelections();\r\n            selections.map(selection => {\r\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                }\r\n                const currentMatch = this._state.currentMatch;\r\n                if (selection.startLineNumber !== selection.endLineNumber) {\r\n                    if (!Range.equalsRange(selection, currentMatch)) {\r\n                        return selection;\r\n                    }\r\n                }\r\n                return null;\r\n            }).filter(element => !!element);\r\n            if (selections.length) {\r\n                this._state.change({ searchScope: selections }, true);\r\n            }\r\n        }\r\n    }\r\n    _onFindInputMouseDown(e) {\r\n        // on linux, middle key does pasting.\r\n        if (e.middleButton) {\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n    _onFindInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            this._findInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.focus();\r\n            }\r\n            else {\r\n                this._findInput.focusOnCaseSensitive();\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n    }\r\n    _onReplaceInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\r\n                // this is the first time when users press Ctrl + Enter to replace all\r\n                this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\r\n                this._ctrlEnterReplaceAllWarningPrompted = true;\r\n                this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\r\n            }\r\n            this._replaceInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            this._findInput.focusOnCaseSensitive();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n            this._findInput.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n    }\r\n    // ----- sash\r\n    getVerticalSashLeft(_sash) {\r\n        return 0;\r\n    }\r\n    // ----- initialization\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    _buildDomNode() {\r\n        const flexibleHeight = true;\r\n        const flexibleWidth = true;\r\n        // Find input\r\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\r\n            width: FIND_INPUT_AREA_WIDTH,\r\n            label: NLS_FIND_INPUT_LABEL,\r\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\r\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            validation: (value) => {\r\n                if (value.length === 0 || !this._findInput.getRegex()) {\r\n                    return null;\r\n                }\r\n                try {\r\n                    // use `g` and `u` which are also used by the TextModel search\r\n                    new RegExp(value, 'gu');\r\n                    return null;\r\n                }\r\n                catch (e) {\r\n                    return { content: e.message };\r\n                }\r\n            },\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._findInput.setRegex(!!this._state.isRegex);\r\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\r\n        this._findInput.setWholeWords(!!this._state.wholeWord);\r\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\r\n        this._register(this._findInput.inputBox.onDidChange(() => {\r\n            if (this._ignoreChangeEvent) {\r\n                return;\r\n            }\r\n            this._state.change({ searchString: this._findInput.getValue() }, true);\r\n        }));\r\n        this._register(this._findInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                isRegex: this._findInput.getRegex(),\r\n                wholeWord: this._findInput.getWholeWords(),\r\n                matchCase: this._findInput.getCaseSensitive()\r\n            }, true);\r\n        }));\r\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\r\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.onRegexKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focusOnPreserve();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        if (platform.isLinux) {\r\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\r\n        }\r\n        this._matchesCount = document.createElement('div');\r\n        this._matchesCount.className = 'matchesCount';\r\n        this._updateMatchesCount();\r\n        // Previous button\r\n        this._prevBtn = this._register(new SimpleButton({\r\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\r\n            icon: findPreviousMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        // Next button\r\n        this._nextBtn = this._register(new SimpleButton({\r\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\r\n            icon: findNextMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        let findPart = document.createElement('div');\r\n        findPart.className = 'find-part';\r\n        findPart.appendChild(this._findInput.domNode);\r\n        const actionsContainer = document.createElement('div');\r\n        actionsContainer.className = 'find-actions';\r\n        findPart.appendChild(actionsContainer);\r\n        actionsContainer.appendChild(this._matchesCount);\r\n        actionsContainer.appendChild(this._prevBtn.domNode);\r\n        actionsContainer.appendChild(this._nextBtn.domNode);\r\n        // Toggle selection button\r\n        this._toggleSelectionFind = this._register(new Checkbox({\r\n            icon: findSelectionIcon,\r\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\r\n            isChecked: false\r\n        }));\r\n        this._register(this._toggleSelectionFind.onChange(() => {\r\n            if (this._toggleSelectionFind.checked) {\r\n                if (this._codeEditor.hasModel()) {\r\n                    let selections = this._codeEditor.getSelections();\r\n                    selections.map(selection => {\r\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                        }\r\n                        if (!selection.isEmpty()) {\r\n                            return selection;\r\n                        }\r\n                        return null;\r\n                    }).filter(element => !!element);\r\n                    if (selections.length) {\r\n                        this._state.change({ searchScope: selections }, true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._state.change({ searchScope: null }, true);\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\r\n        // Close button\r\n        this._closeBtn = this._register(new SimpleButton({\r\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\r\n            icon: widgetClose,\r\n            onTrigger: () => {\r\n                this._state.change({ isRevealed: false, searchScope: null }, false);\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(2 /* Tab */)) {\r\n                    if (this._isReplaceVisible) {\r\n                        if (this._replaceBtn.isEnabled()) {\r\n                            this._replaceBtn.focus();\r\n                        }\r\n                        else {\r\n                            this._codeEditor.focus();\r\n                        }\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._closeBtn.domNode);\r\n        // Replace input\r\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\r\n            label: NLS_REPLACE_INPUT_LABEL,\r\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\r\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\r\n            history: [],\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\r\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\r\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\r\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\r\n        }));\r\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._register(this._replaceInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                preserveCase: this._replaceInput.getPreserveCase()\r\n            }, true);\r\n        }));\r\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._prevBtn.isEnabled()) {\r\n                    this._prevBtn.focus();\r\n                }\r\n                else if (this._nextBtn.isEnabled()) {\r\n                    this._nextBtn.focus();\r\n                }\r\n                else if (this._toggleSelectionFind.enabled) {\r\n                    this._toggleSelectionFind.focus();\r\n                }\r\n                else if (this._closeBtn.isEnabled()) {\r\n                    this._closeBtn.focus();\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n        // Replace one button\r\n        this._replaceBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\r\n            icon: findReplaceIcon,\r\n            onTrigger: () => {\r\n                this._controller.replace();\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                    this._closeBtn.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        // Replace all button\r\n        this._replaceAllBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\r\n            icon: findReplaceAllIcon,\r\n            onTrigger: () => {\r\n                this._controller.replaceAll();\r\n            }\r\n        }));\r\n        let replacePart = document.createElement('div');\r\n        replacePart.className = 'replace-part';\r\n        replacePart.appendChild(this._replaceInput.domNode);\r\n        const replaceActionsContainer = document.createElement('div');\r\n        replaceActionsContainer.className = 'replace-actions';\r\n        replacePart.appendChild(replaceActionsContainer);\r\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\r\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\r\n        // Toggle replace button\r\n        this._toggleReplaceBtn = this._register(new SimpleButton({\r\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\r\n            className: 'codicon toggle left',\r\n            onTrigger: () => {\r\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        // Widget\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'editor-widget find-widget';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\r\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\r\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\r\n        this._domNode.appendChild(findPart);\r\n        this._domNode.appendChild(replacePart);\r\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\r\n        this._resized = false;\r\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\r\n        this._register(this._resizeSash.onDidStart(() => {\r\n            originalWidth = dom.getTotalWidth(this._domNode);\r\n        }));\r\n        this._register(this._resizeSash.onDidChange((evt) => {\r\n            this._resized = true;\r\n            let width = originalWidth + evt.startX - evt.currentX;\r\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // narrow down the find widget should be handled by CSS.\r\n                return;\r\n            }\r\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\r\n            if (width > maxWidth) {\r\n                return;\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n            this._tryUpdateHeight();\r\n        }));\r\n        this._register(this._resizeSash.onDidReset(() => {\r\n            // users double click on the sash\r\n            const currentWidth = dom.getTotalWidth(this._domNode);\r\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\r\n                return;\r\n            }\r\n            let width = FIND_WIDGET_INITIAL_WIDTH;\r\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\r\n                // 1. never resized before, double click should maximizes it\r\n                // 2. users resized it already but its width is the same as default\r\n                const layoutInfo = this._codeEditor.getLayoutInfo();\r\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\r\n                this._resized = true;\r\n            }\r\n            else {\r\n                /**\r\n                 * no op, the find widget should be shrinked to its default size.\r\n                 */\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n        }));\r\n    }\r\n    updateAccessibilitySupport() {\r\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\r\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\r\n    }\r\n}\r\nFindWidget.ID = 'editor.contrib.findWidget';\r\nexport class SimpleButton extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._opts = opts;\r\n        let className = 'button';\r\n        if (this._opts.className) {\r\n            className = className + ' ' + this._opts.className;\r\n        }\r\n        if (this._opts.icon) {\r\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\r\n        }\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.title = this._opts.label;\r\n        this._domNode.tabIndex = 0;\r\n        this._domNode.className = className;\r\n        this._domNode.setAttribute('role', 'button');\r\n        this._domNode.setAttribute('aria-label', this._opts.label);\r\n        this.onclick(this._domNode, (e) => {\r\n            this._opts.onTrigger();\r\n            e.preventDefault();\r\n        });\r\n        this.onkeydown(this._domNode, (e) => {\r\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\r\n                this._opts.onTrigger();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            if (this._opts.onKeyDown) {\r\n                this._opts.onKeyDown(e);\r\n            }\r\n        });\r\n    }\r\n    get domNode() {\r\n        return this._domNode;\r\n    }\r\n    isEnabled() {\r\n        return (this._domNode.tabIndex >= 0);\r\n    }\r\n    focus() {\r\n        this._domNode.focus();\r\n    }\r\n    setEnabled(enabled) {\r\n        this._domNode.classList.toggle('disabled', !enabled);\r\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\r\n        this._domNode.tabIndex = enabled ? 0 : -1;\r\n    }\r\n    setExpanded(expanded) {\r\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\r\n        if (expanded) {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n        }\r\n        else {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n        }\r\n    }\r\n}\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const addBackgroundColorRule = (selector, color) => {\r\n        if (color) {\r\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\r\n        }\r\n    };\r\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\r\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\r\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    addBackgroundColorRule('.find-widget', widgetBackground);\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\r\n    if (findMatchHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\r\n    if (findMatchBorder) {\r\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\r\n    }\r\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\r\n    if (findRangeHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\r\n    }\r\n    const error = theme.getColor(errorForeground);\r\n    if (error) {\r\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\r\n    }\r\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\r\n    if (resizeBorderBackground) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\r\n    }\r\n    else {\r\n        const border = theme.getColor(editorWidgetBorder);\r\n        if (border) {\r\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\r\n        }\r\n    }\r\n    // Action bars\r\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\r\n    if (toolbarHoverBackgroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\r\n    }\r\n    // This rule is used to override the outline color for synthetic-focus find input.\r\n    const focusOutline = theme.getColor(focusBorder);\r\n    if (focusOutline) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, MultiEditorAction, registerMultiEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, FIND_IDS, FindModelBoundToEditorModel, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding, CONTEXT_REPLACE_INPUT_FOCUSED } from './findModel.js';\r\nimport { FindOptionsWidget } from './findOptionsWidget.js';\r\nimport { FindReplaceState } from './findState.js';\r\nimport { FindWidget } from './findWidget.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nconst SEARCH_STRING_MAX_LENGTH = 524288;\r\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\r\n    if (!editor.hasModel()) {\r\n        return null;\r\n    }\r\n    const selection = editor.getSelection();\r\n    // if selection spans multiple lines, default search string to empty\r\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\r\n        || seedSearchStringFromSelection === 'multiple') {\r\n        if (selection.isEmpty()) {\r\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\r\n                return wordAtPosition.word;\r\n            }\r\n        }\r\n        else {\r\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\r\n                return editor.getModel().getValueInRange(selection);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nlet CommonFindController = class CommonFindController extends Disposable {\r\n    constructor(editor, contextKeyService, storageService, clipboardService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._clipboardService = clipboardService;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._state = this._register(new FindReplaceState());\r\n        this.loadQueryState();\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._model = null;\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            let shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\r\n            this.disposeModel();\r\n            this._state.change({\r\n                searchScope: null,\r\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\r\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\r\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\r\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\r\n            }, false);\r\n            if (shouldRestartFind) {\r\n                this._start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'none',\r\n                    seedSearchStringFromNonEmptySelection: false,\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: false,\r\n                    updateSearchScope: false,\r\n                    loop: this._editor.getOption(34 /* find */).loop\r\n                });\r\n            }\r\n        }));\r\n    }\r\n    get editor() {\r\n        return this._editor;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CommonFindController.ID);\r\n    }\r\n    dispose() {\r\n        this.disposeModel();\r\n        super.dispose();\r\n    }\r\n    disposeModel() {\r\n        if (this._model) {\r\n            this._model.dispose();\r\n            this._model = null;\r\n        }\r\n    }\r\n    _onStateChanged(e) {\r\n        this.saveQueryState(e);\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._findWidgetVisible.set(true);\r\n            }\r\n            else {\r\n                this._findWidgetVisible.reset();\r\n                this.disposeModel();\r\n            }\r\n        }\r\n        if (e.searchString) {\r\n            this.setGlobalBufferTerm(this._state.searchString);\r\n        }\r\n    }\r\n    saveQueryState(e) {\r\n        if (e.isRegex) {\r\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.matchCase) {\r\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n    }\r\n    loadQueryState() {\r\n        this._state.change({\r\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\r\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\r\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\r\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\r\n        }, false);\r\n    }\r\n    isFindInputFocused() {\r\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\r\n    }\r\n    getState() {\r\n        return this._state;\r\n    }\r\n    closeFindWidget() {\r\n        this._state.change({\r\n            isRevealed: false,\r\n            searchScope: null\r\n        }, false);\r\n        this._editor.focus();\r\n    }\r\n    toggleCaseSensitive() {\r\n        this._state.change({ matchCase: !this._state.matchCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleWholeWords() {\r\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleRegex() {\r\n        this._state.change({ isRegex: !this._state.isRegex }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    togglePreserveCase() {\r\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleSearchScope() {\r\n        if (this._state.searchScope) {\r\n            this._state.change({ searchScope: null }, true);\r\n        }\r\n        else {\r\n            if (this._editor.hasModel()) {\r\n                let selections = this._editor.getSelections();\r\n                selections.map(selection => {\r\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                    }\r\n                    if (!selection.isEmpty()) {\r\n                        return selection;\r\n                    }\r\n                    return null;\r\n                }).filter(element => !!element);\r\n                if (selections.length) {\r\n                    this._state.change({ searchScope: selections }, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setSearchString(searchString) {\r\n        if (this._state.isRegex) {\r\n            searchString = strings.escapeRegExpCharacters(searchString);\r\n        }\r\n        this._state.change({ searchString: searchString }, false);\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        // overwritten in subclass\r\n    }\r\n    _start(opts) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.disposeModel();\r\n            if (!this._editor.hasModel()) {\r\n                // cannot do anything with an editor that doesn't have a model...\r\n                return;\r\n            }\r\n            let stateChanges = {\r\n                isRevealed: true\r\n            };\r\n            if (opts.seedSearchStringFromSelection === 'single') {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\r\n                if (selectionSearchString) {\r\n                    if (this._state.isRegex) {\r\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\r\n                    }\r\n                    else {\r\n                        stateChanges.searchString = selectionSearchString;\r\n                    }\r\n                }\r\n            }\r\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\r\n                let selectionSearchString = yield this.getGlobalBufferTerm();\r\n                if (!this._editor.hasModel()) {\r\n                    // the editor has lost its model in the meantime\r\n                    return;\r\n                }\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            // Overwrite isReplaceRevealed\r\n            if (opts.forceRevealReplace) {\r\n                stateChanges.isReplaceRevealed = true;\r\n            }\r\n            else if (!this._findWidgetVisible.get()) {\r\n                stateChanges.isReplaceRevealed = false;\r\n            }\r\n            if (opts.updateSearchScope) {\r\n                let currentSelections = this._editor.getSelections();\r\n                if (currentSelections.some(selection => !selection.isEmpty())) {\r\n                    stateChanges.searchScope = currentSelections;\r\n                }\r\n            }\r\n            stateChanges.loop = opts.loop;\r\n            this._state.change(stateChanges, false);\r\n            if (!this._model) {\r\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\r\n            }\r\n        });\r\n    }\r\n    start(opts) {\r\n        return this._start(opts);\r\n    }\r\n    moveToNextMatch() {\r\n        if (this._model) {\r\n            this._model.moveToNextMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToPrevMatch() {\r\n        if (this._model) {\r\n            this._model.moveToPrevMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replace() {\r\n        if (this._model) {\r\n            this._model.replace();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replaceAll() {\r\n        if (this._model) {\r\n            this._model.replaceAll();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    selectAllMatches() {\r\n        if (this._model) {\r\n            this._model.selectAllMatches();\r\n            this._editor.focus();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getGlobalBufferTerm() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.getOption(34 /* find */).globalFindClipboard\r\n                && this._editor.hasModel()\r\n                && !this._editor.getModel().isTooLargeForSyncing()) {\r\n                return this._clipboardService.readFindText();\r\n            }\r\n            return '';\r\n        });\r\n    }\r\n    setGlobalBufferTerm(text) {\r\n        if (this._editor.getOption(34 /* find */).globalFindClipboard\r\n            && this._editor.hasModel()\r\n            && !this._editor.getModel().isTooLargeForSyncing()) {\r\n            // intentionally not awaited\r\n            this._clipboardService.writeFindText(text);\r\n        }\r\n    }\r\n};\r\nCommonFindController.ID = 'editor.contrib.findController';\r\nCommonFindController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IStorageService),\r\n    __param(3, IClipboardService)\r\n], CommonFindController);\r\nexport { CommonFindController };\r\nlet FindController = class FindController extends CommonFindController {\r\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\r\n        super(editor, _contextKeyService, _storageService, clipboardService);\r\n        this._contextViewService = _contextViewService;\r\n        this._keybindingService = _keybindingService;\r\n        this._themeService = _themeService;\r\n        this._notificationService = _notificationService;\r\n        this._widget = null;\r\n        this._findOptionsWidget = null;\r\n    }\r\n    _start(opts) {\r\n        const _super = Object.create(null, {\r\n            _start: { get: () => super._start }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._widget) {\r\n                this._createFindWidget();\r\n            }\r\n            const selection = this._editor.getSelection();\r\n            let updateSearchScope = false;\r\n            switch (this._editor.getOption(34 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    updateSearchScope = true;\r\n                    break;\r\n                case 'never':\r\n                    updateSearchScope = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    updateSearchScope = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            opts.updateSearchScope = updateSearchScope;\r\n            yield _super._start.call(this, opts);\r\n            if (this._widget) {\r\n                if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\r\n                    this._widget.focusReplaceInput();\r\n                }\r\n                else if (opts.shouldFocus === 1 /* FocusFindInput */) {\r\n                    this._widget.focusFindInput();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        if (!this._widget) {\r\n            this._createFindWidget();\r\n        }\r\n        if (this._state.isRevealed && !ignoreWhenVisible) {\r\n            this._widget.highlightFindOptions();\r\n        }\r\n        else {\r\n            this._findOptionsWidget.highlightFindOptions();\r\n        }\r\n    }\r\n    _createFindWidget() {\r\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\r\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\r\n    }\r\n};\r\nFindController = __decorate([\r\n    __param(1, IContextViewService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IThemeService),\r\n    __param(5, INotificationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IClipboardService)\r\n], FindController);\r\nexport { FindController };\r\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\r\n    id: FIND_IDS.StartFindAction,\r\n    label: nls.localize('startFindAction', \"Find\"),\r\n    alias: 'Find',\r\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\r\n    kbOpts: {\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 36 /* KEY_F */,\r\n        weight: 100 /* EditorContrib */\r\n    },\r\n    menuOpts: {\r\n        menuId: MenuId.MenubarEditMenu,\r\n        group: '3_find',\r\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\r\n        order: 1\r\n    }\r\n}));\r\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\r\n    const controller = CommonFindController.get(editor);\r\n    if (!controller) {\r\n        return false;\r\n    }\r\n    return controller.start({\r\n        forceRevealReplace: false,\r\n        seedSearchStringFromSelection: editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\r\n        seedSearchStringFromNonEmptySelection: editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection',\r\n        seedSearchStringFromGlobalClipboard: editor.getOption(34 /* find */).globalFindClipboard,\r\n        shouldFocus: 1 /* FocusFindInput */,\r\n        shouldAnimate: true,\r\n        updateSearchScope: false,\r\n        loop: editor.getOption(34 /* find */).loop\r\n    });\r\n});\r\nexport class StartFindWithSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.StartFindWithSelection,\r\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\r\n            alias: 'Find With Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 35 /* KEY_E */,\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'multiple',\r\n                    seedSearchStringFromNonEmptySelection: false,\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(34 /* find */).loop\r\n                });\r\n                controller.setGlobalBufferTerm(controller.getState().searchString);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class MatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller && !this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\r\n                    seedSearchStringFromNonEmptySelection: editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection',\r\n                    seedSearchStringFromGlobalClipboard: true,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(34 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextMatchFindAction,\r\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\r\n            alias: 'Find Next',\r\n            precondition: undefined,\r\n            kbOpts: [{\r\n                    kbExpr: EditorContextKeys.focus,\r\n                    primary: 61 /* F3 */,\r\n                    mac: { primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */, secondary: [61 /* F3 */] },\r\n                    weight: 100 /* EditorContrib */\r\n                }, {\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                    primary: 3 /* Enter */,\r\n                    weight: 100 /* EditorContrib */\r\n                }]\r\n        });\r\n    }\r\n    _run(controller) {\r\n        const result = controller.moveToNextMatch();\r\n        if (result) {\r\n            controller.editor.pushUndoStop();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class PreviousMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousMatchFindAction,\r\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\r\n            alias: 'Find Previous',\r\n            precondition: undefined,\r\n            kbOpts: [{\r\n                    kbExpr: EditorContextKeys.focus,\r\n                    primary: 1024 /* Shift */ | 61 /* F3 */,\r\n                    mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KEY_G */, secondary: [1024 /* Shift */ | 61 /* F3 */] },\r\n                    weight: 100 /* EditorContrib */\r\n                }, {\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                    primary: 1024 /* Shift */ | 3 /* Enter */,\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport class SelectionMatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (!controller) {\r\n                return;\r\n            }\r\n            const seedSearchStringFromNonEmptySelection = editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection';\r\n            let selectionSearchString = null;\r\n            if (editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never') {\r\n                selectionSearchString = getSelectionSearchString(editor, 'single', seedSearchStringFromNonEmptySelection);\r\n            }\r\n            if (selectionSearchString) {\r\n                controller.setSearchString(selectionSearchString);\r\n            }\r\n            if (!this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\r\n                    seedSearchStringFromNonEmptySelection: seedSearchStringFromNonEmptySelection,\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(34 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextSelectionMatchFindAction,\r\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\r\n            alias: 'Find Next Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToNextMatch();\r\n    }\r\n}\r\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\r\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\r\n            alias: 'Find Previous Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\r\n    id: FIND_IDS.StartFindReplaceAction,\r\n    label: nls.localize('startReplace', \"Replace\"),\r\n    alias: 'Replace',\r\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\r\n    kbOpts: {\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 38 /* KEY_H */,\r\n        mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KEY_F */ },\r\n        weight: 100 /* EditorContrib */\r\n    },\r\n    menuOpts: {\r\n        menuId: MenuId.MenubarEditMenu,\r\n        group: '3_find',\r\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\r\n        order: 2\r\n    }\r\n}));\r\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\r\n    if (!editor.hasModel() || editor.getOption(80 /* readOnly */)) {\r\n        return false;\r\n    }\r\n    const controller = CommonFindController.get(editor);\r\n    if (!controller) {\r\n        return false;\r\n    }\r\n    const currentSelection = editor.getSelection();\r\n    const findInputFocused = controller.isFindInputFocused();\r\n    // we only seed search string from selection when the current selection is single line and not empty,\r\n    // + the find input is not focused\r\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\r\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\r\n        && (editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never')\r\n        && !findInputFocused;\r\n    /*\r\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\r\n\r\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\r\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\r\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\r\n    */\r\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\r\n        2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\r\n    return controller.start({\r\n        forceRevealReplace: true,\r\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\r\n        seedSearchStringFromNonEmptySelection: editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection',\r\n        seedSearchStringFromGlobalClipboard: editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never',\r\n        shouldFocus: shouldFocus,\r\n        shouldAnimate: true,\r\n        updateSearchScope: false,\r\n        loop: editor.getOption(34 /* find */).loop\r\n    });\r\n});\r\nregisterEditorContribution(CommonFindController.ID, FindController);\r\nregisterEditorAction(StartFindWithSelectionAction);\r\nregisterEditorAction(NextMatchFindAction);\r\nregisterEditorAction(PreviousMatchFindAction);\r\nregisterEditorAction(NextSelectionMatchFindAction);\r\nregisterEditorAction(PreviousSelectionMatchFindAction);\r\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.CloseFindWidgetCommand,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.closeFindWidget(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleCaseSensitive(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleCaseSensitiveKeybinding.primary,\r\n        mac: ToggleCaseSensitiveKeybinding.mac,\r\n        win: ToggleCaseSensitiveKeybinding.win,\r\n        linux: ToggleCaseSensitiveKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleWholeWordCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleWholeWords(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleWholeWordKeybinding.primary,\r\n        mac: ToggleWholeWordKeybinding.mac,\r\n        win: ToggleWholeWordKeybinding.win,\r\n        linux: ToggleWholeWordKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleRegexCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleRegex(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleRegexKeybinding.primary,\r\n        mac: ToggleRegexKeybinding.mac,\r\n        win: ToggleRegexKeybinding.win,\r\n        linux: ToggleRegexKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleSearchScopeCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleSearchScope(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleSearchScopeKeybinding.primary,\r\n        mac: ToggleSearchScopeKeybinding.mac,\r\n        win: ToggleSearchScopeKeybinding.win,\r\n        linux: ToggleSearchScopeKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.TogglePreserveCaseCommand,\r\n    precondition: undefined,\r\n    handler: x => x.togglePreserveCase(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: TogglePreserveCaseKeybinding.primary,\r\n        mac: TogglePreserveCaseKeybinding.mac,\r\n        win: TogglePreserveCaseKeybinding.win,\r\n        linux: TogglePreserveCaseKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* KEY_1 */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: undefined,\r\n        mac: {\r\n            primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n        }\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.SelectAllMatchesAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.selectAllMatches(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport const MAX_FOLDING_REGIONS = 0xFFFF;\r\nexport const MAX_LINE_NUMBER = 0xFFFFFF;\r\nconst MASK_INDENT = 0xFF000000;\r\nexport class FoldingRegions {\r\n    constructor(startIndexes, endIndexes, types) {\r\n        if (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\r\n            throw new Error('invalid startIndexes or endIndexes size');\r\n        }\r\n        this._startIndexes = startIndexes;\r\n        this._endIndexes = endIndexes;\r\n        this._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));\r\n        this._types = types;\r\n        this._parentsComputed = false;\r\n    }\r\n    ensureParentIndices() {\r\n        if (!this._parentsComputed) {\r\n            this._parentsComputed = true;\r\n            let parentIndexes = [];\r\n            let isInsideLast = (startLineNumber, endLineNumber) => {\r\n                let index = parentIndexes[parentIndexes.length - 1];\r\n                return this.getStartLineNumber(index) <= startLineNumber && this.getEndLineNumber(index) >= endLineNumber;\r\n            };\r\n            for (let i = 0, len = this._startIndexes.length; i < len; i++) {\r\n                let startLineNumber = this._startIndexes[i];\r\n                let endLineNumber = this._endIndexes[i];\r\n                if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n                    throw new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\r\n                }\r\n                while (parentIndexes.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\r\n                    parentIndexes.pop();\r\n                }\r\n                let parentIndex = parentIndexes.length > 0 ? parentIndexes[parentIndexes.length - 1] : -1;\r\n                parentIndexes.push(i);\r\n                this._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\r\n                this._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\r\n            }\r\n        }\r\n    }\r\n    get length() {\r\n        return this._startIndexes.length;\r\n    }\r\n    getStartLineNumber(index) {\r\n        return this._startIndexes[index] & MAX_LINE_NUMBER;\r\n    }\r\n    getEndLineNumber(index) {\r\n        return this._endIndexes[index] & MAX_LINE_NUMBER;\r\n    }\r\n    getType(index) {\r\n        return this._types ? this._types[index] : undefined;\r\n    }\r\n    hasTypes() {\r\n        return !!this._types;\r\n    }\r\n    isCollapsed(index) {\r\n        let arrayIndex = (index / 32) | 0;\r\n        let bit = index % 32;\r\n        return (this._collapseStates[arrayIndex] & (1 << bit)) !== 0;\r\n    }\r\n    setCollapsed(index, newState) {\r\n        let arrayIndex = (index / 32) | 0;\r\n        let bit = index % 32;\r\n        let value = this._collapseStates[arrayIndex];\r\n        if (newState) {\r\n            this._collapseStates[arrayIndex] = value | (1 << bit);\r\n        }\r\n        else {\r\n            this._collapseStates[arrayIndex] = value & ~(1 << bit);\r\n        }\r\n    }\r\n    setCollapsedAllOfType(type, newState) {\r\n        let hasChanged = false;\r\n        if (this._types) {\r\n            for (let i = 0; i < this._types.length; i++) {\r\n                if (this._types[i] === type) {\r\n                    this.setCollapsed(i, newState);\r\n                    hasChanged = true;\r\n                }\r\n            }\r\n        }\r\n        return hasChanged;\r\n    }\r\n    toRegion(index) {\r\n        return new FoldingRegion(this, index);\r\n    }\r\n    getParentIndex(index) {\r\n        this.ensureParentIndices();\r\n        let parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\r\n        if (parent === MAX_FOLDING_REGIONS) {\r\n            return -1;\r\n        }\r\n        return parent;\r\n    }\r\n    contains(index, line) {\r\n        return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\r\n    }\r\n    findIndex(line) {\r\n        let low = 0, high = this._startIndexes.length;\r\n        if (high === 0) {\r\n            return -1; // no children\r\n        }\r\n        while (low < high) {\r\n            let mid = Math.floor((low + high) / 2);\r\n            if (line < this.getStartLineNumber(mid)) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        return low - 1;\r\n    }\r\n    findRange(line) {\r\n        let index = this.findIndex(line);\r\n        if (index >= 0) {\r\n            let endLineNumber = this.getEndLineNumber(index);\r\n            if (endLineNumber >= line) {\r\n                return index;\r\n            }\r\n            index = this.getParentIndex(index);\r\n            while (index !== -1) {\r\n                if (this.contains(index, line)) {\r\n                    return index;\r\n                }\r\n                index = this.getParentIndex(index);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    toString() {\r\n        let res = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            res[i] = `[${this.isCollapsed(i) ? '+' : '-'}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;\r\n        }\r\n        return res.join(', ');\r\n    }\r\n}\r\nexport class FoldingRegion {\r\n    constructor(ranges, index) {\r\n        this.ranges = ranges;\r\n        this.index = index;\r\n    }\r\n    get startLineNumber() {\r\n        return this.ranges.getStartLineNumber(this.index);\r\n    }\r\n    get endLineNumber() {\r\n        return this.ranges.getEndLineNumber(this.index);\r\n    }\r\n    get regionIndex() {\r\n        return this.index;\r\n    }\r\n    get parentIndex() {\r\n        return this.ranges.getParentIndex(this.index);\r\n    }\r\n    get isCollapsed() {\r\n        return this.ranges.isCollapsed(this.index);\r\n    }\r\n    containedBy(range) {\r\n        return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\r\n    }\r\n    containsLine(lineNumber) {\r\n        return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { FoldingRegions } from './foldingRanges.js';\r\nexport class FoldingModel {\r\n    constructor(textModel, decorationProvider) {\r\n        this._updateEventEmitter = new Emitter();\r\n        this.onDidChange = this._updateEventEmitter.event;\r\n        this._textModel = textModel;\r\n        this._decorationProvider = decorationProvider;\r\n        this._regions = new FoldingRegions(new Uint32Array(0), new Uint32Array(0));\r\n        this._editorDecorationIds = [];\r\n        this._isInitialized = false;\r\n    }\r\n    get regions() { return this._regions; }\r\n    get textModel() { return this._textModel; }\r\n    get isInitialized() { return this._isInitialized; }\r\n    toggleCollapseState(toggledRegions) {\r\n        if (!toggledRegions.length) {\r\n            return;\r\n        }\r\n        toggledRegions = toggledRegions.sort((r1, r2) => r1.regionIndex - r2.regionIndex);\r\n        const processed = {};\r\n        this._decorationProvider.changeDecorations(accessor => {\r\n            let k = 0; // index from [0 ... this.regions.length]\r\n            let dirtyRegionEndLine = -1; // end of the range where decorations need to be updated\r\n            let lastHiddenLine = -1; // the end of the last hidden lines\r\n            const updateDecorationsUntil = (index) => {\r\n                while (k < index) {\r\n                    const endLineNumber = this._regions.getEndLineNumber(k);\r\n                    const isCollapsed = this._regions.isCollapsed(k);\r\n                    if (endLineNumber <= dirtyRegionEndLine) {\r\n                        accessor.changeDecorationOptions(this._editorDecorationIds[k], this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine));\r\n                    }\r\n                    if (isCollapsed && endLineNumber > lastHiddenLine) {\r\n                        lastHiddenLine = endLineNumber;\r\n                    }\r\n                    k++;\r\n                }\r\n            };\r\n            for (let region of toggledRegions) {\r\n                let index = region.regionIndex;\r\n                let editorDecorationId = this._editorDecorationIds[index];\r\n                if (editorDecorationId && !processed[editorDecorationId]) {\r\n                    processed[editorDecorationId] = true;\r\n                    updateDecorationsUntil(index); // update all decorations up to current index using the old dirtyRegionEndLine\r\n                    let newCollapseState = !this._regions.isCollapsed(index);\r\n                    this._regions.setCollapsed(index, newCollapseState);\r\n                    dirtyRegionEndLine = Math.max(dirtyRegionEndLine, this._regions.getEndLineNumber(index));\r\n                }\r\n            }\r\n            updateDecorationsUntil(this._regions.length);\r\n        });\r\n        this._updateEventEmitter.fire({ model: this, collapseStateChanged: toggledRegions });\r\n    }\r\n    update(newRegions, blockedLineNumers = []) {\r\n        let newEditorDecorations = [];\r\n        let isBlocked = (startLineNumber, endLineNumber) => {\r\n            for (let blockedLineNumber of blockedLineNumers) {\r\n                if (startLineNumber < blockedLineNumber && blockedLineNumber <= endLineNumber) { // first line is visible\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        let lastHiddenLine = -1;\r\n        let initRange = (index, isCollapsed) => {\r\n            const startLineNumber = newRegions.getStartLineNumber(index);\r\n            const endLineNumber = newRegions.getEndLineNumber(index);\r\n            if (!isCollapsed) {\r\n                isCollapsed = newRegions.isCollapsed(index);\r\n            }\r\n            if (isCollapsed && isBlocked(startLineNumber, endLineNumber)) {\r\n                isCollapsed = false;\r\n            }\r\n            newRegions.setCollapsed(index, isCollapsed);\r\n            const maxColumn = this._textModel.getLineMaxColumn(startLineNumber);\r\n            const decorationRange = {\r\n                startLineNumber: startLineNumber,\r\n                startColumn: Math.max(maxColumn - 1, 1),\r\n                endLineNumber: startLineNumber,\r\n                endColumn: maxColumn\r\n            };\r\n            newEditorDecorations.push({ range: decorationRange, options: this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine) });\r\n            if (isCollapsed && endLineNumber > lastHiddenLine) {\r\n                lastHiddenLine = endLineNumber;\r\n            }\r\n        };\r\n        let i = 0;\r\n        let nextCollapsed = () => {\r\n            while (i < this._regions.length) {\r\n                let isCollapsed = this._regions.isCollapsed(i);\r\n                i++;\r\n                if (isCollapsed) {\r\n                    return i - 1;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n        let k = 0;\r\n        let collapsedIndex = nextCollapsed();\r\n        while (collapsedIndex !== -1 && k < newRegions.length) {\r\n            // get the latest range\r\n            let decRange = this._textModel.getDecorationRange(this._editorDecorationIds[collapsedIndex]);\r\n            if (decRange) {\r\n                let collapsedStartLineNumber = decRange.startLineNumber;\r\n                if (decRange.startColumn === Math.max(decRange.endColumn - 1, 1) && this._textModel.getLineMaxColumn(collapsedStartLineNumber) === decRange.endColumn) { // test that the decoration is still covering the full line else it got deleted\r\n                    while (k < newRegions.length) {\r\n                        let startLineNumber = newRegions.getStartLineNumber(k);\r\n                        if (collapsedStartLineNumber >= startLineNumber) {\r\n                            initRange(k, collapsedStartLineNumber === startLineNumber);\r\n                            k++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            collapsedIndex = nextCollapsed();\r\n        }\r\n        while (k < newRegions.length) {\r\n            initRange(k, false);\r\n            k++;\r\n        }\r\n        this._editorDecorationIds = this._decorationProvider.deltaDecorations(this._editorDecorationIds, newEditorDecorations);\r\n        this._regions = newRegions;\r\n        this._isInitialized = true;\r\n        this._updateEventEmitter.fire({ model: this });\r\n    }\r\n    /**\r\n     * Collapse state memento, for persistence only\r\n     */\r\n    getMemento() {\r\n        let collapsedRanges = [];\r\n        for (let i = 0; i < this._regions.length; i++) {\r\n            if (this._regions.isCollapsed(i)) {\r\n                let range = this._textModel.getDecorationRange(this._editorDecorationIds[i]);\r\n                if (range) {\r\n                    let startLineNumber = range.startLineNumber;\r\n                    let endLineNumber = range.endLineNumber + this._regions.getEndLineNumber(i) - this._regions.getStartLineNumber(i);\r\n                    collapsedRanges.push({ startLineNumber, endLineNumber });\r\n                }\r\n            }\r\n        }\r\n        if (collapsedRanges.length > 0) {\r\n            return collapsedRanges;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Apply persisted state, for persistence only\r\n     */\r\n    applyMemento(state) {\r\n        if (!Array.isArray(state)) {\r\n            return;\r\n        }\r\n        let toToogle = [];\r\n        for (let range of state) {\r\n            let region = this.getRegionAtLine(range.startLineNumber);\r\n            if (region && !region.isCollapsed) {\r\n                toToogle.push(region);\r\n            }\r\n        }\r\n        this.toggleCollapseState(toToogle);\r\n    }\r\n    dispose() {\r\n        this._decorationProvider.deltaDecorations(this._editorDecorationIds, []);\r\n    }\r\n    getAllRegionsAtLine(lineNumber, filter) {\r\n        let result = [];\r\n        if (this._regions) {\r\n            let index = this._regions.findRange(lineNumber);\r\n            let level = 1;\r\n            while (index >= 0) {\r\n                let current = this._regions.toRegion(index);\r\n                if (!filter || filter(current, level)) {\r\n                    result.push(current);\r\n                }\r\n                level++;\r\n                index = current.parentIndex;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getRegionAtLine(lineNumber) {\r\n        if (this._regions) {\r\n            let index = this._regions.findRange(lineNumber);\r\n            if (index >= 0) {\r\n                return this._regions.toRegion(index);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getRegionsInside(region, filter) {\r\n        let result = [];\r\n        let index = region ? region.regionIndex + 1 : 0;\r\n        let endLineNumber = region ? region.endLineNumber : Number.MAX_VALUE;\r\n        if (filter && filter.length === 2) {\r\n            const levelStack = [];\r\n            for (let i = index, len = this._regions.length; i < len; i++) {\r\n                let current = this._regions.toRegion(i);\r\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\r\n                    while (levelStack.length > 0 && !current.containedBy(levelStack[levelStack.length - 1])) {\r\n                        levelStack.pop();\r\n                    }\r\n                    levelStack.push(current);\r\n                    if (filter(current, levelStack.length)) {\r\n                        result.push(current);\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = index, len = this._regions.length; i < len; i++) {\r\n                let current = this._regions.toRegion(i);\r\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\r\n                    if (!filter || filter(current)) {\r\n                        result.push(current);\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\r\n */\r\nexport function toggleCollapseState(foldingModel, levels, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let region = foldingModel.getRegionAtLine(lineNumber);\r\n        if (region) {\r\n            const doCollapse = !region.isCollapsed;\r\n            toToggle.push(region);\r\n            if (levels > 1) {\r\n                let regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n                toToggle.push(...regionsInside);\r\n            }\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations including all children.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\r\n */\r\nexport function setCollapseStateLevelsDown(foldingModel, doCollapse, levels = Number.MAX_VALUE, lineNumbers) {\r\n    let toToggle = [];\r\n    if (lineNumbers && lineNumbers.length > 0) {\r\n        for (let lineNumber of lineNumbers) {\r\n            let region = foldingModel.getRegionAtLine(lineNumber);\r\n            if (region) {\r\n                if (region.isCollapsed !== doCollapse) {\r\n                    toToggle.push(region);\r\n                }\r\n                if (levels > 1) {\r\n                    let regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n                    toToggle.push(...regionsInside);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let regionsInside = foldingModel.getRegionsInside(null, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n        toToggle.push(...regionsInside);\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations including all parents.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand.\r\n */\r\nexport function setCollapseStateLevelsUp(foldingModel, doCollapse, levels, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region, level) => region.isCollapsed !== doCollapse && level <= levels);\r\n        toToggle.push(...regions);\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand a region at the given locations. If the inner most region is already collapsed/expanded, uses the first parent instead.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param lineNumbers the location of the regions to collapse or expand.\r\n */\r\nexport function setCollapseStateUp(foldingModel, doCollapse, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region) => region.isCollapsed !== doCollapse);\r\n        if (regions.length > 0) {\r\n            toToggle.push(regions[0]);\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds or unfolds all regions that have a given level, except if they contain one of the blocked lines.\r\n * @param foldLevel level. Level == 1 is the top level\r\n * @param doCollapse Whether to collapse or expand\r\n*/\r\nexport function setCollapseStateAtLevel(foldingModel, foldLevel, doCollapse, blockedLineNumbers) {\r\n    let filter = (region, level) => level === foldLevel && region.isCollapsed !== doCollapse && !blockedLineNumbers.some(line => region.containsLine(line));\r\n    let toToggle = foldingModel.getRegionsInside(null, filter);\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds or unfolds all regions, except if they contain or are contained by a region of one of the blocked lines.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param blockedLineNumbers the location of regions to not collapse or expand\r\n */\r\nexport function setCollapseStateForRest(foldingModel, doCollapse, blockedLineNumbers) {\r\n    let filteredRegions = [];\r\n    for (let lineNumber of blockedLineNumbers) {\r\n        filteredRegions.push(foldingModel.getAllRegionsAtLine(lineNumber, undefined)[0]);\r\n    }\r\n    let filter = (region) => filteredRegions.every((filteredRegion) => !filteredRegion.containedBy(region) && !region.containedBy(filteredRegion)) && region.isCollapsed !== doCollapse;\r\n    let toToggle = foldingModel.getRegionsInside(null, filter);\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds all regions for which the lines start with a given regex\r\n * @param foldingModel the folding model\r\n */\r\nexport function setCollapseStateForMatchingLines(foldingModel, regExp, doCollapse) {\r\n    let editorModel = foldingModel.textModel;\r\n    let regions = foldingModel.regions;\r\n    let toToggle = [];\r\n    for (let i = regions.length - 1; i >= 0; i--) {\r\n        if (doCollapse !== regions.isCollapsed(i)) {\r\n            let startLineNumber = regions.getStartLineNumber(i);\r\n            if (regExp.test(editorModel.getLineContent(startLineNumber))) {\r\n                toToggle.push(regions.toRegion(i));\r\n            }\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds all regions of the given type\r\n * @param foldingModel the folding model\r\n */\r\nexport function setCollapseStateForType(foldingModel, type, doCollapse) {\r\n    let regions = foldingModel.regions;\r\n    let toToggle = [];\r\n    for (let i = regions.length - 1; i >= 0; i--) {\r\n        if (doCollapse !== regions.isCollapsed(i) && type === regions.getType(i)) {\r\n            toToggle.push(regions.toRegion(i));\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Get line to go to for parent fold of current line\r\n * @param lineNumber the current line number\r\n * @param foldingModel the folding model\r\n *\r\n * @return Parent fold start line\r\n */\r\nexport function getParentFoldLine(lineNumber, foldingModel) {\r\n    let startLineNumber = null;\r\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\r\n    if (foldingRegion !== null) {\r\n        startLineNumber = foldingRegion.startLineNumber;\r\n        // If current line is not the start of the current fold, go to top line of current fold. If not, go to parent fold\r\n        if (lineNumber === startLineNumber) {\r\n            let parentFoldingIdx = foldingRegion.parentIndex;\r\n            if (parentFoldingIdx !== -1) {\r\n                startLineNumber = foldingModel.regions.getStartLineNumber(parentFoldingIdx);\r\n            }\r\n            else {\r\n                startLineNumber = null;\r\n            }\r\n        }\r\n    }\r\n    return startLineNumber;\r\n}\r\n/**\r\n * Get line to go to for previous fold at the same level of current line\r\n * @param lineNumber the current line number\r\n * @param foldingModel the folding model\r\n *\r\n * @return Previous fold start line\r\n */\r\nexport function getPreviousFoldLine(lineNumber, foldingModel) {\r\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\r\n    if (foldingRegion !== null) {\r\n        // If current line is not the start of the current fold, go to top line of current fold. If not, go to previous fold.\r\n        if (lineNumber !== foldingRegion.startLineNumber) {\r\n            return foldingRegion.startLineNumber;\r\n        }\r\n        else {\r\n            // Find min line number to stay within parent.\r\n            let expectedParentIndex = foldingRegion.parentIndex;\r\n            let minLineNumber = 0;\r\n            if (expectedParentIndex !== -1) {\r\n                minLineNumber = foldingModel.regions.getStartLineNumber(foldingRegion.parentIndex);\r\n            }\r\n            // Find fold at same level.\r\n            while (foldingRegion !== null) {\r\n                if (foldingRegion.regionIndex > 0) {\r\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);\r\n                    // Keep at same level.\r\n                    if (foldingRegion.startLineNumber <= minLineNumber) {\r\n                        return null;\r\n                    }\r\n                    else if (foldingRegion.parentIndex === expectedParentIndex) {\r\n                        return foldingRegion.startLineNumber;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // Go to last fold that's before the current line.\r\n        if (foldingModel.regions.length > 0) {\r\n            foldingRegion = foldingModel.regions.toRegion(foldingModel.regions.length - 1);\r\n            while (foldingRegion !== null) {\r\n                // Found non-parent fold before current line.\r\n                if (foldingRegion.parentIndex === -1 && foldingRegion.startLineNumber < lineNumber) {\r\n                    return foldingRegion.startLineNumber;\r\n                }\r\n                if (foldingRegion.regionIndex > 0) {\r\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);\r\n                }\r\n                else {\r\n                    foldingRegion = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get line to go to next fold at the same level of current line\r\n * @param lineNumber the current line number\r\n * @param foldingModel the folding model\r\n *\r\n * @return Next fold start line\r\n */\r\nexport function getNextFoldLine(lineNumber, foldingModel) {\r\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\r\n    if (foldingRegion !== null) {\r\n        // Find max line number to stay within parent.\r\n        let expectedParentIndex = foldingRegion.parentIndex;\r\n        let maxLineNumber = 0;\r\n        if (expectedParentIndex !== -1) {\r\n            maxLineNumber = foldingModel.regions.getEndLineNumber(foldingRegion.parentIndex);\r\n        }\r\n        else if (foldingModel.regions.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            maxLineNumber = foldingModel.regions.getEndLineNumber(foldingModel.regions.length - 1);\r\n        }\r\n        // Find fold at same level.\r\n        while (foldingRegion !== null) {\r\n            if (foldingRegion.regionIndex < foldingModel.regions.length) {\r\n                foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);\r\n                // Keep at same level.\r\n                if (foldingRegion.startLineNumber >= maxLineNumber) {\r\n                    return null;\r\n                }\r\n                else if (foldingRegion.parentIndex === expectedParentIndex) {\r\n                    return foldingRegion.startLineNumber;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // Go to first fold that's after the current line.\r\n        if (foldingModel.regions.length > 0) {\r\n            foldingRegion = foldingModel.regions.toRegion(0);\r\n            while (foldingRegion !== null) {\r\n                // Found non-parent fold after current line.\r\n                if (foldingRegion.parentIndex === -1 && foldingRegion.startLineNumber > lineNumber) {\r\n                    return foldingRegion.startLineNumber;\r\n                }\r\n                if (foldingRegion.regionIndex < foldingModel.regions.length) {\r\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);\r\n                }\r\n                else {\r\n                    foldingRegion = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nimport { ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nexport const foldingExpandedIcon = registerIcon('folding-expanded', Codicon.chevronDown, localize('foldingExpandedIcon', 'Icon for expanded ranges in the editor glyph margin.'));\r\nexport const foldingCollapsedIcon = registerIcon('folding-collapsed', Codicon.chevronRight, localize('foldingCollapsedIcon', 'Icon for collapsed ranges in the editor glyph margin.'));\r\nexport class FoldingDecorationProvider {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this.autoHideFoldingControls = true;\r\n        this.showFoldingHighlights = true;\r\n    }\r\n    getDecorationOption(isCollapsed, isHidden) {\r\n        if (isHidden) {\r\n            return FoldingDecorationProvider.HIDDEN_RANGE_DECORATION;\r\n        }\r\n        if (isCollapsed) {\r\n            return this.showFoldingHighlights ? FoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION : FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION;\r\n        }\r\n        else if (this.autoHideFoldingControls) {\r\n            return FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;\r\n        }\r\n        else {\r\n            return FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION;\r\n        }\r\n    }\r\n    deltaDecorations(oldDecorations, newDecorations) {\r\n        return this.editor.deltaDecorations(oldDecorations, newDecorations);\r\n    }\r\n    changeDecorations(callback) {\r\n        return this.editor.changeDecorations(callback);\r\n    }\r\n}\r\nFoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-collapsed-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    afterContentClassName: 'inline-folded',\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\r\n});\r\nFoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-collapsed-highlighted-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    afterContentClassName: 'inline-folded',\r\n    className: 'folded-background',\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\r\n});\r\nFoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-expanded-auto-hide-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingExpandedIcon)\r\n});\r\nFoldingDecorationProvider.EXPANDED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-expanded-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: 'alwaysShowFoldIcons ' + ThemeIcon.asClassName(foldingExpandedIcon)\r\n});\r\nFoldingDecorationProvider.HIDDEN_RANGE_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-hidden-range-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { findFirstInSorted } from '../../../base/common/arrays.js';\r\nexport class HiddenRangeModel {\r\n    constructor(model) {\r\n        this._updateEventEmitter = new Emitter();\r\n        this._foldingModel = model;\r\n        this._foldingModelListener = model.onDidChange(_ => this.updateHiddenRanges());\r\n        this._hiddenRanges = [];\r\n        if (model.regions.length) {\r\n            this.updateHiddenRanges();\r\n        }\r\n    }\r\n    get onDidChange() { return this._updateEventEmitter.event; }\r\n    get hiddenRanges() { return this._hiddenRanges; }\r\n    updateHiddenRanges() {\r\n        let updateHiddenAreas = false;\r\n        let newHiddenAreas = [];\r\n        let i = 0; // index into hidden\r\n        let k = 0;\r\n        let lastCollapsedStart = Number.MAX_VALUE;\r\n        let lastCollapsedEnd = -1;\r\n        let ranges = this._foldingModel.regions;\r\n        for (; i < ranges.length; i++) {\r\n            if (!ranges.isCollapsed(i)) {\r\n                continue;\r\n            }\r\n            let startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\r\n            let endLineNumber = ranges.getEndLineNumber(i);\r\n            if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\r\n                // ignore ranges contained in collapsed regions\r\n                continue;\r\n            }\r\n            if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\r\n                // reuse the old ranges\r\n                newHiddenAreas.push(this._hiddenRanges[k]);\r\n                k++;\r\n            }\r\n            else {\r\n                updateHiddenAreas = true;\r\n                newHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\r\n            }\r\n            lastCollapsedStart = startLineNumber;\r\n            lastCollapsedEnd = endLineNumber;\r\n        }\r\n        if (updateHiddenAreas || k < this._hiddenRanges.length) {\r\n            this.applyHiddenRanges(newHiddenAreas);\r\n        }\r\n    }\r\n    applyMemento(state) {\r\n        if (!Array.isArray(state) || state.length === 0) {\r\n            return false;\r\n        }\r\n        let hiddenRanges = [];\r\n        for (let r of state) {\r\n            if (!r.startLineNumber || !r.endLineNumber) {\r\n                return false;\r\n            }\r\n            hiddenRanges.push(new Range(r.startLineNumber + 1, 1, r.endLineNumber, 1));\r\n        }\r\n        this.applyHiddenRanges(hiddenRanges);\r\n        return true;\r\n    }\r\n    /**\r\n     * Collapse state memento, for persistence only, only used if folding model is not yet initialized\r\n     */\r\n    getMemento() {\r\n        return this._hiddenRanges.map(r => ({ startLineNumber: r.startLineNumber - 1, endLineNumber: r.endLineNumber }));\r\n    }\r\n    applyHiddenRanges(newHiddenAreas) {\r\n        this._hiddenRanges = newHiddenAreas;\r\n        this._updateEventEmitter.fire(newHiddenAreas);\r\n    }\r\n    hasRanges() {\r\n        return this._hiddenRanges.length > 0;\r\n    }\r\n    isHidden(line) {\r\n        return findRange(this._hiddenRanges, line) !== null;\r\n    }\r\n    adjustSelections(selections) {\r\n        let hasChanges = false;\r\n        let editorModel = this._foldingModel.textModel;\r\n        let lastRange = null;\r\n        let adjustLine = (line) => {\r\n            if (!lastRange || !isInside(line, lastRange)) {\r\n                lastRange = findRange(this._hiddenRanges, line);\r\n            }\r\n            if (lastRange) {\r\n                return lastRange.startLineNumber - 1;\r\n            }\r\n            return null;\r\n        };\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            let adjustedStartLine = adjustLine(selection.startLineNumber);\r\n            if (adjustedStartLine) {\r\n                selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\r\n                hasChanges = true;\r\n            }\r\n            let adjustedEndLine = adjustLine(selection.endLineNumber);\r\n            if (adjustedEndLine) {\r\n                selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\r\n                hasChanges = true;\r\n            }\r\n            selections[i] = selection;\r\n        }\r\n        return hasChanges;\r\n    }\r\n    dispose() {\r\n        if (this.hiddenRanges.length > 0) {\r\n            this._hiddenRanges = [];\r\n            this._updateEventEmitter.fire(this._hiddenRanges);\r\n        }\r\n        if (this._foldingModelListener) {\r\n            this._foldingModelListener.dispose();\r\n            this._foldingModelListener = null;\r\n        }\r\n    }\r\n}\r\nfunction isInside(line, range) {\r\n    return line >= range.startLineNumber && line <= range.endLineNumber;\r\n}\r\nfunction findRange(ranges, line) {\r\n    let i = findFirstInSorted(ranges, r => line < r.startLineNumber) - 1;\r\n    if (i >= 0 && ranges[i].endLineNumber >= line) {\r\n        return ranges[i];\r\n    }\r\n    return null;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { FoldingRegions, MAX_LINE_NUMBER } from './foldingRanges.js';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nconst MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT = 5000;\r\nexport const ID_INDENT_PROVIDER = 'indent';\r\nexport class IndentRangeProvider {\r\n    constructor(editorModel) {\r\n        this.editorModel = editorModel;\r\n        this.id = ID_INDENT_PROVIDER;\r\n    }\r\n    dispose() {\r\n    }\r\n    compute(cancelationToken) {\r\n        let foldingRules = LanguageConfigurationRegistry.getFoldingRules(this.editorModel.getLanguageIdentifier().id);\r\n        let offSide = foldingRules && !!foldingRules.offSide;\r\n        let markers = foldingRules && foldingRules.markers;\r\n        return Promise.resolve(computeRanges(this.editorModel, offSide, markers));\r\n    }\r\n}\r\n// public only for testing\r\nexport class RangesCollector {\r\n    constructor(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._indentOccurrences = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    insertFirst(startLineNumber, endLineNumber, indent) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        let index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._length++;\r\n        if (indent < 1000) {\r\n            this._indentOccurrences[indent] = (this._indentOccurrences[indent] || 0) + 1;\r\n        }\r\n    }\r\n    toIndentRanges(model) {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            // reverse and create arrays of the exact length\r\n            let startIndexes = new Uint32Array(this._length);\r\n            let endIndexes = new Uint32Array(this._length);\r\n            for (let i = this._length - 1, k = 0; i >= 0; i--, k++) {\r\n                startIndexes[k] = this._startIndexes[i];\r\n                endIndexes[k] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes);\r\n        }\r\n        else {\r\n            let entries = 0;\r\n            let maxIndent = this._indentOccurrences.length;\r\n            for (let i = 0; i < this._indentOccurrences.length; i++) {\r\n                let n = this._indentOccurrences[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxIndent = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            const tabSize = model.getOptions().tabSize;\r\n            // reverse and create arrays of the exact length\r\n            let startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            for (let i = this._length - 1, k = 0; i >= 0; i--) {\r\n                let startIndex = this._startIndexes[i];\r\n                let lineContent = model.getLineContent(startIndex);\r\n                let indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n                if (indent < maxIndent || (indent === maxIndent && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = startIndex;\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes);\r\n        }\r\n    }\r\n}\r\nexport function computeRanges(model, offSide, markers, foldingRangesLimit = MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT) {\r\n    const tabSize = model.getOptions().tabSize;\r\n    let result = new RangesCollector(foldingRangesLimit);\r\n    let pattern = undefined;\r\n    if (markers) {\r\n        pattern = new RegExp(`(${markers.start.source})|(?:${markers.end.source})`);\r\n    }\r\n    let previousRegions = [];\r\n    let line = model.getLineCount() + 1;\r\n    previousRegions.push({ indent: -1, endAbove: line, line }); // sentinel, to make sure there's at least one entry\r\n    for (let line = model.getLineCount(); line > 0; line--) {\r\n        let lineContent = model.getLineContent(line);\r\n        let indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n        let previous = previousRegions[previousRegions.length - 1];\r\n        if (indent === -1) {\r\n            if (offSide) {\r\n                // for offSide languages, empty lines are associated to the previous block\r\n                // note: the next block is already written to the results, so this only\r\n                // impacts the end position of the block before\r\n                previous.endAbove = line;\r\n            }\r\n            continue; // only whitespace\r\n        }\r\n        let m;\r\n        if (pattern && (m = lineContent.match(pattern))) {\r\n            // folding pattern match\r\n            if (m[1]) { // start pattern match\r\n                // discard all regions until the folding pattern\r\n                let i = previousRegions.length - 1;\r\n                while (i > 0 && previousRegions[i].indent !== -2) {\r\n                    i--;\r\n                }\r\n                if (i > 0) {\r\n                    previousRegions.length = i + 1;\r\n                    previous = previousRegions[i];\r\n                    // new folding range from pattern, includes the end line\r\n                    result.insertFirst(line, previous.line, indent);\r\n                    previous.line = line;\r\n                    previous.indent = indent;\r\n                    previous.endAbove = line;\r\n                    continue;\r\n                }\r\n                else {\r\n                    // no end marker found, treat line as a regular line\r\n                }\r\n            }\r\n            else { // end pattern match\r\n                previousRegions.push({ indent: -2, endAbove: line, line });\r\n                continue;\r\n            }\r\n        }\r\n        if (previous.indent > indent) {\r\n            // discard all regions with larger indent\r\n            do {\r\n                previousRegions.pop();\r\n                previous = previousRegions[previousRegions.length - 1];\r\n            } while (previous.indent > indent);\r\n            // new folding range\r\n            let endLineNumber = previous.endAbove - 1;\r\n            if (endLineNumber - line >= 1) { // needs at east size 1\r\n                result.insertFirst(line, endLineNumber, indent);\r\n            }\r\n        }\r\n        if (previous.indent === indent) {\r\n            previous.endAbove = line;\r\n        }\r\n        else { // previous.indent < indent\r\n            // new region with a bigger indent\r\n            previousRegions.push({ indent, endAbove: line, line });\r\n        }\r\n    }\r\n    return result.toIndentRanges(model);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { MAX_LINE_NUMBER, FoldingRegions } from './foldingRanges.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nconst MAX_FOLDING_REGIONS = 5000;\r\nconst foldingContext = {};\r\nexport const ID_SYNTAX_PROVIDER = 'syntax';\r\nexport class SyntaxRangeProvider {\r\n    constructor(editorModel, providers, handleFoldingRangesChange, limit = MAX_FOLDING_REGIONS) {\r\n        this.editorModel = editorModel;\r\n        this.providers = providers;\r\n        this.limit = limit;\r\n        this.id = ID_SYNTAX_PROVIDER;\r\n        for (const provider of providers) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                if (!this.disposables) {\r\n                    this.disposables = new DisposableStore();\r\n                }\r\n                this.disposables.add(provider.onDidChange(handleFoldingRangesChange));\r\n            }\r\n        }\r\n    }\r\n    compute(cancellationToken) {\r\n        return collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(ranges => {\r\n            if (ranges) {\r\n                let res = sanitizeRanges(ranges, this.limit);\r\n                return res;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.disposables) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\nfunction collectSyntaxRanges(providers, model, cancellationToken) {\r\n    let rangeData = null;\r\n    let promises = providers.map((provider, i) => {\r\n        return Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(ranges => {\r\n            if (cancellationToken.isCancellationRequested) {\r\n                return;\r\n            }\r\n            if (Array.isArray(ranges)) {\r\n                if (!Array.isArray(rangeData)) {\r\n                    rangeData = [];\r\n                }\r\n                let nLines = model.getLineCount();\r\n                for (let r of ranges) {\r\n                    if (r.start > 0 && r.end > r.start && r.end <= nLines) {\r\n                        rangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\r\n                    }\r\n                }\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(_ => {\r\n        return rangeData;\r\n    });\r\n}\r\nexport class RangesCollector {\r\n    constructor(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._nestingLevels = [];\r\n        this._nestingLevelCounts = [];\r\n        this._types = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    add(startLineNumber, endLineNumber, type, nestingLevel) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        let index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._nestingLevels[index] = nestingLevel;\r\n        this._types[index] = type;\r\n        this._length++;\r\n        if (nestingLevel < 30) {\r\n            this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\r\n        }\r\n    }\r\n    toIndentRanges() {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            let startIndexes = new Uint32Array(this._length);\r\n            let endIndexes = new Uint32Array(this._length);\r\n            for (let i = 0; i < this._length; i++) {\r\n                startIndexes[i] = this._startIndexes[i];\r\n                endIndexes[i] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, this._types);\r\n        }\r\n        else {\r\n            let entries = 0;\r\n            let maxLevel = this._nestingLevelCounts.length;\r\n            for (let i = 0; i < this._nestingLevelCounts.length; i++) {\r\n                let n = this._nestingLevelCounts[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxLevel = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            let startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let types = [];\r\n            for (let i = 0, k = 0; i < this._length; i++) {\r\n                let level = this._nestingLevels[i];\r\n                if (level < maxLevel || (level === maxLevel && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = this._startIndexes[i];\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    types[k] = this._types[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, types);\r\n        }\r\n    }\r\n}\r\nexport function sanitizeRanges(rangeData, limit) {\r\n    let sorted = rangeData.sort((d1, d2) => {\r\n        let diff = d1.start - d2.start;\r\n        if (diff === 0) {\r\n            diff = d1.rank - d2.rank;\r\n        }\r\n        return diff;\r\n    });\r\n    let collector = new RangesCollector(limit);\r\n    let top = undefined;\r\n    let previous = [];\r\n    for (let entry of sorted) {\r\n        if (!top) {\r\n            top = entry;\r\n            collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n        }\r\n        else {\r\n            if (entry.start > top.start) {\r\n                if (entry.end <= top.end) {\r\n                    previous.push(top);\r\n                    top = entry;\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n                else {\r\n                    if (entry.start > top.end) {\r\n                        do {\r\n                            top = previous.pop();\r\n                        } while (top && entry.start > top.end);\r\n                        if (top) {\r\n                            previous.push(top);\r\n                        }\r\n                        top = entry;\r\n                    }\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return collector.toIndentRanges();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { sanitizeRanges } from './syntaxRangeProvider.js';\r\nexport const ID_INIT_PROVIDER = 'init';\r\nexport class InitializingRangeProvider {\r\n    constructor(editorModel, initialRanges, onTimeout, timeoutTime) {\r\n        this.editorModel = editorModel;\r\n        this.id = ID_INIT_PROVIDER;\r\n        if (initialRanges.length) {\r\n            let toDecorationRange = (range) => {\r\n                return {\r\n                    range: {\r\n                        startLineNumber: range.startLineNumber,\r\n                        startColumn: 0,\r\n                        endLineNumber: range.endLineNumber,\r\n                        endColumn: editorModel.getLineLength(range.endLineNumber)\r\n                    },\r\n                    options: {\r\n                        description: 'folding-initializing-range-provider',\r\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\r\n                    }\r\n                };\r\n            };\r\n            this.decorationIds = editorModel.deltaDecorations([], initialRanges.map(toDecorationRange));\r\n            this.timeout = setTimeout(onTimeout, timeoutTime);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.decorationIds) {\r\n            this.editorModel.deltaDecorations(this.decorationIds, []);\r\n            this.decorationIds = undefined;\r\n        }\r\n        if (typeof this.timeout === 'number') {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n    compute(cancelationToken) {\r\n        let foldingRangeData = [];\r\n        if (this.decorationIds) {\r\n            for (let id of this.decorationIds) {\r\n                let range = this.editorModel.getDecorationRange(id);\r\n                if (range) {\r\n                    foldingRangeData.push({ start: range.startLineNumber, end: range.endLineNumber, rank: 1 });\r\n                }\r\n            }\r\n        }\r\n        return Promise.resolve(sanitizeRanges(foldingRangeData, Number.MAX_VALUE));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './folding.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { RunOnceScheduler, Delayer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { FoldingModel, setCollapseStateAtLevel, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateForMatchingLines, setCollapseStateForType, setCollapseStateForRest, toggleCollapseState, setCollapseStateUp, getParentFoldLine as getParentFoldLine, getPreviousFoldLine, getNextFoldLine } from './foldingModel.js';\r\nimport { FoldingDecorationProvider, foldingCollapsedIcon, foldingExpandedIcon } from './foldingDecorations.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { HiddenRangeModel } from './hiddenRangeModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IndentRangeProvider } from './indentRangeProvider.js';\r\nimport { FoldingRangeProviderRegistry, FoldingRangeKind } from '../../common/modes.js';\r\nimport { SyntaxRangeProvider, ID_SYNTAX_PROVIDER } from './syntaxRangeProvider.js';\r\nimport { InitializingRangeProvider, ID_INIT_PROVIDER } from './intializingRangeProvider.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorSelectionBackground, transparent, iconForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nconst CONTEXT_FOLDING_ENABLED = new RawContextKey('foldingEnabled', false);\r\nlet FoldingController = class FoldingController extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this.contextKeyService = contextKeyService;\r\n        this.localToDispose = this._register(new DisposableStore());\r\n        this.editor = editor;\r\n        const options = this.editor.getOptions();\r\n        this._isEnabled = options.get(36 /* folding */);\r\n        this._useFoldingProviders = options.get(37 /* foldingStrategy */) !== 'indentation';\r\n        this._unfoldOnClickAfterEndOfLine = options.get(40 /* unfoldOnClickAfterEndOfLine */);\r\n        this._restoringViewState = false;\r\n        this._currentModelHasFoldedImports = false;\r\n        this._foldingImportsByDefault = options.get(39 /* foldingImportsByDefault */);\r\n        this.foldingModel = null;\r\n        this.hiddenRangeModel = null;\r\n        this.rangeProvider = null;\r\n        this.foldingRegionPromise = null;\r\n        this.foldingStateMemento = null;\r\n        this.foldingModelPromise = null;\r\n        this.updateScheduler = null;\r\n        this.cursorChangedScheduler = null;\r\n        this.mouseDownInfo = null;\r\n        this.foldingDecorationProvider = new FoldingDecorationProvider(editor);\r\n        this.foldingDecorationProvider.autoHideFoldingControls = options.get(99 /* showFoldingControls */) === 'mouseover';\r\n        this.foldingDecorationProvider.showFoldingHighlights = options.get(38 /* foldingHighlight */);\r\n        this.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(this.contextKeyService);\r\n        this.foldingEnabled.set(this._isEnabled);\r\n        this._register(this.editor.onDidChangeModel(() => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(36 /* folding */)) {\r\n                this._isEnabled = this.editor.getOptions().get(36 /* folding */);\r\n                this.foldingEnabled.set(this._isEnabled);\r\n                this.onModelChanged();\r\n            }\r\n            if (e.hasChanged(99 /* showFoldingControls */) || e.hasChanged(38 /* foldingHighlight */)) {\r\n                const options = this.editor.getOptions();\r\n                this.foldingDecorationProvider.autoHideFoldingControls = options.get(99 /* showFoldingControls */) === 'mouseover';\r\n                this.foldingDecorationProvider.showFoldingHighlights = options.get(38 /* foldingHighlight */);\r\n                this.onModelContentChanged();\r\n            }\r\n            if (e.hasChanged(37 /* foldingStrategy */)) {\r\n                this._useFoldingProviders = this.editor.getOptions().get(37 /* foldingStrategy */) !== 'indentation';\r\n                this.onFoldingStrategyChanged();\r\n            }\r\n            if (e.hasChanged(40 /* unfoldOnClickAfterEndOfLine */)) {\r\n                this._unfoldOnClickAfterEndOfLine = this.editor.getOptions().get(40 /* unfoldOnClickAfterEndOfLine */);\r\n            }\r\n            if (e.hasChanged(39 /* foldingImportsByDefault */)) {\r\n                this._foldingImportsByDefault = this.editor.getOptions().get(39 /* foldingImportsByDefault */);\r\n            }\r\n        }));\r\n        this.onModelChanged();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(FoldingController.ID);\r\n    }\r\n    /**\r\n     * Store view state.\r\n     */\r\n    saveViewState() {\r\n        let model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\r\n            return {};\r\n        }\r\n        if (this.foldingModel) { // disposed ?\r\n            let collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel.getMemento();\r\n            let provider = this.rangeProvider ? this.rangeProvider.id : undefined;\r\n            return { collapsedRegions, lineCount: model.getLineCount(), provider, foldedImports: this._currentModelHasFoldedImports };\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Restore view state.\r\n     */\r\n    restoreViewState(state) {\r\n        let model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\r\n            return;\r\n        }\r\n        if (!state || state.lineCount !== model.getLineCount()) {\r\n            return;\r\n        }\r\n        this._currentModelHasFoldedImports = !!state.foldedImports;\r\n        if (!state.collapsedRegions) {\r\n            return;\r\n        }\r\n        if (state.provider === ID_SYNTAX_PROVIDER || state.provider === ID_INIT_PROVIDER) {\r\n            this.foldingStateMemento = state;\r\n        }\r\n        const collapsedRegions = state.collapsedRegions;\r\n        // set the hidden ranges right away, before waiting for the folding model.\r\n        if (this.hiddenRangeModel.applyMemento(collapsedRegions)) {\r\n            const foldingModel = this.getFoldingModel();\r\n            if (foldingModel) {\r\n                foldingModel.then(foldingModel => {\r\n                    if (foldingModel) {\r\n                        this._restoringViewState = true;\r\n                        try {\r\n                            foldingModel.applyMemento(collapsedRegions);\r\n                        }\r\n                        finally {\r\n                            this._restoringViewState = false;\r\n                        }\r\n                    }\r\n                }).then(undefined, onUnexpectedError);\r\n            }\r\n        }\r\n    }\r\n    onModelChanged() {\r\n        this.localToDispose.clear();\r\n        let model = this.editor.getModel();\r\n        if (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\r\n            // huge files get no view model, so they cannot support hidden areas\r\n            return;\r\n        }\r\n        this._currentModelHasFoldedImports = false;\r\n        this.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\r\n        this.localToDispose.add(this.foldingModel);\r\n        this.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\r\n        this.localToDispose.add(this.hiddenRangeModel);\r\n        this.localToDispose.add(this.hiddenRangeModel.onDidChange(hr => this.onHiddenRangesChanges(hr)));\r\n        this.updateScheduler = new Delayer(200);\r\n        this.cursorChangedScheduler = new RunOnceScheduler(() => this.revealCursor(), 200);\r\n        this.localToDispose.add(this.cursorChangedScheduler);\r\n        this.localToDispose.add(FoldingRangeProviderRegistry.onDidChange(() => this.onFoldingStrategyChanged()));\r\n        this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(() => this.onFoldingStrategyChanged())); // covers model language changes as well\r\n        this.localToDispose.add(this.editor.onDidChangeModelContent(() => this.onModelContentChanged()));\r\n        this.localToDispose.add(this.editor.onDidChangeCursorPosition(() => this.onCursorPositionChanged()));\r\n        this.localToDispose.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\r\n        this.localToDispose.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\r\n        this.localToDispose.add({\r\n            dispose: () => {\r\n                if (this.foldingRegionPromise) {\r\n                    this.foldingRegionPromise.cancel();\r\n                    this.foldingRegionPromise = null;\r\n                }\r\n                if (this.updateScheduler) {\r\n                    this.updateScheduler.cancel();\r\n                }\r\n                this.updateScheduler = null;\r\n                this.foldingModel = null;\r\n                this.foldingModelPromise = null;\r\n                this.hiddenRangeModel = null;\r\n                this.cursorChangedScheduler = null;\r\n                this.foldingStateMemento = null;\r\n                if (this.rangeProvider) {\r\n                    this.rangeProvider.dispose();\r\n                }\r\n                this.rangeProvider = null;\r\n            }\r\n        });\r\n        this.onModelContentChanged();\r\n    }\r\n    onFoldingStrategyChanged() {\r\n        if (this.rangeProvider) {\r\n            this.rangeProvider.dispose();\r\n        }\r\n        this.rangeProvider = null;\r\n        this.onModelContentChanged();\r\n    }\r\n    getRangeProvider(editorModel) {\r\n        if (this.rangeProvider) {\r\n            return this.rangeProvider;\r\n        }\r\n        this.rangeProvider = new IndentRangeProvider(editorModel); // fallback\r\n        if (this._useFoldingProviders && this.foldingModel) {\r\n            let foldingProviders = FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);\r\n            if (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {\r\n                const rangeProvider = this.rangeProvider = new InitializingRangeProvider(editorModel, this.foldingStateMemento.collapsedRegions, () => {\r\n                    // if after 30 the InitializingRangeProvider is still not replaced, force a refresh\r\n                    this.foldingStateMemento = null;\r\n                    this.onFoldingStrategyChanged();\r\n                }, 30000);\r\n                return rangeProvider; // keep memento in case there are still no foldingProviders on the next request.\r\n            }\r\n            else if (foldingProviders.length > 0) {\r\n                this.rangeProvider = new SyntaxRangeProvider(editorModel, foldingProviders, () => this.onModelContentChanged());\r\n            }\r\n        }\r\n        this.foldingStateMemento = null;\r\n        return this.rangeProvider;\r\n    }\r\n    getFoldingModel() {\r\n        return this.foldingModelPromise;\r\n    }\r\n    onModelContentChanged() {\r\n        if (this.updateScheduler) {\r\n            if (this.foldingRegionPromise) {\r\n                this.foldingRegionPromise.cancel();\r\n                this.foldingRegionPromise = null;\r\n            }\r\n            this.foldingModelPromise = this.updateScheduler.trigger(() => {\r\n                const foldingModel = this.foldingModel;\r\n                if (!foldingModel) { // null if editor has been disposed, or folding turned off\r\n                    return null;\r\n                }\r\n                const provider = this.getRangeProvider(foldingModel.textModel);\r\n                let foldingRegionPromise = this.foldingRegionPromise = createCancelablePromise(token => provider.compute(token));\r\n                return foldingRegionPromise.then(foldingRanges => {\r\n                    if (foldingRanges && foldingRegionPromise === this.foldingRegionPromise) { // new request or cancelled in the meantime?\r\n                        let scrollState;\r\n                        if (this._foldingImportsByDefault && !this._currentModelHasFoldedImports) {\r\n                            const hasChanges = foldingRanges.setCollapsedAllOfType(FoldingRangeKind.Imports.value, true);\r\n                            if (hasChanges) {\r\n                                scrollState = StableEditorScrollState.capture(this.editor);\r\n                                this._currentModelHasFoldedImports = hasChanges;\r\n                            }\r\n                        }\r\n                        // some cursors might have moved into hidden regions, make sure they are in expanded regions\r\n                        let selections = this.editor.getSelections();\r\n                        let selectionLineNumbers = selections ? selections.map(s => s.startLineNumber) : [];\r\n                        foldingModel.update(foldingRanges, selectionLineNumbers);\r\n                        if (scrollState) {\r\n                            scrollState.restore(this.editor);\r\n                        }\r\n                    }\r\n                    return foldingModel;\r\n                });\r\n            }).then(undefined, (err) => {\r\n                onUnexpectedError(err);\r\n                return null;\r\n            });\r\n        }\r\n    }\r\n    onHiddenRangesChanges(hiddenRanges) {\r\n        if (this.hiddenRangeModel && hiddenRanges.length && !this._restoringViewState) {\r\n            let selections = this.editor.getSelections();\r\n            if (selections) {\r\n                if (this.hiddenRangeModel.adjustSelections(selections)) {\r\n                    this.editor.setSelections(selections);\r\n                }\r\n            }\r\n        }\r\n        this.editor.setHiddenAreas(hiddenRanges);\r\n    }\r\n    onCursorPositionChanged() {\r\n        if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\r\n            this.cursorChangedScheduler.schedule();\r\n        }\r\n    }\r\n    revealCursor() {\r\n        const foldingModel = this.getFoldingModel();\r\n        if (!foldingModel) {\r\n            return;\r\n        }\r\n        foldingModel.then(foldingModel => {\r\n            if (foldingModel) {\r\n                let selections = this.editor.getSelections();\r\n                if (selections && selections.length > 0) {\r\n                    let toToggle = [];\r\n                    for (let selection of selections) {\r\n                        let lineNumber = selection.selectionStartLineNumber;\r\n                        if (this.hiddenRangeModel && this.hiddenRangeModel.isHidden(lineNumber)) {\r\n                            toToggle.push(...foldingModel.getAllRegionsAtLine(lineNumber, r => r.isCollapsed && lineNumber > r.startLineNumber));\r\n                        }\r\n                    }\r\n                    if (toToggle.length) {\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        this.reveal(selections[0].getPosition());\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    onEditorMouseDown(e) {\r\n        this.mouseDownInfo = null;\r\n        if (!this.hiddenRangeModel || !e.target || !e.target.range) {\r\n            return;\r\n        }\r\n        if (!e.event.leftButton && !e.event.middleButton) {\r\n            return;\r\n        }\r\n        const range = e.target.range;\r\n        let iconClicked = false;\r\n        switch (e.target.type) {\r\n            case 4 /* GUTTER_LINE_DECORATIONS */:\r\n                const data = e.target.detail;\r\n                const offsetLeftInGutter = e.target.element.offsetLeft;\r\n                const gutterOffsetX = data.offsetX - offsetLeftInGutter;\r\n                // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\r\n                // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\r\n                if (gutterOffsetX < 5) { // the whitespace between the border and the real folding icon border is 5px\r\n                    return;\r\n                }\r\n                iconClicked = true;\r\n                break;\r\n            case 7 /* CONTENT_EMPTY */: {\r\n                if (this._unfoldOnClickAfterEndOfLine && this.hiddenRangeModel.hasRanges()) {\r\n                    const data = e.target.detail;\r\n                    if (!data.isAfterLines) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            case 6 /* CONTENT_TEXT */: {\r\n                if (this.hiddenRangeModel.hasRanges()) {\r\n                    let model = this.editor.getModel();\r\n                    if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n        this.mouseDownInfo = { lineNumber: range.startLineNumber, iconClicked };\r\n    }\r\n    onEditorMouseUp(e) {\r\n        const foldingModel = this.getFoldingModel();\r\n        if (!foldingModel || !this.mouseDownInfo || !e.target) {\r\n            return;\r\n        }\r\n        let lineNumber = this.mouseDownInfo.lineNumber;\r\n        let iconClicked = this.mouseDownInfo.iconClicked;\r\n        let range = e.target.range;\r\n        if (!range || range.startLineNumber !== lineNumber) {\r\n            return;\r\n        }\r\n        if (iconClicked) {\r\n            if (e.target.type !== 4 /* GUTTER_LINE_DECORATIONS */) {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let model = this.editor.getModel();\r\n            if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\r\n                return;\r\n            }\r\n        }\r\n        foldingModel.then(foldingModel => {\r\n            if (foldingModel) {\r\n                let region = foldingModel.getRegionAtLine(lineNumber);\r\n                if (region && region.startLineNumber === lineNumber) {\r\n                    let isCollapsed = region.isCollapsed;\r\n                    if (iconClicked || isCollapsed) {\r\n                        let surrounding = e.event.altKey;\r\n                        let toToggle = [];\r\n                        if (surrounding) {\r\n                            let filter = (otherRegion) => !otherRegion.containedBy(region) && !region.containedBy(otherRegion);\r\n                            let toMaybeToggle = foldingModel.getRegionsInside(null, filter);\r\n                            for (const r of toMaybeToggle) {\r\n                                if (r.isCollapsed) {\r\n                                    toToggle.push(r);\r\n                                }\r\n                            }\r\n                            // if any surrounding regions are folded, unfold those. Otherwise, fold all surrounding\r\n                            if (toToggle.length === 0) {\r\n                                toToggle = toMaybeToggle;\r\n                            }\r\n                        }\r\n                        else {\r\n                            let recursive = e.event.middleButton || e.event.shiftKey;\r\n                            if (recursive) {\r\n                                for (const r of foldingModel.getRegionsInside(region)) {\r\n                                    if (r.isCollapsed === isCollapsed) {\r\n                                        toToggle.push(r);\r\n                                    }\r\n                                }\r\n                            }\r\n                            // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\r\n                            if (isCollapsed || !recursive || toToggle.length === 0) {\r\n                                toToggle.push(region);\r\n                            }\r\n                        }\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        this.reveal({ lineNumber, column: 1 });\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    reveal(position) {\r\n        this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n    }\r\n};\r\nFoldingController.ID = 'editor.contrib.folding';\r\nFoldingController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], FoldingController);\r\nexport { FoldingController };\r\nclass FoldingAction extends EditorAction {\r\n    runEditorCommand(accessor, editor, args) {\r\n        let foldingController = FoldingController.get(editor);\r\n        if (!foldingController) {\r\n            return;\r\n        }\r\n        let foldingModelPromise = foldingController.getFoldingModel();\r\n        if (foldingModelPromise) {\r\n            this.reportTelemetry(accessor, editor);\r\n            return foldingModelPromise.then(foldingModel => {\r\n                if (foldingModel) {\r\n                    this.invoke(foldingController, foldingModel, editor, args);\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                        foldingController.reveal(selection.getStartPosition());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getSelectedLines(editor) {\r\n        let selections = editor.getSelections();\r\n        return selections ? selections.map(s => s.startLineNumber) : [];\r\n    }\r\n    getLineNumbers(args, editor) {\r\n        if (args && args.selectionLines) {\r\n            return args.selectionLines.map(l => l + 1); // to 0-bases line numbers\r\n        }\r\n        return this.getSelectedLines(editor);\r\n    }\r\n    run(_accessor, _editor) {\r\n    }\r\n}\r\nfunction foldingArgumentsConstraint(args) {\r\n    if (!types.isUndefined(args)) {\r\n        if (!types.isObject(args)) {\r\n            return false;\r\n        }\r\n        const foldingArgs = args;\r\n        if (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.selectionLines) && (!types.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nclass UnfoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfold',\r\n            label: nls.localize('unfoldAction.label', \"Unfold\"),\r\n            alias: 'Unfold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Unfold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Unfold editor argument',\r\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\n\t\t\t\t\t\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\n\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t`,\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                    'default': 1\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                    'default': 'down'\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, args) {\r\n        let levels = args && args.levels || 1;\r\n        let lineNumbers = this.getLineNumbers(args, editor);\r\n        if (args && args.direction === 'up') {\r\n            setCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\r\n        }\r\n        else {\r\n            setCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\r\n        }\r\n    }\r\n}\r\nclass UnFoldRecursivelyAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldRecursively',\r\n            label: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\r\n            alias: 'Unfold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, _args) {\r\n        setCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\r\n    }\r\n}\r\nclass FoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.fold',\r\n            label: nls.localize('foldAction.label', \"Fold\"),\r\n            alias: 'Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Fold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Fold editor argument',\r\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t\t* 'levels': Number of levels to fold.\n\t\t\t\t\t\t\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\n\t\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\n\t\t\t\t\t\t`,\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, args) {\r\n        let lineNumbers = this.getLineNumbers(args, editor);\r\n        const levels = args && args.levels;\r\n        const direction = args && args.direction;\r\n        if (typeof levels !== 'number' && typeof direction !== 'string') {\r\n            // fold the region at the location or if already collapsed, the first uncollapsed parent instead.\r\n            setCollapseStateUp(foldingModel, true, lineNumbers);\r\n        }\r\n        else {\r\n            if (direction === 'up') {\r\n                setCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n            else {\r\n                setCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ToggleFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.toggleFold',\r\n            label: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\r\n            alias: 'Toggle Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 42 /* KEY_L */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        toggleCollapseState(foldingModel, 1, selectedLines);\r\n    }\r\n}\r\nclass FoldRecursivelyAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldRecursively',\r\n            label: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\r\n            alias: 'Fold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\r\n    }\r\n}\r\nclass FoldAllBlockCommentsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllBlockComments',\r\n            label: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\r\n            alias: 'Fold All Block Comments',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 85 /* US_SLASH */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let comments = LanguageConfigurationRegistry.getComments(editorModel.getLanguageIdentifier().id);\r\n            if (comments && comments.blockCommentStartToken) {\r\n                let regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass FoldAllRegionsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllMarkerRegions',\r\n            label: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\r\n            alias: 'Fold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 29 /* KEY_8 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                let regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass UnfoldAllRegionsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAllMarkerRegions',\r\n            label: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\r\n            alias: 'Unfold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 30 /* KEY_9 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                let regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, false);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass FoldAllRegionsExceptAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllExcept',\r\n            label: nls.localize('foldAllExcept.label', \"Fold All Regions Except Selected\"),\r\n            alias: 'Fold All Regions Except Selected',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 83 /* US_MINUS */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateForRest(foldingModel, true, selectedLines);\r\n    }\r\n}\r\nclass UnfoldAllRegionsExceptAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAllExcept',\r\n            label: nls.localize('unfoldAllExcept.label', \"Unfold All Regions Except Selected\"),\r\n            alias: 'Unfold All Regions Except Selected',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 81 /* US_EQUAL */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateForRest(foldingModel, false, selectedLines);\r\n    }\r\n}\r\nclass FoldAllAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAll',\r\n            label: nls.localize('foldAllAction.label', \"Fold All\"),\r\n            alias: 'Fold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 21 /* KEY_0 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, true);\r\n    }\r\n}\r\nclass UnfoldAllAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAll',\r\n            label: nls.localize('unfoldAllAction.label', \"Unfold All\"),\r\n            alias: 'Unfold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 40 /* KEY_J */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, false);\r\n    }\r\n}\r\nclass FoldLevelAction extends FoldingAction {\r\n    getFoldingLevel() {\r\n        return parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        setCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\r\n    }\r\n}\r\nFoldLevelAction.ID_PREFIX = 'editor.foldLevel';\r\nFoldLevelAction.ID = (level) => FoldLevelAction.ID_PREFIX + level;\r\n/** Action to go to the parent fold of current line */\r\nclass GotoParentFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoParentFold',\r\n            label: nls.localize('gotoParentFold.label', \"Go to Parent Fold\"),\r\n            alias: 'Go to Parent Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        if (selectedLines.length > 0) {\r\n            let startLineNumber = getParentFoldLine(selectedLines[0], foldingModel);\r\n            if (startLineNumber !== null) {\r\n                editor.setSelection({\r\n                    startLineNumber: startLineNumber,\r\n                    startColumn: 1,\r\n                    endLineNumber: startLineNumber,\r\n                    endColumn: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/** Action to go to the previous fold of current line */\r\nclass GotoPreviousFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoPreviousFold',\r\n            label: nls.localize('gotoPreviousFold.label', \"Go to Previous Fold\"),\r\n            alias: 'Go to Previous Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        if (selectedLines.length > 0) {\r\n            let startLineNumber = getPreviousFoldLine(selectedLines[0], foldingModel);\r\n            if (startLineNumber !== null) {\r\n                editor.setSelection({\r\n                    startLineNumber: startLineNumber,\r\n                    startColumn: 1,\r\n                    endLineNumber: startLineNumber,\r\n                    endColumn: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/** Action to go to the next fold of current line */\r\nclass GotoNextFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoNextFold',\r\n            label: nls.localize('gotoNextFold.label', \"Go to Next Fold\"),\r\n            alias: 'Go to Next Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        if (selectedLines.length > 0) {\r\n            let startLineNumber = getNextFoldLine(selectedLines[0], foldingModel);\r\n            if (startLineNumber !== null) {\r\n                editor.setSelection({\r\n                    startLineNumber: startLineNumber,\r\n                    startColumn: 1,\r\n                    endLineNumber: startLineNumber,\r\n                    endColumn: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(FoldingController.ID, FoldingController);\r\nregisterEditorAction(UnfoldAction);\r\nregisterEditorAction(UnFoldRecursivelyAction);\r\nregisterEditorAction(FoldAction);\r\nregisterEditorAction(FoldRecursivelyAction);\r\nregisterEditorAction(FoldAllAction);\r\nregisterEditorAction(UnfoldAllAction);\r\nregisterEditorAction(FoldAllBlockCommentsAction);\r\nregisterEditorAction(FoldAllRegionsAction);\r\nregisterEditorAction(UnfoldAllRegionsAction);\r\nregisterEditorAction(FoldAllRegionsExceptAction);\r\nregisterEditorAction(UnfoldAllRegionsExceptAction);\r\nregisterEditorAction(ToggleFoldAction);\r\nregisterEditorAction(GotoParentFoldAction);\r\nregisterEditorAction(GotoPreviousFoldAction);\r\nregisterEditorAction(GotoNextFoldAction);\r\nfor (let i = 1; i <= 7; i++) {\r\n    registerInstantiatedEditorAction(new FoldLevelAction({\r\n        id: FoldLevelAction.ID(i),\r\n        label: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\r\n        alias: `Fold Level ${i}`,\r\n        precondition: CONTEXT_FOLDING_ENABLED,\r\n        kbOpts: {\r\n            kbExpr: EditorContextKeys.editorTextFocus,\r\n            primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | (21 /* KEY_0 */ + i)),\r\n            weight: 100 /* EditorContrib */\r\n        }\r\n    }));\r\n}\r\nexport const foldBackgroundBackground = registerColor('editor.foldBackground', { light: transparent(editorSelectionBackground, 0.3), dark: transparent(editorSelectionBackground, 0.3), hc: null }, nls.localize('foldBackgroundBackground', \"Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport const editorFoldForeground = registerColor('editorGutter.foldingControlForeground', { dark: iconForeground, light: iconForeground, hc: iconForeground }, nls.localize('editorGutter.foldingControlForeground', 'Color of the folding control in the editor gutter.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foldBackground = theme.getColor(foldBackgroundBackground);\r\n    if (foldBackground) {\r\n        collector.addRule(`.monaco-editor .folded-background { background-color: ${foldBackground}; }`);\r\n    }\r\n    const editorFoldColor = theme.getColor(editorFoldForeground);\r\n    if (editorFoldColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingExpandedIcon)},\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingCollapsedIcon)} {\n\t\t\tcolor: ${editorFoldColor} !important;\n\t\t}\n\t\t`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorZoom } from '../../common/config/editorZoom.js';\r\nclass EditorFontZoomIn extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomIn',\r\n            label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\r\n            alias: 'Editor Font Zoom In',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\r\n    }\r\n}\r\nclass EditorFontZoomOut extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomOut',\r\n            label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\r\n            alias: 'Editor Font Zoom Out',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\r\n    }\r\n}\r\nclass EditorFontZoomReset extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomReset',\r\n            label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\r\n            alias: 'Editor Font Zoom Reset',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(0);\r\n    }\r\n}\r\nregisterEditorAction(EditorFontZoomIn);\r\nregisterEditorAction(EditorFontZoomOut);\r\nregisterEditorAction(EditorFontZoomReset);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DocumentRangeFormattingEditProviderRegistry, OnTypeFormattingEditProviderRegistry } from '../../common/modes.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { getOnTypeFormattingEdits, alertFormattingEdits, formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider } from './format.js';\r\nimport { FormattingEdit } from './formattingEdit.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Progress, IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nlet FormatOnType = class FormatOnType {\r\n    constructor(editor, _workerService) {\r\n        this._workerService = _workerService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModel = new DisposableStore();\r\n        this._editor = editor;\r\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._callOnDispose.add(OnTypeFormattingEditProviderRegistry.onDidChange(this._update, this));\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        this._callOnModel.dispose();\r\n    }\r\n    _update() {\r\n        // clean up\r\n        this._callOnModel.clear();\r\n        // we are disabled\r\n        if (!this._editor.getOption(47 /* formatOnType */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        // no support\r\n        const [support] = OnTypeFormattingEditProviderRegistry.ordered(model);\r\n        if (!support || !support.autoFormatTriggerCharacters) {\r\n            return;\r\n        }\r\n        // register typing listeners that will trigger the format\r\n        let triggerChars = new CharacterSet();\r\n        for (let ch of support.autoFormatTriggerCharacters) {\r\n            triggerChars.add(ch.charCodeAt(0));\r\n        }\r\n        this._callOnModel.add(this._editor.onDidType((text) => {\r\n            let lastCharCode = text.charCodeAt(text.length - 1);\r\n            if (triggerChars.has(lastCharCode)) {\r\n                this._trigger(String.fromCharCode(lastCharCode));\r\n            }\r\n        }));\r\n    }\r\n    _trigger(ch) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._editor.getSelections().length > 1) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const position = this._editor.getPosition();\r\n        let canceled = false;\r\n        // install a listener that checks if edits happens before the\r\n        // position on which we format right now. If so, we won't\r\n        // apply the format edits\r\n        const unbind = this._editor.onDidChangeModelContent((e) => {\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                // cancel only once\r\n                canceled = true;\r\n                unbind.dispose();\r\n                return;\r\n            }\r\n            for (let i = 0, len = e.changes.length; i < len; i++) {\r\n                const change = e.changes[i];\r\n                if (change.range.endLineNumber <= position.lineNumber) {\r\n                    // cancel only once\r\n                    canceled = true;\r\n                    unbind.dispose();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        getOnTypeFormattingEdits(this._workerService, model, position, ch, model.getFormattingOptions()).then(edits => {\r\n            unbind.dispose();\r\n            if (canceled) {\r\n                return;\r\n            }\r\n            if (isNonEmptyArray(edits)) {\r\n                FormattingEdit.execute(this._editor, edits, true);\r\n                alertFormattingEdits(edits);\r\n            }\r\n        }, (err) => {\r\n            unbind.dispose();\r\n            throw err;\r\n        });\r\n    }\r\n};\r\nFormatOnType.ID = 'editor.contrib.autoFormat';\r\nFormatOnType = __decorate([\r\n    __param(1, IEditorWorkerService)\r\n], FormatOnType);\r\nlet FormatOnPaste = class FormatOnPaste {\r\n    constructor(editor, _instantiationService) {\r\n        this.editor = editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModel = new DisposableStore();\r\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._callOnDispose.add(DocumentRangeFormattingEditProviderRegistry.onDidChange(this._update, this));\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        this._callOnModel.dispose();\r\n    }\r\n    _update() {\r\n        // clean up\r\n        this._callOnModel.clear();\r\n        // we are disabled\r\n        if (!this.editor.getOption(46 /* formatOnPaste */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        // no formatter\r\n        if (!DocumentRangeFormattingEditProviderRegistry.has(this.editor.getModel())) {\r\n            return;\r\n        }\r\n        this._callOnModel.add(this.editor.onDidPaste(({ range }) => this._trigger(range)));\r\n    }\r\n    _trigger(range) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this.editor.getSelections().length > 1) {\r\n            return;\r\n        }\r\n        this._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, 2 /* Silent */, Progress.None, CancellationToken.None).catch(onUnexpectedError);\r\n    }\r\n};\r\nFormatOnPaste.ID = 'editor.contrib.formatOnPaste';\r\nFormatOnPaste = __decorate([\r\n    __param(1, IInstantiationService)\r\n], FormatOnPaste);\r\nclass FormatDocumentAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.formatDocument',\r\n            label: nls.localize('formatDocument.label', \"Format Document\"),\r\n            alias: 'Format Document',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 36 /* KEY_F */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 39 /* KEY_I */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.3\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (editor.hasModel()) {\r\n                const instaService = accessor.get(IInstantiationService);\r\n                const progressService = accessor.get(IEditorProgressService);\r\n                yield progressService.showWhile(instaService.invokeFunction(formatDocumentWithSelectedProvider, editor, 1 /* Explicit */, Progress.None, CancellationToken.None), 250);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass FormatSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.formatSelection',\r\n            label: nls.localize('formatSelection.label', \"Format Selection\"),\r\n            alias: 'Format Selection',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 36 /* KEY_F */),\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                when: EditorContextKeys.hasNonEmptySelection,\r\n                group: '1_modification',\r\n                order: 1.31\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const instaService = accessor.get(IInstantiationService);\r\n            const model = editor.getModel();\r\n            const ranges = editor.getSelections().map(range => {\r\n                return range.isEmpty()\r\n                    ? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber))\r\n                    : range;\r\n            });\r\n            const progressService = accessor.get(IEditorProgressService);\r\n            yield progressService.showWhile(instaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, 1 /* Explicit */, Progress.None, CancellationToken.None), 250);\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(FormatOnType.ID, FormatOnType);\r\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste);\r\nregisterEditorAction(FormatDocumentAction);\r\nregisterEditorAction(FormatSelectionAction);\r\n// this is the old format action that does both (format document OR format selection)\r\n// and we keep it here such that existing keybinding configurations etc will still work\r\nCommandsRegistry.registerCommand('editor.action.format', (accessor) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n    if (!editor || !editor.hasModel()) {\r\n        return;\r\n    }\r\n    const commandService = accessor.get(ICommandService);\r\n    if (editor.getSelection().isEmpty()) {\r\n        yield commandService.executeCommand('editor.action.formatDocument');\r\n    }\r\n    else {\r\n        yield commandService.executeCommand('editor.action.formatSelection');\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { equals } from '../../../base/common/arrays.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nexport class TreeElement {\r\n    remove() {\r\n        if (this.parent) {\r\n            this.parent.children.delete(this.id);\r\n        }\r\n    }\r\n    static findId(candidate, container) {\r\n        // complex id-computation which contains the origin/extension,\r\n        // the parent path, and some dedupe logic when names collide\r\n        let candidateId;\r\n        if (typeof candidate === 'string') {\r\n            candidateId = `${container.id}/${candidate}`;\r\n        }\r\n        else {\r\n            candidateId = `${container.id}/${candidate.name}`;\r\n            if (container.children.get(candidateId) !== undefined) {\r\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\r\n            }\r\n        }\r\n        let id = candidateId;\r\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\r\n            id = `${candidateId}_${i}`;\r\n        }\r\n        return id;\r\n    }\r\n    static empty(element) {\r\n        return element.children.size === 0;\r\n    }\r\n}\r\nexport class OutlineElement extends TreeElement {\r\n    constructor(id, parent, symbol) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.symbol = symbol;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineGroup extends TreeElement {\r\n    constructor(id, parent, label, order) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.label = label;\r\n        this.order = order;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineModel extends TreeElement {\r\n    constructor(uri) {\r\n        super();\r\n        this.uri = uri;\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n        this._groups = new Map();\r\n        this.children = new Map();\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n    }\r\n    static create(textModel, token) {\r\n        let key = this._keys.for(textModel, true);\r\n        let data = OutlineModel._requests.get(key);\r\n        if (!data) {\r\n            let source = new CancellationTokenSource();\r\n            data = {\r\n                promiseCnt: 0,\r\n                source,\r\n                promise: OutlineModel._create(textModel, source.token),\r\n                model: undefined,\r\n            };\r\n            OutlineModel._requests.set(key, data);\r\n            // keep moving average of request durations\r\n            const now = Date.now();\r\n            data.promise.then(() => {\r\n                this._requestDurations.update(textModel, Date.now() - now);\r\n            });\r\n        }\r\n        if (data.model) {\r\n            // resolved -> return data\r\n            return Promise.resolve(data.model);\r\n        }\r\n        // increase usage counter\r\n        data.promiseCnt += 1;\r\n        token.onCancellationRequested(() => {\r\n            // last -> cancel provider request, remove cached promise\r\n            if (--data.promiseCnt === 0) {\r\n                data.source.cancel();\r\n                OutlineModel._requests.delete(key);\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            data.promise.then(model => {\r\n                data.model = model;\r\n                resolve(model);\r\n            }, err => {\r\n                OutlineModel._requests.delete(key);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    static _create(textModel, token) {\r\n        const cts = new CancellationTokenSource(token);\r\n        const result = new OutlineModel(textModel.uri);\r\n        const provider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n        const promises = provider.map((provider, index) => {\r\n            var _a;\r\n            let id = TreeElement.findId(`provider_${index}`, result);\r\n            let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\r\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\r\n                for (const info of result || []) {\r\n                    OutlineModel._makeOutlineElement(info, group);\r\n                }\r\n                return group;\r\n            }, err => {\r\n                onUnexpectedExternalError(err);\r\n                return group;\r\n            }).then(group => {\r\n                if (!TreeElement.empty(group)) {\r\n                    result._groups.set(id, group);\r\n                }\r\n                else {\r\n                    group.remove();\r\n                }\r\n            });\r\n        });\r\n        const listener = DocumentSymbolProviderRegistry.onDidChange(() => {\r\n            const newProvider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n            if (!equals(newProvider, provider)) {\r\n                cts.cancel();\r\n            }\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\r\n                return OutlineModel._create(textModel, token);\r\n            }\r\n            else {\r\n                return result._compact();\r\n            }\r\n        }).finally(() => {\r\n            listener.dispose();\r\n        });\r\n    }\r\n    static _makeOutlineElement(info, container) {\r\n        let id = TreeElement.findId(info, container);\r\n        let res = new OutlineElement(id, container, info);\r\n        if (info.children) {\r\n            for (const childInfo of info.children) {\r\n                OutlineModel._makeOutlineElement(childInfo, res);\r\n            }\r\n        }\r\n        container.children.set(res.id, res);\r\n    }\r\n    _compact() {\r\n        let count = 0;\r\n        for (const [key, group] of this._groups) {\r\n            if (group.children.size === 0) { // empty\r\n                this._groups.delete(key);\r\n            }\r\n            else {\r\n                count += 1;\r\n            }\r\n        }\r\n        if (count !== 1) {\r\n            //\r\n            this.children = this._groups;\r\n        }\r\n        else {\r\n            // adopt all elements of the first group\r\n            let group = Iterable.first(this._groups.values());\r\n            for (let [, child] of group.children) {\r\n                child.parent = this;\r\n                this.children.set(child.id, child);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getTopLevelSymbols() {\r\n        const roots = [];\r\n        for (const child of this.children.values()) {\r\n            if (child instanceof OutlineElement) {\r\n                roots.push(child.symbol);\r\n            }\r\n            else {\r\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\r\n            }\r\n        }\r\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    asListOfDocumentSymbols() {\r\n        const roots = this.getTopLevelSymbols();\r\n        const bucket = [];\r\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\r\n        return bucket.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\r\n        for (const entry of entries) {\r\n            bucket.push({\r\n                kind: entry.kind,\r\n                tags: entry.tags,\r\n                name: entry.name,\r\n                detail: entry.detail,\r\n                containerName: entry.containerName || overrideContainerLabel,\r\n                range: entry.range,\r\n                selectionRange: entry.selectionRange,\r\n                children: undefined, // we flatten it...\r\n            });\r\n            // Recurse over children\r\n            if (entry.children) {\r\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\r\n            }\r\n        }\r\n    }\r\n}\r\nOutlineModel._requestDurations = new LanguageFeatureRequestDelays(DocumentSymbolProviderRegistry, 350);\r\nOutlineModel._requests = new LRUCache(9, 0.75);\r\nOutlineModel._keys = new class {\r\n    constructor() {\r\n        this._counter = 1;\r\n        this._data = new WeakMap();\r\n    }\r\n    for(textModel, version) {\r\n        return `${textModel.id}/${version ? textModel.getVersionId() : ''}/${this._hash(DocumentSymbolProviderRegistry.all(textModel))}`;\r\n    }\r\n    _hash(providers) {\r\n        let result = '';\r\n        for (const provider of providers) {\r\n            let n = this._data.get(provider);\r\n            if (typeof n === 'undefined') {\r\n                n = this._counter++;\r\n                this._data.set(provider, n);\r\n            }\r\n            result += n;\r\n        }\r\n        return result;\r\n    }\r\n};\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { OutlineModel } from './outlineModel.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport function getDocumentSymbols(document, flat, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const model = yield OutlineModel.create(document, token);\r\n        return flat\r\n            ? model.asListOfDocumentSymbols()\r\n            : model.getTopLevelSymbols();\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const [resource] = args;\r\n        assertType(URI.isUri(resource));\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            return getDocumentSymbols(model, false, CancellationToken.None);\r\n        }\r\n        const reference = yield accessor.get(ITextModelService).createModelReference(resource);\r\n        try {\r\n            return yield getDocumentSymbols(reference.object.textEditorModel, false, CancellationToken.None);\r\n        }\r\n        finally {\r\n            reference.dispose();\r\n        }\r\n    });\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function getSpaceCnt(str, tabSize) {\r\n    let spacesCnt = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str.charAt(i) === '\\t') {\r\n            spacesCnt += tabSize;\r\n        }\r\n        else {\r\n            spacesCnt++;\r\n        }\r\n    }\r\n    return spacesCnt;\r\n}\r\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\r\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\r\n    let result = '';\r\n    if (!insertSpaces) {\r\n        let tabsCnt = Math.floor(spacesCnt / tabSize);\r\n        spacesCnt = spacesCnt % tabSize;\r\n        for (let i = 0; i < tabsCnt; i++) {\r\n            result += '\\t';\r\n        }\r\n    }\r\n    for (let i = 0; i < spacesCnt; i++) {\r\n        result += ' ';\r\n    }\r\n    return result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ShiftCommand } from '../../common/commands/shiftCommand.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport * as indentUtils from './indentUtils.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nexport function getReindentEditOperations(model, startLineNumber, endLineNumber, inheritedIndent) {\r\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n        // Model is empty\r\n        return [];\r\n    }\r\n    let indentationRules = LanguageConfigurationRegistry.getIndentationRules(model.getLanguageIdentifier().id);\r\n    if (!indentationRules) {\r\n        return [];\r\n    }\r\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\r\n    // Skip `unIndentedLinePattern` lines\r\n    while (startLineNumber <= endLineNumber) {\r\n        if (!indentationRules.unIndentedLinePattern) {\r\n            break;\r\n        }\r\n        let text = model.getLineContent(startLineNumber);\r\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\r\n            break;\r\n        }\r\n        startLineNumber++;\r\n    }\r\n    if (startLineNumber > endLineNumber - 1) {\r\n        return [];\r\n    }\r\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n    const shiftIndent = (indentation, count) => {\r\n        count = count || 1;\r\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\r\n    };\r\n    const unshiftIndent = (indentation, count) => {\r\n        count = count || 1;\r\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\r\n    };\r\n    let indentEdits = [];\r\n    // indentation being passed to lines below\r\n    let globalIndent;\r\n    // Calculate indentation for the first line\r\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\r\n    let currentLineText = model.getLineContent(startLineNumber);\r\n    let adjustedLineContent = currentLineText;\r\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\r\n        globalIndent = inheritedIndent;\r\n        let oldIndentation = strings.getLeadingWhitespace(currentLineText);\r\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\r\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\r\n            globalIndent = unshiftIndent(globalIndent);\r\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\r\n        }\r\n        if (currentLineText !== adjustedLineContent) {\r\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), TextModel.normalizeIndentation(globalIndent, indentSize, insertSpaces)));\r\n        }\r\n    }\r\n    else {\r\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\r\n    }\r\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\r\n    let idealIndentForNextLine = globalIndent;\r\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\r\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n        globalIndent = shiftIndent(globalIndent);\r\n    }\r\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\r\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n    }\r\n    startLineNumber++;\r\n    // Calculate indentation adjustment for all following lines\r\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        let text = model.getLineContent(lineNumber);\r\n        let oldIndentation = strings.getLeadingWhitespace(text);\r\n        let adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\r\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\r\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\r\n            globalIndent = unshiftIndent(globalIndent);\r\n        }\r\n        if (oldIndentation !== idealIndentForNextLine) {\r\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), TextModel.normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\r\n        }\r\n        // calculate idealIndentForNextLine\r\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\r\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\r\n            // but don't change globalIndent and idealIndentForNextLine.\r\n            continue;\r\n        }\r\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\r\n            globalIndent = shiftIndent(globalIndent);\r\n            idealIndentForNextLine = globalIndent;\r\n        }\r\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\r\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n        }\r\n        else {\r\n            idealIndentForNextLine = globalIndent;\r\n        }\r\n    }\r\n    return indentEdits;\r\n}\r\nexport class IndentationToSpacesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: IndentationToSpacesAction.ID,\r\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\r\n            alias: 'Convert Indentation to Spaces',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let modelOpts = model.getOptions();\r\n        let selection = editor.getSelection();\r\n        if (!selection) {\r\n            return;\r\n        }\r\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n        model.updateOptions({\r\n            insertSpaces: true\r\n        });\r\n    }\r\n}\r\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\r\nexport class IndentationToTabsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: IndentationToTabsAction.ID,\r\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\r\n            alias: 'Convert Indentation to Tabs',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let modelOpts = model.getOptions();\r\n        let selection = editor.getSelection();\r\n        if (!selection) {\r\n            return;\r\n        }\r\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n        model.updateOptions({\r\n            insertSpaces: false\r\n        });\r\n    }\r\n}\r\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\r\nexport class ChangeIndentationSizeAction extends EditorAction {\r\n    constructor(insertSpaces, opts) {\r\n        super(opts);\r\n        this.insertSpaces = insertSpaces;\r\n    }\r\n    run(accessor, editor) {\r\n        const quickInputService = accessor.get(IQuickInputService);\r\n        const modelService = accessor.get(IModelService);\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let creationOpts = modelService.getCreationOptions(model.getLanguageIdentifier().language, model.uri, model.isForSimpleWidget);\r\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\r\n            id: n.toString(),\r\n            label: n.toString(),\r\n            // add description for tabSize value set in the configuration\r\n            description: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : undefined\r\n        }));\r\n        // auto focus the tabSize set for the current editor\r\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\r\n        setTimeout(() => {\r\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\r\n                if (pick) {\r\n                    if (model && !model.isDisposed()) {\r\n                        model.updateOptions({\r\n                            tabSize: parseInt(pick.label, 10),\r\n                            insertSpaces: this.insertSpaces\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\r\n    }\r\n}\r\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: IndentUsingTabs.ID,\r\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\r\n            alias: 'Indent Using Tabs',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\r\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: IndentUsingSpaces.ID,\r\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\r\n            alias: 'Indent Using Spaces',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\r\nexport class DetectIndentation extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: DetectIndentation.ID,\r\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\r\n            alias: 'Detect Indentation from Content',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const modelService = accessor.get(IModelService);\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let creationOpts = modelService.getCreationOptions(model.getLanguageIdentifier().language, model.uri, model.isForSimpleWidget);\r\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\r\n    }\r\n}\r\nDetectIndentation.ID = 'editor.action.detectIndentation';\r\nexport class ReindentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.reindentlines',\r\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\r\n            alias: 'Reindent Lines',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let edits = getReindentEditOperations(model, 1, model.getLineCount());\r\n        if (edits.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeEdits(this.id, edits);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nexport class ReindentSelectedLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.reindentselectedlines',\r\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\r\n            alias: 'Reindent Selected Lines',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let edits = [];\r\n        for (let selection of selections) {\r\n            let startLineNumber = selection.startLineNumber;\r\n            let endLineNumber = selection.endLineNumber;\r\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\r\n                endLineNumber--;\r\n            }\r\n            if (startLineNumber === 1) {\r\n                if (startLineNumber === endLineNumber) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                startLineNumber--;\r\n            }\r\n            let editOperations = getReindentEditOperations(model, startLineNumber, endLineNumber);\r\n            edits.push(...editOperations);\r\n        }\r\n        if (edits.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeEdits(this.id, edits);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nexport class AutoIndentOnPasteCommand {\r\n    constructor(edits, initialSelection) {\r\n        this._initialSelection = initialSelection;\r\n        this._edits = [];\r\n        this._selectionId = null;\r\n        for (let edit of edits) {\r\n            if (edit.range && typeof edit.text === 'string') {\r\n                this._edits.push(edit);\r\n            }\r\n        }\r\n    }\r\n    getEditOperations(model, builder) {\r\n        for (let edit of this._edits) {\r\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\r\n        }\r\n        let selectionIsSet = false;\r\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\r\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\r\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\r\n                selectionIsSet = true;\r\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\r\n            }\r\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\r\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\r\n                selectionIsSet = true;\r\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\r\n            }\r\n        }\r\n        if (!selectionIsSet) {\r\n            this._selectionId = builder.trackSelection(this._initialSelection);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\nexport class AutoIndentOnPaste {\r\n    constructor(editor) {\r\n        this.callOnDispose = new DisposableStore();\r\n        this.callOnModel = new DisposableStore();\r\n        this.editor = editor;\r\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\r\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\r\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\r\n    }\r\n    update() {\r\n        // clean up\r\n        this.callOnModel.clear();\r\n        // we are disabled\r\n        if (this.editor.getOption(9 /* autoIndent */) < 4 /* Full */ || this.editor.getOption(46 /* formatOnPaste */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\r\n            this.trigger(range);\r\n        }));\r\n    }\r\n    trigger(range) {\r\n        let selections = this.editor.getSelections();\r\n        if (selections === null || selections.length > 1) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!model.isCheapToTokenize(range.getStartPosition().lineNumber)) {\r\n            return;\r\n        }\r\n        const autoIndent = this.editor.getOption(9 /* autoIndent */);\r\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n        let textEdits = [];\r\n        let indentConverter = {\r\n            shiftIndent: (indentation) => {\r\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            },\r\n            unshiftIndent: (indentation) => {\r\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            }\r\n        };\r\n        let startLineNumber = range.startLineNumber;\r\n        while (startLineNumber <= range.endLineNumber) {\r\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\r\n                startLineNumber++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (startLineNumber > range.endLineNumber) {\r\n            return;\r\n        }\r\n        let firstLineText = model.getLineContent(startLineNumber);\r\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\r\n            let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, model, model.getLanguageIdentifier().id, startLineNumber, indentConverter);\r\n            if (indentOfFirstLine !== null) {\r\n                let oldIndentation = strings.getLeadingWhitespace(firstLineText);\r\n                let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\r\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                if (newSpaceCnt !== oldSpaceCnt) {\r\n                    let newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                    textEdits.push({\r\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\r\n                        text: newIndent\r\n                    });\r\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\r\n                }\r\n                else {\r\n                    let indentMetadata = LanguageConfigurationRegistry.getIndentMetadata(model, startLineNumber);\r\n                    if (indentMetadata === 0 || indentMetadata === 8 /* UNINDENT_MASK */) {\r\n                        // we paste content into a line where only contains whitespaces\r\n                        // after pasting, the indentation of the first line is already correct\r\n                        // the first line doesn't match any indentation rule\r\n                        // then no-op.\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const firstLineNumber = startLineNumber;\r\n        // ignore empty or ignored lines\r\n        while (startLineNumber < range.endLineNumber) {\r\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\r\n                startLineNumber++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (startLineNumber !== range.endLineNumber) {\r\n            let virtualModel = {\r\n                getLineTokens: (lineNumber) => {\r\n                    return model.getLineTokens(lineNumber);\r\n                },\r\n                getLanguageIdentifier: () => {\r\n                    return model.getLanguageIdentifier();\r\n                },\r\n                getLanguageIdAtPosition: (lineNumber, column) => {\r\n                    return model.getLanguageIdAtPosition(lineNumber, column);\r\n                },\r\n                getLineContent: (lineNumber) => {\r\n                    if (lineNumber === firstLineNumber) {\r\n                        return firstLineText;\r\n                    }\r\n                    else {\r\n                        return model.getLineContent(lineNumber);\r\n                    }\r\n                }\r\n            };\r\n            let indentOfSecondLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageIdentifier().id, startLineNumber + 1, indentConverter);\r\n            if (indentOfSecondLine !== null) {\r\n                let newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\r\n                let oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\r\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\r\n                    let spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\r\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\r\n                        let lineContent = model.getLineContent(i);\r\n                        let originalIndent = strings.getLeadingWhitespace(lineContent);\r\n                        let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\r\n                        let newSpacesCnt = originalSpacesCnt + spaceCntOffset;\r\n                        let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\r\n                        if (newIndent !== originalIndent) {\r\n                            textEdits.push({\r\n                                range: new Range(i, 1, i, originalIndent.length + 1),\r\n                                text: newIndent\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (textEdits.length > 0) {\r\n            this.editor.pushUndoStop();\r\n            let cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\r\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\r\n            this.editor.pushUndoStop();\r\n        }\r\n    }\r\n    shouldIgnoreLine(model, lineNumber) {\r\n        model.forceTokenization(lineNumber);\r\n        let nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\r\n        if (nonWhitespaceColumn === 0) {\r\n            return true;\r\n        }\r\n        let tokens = model.getLineTokens(lineNumber);\r\n        if (tokens.getCount() > 0) {\r\n            let firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\r\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* Comment */) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    dispose() {\r\n        this.callOnDispose.dispose();\r\n        this.callOnModel.dispose();\r\n    }\r\n}\r\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\r\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\r\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n        // Model is empty\r\n        return;\r\n    }\r\n    let spaces = '';\r\n    for (let i = 0; i < tabSize; i++) {\r\n        spaces += ' ';\r\n    }\r\n    let spacesRegExp = new RegExp(spaces, 'gi');\r\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\r\n        if (lastIndentationColumn === 0) {\r\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        if (lastIndentationColumn === 1) {\r\n            continue;\r\n        }\r\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\r\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\r\n        const newIndentation = (tabsToSpaces\r\n            ? originalIndentation.replace(/\\t/ig, spaces)\r\n            : originalIndentation.replace(spacesRegExp, '\\t'));\r\n        builder.addEditOperation(originalIndentationRange, newIndentation);\r\n    }\r\n}\r\nexport class IndentationToSpacesCommand {\r\n    constructor(selection, tabSize) {\r\n        this.selection = selection;\r\n        this.tabSize = tabSize;\r\n        this.selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n        getIndentationEditOperations(model, builder, this.tabSize, true);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n}\r\nexport class IndentationToTabsCommand {\r\n    constructor(selection, tabSize) {\r\n        this.selection = selection;\r\n        this.tabSize = tabSize;\r\n        this.selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n        getIndentationEditOperations(model, builder, this.tabSize, false);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n}\r\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\r\nregisterEditorAction(IndentationToSpacesAction);\r\nregisterEditorAction(IndentationToTabsAction);\r\nregisterEditorAction(IndentUsingTabs);\r\nregisterEditorAction(IndentUsingSpaces);\r\nregisterEditorAction(DetectIndentation);\r\nregisterEditorAction(ReindentLinesAction);\r\nregisterEditorAction(ReindentSelectedLinesAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { InlayHintsProviderRegistry } from '../../common/modes.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { editorInlayHintForeground, editorInlayHintBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst MAX_DECORATORS = 500;\r\nexport function getInlayHints(model, ranges, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const datas = [];\r\n        const providers = InlayHintsProviderRegistry.ordered(model).reverse();\r\n        const promises = flatten(providers.map(provider => ranges.map(range => {\r\n            return Promise.resolve(provider.provideInlayHints(model, range, token)).then(result => {\r\n                const itemsInRange = result === null || result === void 0 ? void 0 : result.filter(hint => range.containsPosition(hint.position));\r\n                if (itemsInRange === null || itemsInRange === void 0 ? void 0 : itemsInRange.length) {\r\n                    datas.push({ list: itemsInRange, provider });\r\n                }\r\n            }, err => {\r\n                onUnexpectedExternalError(err);\r\n            });\r\n        })));\r\n        yield Promise.all(promises);\r\n        return datas;\r\n    });\r\n}\r\nlet InlayHintsController = class InlayHintsController {\r\n    constructor(_editor, _codeEditorService, _themeService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._themeService = _themeService;\r\n        this._configurationService = _configurationService;\r\n        this._disposables = new DisposableStore();\r\n        this._sessionDisposables = new DisposableStore();\r\n        this._getInlayHintsDelays = new LanguageFeatureRequestDelays(InlayHintsProviderRegistry, 25, 2500);\r\n        this._decorationsTypeIds = [];\r\n        this._decorationIds = [];\r\n        this._disposables.add(InlayHintsProviderRegistry.onDidChange(() => this._update()));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(126 /* inlayHints */)) {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        this._sessionDisposables.dispose();\r\n        this._removeAllDecorations();\r\n        this._disposables.dispose();\r\n    }\r\n    _update() {\r\n        this._sessionDisposables.clear();\r\n        if (!this._editor.getOption(126 /* inlayHints */).enabled) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !InlayHintsProviderRegistry.has(model)) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\r\n            const t1 = Date.now();\r\n            const cts = new CancellationTokenSource();\r\n            this._sessionDisposables.add(toDisposable(() => cts.dispose(true)));\r\n            const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n            const result = yield getInlayHints(model, visibleRanges, cts.token);\r\n            // update moving average\r\n            const newDelay = this._getInlayHintsDelays.update(model, Date.now() - t1);\r\n            scheduler.delay = newDelay;\r\n            // render hints\r\n            this._updateHintsDecorators(result);\r\n        }), this._getInlayHintsDelays.get(model));\r\n        this._sessionDisposables.add(scheduler);\r\n        // update inline hints when content or scroll position changes\r\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent(() => scheduler.schedule()));\r\n        this._disposables.add(this._editor.onDidScrollChange(() => scheduler.schedule()));\r\n        scheduler.schedule();\r\n        // update inline hints when any any provider fires an event\r\n        const providerListener = new DisposableStore();\r\n        this._sessionDisposables.add(providerListener);\r\n        for (const provider of InlayHintsProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChangeInlayHints === 'function') {\r\n                providerListener.add(provider.onDidChangeInlayHints(() => scheduler.schedule()));\r\n            }\r\n        }\r\n    }\r\n    _updateHintsDecorators(hintsData) {\r\n        const { fontSize, fontFamily } = this._getLayoutInfo();\r\n        const backgroundColor = this._themeService.getColorTheme().getColor(editorInlayHintBackground);\r\n        const fontColor = this._themeService.getColorTheme().getColor(editorInlayHintForeground);\r\n        const newDecorationsTypeIds = [];\r\n        const newDecorationsData = [];\r\n        const fontFamilyVar = '--inlayHintsFontFamily';\r\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\r\n        const key = this._configurationService.getValue('editor.useInjectedText');\r\n        const shouldUseInjectedText = key === undefined ? true : !!key;\r\n        for (const { list: hints } of hintsData) {\r\n            for (let j = 0; j < hints.length && newDecorationsData.length < MAX_DECORATORS; j++) {\r\n                const { text, position, whitespaceBefore, whitespaceAfter } = hints[j];\r\n                const marginBefore = whitespaceBefore ? (fontSize / 3) | 0 : 0;\r\n                const marginAfter = whitespaceAfter ? (fontSize / 3) | 0 : 0;\r\n                const massagedText = fixSpace(text);\r\n                const before = {\r\n                    contentText: massagedText,\r\n                    backgroundColor: `${backgroundColor}`,\r\n                    color: `${fontColor}`,\r\n                    margin: `0px ${marginAfter}px 0px ${marginBefore}px`,\r\n                    fontSize: `${fontSize}px`,\r\n                    fontFamily: `var(${fontFamilyVar})`,\r\n                    padding: `0px ${(fontSize / 4) | 0}px`,\r\n                    borderRadius: `${(fontSize / 4) | 0}px`,\r\n                    verticalAlign: 'middle',\r\n                };\r\n                const key = 'inlayHints-' + hash(before).toString(16);\r\n                this._codeEditorService.registerDecorationType('inlay-hints-controller', key, shouldUseInjectedText ? { beforeInjectedText: Object.assign(Object.assign({}, before), { affectsLetterSpacing: true }) } : { before }, undefined, this._editor);\r\n                // decoration types are ref-counted which means we only need to\r\n                // call register und remove equally often\r\n                newDecorationsTypeIds.push(key);\r\n                const options = this._codeEditorService.resolveDecorationOptions(key, true);\r\n                newDecorationsData.push({\r\n                    range: Range.fromPositions(position),\r\n                    options\r\n                });\r\n            }\r\n        }\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = newDecorationsTypeIds;\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, newDecorationsData);\r\n    }\r\n    _getLayoutInfo() {\r\n        const options = this._editor.getOption(126 /* inlayHints */);\r\n        const editorFontSize = this._editor.getOption(44 /* fontSize */);\r\n        let fontSize = options.fontSize;\r\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\r\n            fontSize = (editorFontSize * .9) | 0;\r\n        }\r\n        const fontFamily = options.fontFamily || this._editor.getOption(41 /* fontFamily */);\r\n        return { fontSize, fontFamily };\r\n    }\r\n    _removeAllDecorations() {\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, []);\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = [];\r\n    }\r\n};\r\nInlayHintsController.ID = 'editor.contrib.InlayHints';\r\nInlayHintsController = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService),\r\n    __param(3, IConfigurationService)\r\n], InlayHintsController);\r\nexport { InlayHintsController };\r\nfunction fixSpace(str) {\r\n    const noBreakWhitespace = '\\xa0';\r\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\r\n}\r\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\r\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, range] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Range.isIRange(range));\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const data = yield getInlayHints(ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\r\n        return flatten(data.map(item => item.list)).sort((a, b) => Position.compare(a.position, b.position));\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class InPlaceReplaceCommand {\r\n    constructor(editRange, originalSelection, text) {\r\n        this._editRange = editRange;\r\n        this._originalSelection = originalSelection;\r\n        this._text = text;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._editRange, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        const srcRange = inverseEditOperations[0].range;\r\n        if (!this._originalSelection.isEmpty()) {\r\n            // Preserve selection and extends to typed text\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\r\n        }\r\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { registerEditorAction, EditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\r\nimport { EditorState } from '../../browser/core/editorState.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { createCancelablePromise, timeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nlet InPlaceReplaceController = class InPlaceReplaceController {\r\n    constructor(editor, editorWorkerService) {\r\n        this.decorationIds = [];\r\n        this.editor = editor;\r\n        this.editorWorkerService = editorWorkerService;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(InPlaceReplaceController.ID);\r\n    }\r\n    dispose() {\r\n    }\r\n    run(source, up) {\r\n        // cancel any pending request\r\n        if (this.currentRequest) {\r\n            this.currentRequest.cancel();\r\n        }\r\n        const editorSelection = this.editor.getSelection();\r\n        const model = this.editor.getModel();\r\n        if (!model || !editorSelection) {\r\n            return undefined;\r\n        }\r\n        let selection = editorSelection;\r\n        if (selection.startLineNumber !== selection.endLineNumber) {\r\n            // Can't accept multiline selection\r\n            return undefined;\r\n        }\r\n        const state = new EditorState(this.editor, 1 /* Value */ | 4 /* Position */);\r\n        const modelURI = model.uri;\r\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\r\n        return this.currentRequest.then(result => {\r\n            if (!result || !result.range || !result.value) {\r\n                // No proper result\r\n                return;\r\n            }\r\n            if (!state.validate(this.editor)) {\r\n                // state has changed\r\n                return;\r\n            }\r\n            // Selection\r\n            let editRange = Range.lift(result.range);\r\n            let highlightRange = result.range;\r\n            let diff = result.value.length - (selection.endColumn - selection.startColumn);\r\n            // highlight\r\n            highlightRange = {\r\n                startLineNumber: highlightRange.startLineNumber,\r\n                startColumn: highlightRange.startColumn,\r\n                endLineNumber: highlightRange.endLineNumber,\r\n                endColumn: highlightRange.startColumn + result.value.length\r\n            };\r\n            if (diff > 1) {\r\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\r\n            }\r\n            // Insert new text\r\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\r\n            this.editor.pushUndoStop();\r\n            this.editor.executeCommand(source, command);\r\n            this.editor.pushUndoStop();\r\n            // add decoration\r\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\r\n                    range: highlightRange,\r\n                    options: InPlaceReplaceController.DECORATION\r\n                }]);\r\n            // remove decoration after delay\r\n            if (this.decorationRemover) {\r\n                this.decorationRemover.cancel();\r\n            }\r\n            this.decorationRemover = timeout(350);\r\n            this.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\r\n        }).catch(onUnexpectedError);\r\n    }\r\n};\r\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\r\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\r\n    description: 'in-place-replace',\r\n    className: 'valueSetReplacement'\r\n});\r\nInPlaceReplaceController = __decorate([\r\n    __param(1, IEditorWorkerService)\r\n], InPlaceReplaceController);\r\nclass InPlaceReplaceUp extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inPlaceReplace.up',\r\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\r\n            alias: 'Replace with Previous Value',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 82 /* US_COMMA */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = InPlaceReplaceController.get(editor);\r\n        if (!controller) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return controller.run(this.id, true);\r\n    }\r\n}\r\nclass InPlaceReplaceDown extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inPlaceReplace.down',\r\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\r\n            alias: 'Replace with Next Value',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = InPlaceReplaceController.get(editor);\r\n        if (!controller) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return controller.run(this.id, false);\r\n    }\r\n}\r\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\r\nregisterEditorAction(InPlaceReplaceUp);\r\nregisterEditorAction(InPlaceReplaceDown);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorBracketMatchBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../core/editOperation.js';\r\nimport { Range } from '../core/range.js';\r\nexport class TrimTrailingWhitespaceCommand {\r\n    constructor(selection, cursors) {\r\n        this._selection = selection;\r\n        this._cursors = cursors;\r\n        this._selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let ops = trimTrailingWhitespace(model, this._cursors);\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            let op = ops[i];\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this._selectionId = builder.trackSelection(this._selection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\n/**\r\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\r\n */\r\nexport function trimTrailingWhitespace(model, cursors) {\r\n    // Sort cursors ascending\r\n    cursors.sort((a, b) => {\r\n        if (a.lineNumber === b.lineNumber) {\r\n            return a.column - b.column;\r\n        }\r\n        return a.lineNumber - b.lineNumber;\r\n    });\r\n    // Reduce multiple cursors on the same line and only keep the last one on the line\r\n    for (let i = cursors.length - 2; i >= 0; i--) {\r\n        if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\r\n            // Remove cursor at `i`\r\n            cursors.splice(i, 1);\r\n        }\r\n    }\r\n    let r = [];\r\n    let rLen = 0;\r\n    let cursorIndex = 0;\r\n    let cursorLen = cursors.length;\r\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        let lineContent = model.getLineContent(lineNumber);\r\n        let maxLineColumn = lineContent.length + 1;\r\n        let minEditColumn = 0;\r\n        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\r\n            minEditColumn = cursors[cursorIndex].column;\r\n            cursorIndex++;\r\n            if (minEditColumn === maxLineColumn) {\r\n                // The cursor is at the end of the line => no edits for sure on this line\r\n                continue;\r\n            }\r\n        }\r\n        if (lineContent.length === 0) {\r\n            continue;\r\n        }\r\n        let lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\r\n        let fromColumn = 0;\r\n        if (lastNonWhitespaceIndex === -1) {\r\n            // Entire line is whitespace\r\n            fromColumn = 1;\r\n        }\r\n        else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\r\n            // There is trailing whitespace\r\n            fromColumn = lastNonWhitespaceIndex + 2;\r\n        }\r\n        else {\r\n            // There is no trailing whitespace\r\n            continue;\r\n        }\r\n        fromColumn = Math.max(minEditColumn, fromColumn);\r\n        r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\r\n    }\r\n    return r;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class CopyLinesCommand {\r\n    constructor(selection, isCopyingDown, noop) {\r\n        this._selection = selection;\r\n        this._isCopyingDown = isCopyingDown;\r\n        this._noop = noop || false;\r\n        this._selectionDirection = 0 /* LTR */;\r\n        this._selectionId = null;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let s = this._selection;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._endLineNumberDelta = 1;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        let sourceLines = [];\r\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            sourceLines.push(model.getLineContent(i));\r\n        }\r\n        const sourceText = sourceLines.join('\\n');\r\n        if (sourceText === '') {\r\n            // Duplicating empty line\r\n            if (this._isCopyingDown) {\r\n                this._startLineNumberDelta++;\r\n                this._endLineNumberDelta++;\r\n            }\r\n        }\r\n        if (this._noop) {\r\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\r\n        }\r\n        else {\r\n            if (!this._isCopyingDown) {\r\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\r\n            }\r\n            else {\r\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        this._selectionDirection = this._selection.getDirection();\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\r\n            let startLineNumber = result.startLineNumber;\r\n            let startColumn = result.startColumn;\r\n            let endLineNumber = result.endLineNumber;\r\n            let endColumn = result.endColumn;\r\n            if (this._startLineNumberDelta !== 0) {\r\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\r\n                startColumn = 1;\r\n            }\r\n            if (this._endLineNumberDelta !== 0) {\r\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\r\n                endColumn = 1;\r\n            }\r\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { ShiftCommand } from '../../common/commands/shiftCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { IndentAction } from '../../common/modes/languageConfiguration.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport * as indentUtils from '../indentation/indentUtils.js';\r\nexport class MoveLinesCommand {\r\n    constructor(selection, isMovingDown, autoIndent) {\r\n        this._selection = selection;\r\n        this._isMovingDown = isMovingDown;\r\n        this._autoIndent = autoIndent;\r\n        this._selectionId = null;\r\n        this._moveEndLineSelectionShrink = false;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let modelLineCount = model.getLineCount();\r\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\r\n            this._selectionId = builder.trackSelection(this._selection);\r\n            return;\r\n        }\r\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\r\n            this._selectionId = builder.trackSelection(this._selection);\r\n            return;\r\n        }\r\n        this._moveEndPositionDown = false;\r\n        let s = this._selection;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._moveEndPositionDown = true;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n        let indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\r\n        let virtualModel = {\r\n            getLineTokens: (lineNumber) => {\r\n                return model.getLineTokens(lineNumber);\r\n            },\r\n            getLanguageIdentifier: () => {\r\n                return model.getLanguageIdentifier();\r\n            },\r\n            getLanguageIdAtPosition: (lineNumber, column) => {\r\n                return model.getLanguageIdAtPosition(lineNumber, column);\r\n            },\r\n            getLineContent: null,\r\n        };\r\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\r\n            // Current line is empty\r\n            let lineNumber = s.startLineNumber;\r\n            let otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\r\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\r\n                // Other line number is empty too, so no editing is needed\r\n                // Add a no-op to force running by the model\r\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\r\n            }\r\n            else {\r\n                // Type content from other line number on line number\r\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\r\n                // Remove content from other line number\r\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\r\n            }\r\n            // Track selection at the other line number\r\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\r\n        }\r\n        else {\r\n            let movingLineNumber;\r\n            let movingLineText;\r\n            if (this._isMovingDown) {\r\n                movingLineNumber = s.endLineNumber + 1;\r\n                movingLineText = model.getLineContent(movingLineNumber);\r\n                // Delete line that needs to be moved\r\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\r\n                let insertingText = movingLineText;\r\n                if (this.shouldAutoIndent(model, s)) {\r\n                    let movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\r\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\r\n                    if (movingLineMatchResult !== null) {\r\n                        let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\r\n                        let newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                        let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\r\n                    }\r\n                    else {\r\n                        // no enter rule matches, let's check indentatin rules then.\r\n                        virtualModel.getLineContent = (lineNumber) => {\r\n                            if (lineNumber === s.startLineNumber) {\r\n                                return model.getLineContent(movingLineNumber);\r\n                            }\r\n                            else {\r\n                                return model.getLineContent(lineNumber);\r\n                            }\r\n                        };\r\n                        let indentOfMovingLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter);\r\n                        if (indentOfMovingLine !== null) {\r\n                            let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\r\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\r\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\r\n                            }\r\n                        }\r\n                    }\r\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\r\n                    // to s.startLineNumber\r\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\r\n                    let ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\r\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\r\n                    if (ret !== null) {\r\n                        if (ret !== 0) {\r\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // it doesn't match onEnter rules, let's check indentation rules then.\r\n                        virtualModel.getLineContent = (lineNumber) => {\r\n                            if (lineNumber === s.startLineNumber) {\r\n                                return insertingText;\r\n                            }\r\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\r\n                                return model.getLineContent(lineNumber - 1);\r\n                            }\r\n                            else {\r\n                                return model.getLineContent(lineNumber);\r\n                            }\r\n                        };\r\n                        let newIndentatOfMovingBlock = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter);\r\n                        if (newIndentatOfMovingBlock !== null) {\r\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\r\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\r\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\r\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Insert line that needs to be moved before\r\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\r\n                }\r\n            }\r\n            else {\r\n                movingLineNumber = s.startLineNumber - 1;\r\n                movingLineText = model.getLineContent(movingLineNumber);\r\n                // Delete line that needs to be moved\r\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\r\n                // Insert line that needs to be moved after\r\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\r\n                if (this.shouldAutoIndent(model, s)) {\r\n                    virtualModel.getLineContent = (lineNumber) => {\r\n                        if (lineNumber === movingLineNumber) {\r\n                            return model.getLineContent(s.startLineNumber);\r\n                        }\r\n                        else {\r\n                            return model.getLineContent(lineNumber);\r\n                        }\r\n                    };\r\n                    let ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\r\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\r\n                    if (ret !== null) {\r\n                        if (ret !== 0) {\r\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\r\n                        let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter);\r\n                        if (indentOfFirstLine !== null) {\r\n                            // adjust the indentation of the moving block\r\n                            let oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\r\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\r\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                let spaceCntOffset = newSpaceCnt - oldSpaceCnt;\r\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n    }\r\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\r\n        return {\r\n            shiftIndent: (indentation) => {\r\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            },\r\n            unshiftIndent: (indentation) => {\r\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            }\r\n        };\r\n    }\r\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\r\n        if (enter) {\r\n            let enterPrefix = enter.indentation;\r\n            if (enter.indentAction === IndentAction.None) {\r\n                enterPrefix = enter.indentation + enter.appendText;\r\n            }\r\n            else if (enter.indentAction === IndentAction.Indent) {\r\n                enterPrefix = enter.indentation + enter.appendText;\r\n            }\r\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\r\n                enterPrefix = enter.indentation;\r\n            }\r\n            else if (enter.indentAction === IndentAction.Outdent) {\r\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\r\n            }\r\n            let movingLineText = model.getLineContent(line);\r\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\r\n                let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\r\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\r\n                let indentMetadataOfMovelingLine = LanguageConfigurationRegistry.getIndentMetadata(model, line);\r\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* DECREASE_MASK */) {\r\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\r\n                }\r\n                let newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\r\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                return newSpaceCnt - oldSpaceCnt;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     * @param model\r\n     * @param indentConverter\r\n     * @param tabSize\r\n     * @param line the line moving down\r\n     * @param futureAboveLineNumber the line which will be at the `line` position\r\n     * @param futureAboveLineText\r\n     */\r\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\r\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\r\n            // break\r\n            let maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\r\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn));\r\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n        }\r\n        else {\r\n            // go upwards, starting from `line - 1`\r\n            let validPrecedingLine = line - 1;\r\n            while (validPrecedingLine >= 1) {\r\n                let lineContent = model.getLineContent(validPrecedingLine);\r\n                let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\r\n                if (nonWhitespaceIdx >= 0) {\r\n                    break;\r\n                }\r\n                validPrecedingLine--;\r\n            }\r\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\r\n                return null;\r\n            }\r\n            let maxColumn = model.getLineMaxColumn(validPrecedingLine);\r\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\r\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n        }\r\n    }\r\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\r\n        let validPrecedingLine = oneLineAbove;\r\n        while (validPrecedingLine >= 1) {\r\n            // ship empty lines as empty lines just inherit indentation\r\n            let lineContent;\r\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\r\n                lineContent = previousLineText;\r\n            }\r\n            else {\r\n                lineContent = model.getLineContent(validPrecedingLine);\r\n            }\r\n            let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\r\n            if (nonWhitespaceIdx >= 0) {\r\n                break;\r\n            }\r\n            validPrecedingLine--;\r\n        }\r\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\r\n            return null;\r\n        }\r\n        let maxColumn = model.getLineMaxColumn(validPrecedingLine);\r\n        let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\r\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n    }\r\n    trimLeft(str) {\r\n        return str.replace(/^\\s+/, '');\r\n    }\r\n    shouldAutoIndent(model, selection) {\r\n        if (this._autoIndent < 4 /* Full */) {\r\n            return false;\r\n        }\r\n        // if it's not easy to tokenize, we stop auto indent.\r\n        if (!model.isCheapToTokenize(selection.startLineNumber)) {\r\n            return false;\r\n        }\r\n        let languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\r\n        let languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\r\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\r\n            return false;\r\n        }\r\n        if (LanguageConfigurationRegistry.getIndentRulesSupport(languageAtSelectionStart) === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\r\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            let lineContent = model.getLineContent(i);\r\n            let originalIndent = strings.getLeadingWhitespace(lineContent);\r\n            let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\r\n            let newSpacesCnt = originalSpacesCnt + offset;\r\n            let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\r\n            if (newIndent !== originalIndent) {\r\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\r\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\r\n                    // as users select part of the original indent white spaces\r\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\r\n                    this._moveEndLineSelectionShrink = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._moveEndPositionDown) {\r\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\r\n        }\r\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\r\n            result = result.setEndPosition(result.endLineNumber, 2);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class SortLinesCommand {\r\n    constructor(selection, descending) {\r\n        this.selection = selection;\r\n        this.descending = descending;\r\n        this.selectionId = null;\r\n    }\r\n    static getCollator() {\r\n        if (!SortLinesCommand._COLLATOR) {\r\n            SortLinesCommand._COLLATOR = new Intl.Collator();\r\n        }\r\n        return SortLinesCommand._COLLATOR;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let op = sortLines(model, this.selection, this.descending);\r\n        if (op) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n    static canRun(model, selection, descending) {\r\n        if (model === null) {\r\n            return false;\r\n        }\r\n        let data = getSortData(model, selection, descending);\r\n        if (!data) {\r\n            return false;\r\n        }\r\n        for (let i = 0, len = data.before.length; i < len; i++) {\r\n            if (data.before[i] !== data.after[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nSortLinesCommand._COLLATOR = null;\r\nfunction getSortData(model, selection, descending) {\r\n    let startLineNumber = selection.startLineNumber;\r\n    let endLineNumber = selection.endLineNumber;\r\n    if (selection.endColumn === 1) {\r\n        endLineNumber--;\r\n    }\r\n    // Nothing to sort if user didn't select anything.\r\n    if (startLineNumber >= endLineNumber) {\r\n        return null;\r\n    }\r\n    let linesToSort = [];\r\n    // Get the contents of the selection to be sorted.\r\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        linesToSort.push(model.getLineContent(lineNumber));\r\n    }\r\n    let sorted = linesToSort.slice(0);\r\n    sorted.sort(SortLinesCommand.getCollator().compare);\r\n    // If descending, reverse the order.\r\n    if (descending === true) {\r\n        sorted = sorted.reverse();\r\n    }\r\n    return {\r\n        startLineNumber: startLineNumber,\r\n        endLineNumber: endLineNumber,\r\n        before: linesToSort,\r\n        after: sorted\r\n    };\r\n}\r\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\r\nfunction sortLines(model, selection, descending) {\r\n    let data = getSortData(model, selection, descending);\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\r\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\r\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CopyLinesCommand } from './copyLinesCommand.js';\r\nimport { MoveLinesCommand } from './moveLinesCommand.js';\r\nimport { SortLinesCommand } from './sortLinesCommand.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\n// copy lines\r\nclass AbstractCopyLinesAction extends EditorAction {\r\n    constructor(down, opts) {\r\n        super(opts);\r\n        this.down = down;\r\n    }\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\r\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        // Remove selections that would result in copying the same line\r\n        let prev = selections[0];\r\n        for (let i = 1; i < selections.length; i++) {\r\n            const curr = selections[i];\r\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\r\n                // these two selections would copy the same line\r\n                if (prev.index < curr.index) {\r\n                    // prev wins\r\n                    curr.ignore = true;\r\n                }\r\n                else {\r\n                    // curr wins\r\n                    prev.ignore = true;\r\n                    prev = curr;\r\n                }\r\n            }\r\n        }\r\n        const commands = [];\r\n        for (const selection of selections) {\r\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.copyLinesUpAction',\r\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\r\n            alias: 'Copy Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.copyLinesDownAction',\r\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\r\n            alias: 'Copy Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DuplicateSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.duplicateSelection',\r\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\r\n            alias: 'Duplicate Selection',\r\n            precondition: EditorContextKeys.writable,\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\r\n                order: 5\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const commands = [];\r\n        const selections = editor.getSelections();\r\n        const model = editor.getModel();\r\n        for (const selection of selections) {\r\n            if (selection.isEmpty()) {\r\n                commands.push(new CopyLinesCommand(selection, true));\r\n            }\r\n            else {\r\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\r\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\n// move lines\r\nclass AbstractMoveLinesAction extends EditorAction {\r\n    constructor(down, opts) {\r\n        super(opts);\r\n        this.down = down;\r\n    }\r\n    run(_accessor, editor) {\r\n        let commands = [];\r\n        let selections = editor.getSelections() || [];\r\n        const autoIndent = editor.getOption(9 /* autoIndent */);\r\n        for (const selection of selections) {\r\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.moveLinesUpAction',\r\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\r\n            alias: 'Move Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.moveLinesDownAction',\r\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\r\n            alias: 'Move Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\r\n                order: 4\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class AbstractSortLinesAction extends EditorAction {\r\n    constructor(descending, opts) {\r\n        super(opts);\r\n        this.descending = descending;\r\n    }\r\n    run(_accessor, editor) {\r\n        const selections = editor.getSelections() || [];\r\n        for (const selection of selections) {\r\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\r\n                return;\r\n            }\r\n        }\r\n        let commands = [];\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.sortLinesAscending',\r\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\r\n            alias: 'Sort Lines Ascending',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.sortLinesDescending',\r\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\r\n            alias: 'Sort Lines Descending',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class TrimTrailingWhitespaceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TrimTrailingWhitespaceAction.ID,\r\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\r\n            alias: 'Trim Trailing Whitespace',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 54 /* KEY_X */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, args) {\r\n        let cursors = [];\r\n        if (args.reason === 'auto-save') {\r\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\r\n            // It is very convenient for the editor config extension to invoke this action.\r\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\r\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\r\n        }\r\n        let selection = editor.getSelection();\r\n        if (selection === null) {\r\n            return;\r\n        }\r\n        let command = new TrimTrailingWhitespaceCommand(selection, cursors);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\r\nexport class DeleteLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.deleteLines',\r\n            label: nls.localize('lines.delete', \"Delete Line\"),\r\n            alias: 'Delete Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KEY_K */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let ops = this._getLinesToRemove(editor);\r\n        let model = editor.getModel();\r\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n            // Model is empty\r\n            return;\r\n        }\r\n        let linesDeleted = 0;\r\n        let edits = [];\r\n        let cursorState = [];\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            const op = ops[i];\r\n            let startLineNumber = op.startLineNumber;\r\n            let endLineNumber = op.endLineNumber;\r\n            let startColumn = 1;\r\n            let endColumn = model.getLineMaxColumn(endLineNumber);\r\n            if (endLineNumber < model.getLineCount()) {\r\n                endLineNumber += 1;\r\n                endColumn = 1;\r\n            }\r\n            else if (startLineNumber > 1) {\r\n                startLineNumber -= 1;\r\n                startColumn = model.getLineMaxColumn(startLineNumber);\r\n            }\r\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\r\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\r\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, cursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n    _getLinesToRemove(editor) {\r\n        // Construct delete operations\r\n        let operations = editor.getSelections().map((s) => {\r\n            let endLineNumber = s.endLineNumber;\r\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n                endLineNumber -= 1;\r\n            }\r\n            return {\r\n                startLineNumber: s.startLineNumber,\r\n                selectionStartColumn: s.selectionStartColumn,\r\n                endLineNumber: endLineNumber,\r\n                positionColumn: s.positionColumn\r\n            };\r\n        });\r\n        // Sort delete operations\r\n        operations.sort((a, b) => {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                return a.endLineNumber - b.endLineNumber;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        });\r\n        // Merge delete operations which are adjacent or overlapping\r\n        let mergedOperations = [];\r\n        let previousOperation = operations[0];\r\n        for (let i = 1; i < operations.length; i++) {\r\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\r\n                // Merge current operations into the previous one\r\n                previousOperation.endLineNumber = operations[i].endLineNumber;\r\n            }\r\n            else {\r\n                // Push previous operation\r\n                mergedOperations.push(previousOperation);\r\n                previousOperation = operations[i];\r\n            }\r\n        }\r\n        // Push the last operation\r\n        mergedOperations.push(previousOperation);\r\n        return mergedOperations;\r\n    }\r\n}\r\nexport class IndentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.indentLines',\r\n            label: nls.localize('lines.indent', \"Indent Line\"),\r\n            alias: 'Indent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass OutdentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.outdentLines',\r\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\r\n            alias: 'Outdent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\r\n    }\r\n}\r\nexport class InsertLineBeforeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertLineBefore',\r\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\r\n            alias: 'Insert Line Above',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n    }\r\n}\r\nexport class InsertLineAfterAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertLineAfter',\r\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\r\n            alias: 'Insert Line Below',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n    }\r\n}\r\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const primaryCursor = editor.getSelection();\r\n        let rangesToDelete = this._getRangesToDelete(editor);\r\n        // merge overlapping selections\r\n        let effectiveRanges = [];\r\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\r\n            let range = rangesToDelete[i];\r\n            let nextRange = rangesToDelete[i + 1];\r\n            if (Range.intersectRanges(range, nextRange) === null) {\r\n                effectiveRanges.push(range);\r\n            }\r\n            else {\r\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\r\n            }\r\n        }\r\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\r\n        let endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\r\n        let edits = effectiveRanges.map(range => {\r\n            return EditOperation.replace(range, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteAllLeft',\r\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\r\n            alias: 'Delete All Left',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _getEndCursorState(primaryCursor, rangesToDelete) {\r\n        let endPrimaryCursor = null;\r\n        let endCursorState = [];\r\n        let deletedLines = 0;\r\n        rangesToDelete.forEach(range => {\r\n            let endCursor;\r\n            if (range.endColumn === 1 && deletedLines > 0) {\r\n                let newStartLine = range.startLineNumber - deletedLines;\r\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\r\n            }\r\n            else {\r\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n            }\r\n            deletedLines += range.endLineNumber - range.startLineNumber;\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        });\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    }\r\n    _getRangesToDelete(editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        let rangesToDelete = selections;\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        rangesToDelete = rangesToDelete.map(selection => {\r\n            if (selection.isEmpty()) {\r\n                if (selection.startColumn === 1) {\r\n                    let deleteFromLine = Math.max(1, selection.startLineNumber - 1);\r\n                    let deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\r\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\r\n                }\r\n                else {\r\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\r\n                }\r\n            }\r\n            else {\r\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\r\n            }\r\n        });\r\n        return rangesToDelete;\r\n    }\r\n}\r\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteAllRight',\r\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\r\n            alias: 'Delete All Right',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KEY_K */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _getEndCursorState(primaryCursor, rangesToDelete) {\r\n        let endPrimaryCursor = null;\r\n        let endCursorState = [];\r\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\r\n            let range = rangesToDelete[i];\r\n            let endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        }\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    }\r\n    _getRangesToDelete(editor) {\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        let rangesToDelete = selections.map((sel) => {\r\n            if (sel.isEmpty()) {\r\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\r\n                if (sel.startColumn === maxColumn) {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\r\n                }\r\n                else {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\r\n                }\r\n            }\r\n            return sel;\r\n        });\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        return rangesToDelete;\r\n    }\r\n}\r\nexport class JoinLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.joinLines',\r\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\r\n            alias: 'Join Lines',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KEY_J */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let primaryCursor = editor.getSelection();\r\n        if (primaryCursor === null) {\r\n            return;\r\n        }\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        let reducedSelections = [];\r\n        let lastSelection = selections.reduce((previousValue, currentValue) => {\r\n            if (previousValue.isEmpty()) {\r\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\r\n                    if (primaryCursor.equalsSelection(previousValue)) {\r\n                        primaryCursor = currentValue;\r\n                    }\r\n                    return currentValue;\r\n                }\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n            else {\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n        });\r\n        reducedSelections.push(lastSelection);\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        let edits = [];\r\n        let endCursorState = [];\r\n        let endPrimaryCursor = primaryCursor;\r\n        let lineOffset = 0;\r\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\r\n            let selection = reducedSelections[i];\r\n            let startLineNumber = selection.startLineNumber;\r\n            let startColumn = 1;\r\n            let columnDeltaOffset = 0;\r\n            let endLineNumber, endColumn;\r\n            let selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\r\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\r\n                let position = selection.getStartPosition();\r\n                if (position.lineNumber < model.getLineCount()) {\r\n                    endLineNumber = startLineNumber + 1;\r\n                    endColumn = model.getLineMaxColumn(endLineNumber);\r\n                }\r\n                else {\r\n                    endLineNumber = position.lineNumber;\r\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\r\n                }\r\n            }\r\n            else {\r\n                endLineNumber = selection.endLineNumber;\r\n                endColumn = model.getLineMaxColumn(endLineNumber);\r\n            }\r\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\r\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\r\n                let lineText = model.getLineContent(i);\r\n                let firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\r\n                if (firstNonWhitespaceIdx >= 1) {\r\n                    let insertSpace = true;\r\n                    if (trimmedLinesContent === '') {\r\n                        insertSpace = false;\r\n                    }\r\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\r\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\r\n                        insertSpace = false;\r\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\r\n                    }\r\n                    let lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\r\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\r\n                    if (insertSpace) {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\r\n                    }\r\n                    else {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length;\r\n                    }\r\n                }\r\n                else {\r\n                    columnDeltaOffset = 0;\r\n                }\r\n            }\r\n            let deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            if (!deleteSelection.isEmpty()) {\r\n                let resultSelection;\r\n                if (selection.isEmpty()) {\r\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\r\n                }\r\n                else {\r\n                    if (selection.startLineNumber === selection.endLineNumber) {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\r\n                    }\r\n                    else {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\r\n                    }\r\n                }\r\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\r\n                    endPrimaryCursor = resultSelection;\r\n                }\r\n                else {\r\n                    endCursorState.push(resultSelection);\r\n                }\r\n            }\r\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\r\n        }\r\n        endCursorState.unshift(endPrimaryCursor);\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class TransposeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transpose',\r\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\r\n            alias: 'Transpose characters around the cursor',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        let commands = [];\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            let cursor = selection.getStartPosition();\r\n            let maxColumn = model.getLineMaxColumn(cursor.lineNumber);\r\n            if (cursor.column >= maxColumn) {\r\n                if (cursor.lineNumber === model.getLineCount()) {\r\n                    continue;\r\n                }\r\n                // The cursor is at the end of current line and current line is not empty\r\n                // then we transpose the character before the cursor and the line break if there is any following line.\r\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\r\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\r\n            }\r\n            else {\r\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\r\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class AbstractCaseAction extends EditorAction {\r\n    run(_accessor, editor) {\r\n        const selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        const wordSeparators = editor.getOption(116 /* wordSeparators */);\r\n        const textEdits = [];\r\n        for (const selection of selections) {\r\n            if (selection.isEmpty()) {\r\n                const cursor = selection.getStartPosition();\r\n                const word = editor.getConfiguredWordAtPosition(cursor);\r\n                if (!word) {\r\n                    continue;\r\n                }\r\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\r\n                const text = model.getValueInRange(wordRange);\r\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\r\n            }\r\n            else {\r\n                const text = model.getValueInRange(selection);\r\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, textEdits);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class UpperCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToUppercase',\r\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\r\n            alias: 'Transform to Uppercase',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        return text.toLocaleUpperCase();\r\n    }\r\n}\r\nexport class LowerCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToLowercase',\r\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\r\n            alias: 'Transform to Lowercase',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        return text.toLocaleLowerCase();\r\n    }\r\n}\r\nexport class TitleCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToTitlecase',\r\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\r\n            alias: 'Transform to Title Case',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        const separators = '\\r\\n\\t ' + wordSeparators;\r\n        const excludedChars = separators.split('');\r\n        let title = '';\r\n        let startUpperCase = true;\r\n        for (let i = 0; i < text.length; i++) {\r\n            let currentChar = text[i];\r\n            if (excludedChars.indexOf(currentChar) >= 0) {\r\n                startUpperCase = true;\r\n                title += currentChar;\r\n            }\r\n            else if (startUpperCase) {\r\n                startUpperCase = false;\r\n                title += currentChar.toLocaleUpperCase();\r\n            }\r\n            else {\r\n                title += currentChar.toLocaleLowerCase();\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n}\r\nclass BackwardsCompatibleRegExp {\r\n    constructor(_pattern, _flags) {\r\n        this._pattern = _pattern;\r\n        this._flags = _flags;\r\n        this._actual = null;\r\n        this._evaluated = false;\r\n    }\r\n    get() {\r\n        if (!this._evaluated) {\r\n            this._evaluated = true;\r\n            try {\r\n                this._actual = new RegExp(this._pattern, this._flags);\r\n            }\r\n            catch (err) {\r\n                // this browser does not support this regular expression\r\n            }\r\n        }\r\n        return this._actual;\r\n    }\r\n    isSupported() {\r\n        return (this.get() !== null);\r\n    }\r\n}\r\nexport class SnakeCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToSnakecase',\r\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\r\n            alias: 'Transform to Snake Case',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        const regExp1 = SnakeCaseAction.regExp1.get();\r\n        const regExp2 = SnakeCaseAction.regExp2.get();\r\n        if (!regExp1 || !regExp2) {\r\n            // cannot support this\r\n            return text;\r\n        }\r\n        return (text\r\n            .replace(regExp1, '$1_$2')\r\n            .replace(regExp2, '$1_$2$3')\r\n            .toLocaleLowerCase());\r\n    }\r\n}\r\nSnakeCaseAction.regExp1 = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\r\nSnakeCaseAction.regExp2 = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\r\nregisterEditorAction(CopyLinesUpAction);\r\nregisterEditorAction(CopyLinesDownAction);\r\nregisterEditorAction(DuplicateSelectionAction);\r\nregisterEditorAction(MoveLinesUpAction);\r\nregisterEditorAction(MoveLinesDownAction);\r\nregisterEditorAction(SortLinesAscendingAction);\r\nregisterEditorAction(SortLinesDescendingAction);\r\nregisterEditorAction(TrimTrailingWhitespaceAction);\r\nregisterEditorAction(DeleteLinesAction);\r\nregisterEditorAction(IndentLinesAction);\r\nregisterEditorAction(OutdentLinesAction);\r\nregisterEditorAction(InsertLineBeforeAction);\r\nregisterEditorAction(InsertLineAfterAction);\r\nregisterEditorAction(DeleteAllLeftAction);\r\nregisterEditorAction(DeleteAllRightAction);\r\nregisterEditorAction(JoinLinesAction);\r\nregisterEditorAction(TransposeAction);\r\nregisterEditorAction(UpperCaseAction);\r\nregisterEditorAction(LowerCaseAction);\r\nregisterEditorAction(TitleCaseAction);\r\nif (SnakeCaseAction.regExp1.isSupported() && SnakeCaseAction.regExp2.isSupported()) {\r\n    registerEditorAction(SnakeCaseAction);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { registerEditorContribution, registerModelAndPositionCommand, EditorAction, EditorCommand, registerEditorAction, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedEditingRangeProviderRegistry } from '../../common/modes.js';\r\nimport { first, createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ContextKeyExpr, RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { isPromiseCanceledError, onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\r\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\r\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this._debounceDuration = 200;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._editor = editor;\r\n        this._enabled = false;\r\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\r\n        this._currentDecorations = [];\r\n        this._languageWordPattern = null;\r\n        this._currentWordPattern = null;\r\n        this._ignoreChangeEvent = false;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._rangeUpdateTriggerPromise = null;\r\n        this._rangeSyncTriggerPromise = null;\r\n        this._currentRequest = null;\r\n        this._currentRequestPosition = null;\r\n        this._currentRequestModelVersion = null;\r\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\r\n        this._register(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(61 /* linkedEditing */) || e.hasChanged(81 /* renameOnType */)) {\r\n                this.reinitialize(false);\r\n            }\r\n        }));\r\n        this._register(LinkedEditingRangeProviderRegistry.onDidChange(() => this.reinitialize(false)));\r\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\r\n        this.reinitialize(true);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(LinkedEditingContribution.ID);\r\n    }\r\n    reinitialize(forceRefresh) {\r\n        const model = this._editor.getModel();\r\n        const isEnabled = model !== null && (this._editor.getOption(61 /* linkedEditing */) || this._editor.getOption(81 /* renameOnType */)) && LinkedEditingRangeProviderRegistry.has(model);\r\n        if (isEnabled === this._enabled && !forceRefresh) {\r\n            return;\r\n        }\r\n        this._enabled = isEnabled;\r\n        this.clearRanges();\r\n        this._localToDispose.clear();\r\n        if (!isEnabled || model === null) {\r\n            return;\r\n        }\r\n        this._languageWordPattern = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n        this._localToDispose.add(model.onDidChangeLanguageConfiguration(() => {\r\n            this._languageWordPattern = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n        }));\r\n        const rangeUpdateScheduler = new Delayer(this._debounceDuration);\r\n        const triggerRangeUpdate = () => {\r\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), this._debounceDuration);\r\n        };\r\n        const rangeSyncScheduler = new Delayer(0);\r\n        const triggerRangeSync = (decorations) => {\r\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(decorations));\r\n        };\r\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\r\n            triggerRangeUpdate();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\r\n            if (!this._ignoreChangeEvent) {\r\n                if (this._currentDecorations.length > 0) {\r\n                    const referenceRange = model.getDecorationRange(this._currentDecorations[0]);\r\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\r\n                        triggerRangeSync(this._currentDecorations);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            triggerRangeUpdate();\r\n        }));\r\n        this._localToDispose.add({\r\n            dispose: () => {\r\n                rangeUpdateScheduler.cancel();\r\n                rangeSyncScheduler.cancel();\r\n            }\r\n        });\r\n        this.updateRanges();\r\n    }\r\n    _syncRanges(decorations) {\r\n        // dalayed invocation, make sure we're still on\r\n        if (!this._editor.hasModel() || decorations !== this._currentDecorations || decorations.length === 0) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const referenceRange = model.getDecorationRange(decorations[0]);\r\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\r\n            return this.clearRanges();\r\n        }\r\n        const referenceValue = model.getValueInRange(referenceRange);\r\n        if (this._currentWordPattern) {\r\n            const match = referenceValue.match(this._currentWordPattern);\r\n            const matchLength = match ? match[0].length : 0;\r\n            if (matchLength !== referenceValue.length) {\r\n                return this.clearRanges();\r\n            }\r\n        }\r\n        let edits = [];\r\n        for (let i = 1, len = decorations.length; i < len; i++) {\r\n            const mirrorRange = model.getDecorationRange(decorations[i]);\r\n            if (!mirrorRange) {\r\n                continue;\r\n            }\r\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\r\n                edits.push({\r\n                    range: mirrorRange,\r\n                    text: referenceValue\r\n                });\r\n            }\r\n            else {\r\n                let oldValue = model.getValueInRange(mirrorRange);\r\n                let newValue = referenceValue;\r\n                let rangeStartColumn = mirrorRange.startColumn;\r\n                let rangeEndColumn = mirrorRange.endColumn;\r\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\r\n                rangeStartColumn += commonPrefixLength;\r\n                oldValue = oldValue.substr(commonPrefixLength);\r\n                newValue = newValue.substr(commonPrefixLength);\r\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\r\n                rangeEndColumn -= commonSuffixLength;\r\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\r\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\r\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\r\n                    edits.push({\r\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\r\n                        text: newValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (edits.length === 0) {\r\n            return;\r\n        }\r\n        try {\r\n            this._editor.popUndoStop();\r\n            this._ignoreChangeEvent = true;\r\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\r\n            this._editor.executeEdits('linkedEditing', edits);\r\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\r\n        }\r\n        finally {\r\n            this._ignoreChangeEvent = false;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.clearRanges();\r\n        super.dispose();\r\n    }\r\n    clearRanges() {\r\n        this._visibleContextKey.set(false);\r\n        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, []);\r\n        if (this._currentRequest) {\r\n            this._currentRequest.cancel();\r\n            this._currentRequest = null;\r\n            this._currentRequestPosition = null;\r\n        }\r\n    }\r\n    updateRanges(force = false) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                this.clearRanges();\r\n                return;\r\n            }\r\n            const position = this._editor.getPosition();\r\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\r\n                // disabled or multicursor\r\n                this.clearRanges();\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const modelVersionId = model.getVersionId();\r\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\r\n                if (position.equals(this._currentRequestPosition)) {\r\n                    return; // same position\r\n                }\r\n                if (this._currentDecorations && this._currentDecorations.length > 0) {\r\n                    const range = model.getDecorationRange(this._currentDecorations[0]);\r\n                    if (range && range.containsPosition(position)) {\r\n                        return; // just moving inside the existing primary range\r\n                    }\r\n                }\r\n            }\r\n            this._currentRequestPosition = position;\r\n            this._currentRequestModelVersion = modelVersionId;\r\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const response = yield getLinkedEditingRanges(model, position, token);\r\n                    if (request !== this._currentRequest) {\r\n                        return;\r\n                    }\r\n                    this._currentRequest = null;\r\n                    if (modelVersionId !== model.getVersionId()) {\r\n                        return;\r\n                    }\r\n                    let ranges = [];\r\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\r\n                        ranges = response.ranges;\r\n                    }\r\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\r\n                    let foundReferenceRange = false;\r\n                    for (let i = 0, len = ranges.length; i < len; i++) {\r\n                        if (Range.containsPosition(ranges[i], position)) {\r\n                            foundReferenceRange = true;\r\n                            if (i !== 0) {\r\n                                const referenceRange = ranges[i];\r\n                                ranges.splice(i, 1);\r\n                                ranges.unshift(referenceRange);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!foundReferenceRange) {\r\n                        // Cannot do linked editing if the ranges are not where the cursor is...\r\n                        this.clearRanges();\r\n                        return;\r\n                    }\r\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\r\n                    this._visibleContextKey.set(true);\r\n                    this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, decorations);\r\n                }\r\n                catch (err) {\r\n                    if (!isPromiseCanceledError(err)) {\r\n                        onUnexpectedError(err);\r\n                    }\r\n                    if (this._currentRequest === request || !this._currentRequest) {\r\n                        // stop if we are still the latest request\r\n                        this.clearRanges();\r\n                    }\r\n                }\r\n            }));\r\n            this._currentRequest = request;\r\n            return request;\r\n        });\r\n    }\r\n};\r\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\r\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\r\n    description: 'linked-editing',\r\n    stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\r\n    className: DECORATION_CLASS_NAME\r\n});\r\nLinkedEditingContribution = __decorate([\r\n    __param(1, IContextKeyService)\r\n], LinkedEditingContribution);\r\nexport { LinkedEditingContribution };\r\nexport class LinkedEditingAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.linkedEditing',\r\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\r\n            alias: 'Start Linked Editing',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(_accessor, editor) {\r\n        const controller = LinkedEditingContribution.get(editor);\r\n        if (controller) {\r\n            return Promise.resolve(controller.updateRanges(true));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\r\nregisterEditorCommand(new LinkedEditingCommand({\r\n    id: 'cancelLinkedEditingInput',\r\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.clearRanges(),\r\n    kbOpts: {\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nfunction getLinkedEditingRanges(model, position, token) {\r\n    const orderedByScore = LinkedEditingRangeProviderRegistry.ordered(model);\r\n    // in order of score ask the linked editing range provider\r\n    // until someone response with a good result\r\n    // (good = not null)\r\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            return yield provider.provideLinkedEditingRanges(model, position, token);\r\n        }\r\n        catch (e) {\r\n            onUnexpectedExternalError(e);\r\n            return undefined;\r\n        }\r\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\r\n}\r\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hc: Color.fromHex('#f00').transparent(0.3) }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\r\n    if (editorLinkedEditingBackgroundColor) {\r\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\r\n    }\r\n});\r\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (model, position) => getLinkedEditingRanges(model, position, CancellationToken.None));\r\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\r\nregisterEditorAction(LinkedEditingAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport class Link {\r\n    constructor(link, provider) {\r\n        this._link = link;\r\n        this._provider = provider;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            range: this.range,\r\n            url: this.url,\r\n            tooltip: this.tooltip\r\n        };\r\n    }\r\n    get range() {\r\n        return this._link.range;\r\n    }\r\n    get url() {\r\n        return this._link.url;\r\n    }\r\n    get tooltip() {\r\n        return this._link.tooltip;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._link.url) {\r\n                return this._link.url;\r\n            }\r\n            if (typeof this._provider.resolveLink === 'function') {\r\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\r\n                    this._link = value || this._link;\r\n                    if (this._link.url) {\r\n                        // recurse\r\n                        return this.resolve(token);\r\n                    }\r\n                    return Promise.reject(new Error('missing'));\r\n                });\r\n            }\r\n            return Promise.reject(new Error('missing'));\r\n        });\r\n    }\r\n}\r\nexport class LinksList {\r\n    constructor(tuples) {\r\n        this._disposables = new DisposableStore();\r\n        let links = [];\r\n        for (const [list, provider] of tuples) {\r\n            // merge all links\r\n            const newLinks = list.links.map(link => new Link(link, provider));\r\n            links = LinksList._union(links, newLinks);\r\n            // register disposables\r\n            if (isDisposable(list)) {\r\n                this._disposables.add(list);\r\n            }\r\n        }\r\n        this.links = links;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this.links.length = 0;\r\n    }\r\n    static _union(oldLinks, newLinks) {\r\n        // reunite oldLinks with newLinks and remove duplicates\r\n        let result = [];\r\n        let oldIndex;\r\n        let oldLen;\r\n        let newIndex;\r\n        let newLen;\r\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\r\n            const oldLink = oldLinks[oldIndex];\r\n            const newLink = newLinks[newIndex];\r\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\r\n                // Remove the oldLink\r\n                oldIndex++;\r\n                continue;\r\n            }\r\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\r\n            if (comparisonResult < 0) {\r\n                // oldLink is before\r\n                result.push(oldLink);\r\n                oldIndex++;\r\n            }\r\n            else {\r\n                // newLink is before\r\n                result.push(newLink);\r\n                newIndex++;\r\n            }\r\n        }\r\n        for (; oldIndex < oldLen; oldIndex++) {\r\n            result.push(oldLinks[oldIndex]);\r\n        }\r\n        for (; newIndex < newLen; newIndex++) {\r\n            result.push(newLinks[newIndex]);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport function getLinks(model, token) {\r\n    const lists = [];\r\n    // ask all providers for links in parallel\r\n    const promises = LinkProviderRegistry.ordered(model).reverse().map((provider, i) => {\r\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\r\n            if (result) {\r\n                lists[i] = [result, provider];\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(() => {\r\n        const result = new LinksList(coalesce(lists));\r\n        if (!token.isCancellationRequested) {\r\n            return result;\r\n        }\r\n        result.dispose();\r\n        return new LinksList([]);\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let [uri, resolveCount] = args;\r\n    assertType(uri instanceof URI);\r\n    if (typeof resolveCount !== 'number') {\r\n        resolveCount = 0;\r\n    }\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return [];\r\n    }\r\n    const list = yield getLinks(model, CancellationToken.None);\r\n    if (!list) {\r\n        return [];\r\n    }\r\n    // resolve links\r\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\r\n        yield list.links[i].resolve(CancellationToken.None);\r\n    }\r\n    const result = list.links.slice(0);\r\n    list.dispose();\r\n    return result;\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './links.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as async from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { LinkProviderRegistry } from '../../common/modes.js';\r\nimport { ClickLinkGesture } from '../gotoSymbol/link/clickLinkGesture.js';\r\nimport { getLinks } from './getLinks.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorActiveLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport * as resources from '../../../base/common/resources.js';\r\nfunction getHoverMessage(link, useMetaKey) {\r\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\r\n    const label = link.tooltip\r\n        ? link.tooltip\r\n        : executeCmd\r\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\r\n            : nls.localize('links.navigate.follow', 'Follow link');\r\n    const kb = useMetaKey\r\n        ? platform.isMacintosh\r\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\r\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\r\n        : platform.isMacintosh\r\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\r\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\r\n    if (link.url) {\r\n        let nativeLabel = '';\r\n        if (/^command:/i.test(link.url.toString())) {\r\n            // Don't show complete command arguments in the native tooltip\r\n            const match = link.url.toString().match(/^command:([^?#]+)/);\r\n            if (match) {\r\n                const commandId = match[1];\r\n                const nativeLabelText = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\r\n                nativeLabel = ` \"${nativeLabelText}\"`;\r\n            }\r\n        }\r\n        const hoverMessage = new MarkdownString('', true).appendMarkdown(`[${label}](${link.url.toString(true)}${nativeLabel}) (${kb})`);\r\n        return hoverMessage;\r\n    }\r\n    else {\r\n        return new MarkdownString().appendText(`${label} (${kb})`);\r\n    }\r\n}\r\nconst decoration = {\r\n    general: ModelDecorationOptions.register({\r\n        description: 'detected-link',\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        collapseOnReplaceEdit: true,\r\n        inlineClassName: 'detected-link'\r\n    }),\r\n    active: ModelDecorationOptions.register({\r\n        description: 'detected-link-active',\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        collapseOnReplaceEdit: true,\r\n        inlineClassName: 'detected-link-active'\r\n    })\r\n};\r\nclass LinkOccurrence {\r\n    constructor(link, decorationId) {\r\n        this.link = link;\r\n        this.decorationId = decorationId;\r\n    }\r\n    static decoration(link, useMetaKey) {\r\n        return {\r\n            range: link.range,\r\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\r\n        };\r\n    }\r\n    static _getOptions(link, useMetaKey, isActive) {\r\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\r\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\r\n        return options;\r\n    }\r\n    activate(changeAccessor, useMetaKey) {\r\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\r\n    }\r\n    deactivate(changeAccessor, useMetaKey) {\r\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\r\n    }\r\n}\r\nlet LinkDetector = class LinkDetector {\r\n    constructor(editor, openerService, notificationService) {\r\n        this.listenersToRemove = new DisposableStore();\r\n        this.editor = editor;\r\n        this.openerService = openerService;\r\n        this.notificationService = notificationService;\r\n        let clickLinkGesture = new ClickLinkGesture(editor);\r\n        this.listenersToRemove.add(clickLinkGesture);\r\n        this.listenersToRemove.add(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\r\n        }));\r\n        this.listenersToRemove.add(clickLinkGesture.onExecute((e) => {\r\n            this.onEditorMouseUp(e);\r\n        }));\r\n        this.listenersToRemove.add(clickLinkGesture.onCancel((e) => {\r\n            this.cleanUpActiveLinkDecoration();\r\n        }));\r\n        this.enabled = editor.getOption(62 /* links */);\r\n        this.listenersToRemove.add(editor.onDidChangeConfiguration((e) => {\r\n            const enabled = editor.getOption(62 /* links */);\r\n            if (this.enabled === enabled) {\r\n                // No change in our configuration option\r\n                return;\r\n            }\r\n            this.enabled = enabled;\r\n            // Remove any links (for the getting disabled case)\r\n            this.updateDecorations([]);\r\n            // Stop any computation (for the getting disabled case)\r\n            this.stop();\r\n            // Start computing (for the getting enabled case)\r\n            this.beginCompute();\r\n        }));\r\n        this.listenersToRemove.add(editor.onDidChangeModelContent((e) => this.onChange()));\r\n        this.listenersToRemove.add(editor.onDidChangeModel((e) => this.onModelChanged()));\r\n        this.listenersToRemove.add(editor.onDidChangeModelLanguage((e) => this.onModelModeChanged()));\r\n        this.listenersToRemove.add(LinkProviderRegistry.onDidChange((e) => this.onModelModeChanged()));\r\n        this.timeout = new async.TimeoutTimer();\r\n        this.computePromise = null;\r\n        this.activeLinksList = null;\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        this.beginCompute();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(LinkDetector.ID);\r\n    }\r\n    onModelChanged() {\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        this.stop();\r\n        this.beginCompute();\r\n    }\r\n    onModelModeChanged() {\r\n        this.stop();\r\n        this.beginCompute();\r\n    }\r\n    onChange() {\r\n        this.timeout.setIfNotSet(() => this.beginCompute(), LinkDetector.RECOMPUTE_TIME);\r\n    }\r\n    beginCompute() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.editor.hasModel() || !this.enabled) {\r\n                return;\r\n            }\r\n            const model = this.editor.getModel();\r\n            if (!LinkProviderRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (this.activeLinksList) {\r\n                this.activeLinksList.dispose();\r\n                this.activeLinksList = null;\r\n            }\r\n            this.computePromise = async.createCancelablePromise(token => getLinks(model, token));\r\n            try {\r\n                this.activeLinksList = yield this.computePromise;\r\n                this.updateDecorations(this.activeLinksList.links);\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                this.computePromise = null;\r\n            }\r\n        });\r\n    }\r\n    updateDecorations(links) {\r\n        const useMetaKey = (this.editor.getOption(69 /* multiCursorModifier */) === 'altKey');\r\n        let oldDecorations = [];\r\n        let keys = Object.keys(this.currentOccurrences);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            let decorationId = keys[i];\r\n            let occurance = this.currentOccurrences[decorationId];\r\n            oldDecorations.push(occurance.decorationId);\r\n        }\r\n        let newDecorations = [];\r\n        if (links) {\r\n            // Not sure why this is sometimes null\r\n            for (const link of links) {\r\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\r\n            }\r\n        }\r\n        let decorations = this.editor.deltaDecorations(oldDecorations, newDecorations);\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        for (let i = 0, len = decorations.length; i < len; i++) {\r\n            let occurance = new LinkOccurrence(links[i], decorations[i]);\r\n            this.currentOccurrences[occurance.decorationId] = occurance;\r\n        }\r\n    }\r\n    _onEditorMouseMove(mouseEvent, withKey) {\r\n        const useMetaKey = (this.editor.getOption(69 /* multiCursorModifier */) === 'altKey');\r\n        if (this.isEnabled(mouseEvent, withKey)) {\r\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\r\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\r\n            if (occurrence) {\r\n                this.editor.changeDecorations((changeAccessor) => {\r\n                    occurrence.activate(changeAccessor, useMetaKey);\r\n                    this.activeLinkDecorationId = occurrence.decorationId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.cleanUpActiveLinkDecoration();\r\n        }\r\n    }\r\n    cleanUpActiveLinkDecoration() {\r\n        const useMetaKey = (this.editor.getOption(69 /* multiCursorModifier */) === 'altKey');\r\n        if (this.activeLinkDecorationId) {\r\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\r\n            if (occurrence) {\r\n                this.editor.changeDecorations((changeAccessor) => {\r\n                    occurrence.deactivate(changeAccessor, useMetaKey);\r\n                });\r\n            }\r\n            this.activeLinkDecorationId = null;\r\n        }\r\n    }\r\n    onEditorMouseUp(mouseEvent) {\r\n        if (!this.isEnabled(mouseEvent)) {\r\n            return;\r\n        }\r\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\r\n        if (!occurrence) {\r\n            return;\r\n        }\r\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\r\n    }\r\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\r\n        if (!this.openerService) {\r\n            return;\r\n        }\r\n        const { link } = occurrence;\r\n        link.resolve(CancellationToken.None).then(uri => {\r\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\r\n            if (typeof uri === 'string' && this.editor.hasModel()) {\r\n                const modelUri = this.editor.getModel().uri;\r\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\r\n                    const parsedUri = URI.parse(uri);\r\n                    if (parsedUri.scheme === Schemas.file) {\r\n                        const fsPath = resources.originalFSPath(parsedUri);\r\n                        let relativePath = null;\r\n                        if (fsPath.startsWith('/./')) {\r\n                            relativePath = `.${fsPath.substr(1)}`;\r\n                        }\r\n                        else if (fsPath.startsWith('//./')) {\r\n                            relativePath = `.${fsPath.substr(2)}`;\r\n                        }\r\n                        if (relativePath) {\r\n                            uri = resources.joinPath(modelUri, relativePath);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true });\r\n        }, err => {\r\n            const messageOrError = err instanceof Error ? err.message : err;\r\n            // different error cases\r\n            if (messageOrError === 'invalid') {\r\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\r\n            }\r\n            else if (messageOrError === 'missing') {\r\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\r\n            }\r\n            else {\r\n                onUnexpectedError(err);\r\n            }\r\n        });\r\n    }\r\n    getLinkOccurrence(position) {\r\n        if (!this.editor.hasModel() || !position) {\r\n            return null;\r\n        }\r\n        const decorations = this.editor.getModel().getDecorationsInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: position.column,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        }, 0, true);\r\n        for (const decoration of decorations) {\r\n            const currentOccurrence = this.currentOccurrences[decoration.id];\r\n            if (currentOccurrence) {\r\n                return currentOccurrence;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return Boolean((mouseEvent.target.type === 6 /* CONTENT_TEXT */)\r\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\r\n    }\r\n    stop() {\r\n        var _a;\r\n        this.timeout.cancel();\r\n        if (this.activeLinksList) {\r\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.activeLinksList = null;\r\n        }\r\n        if (this.computePromise) {\r\n            this.computePromise.cancel();\r\n            this.computePromise = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.listenersToRemove.dispose();\r\n        this.stop();\r\n        this.timeout.dispose();\r\n    }\r\n};\r\nLinkDetector.ID = 'editor.linkDetector';\r\nLinkDetector.RECOMPUTE_TIME = 1000; // ms\r\nLinkDetector = __decorate([\r\n    __param(1, IOpenerService),\r\n    __param(2, INotificationService)\r\n], LinkDetector);\r\nexport { LinkDetector };\r\nclass OpenLinkAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.openLink',\r\n            label: nls.localize('label', \"Open Link\"),\r\n            alias: 'Open Link',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let linkDetector = LinkDetector.get(editor);\r\n        if (!linkDetector) {\r\n            return;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let selections = editor.getSelections();\r\n        for (let sel of selections) {\r\n            let link = linkDetector.getLinkOccurrence(sel.getEndPosition());\r\n            if (link) {\r\n                linkDetector.openLinkOccurrence(link, false);\r\n            }\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\r\nregisterEditorAction(OpenLinkAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { status } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { CommonFindController } from '../find/findController.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { overviewRulerSelectionHighlightForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nfunction announceCursorChange(previousCursorState, cursorState) {\r\n    const cursorDiff = cursorState.filter(cs => !previousCursorState.find(pcs => pcs.equals(cs)));\r\n    if (cursorDiff.length >= 1) {\r\n        const cursorPositions = cursorDiff.map(cs => `line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`).join(', ');\r\n        const msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\r\n        status(msg);\r\n    }\r\n}\r\nexport class InsertCursorAbove extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorAbove',\r\n            label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\r\n            alias: 'Add Cursor Above',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 16 /* UpArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const useLogicalLine = (args && args.logicalLine === true);\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel.cursorConfig.readOnly) {\r\n            return;\r\n        }\r\n        viewModel.pushStackElement();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));\r\n        viewModel.revealTopMostCursor(args.source);\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nexport class InsertCursorBelow extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorBelow',\r\n            label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\r\n            alias: 'Add Cursor Below',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 18 /* DownArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const useLogicalLine = (args && args.logicalLine === true);\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel.cursorConfig.readOnly) {\r\n            return;\r\n        }\r\n        viewModel.pushStackElement();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));\r\n        viewModel.revealBottomMostCursor(args.source);\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorAtEndOfEachLineSelected',\r\n            label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\r\n            alias: 'Add Cursors to Line Ends',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 39 /* KEY_I */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\r\n                order: 4\r\n            }\r\n        });\r\n    }\r\n    getCursorsForSelection(selection, model, result) {\r\n        if (selection.isEmpty()) {\r\n            return;\r\n        }\r\n        for (let i = selection.startLineNumber; i < selection.endLineNumber; i++) {\r\n            let currentLineMaxColumn = model.getLineMaxColumn(i);\r\n            result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\r\n        }\r\n        if (selection.endColumn > 1) {\r\n            result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\r\n        }\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        let newSelections = [];\r\n        selections.forEach((sel) => this.getCursorsForSelection(sel, model, newSelections));\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addCursorsToBottom',\r\n            label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\r\n            alias: 'Add Cursors To Bottom',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections();\r\n        const lineCount = editor.getModel().getLineCount();\r\n        let newSelections = [];\r\n        for (let i = selections[0].startLineNumber; i <= lineCount; i++) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addCursorsToTop',\r\n            label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\r\n            alias: 'Add Cursors To Top',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections();\r\n        let newSelections = [];\r\n        for (let i = selections[0].startLineNumber; i >= 1; i--) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nexport class MultiCursorSessionResult {\r\n    constructor(selections, revealRange, revealScrollType) {\r\n        this.selections = selections;\r\n        this.revealRange = revealRange;\r\n        this.revealScrollType = revealScrollType;\r\n    }\r\n}\r\nexport class MultiCursorSession {\r\n    constructor(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\r\n        this._editor = _editor;\r\n        this.findController = findController;\r\n        this.isDisconnectedFromFindController = isDisconnectedFromFindController;\r\n        this.searchText = searchText;\r\n        this.wholeWord = wholeWord;\r\n        this.matchCase = matchCase;\r\n        this.currentMatch = currentMatch;\r\n    }\r\n    static create(editor, findController) {\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const findState = findController.getState();\r\n        // Find widget owns entirely what we search for if:\r\n        //  - focus is not in the editor (i.e. it is in the find widget)\r\n        //  - and the search widget is visible\r\n        //  - and the search string is non-empty\r\n        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\r\n            // Find widget owns what is searched for\r\n            return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\r\n        }\r\n        // Otherwise, the selection gives the search text, and the find widget gives the search settings\r\n        // The exception is the find state disassociation case: when beginning with a single, collapsed selection\r\n        let isDisconnectedFromFindController = false;\r\n        let wholeWord;\r\n        let matchCase;\r\n        const selections = editor.getSelections();\r\n        if (selections.length === 1 && selections[0].isEmpty()) {\r\n            isDisconnectedFromFindController = true;\r\n            wholeWord = true;\r\n            matchCase = true;\r\n        }\r\n        else {\r\n            wholeWord = findState.wholeWord;\r\n            matchCase = findState.matchCase;\r\n        }\r\n        // Selection owns what is searched for\r\n        const s = editor.getSelection();\r\n        let searchText;\r\n        let currentMatch = null;\r\n        if (s.isEmpty()) {\r\n            // selection is empty => expand to current word\r\n            const word = editor.getConfiguredWordAtPosition(s.getStartPosition());\r\n            if (!word) {\r\n                return null;\r\n            }\r\n            searchText = word.word;\r\n            currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\r\n        }\r\n        else {\r\n            searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\r\n        }\r\n        return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\r\n    }\r\n    addSelectionToNextFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    }\r\n    moveSelectionToNextFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    }\r\n    _getNextMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            const result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        const allSelections = this._editor.getSelections();\r\n        const lastAddedSelection = allSelections[allSelections.length - 1];\r\n        const nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\r\n    }\r\n    addSelectionToPreviousFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    }\r\n    moveSelectionToPreviousFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    }\r\n    _getPreviousMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            const result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        const allSelections = this._editor.getSelections();\r\n        const lastAddedSelection = allSelections[allSelections.length - 1];\r\n        const previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\r\n    }\r\n    selectAll() {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        return this._editor.getModel().findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n    }\r\n}\r\nexport class MultiCursorSelectionController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._sessionDispose = this._register(new DisposableStore());\r\n        this._editor = editor;\r\n        this._ignoreSelectionChange = false;\r\n        this._session = null;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MultiCursorSelectionController.ID);\r\n    }\r\n    dispose() {\r\n        this._endSession();\r\n        super.dispose();\r\n    }\r\n    _beginSessionIfNeeded(findController) {\r\n        if (!this._session) {\r\n            // Create a new session\r\n            const session = MultiCursorSession.create(this._editor, findController);\r\n            if (!session) {\r\n                return;\r\n            }\r\n            this._session = session;\r\n            const newState = { searchString: this._session.searchText };\r\n            if (this._session.isDisconnectedFromFindController) {\r\n                newState.wholeWordOverride = 1 /* True */;\r\n                newState.matchCaseOverride = 1 /* True */;\r\n                newState.isRegexOverride = 2 /* False */;\r\n            }\r\n            findController.getState().change(newState, false);\r\n            this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e) => {\r\n                if (this._ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                this._endSession();\r\n            }));\r\n            this._sessionDispose.add(this._editor.onDidBlurEditorText(() => {\r\n                this._endSession();\r\n            }));\r\n            this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e) => {\r\n                if (e.matchCase || e.wholeWord) {\r\n                    this._endSession();\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    _endSession() {\r\n        this._sessionDispose.clear();\r\n        if (this._session && this._session.isDisconnectedFromFindController) {\r\n            const newState = {\r\n                wholeWordOverride: 0 /* NotSet */,\r\n                matchCaseOverride: 0 /* NotSet */,\r\n                isRegexOverride: 0 /* NotSet */,\r\n            };\r\n            this._session.findController.getState().change(newState, false);\r\n        }\r\n        this._session = null;\r\n    }\r\n    _setSelections(selections) {\r\n        this._ignoreSelectionChange = true;\r\n        this._editor.setSelections(selections);\r\n        this._ignoreSelectionChange = false;\r\n    }\r\n    _expandEmptyToWord(model, selection) {\r\n        if (!selection.isEmpty()) {\r\n            return selection;\r\n        }\r\n        const word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n        if (!word) {\r\n            return selection;\r\n        }\r\n        return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n    }\r\n    _applySessionResult(result) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        this._setSelections(result.selections);\r\n        if (result.revealRange) {\r\n            this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\r\n        }\r\n    }\r\n    getSession(findController) {\r\n        return this._session;\r\n    }\r\n    addSelectionToNextFindMatch(findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._session) {\r\n            // If there are multiple cursors, handle the case where they do not all select the same text.\r\n            const allSelections = this._editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                const findState = findController.getState();\r\n                const matchCase = findState.matchCase;\r\n                const selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    const model = this._editor.getModel();\r\n                    let resultingSelections = [];\r\n                    for (let i = 0, len = allSelections.length; i < len; i++) {\r\n                        resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\r\n                    }\r\n                    this._editor.setSelections(resultingSelections);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToNextFindMatch());\r\n        }\r\n    }\r\n    addSelectionToPreviousFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\r\n        }\r\n    }\r\n    moveSelectionToNextFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToNextFindMatch());\r\n        }\r\n    }\r\n    moveSelectionToPreviousFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\r\n        }\r\n    }\r\n    selectAll(findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let matches = null;\r\n        const findState = findController.getState();\r\n        // Special case: find widget owns entirely what we search for if:\r\n        // - focus is not in the editor (i.e. it is in the find widget)\r\n        // - and the search widget is visible\r\n        // - and the search string is non-empty\r\n        // - and we're searching for a regex\r\n        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\r\n            matches = this._editor.getModel().findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        }\r\n        else {\r\n            this._beginSessionIfNeeded(findController);\r\n            if (!this._session) {\r\n                return;\r\n            }\r\n            matches = this._session.selectAll();\r\n        }\r\n        if (findState.searchScope) {\r\n            const states = findState.searchScope;\r\n            let inSelection = [];\r\n            matches.forEach((match) => {\r\n                states.forEach((state) => {\r\n                    if (match.range.endLineNumber <= state.endLineNumber && match.range.startLineNumber >= state.startLineNumber) {\r\n                        inSelection.push(match);\r\n                    }\r\n                });\r\n            });\r\n            matches = inSelection;\r\n        }\r\n        if (matches.length > 0) {\r\n            const editorSelection = this._editor.getSelection();\r\n            // Have the primary cursor remain the one where the action was invoked\r\n            for (let i = 0, len = matches.length; i < len; i++) {\r\n                const match = matches[i];\r\n                const intersection = match.range.intersectRanges(editorSelection);\r\n                if (intersection) {\r\n                    // bingo!\r\n                    matches[i] = matches[0];\r\n                    matches[0] = match;\r\n                    break;\r\n                }\r\n            }\r\n            this._setSelections(matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)));\r\n        }\r\n    }\r\n}\r\nMultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\r\nexport class MultiCursorSelectionControllerAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        const multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return;\r\n        }\r\n        const findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return;\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel) {\r\n            const previousCursorState = viewModel.getCursorStates();\r\n            this._run(multiCursorController, findController);\r\n            announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n        }\r\n    }\r\n}\r\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addSelectionToNextFindMatch',\r\n            label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\r\n            alias: 'Add Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 34 /* KEY_D */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\r\n                order: 5\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.addSelectionToNextFindMatch(findController);\r\n    }\r\n}\r\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addSelectionToPreviousFindMatch',\r\n            label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\r\n            alias: 'Add Selection To Previous Find Match',\r\n            precondition: undefined,\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.addSelectionToPreviousFindMatch(findController);\r\n    }\r\n}\r\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.moveSelectionToNextFindMatch',\r\n            label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\r\n            alias: 'Move Last Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 34 /* KEY_D */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToNextFindMatch(findController);\r\n    }\r\n}\r\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.moveSelectionToPreviousFindMatch',\r\n            label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\r\n            alias: 'Move Last Selection To Previous Find Match',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToPreviousFindMatch(findController);\r\n    }\r\n}\r\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectHighlights',\r\n            label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\r\n            alias: 'Select All Occurrences of Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 42 /* KEY_L */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\r\n                order: 7\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    }\r\n}\r\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.changeAll',\r\n            label: nls.localize('changeAll.label', \"Change All Occurrences\"),\r\n            alias: 'Change All Occurrences',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.2\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    }\r\n}\r\nclass SelectionHighlighterState {\r\n    constructor(searchText, matchCase, wordSeparators, modelVersionId) {\r\n        this.searchText = searchText;\r\n        this.matchCase = matchCase;\r\n        this.wordSeparators = wordSeparators;\r\n        this.modelVersionId = modelVersionId;\r\n    }\r\n    /**\r\n     * Everything equals except for `lastWordUnderCursor`\r\n     */\r\n    static softEquals(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.searchText === b.searchText\r\n            && a.matchCase === b.matchCase\r\n            && a.wordSeparators === b.wordSeparators\r\n            && a.modelVersionId === b.modelVersionId);\r\n    }\r\n}\r\nexport class SelectionHighlighter extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._isEnabled = editor.getOption(97 /* selectionHighlight */);\r\n        this.decorations = [];\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\r\n        this.state = null;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            this._isEnabled = editor.getOption(97 /* selectionHighlight */);\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (!this._isEnabled) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            if (e.selection.isEmpty()) {\r\n                if (e.reason === 3 /* Explicit */) {\r\n                    if (this.state) {\r\n                        // no longer valid\r\n                        this._setState(null);\r\n                    }\r\n                    this.updateSoon.schedule();\r\n                }\r\n                else {\r\n                    this._setState(null);\r\n                }\r\n            }\r\n            else {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._setState(null);\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            if (this._isEnabled) {\r\n                this.updateSoon.schedule();\r\n            }\r\n        }));\r\n        this._register(CommonFindController.get(editor).getState().onFindReplaceStateChange((e) => {\r\n            this._update();\r\n        }));\r\n    }\r\n    _update() {\r\n        this._setState(SelectionHighlighter._createState(this._isEnabled, this.editor));\r\n    }\r\n    static _createState(isEnabled, editor) {\r\n        if (!isEnabled) {\r\n            return null;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const s = editor.getSelection();\r\n        if (s.startLineNumber !== s.endLineNumber) {\r\n            // multiline forbidden for perf reasons\r\n            return null;\r\n        }\r\n        const multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return null;\r\n        }\r\n        const findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return null;\r\n        }\r\n        let r = multiCursorController.getSession(findController);\r\n        if (!r) {\r\n            const allSelections = editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                const findState = findController.getState();\r\n                const matchCase = findState.matchCase;\r\n                const selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    return null;\r\n                }\r\n            }\r\n            r = MultiCursorSession.create(editor, findController);\r\n        }\r\n        if (!r) {\r\n            return null;\r\n        }\r\n        if (r.currentMatch) {\r\n            // This is an empty selection\r\n            // Do not interfere with semantic word highlighting in the no selection case\r\n            return null;\r\n        }\r\n        if (/^[ \\t]+$/.test(r.searchText)) {\r\n            // whitespace only selection\r\n            return null;\r\n        }\r\n        if (r.searchText.length > 200) {\r\n            // very long selection\r\n            return null;\r\n        }\r\n        // TODO: better handling of this case\r\n        const findState = findController.getState();\r\n        const caseSensitive = findState.matchCase;\r\n        // Return early if the find widget shows the exact same matches\r\n        if (findState.isRevealed) {\r\n            let findStateSearchString = findState.searchString;\r\n            if (!caseSensitive) {\r\n                findStateSearchString = findStateSearchString.toLowerCase();\r\n            }\r\n            let mySearchString = r.searchText;\r\n            if (!caseSensitive) {\r\n                mySearchString = mySearchString.toLowerCase();\r\n            }\r\n            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\r\n                return null;\r\n            }\r\n        }\r\n        return new SelectionHighlighterState(r.searchText, r.matchCase, r.wholeWord ? editor.getOption(116 /* wordSeparators */) : null, editor.getModel().getVersionId());\r\n    }\r\n    _setState(state) {\r\n        if (SelectionHighlighterState.softEquals(this.state, state)) {\r\n            this.state = state;\r\n            return;\r\n        }\r\n        this.state = state;\r\n        if (!this.state) {\r\n            this.decorations = this.editor.deltaDecorations(this.decorations, []);\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (model.isTooLargeForTokenization()) {\r\n            // the file is too large, so searching word under cursor in the whole document takes is blocking the UI.\r\n            return;\r\n        }\r\n        const hasFindOccurrences = DocumentHighlightProviderRegistry.has(model) && this.editor.getOption(71 /* occurrencesHighlight */);\r\n        let allMatches = model.findMatches(this.state.searchText, true, false, this.state.matchCase, this.state.wordSeparators, false).map(m => m.range);\r\n        allMatches.sort(Range.compareRangesUsingStarts);\r\n        let selections = this.editor.getSelections();\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        // do not overlap with selection (issue #64 and #512)\r\n        let matches = [];\r\n        for (let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\r\n            const match = allMatches[i];\r\n            if (j >= lenJ) {\r\n                // finished all editor selections\r\n                matches.push(match);\r\n                i++;\r\n            }\r\n            else {\r\n                const cmp = Range.compareRangesUsingStarts(match, selections[j]);\r\n                if (cmp < 0) {\r\n                    // match is before sel\r\n                    if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\r\n                        matches.push(match);\r\n                    }\r\n                    i++;\r\n                }\r\n                else if (cmp > 0) {\r\n                    // sel is before match\r\n                    j++;\r\n                }\r\n                else {\r\n                    // sel is equal to match\r\n                    i++;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n        const decorations = matches.map(r => {\r\n            return {\r\n                range: r,\r\n                // Show in overviewRuler only if model has no semantic highlighting\r\n                options: (hasFindOccurrences ? SelectionHighlighter._SELECTION_HIGHLIGHT : SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW)\r\n            };\r\n        });\r\n        this.decorations = this.editor.deltaDecorations(this.decorations, decorations);\r\n    }\r\n    dispose() {\r\n        this._setState(null);\r\n        super.dispose();\r\n    }\r\n}\r\nSelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\r\nSelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW = ModelDecorationOptions.register({\r\n    description: 'selection-highlight-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nSelectionHighlighter._SELECTION_HIGHLIGHT = ModelDecorationOptions.register({\r\n    description: 'selection-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n});\r\nfunction modelRangesContainSameText(model, ranges, matchCase) {\r\n    const selectedText = getValueInRange(model, ranges[0], !matchCase);\r\n    for (let i = 1, len = ranges.length; i < len; i++) {\r\n        const range = ranges[i];\r\n        if (range.isEmpty()) {\r\n            return false;\r\n        }\r\n        const thisSelectedText = getValueInRange(model, range, !matchCase);\r\n        if (selectedText !== thisSelectedText) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getValueInRange(model, range, toLowerCase) {\r\n    const text = model.getValueInRange(range);\r\n    return (toLowerCase ? text.toLowerCase() : text);\r\n}\r\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController);\r\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter);\r\nregisterEditorAction(InsertCursorAbove);\r\nregisterEditorAction(InsertCursorBelow);\r\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\r\nregisterEditorAction(AddSelectionToNextFindMatchAction);\r\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\r\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(SelectHighlightsAction);\r\nregisterEditorAction(CompatChangeAll);\r\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\r\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('parameterHintsVisible', false),\r\n    MultipleSignatures: new RawContextKey('parameterHintsMultipleSignatures', false),\r\n};\r\nexport function provideSignatureHelp(model, position, context, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const supports = modes.SignatureHelpProviderRegistry.ordered(model);\r\n        for (const support of supports) {\r\n            try {\r\n                const result = yield support.provideSignatureHelp(model, position, token, context);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeSignatureHelpProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = yield provideSignatureHelp(ref.object.textEditorModel, Position.lift(position), {\r\n            triggerKind: modes.SignatureHelpTriggerKind.Invoke,\r\n            isRetrigger: false,\r\n            triggerCharacter,\r\n        }, CancellationToken.None);\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        setTimeout(() => result.dispose(), 0);\r\n        return result.value;\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { provideSignatureHelp } from './provideSignatureHelp.js';\r\nvar ParameterHintState;\r\n(function (ParameterHintState) {\r\n    ParameterHintState.Default = { type: 0 /* Default */ };\r\n    class Pending {\r\n        constructor(request, previouslyActiveHints) {\r\n            this.request = request;\r\n            this.previouslyActiveHints = previouslyActiveHints;\r\n            this.type = 2 /* Pending */;\r\n        }\r\n    }\r\n    ParameterHintState.Pending = Pending;\r\n    class Active {\r\n        constructor(hints) {\r\n            this.hints = hints;\r\n            this.type = 1 /* Active */;\r\n        }\r\n    }\r\n    ParameterHintState.Active = Active;\r\n})(ParameterHintState || (ParameterHintState = {}));\r\nexport class ParameterHintsModel extends Disposable {\r\n    constructor(editor, delay = ParameterHintsModel.DEFAULT_DELAY) {\r\n        super();\r\n        this._onChangedHints = this._register(new Emitter());\r\n        this.onChangedHints = this._onChangedHints.event;\r\n        this.triggerOnType = false;\r\n        this._state = ParameterHintState.Default;\r\n        this._pendingTriggers = [];\r\n        this._lastSignatureHelpResult = this._register(new MutableDisposable());\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        this.triggerId = 0;\r\n        this.editor = editor;\r\n        this.throttledDelayer = new Delayer(delay);\r\n        this._register(this.editor.onDidBlurEditorWidget(() => this.cancel()));\r\n        this._register(this.editor.onDidChangeConfiguration(() => this.onEditorConfigurationChange()));\r\n        this._register(this.editor.onDidChangeModel(e => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeModelLanguage(_ => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeCursorSelection(e => this.onCursorChange(e)));\r\n        this._register(this.editor.onDidChangeModelContent(e => this.onModelContentChange()));\r\n        this._register(modes.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));\r\n        this._register(this.editor.onDidType(text => this.onDidType(text)));\r\n        this.onEditorConfigurationChange();\r\n        this.onModelChanged();\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        if (this._state.type === 2 /* Pending */) {\r\n            this._state.request.cancel();\r\n        }\r\n        this._state = value;\r\n    }\r\n    cancel(silent = false) {\r\n        this.state = ParameterHintState.Default;\r\n        this.throttledDelayer.cancel();\r\n        if (!silent) {\r\n            this._onChangedHints.fire(undefined);\r\n        }\r\n    }\r\n    trigger(context, delay) {\r\n        const model = this.editor.getModel();\r\n        if (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        const triggerId = ++this.triggerId;\r\n        this._pendingTriggers.push(context);\r\n        this.throttledDelayer.trigger(() => {\r\n            return this.doTrigger(triggerId);\r\n        }, delay)\r\n            .catch(onUnexpectedError);\r\n    }\r\n    next() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const last = (activeSignature % length) === (length - 1);\r\n        const cycle = this.editor.getOption(75 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on last signature of list\r\n        if ((length < 2 || last) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\r\n    }\r\n    previous() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const first = activeSignature === 0;\r\n        const cycle = this.editor.getOption(75 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on first signature of list\r\n        if ((length < 2 || first) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\r\n    }\r\n    updateActiveSignature(activeSignature) {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        this.state = new ParameterHintState.Active(Object.assign(Object.assign({}, this.state.hints), { activeSignature }));\r\n        this._onChangedHints.fire(this.state.hints);\r\n    }\r\n    doTrigger(triggerId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const isRetrigger = this.state.type === 1 /* Active */ || this.state.type === 2 /* Pending */;\r\n            const activeSignatureHelp = this.getLastActiveHints();\r\n            this.cancel(true);\r\n            if (this._pendingTriggers.length === 0) {\r\n                return false;\r\n            }\r\n            const context = this._pendingTriggers.reduce(mergeTriggerContexts);\r\n            this._pendingTriggers = [];\r\n            const triggerContext = {\r\n                triggerKind: context.triggerKind,\r\n                triggerCharacter: context.triggerCharacter,\r\n                isRetrigger: isRetrigger,\r\n                activeSignatureHelp: activeSignatureHelp\r\n            };\r\n            if (!this.editor.hasModel()) {\r\n                return false;\r\n            }\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            this.state = new ParameterHintState.Pending(createCancelablePromise(token => provideSignatureHelp(model, position, triggerContext, token)), activeSignatureHelp);\r\n            try {\r\n                const result = yield this.state.request;\r\n                // Check that we are still resolving the correct signature help\r\n                if (triggerId !== this.triggerId) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    return false;\r\n                }\r\n                if (!result || !result.value.signatures || result.value.signatures.length === 0) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    this._lastSignatureHelpResult.clear();\r\n                    this.cancel();\r\n                    return false;\r\n                }\r\n                else {\r\n                    this.state = new ParameterHintState.Active(result.value);\r\n                    this._lastSignatureHelpResult.value = result;\r\n                    this._onChangedHints.fire(this.state.hints);\r\n                    return true;\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (triggerId === this.triggerId) {\r\n                    this.state = ParameterHintState.Default;\r\n                }\r\n                onUnexpectedError(error);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    getLastActiveHints() {\r\n        switch (this.state.type) {\r\n            case 1 /* Active */: return this.state.hints;\r\n            case 2 /* Pending */: return this.state.previouslyActiveHints;\r\n            default: return undefined;\r\n        }\r\n    }\r\n    get isTriggered() {\r\n        return this.state.type === 1 /* Active */\r\n            || this.state.type === 2 /* Pending */\r\n            || this.throttledDelayer.isTriggered();\r\n    }\r\n    onModelChanged() {\r\n        this.cancel();\r\n        // Update trigger characters\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (const support of modes.SignatureHelpProviderRegistry.ordered(model)) {\r\n            for (const ch of support.signatureHelpTriggerCharacters || []) {\r\n                this.triggerChars.add(ch.charCodeAt(0));\r\n                // All trigger characters are also considered retrigger characters\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n            for (const ch of support.signatureHelpRetriggerCharacters || []) {\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n    }\r\n    onDidType(text) {\r\n        if (!this.triggerOnType) {\r\n            return;\r\n        }\r\n        const lastCharIndex = text.length - 1;\r\n        const triggerCharCode = text.charCodeAt(lastCharIndex);\r\n        if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\r\n            this.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\r\n                triggerCharacter: text.charAt(lastCharIndex),\r\n            });\r\n        }\r\n    }\r\n    onCursorChange(e) {\r\n        if (e.source === 'mouse') {\r\n            this.cancel();\r\n        }\r\n        else if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onModelContentChange() {\r\n        if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onEditorConfigurationChange() {\r\n        this.triggerOnType = this.editor.getOption(75 /* parameterHints */).enabled;\r\n        if (!this.triggerOnType) {\r\n            this.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel(true);\r\n        super.dispose();\r\n    }\r\n}\r\nParameterHintsModel.DEFAULT_DELAY = 120; // ms\r\nfunction mergeTriggerContexts(previous, current) {\r\n    switch (current.triggerKind) {\r\n        case modes.SignatureHelpTriggerKind.Invoke:\r\n            // Invoke overrides previous triggers.\r\n            return current;\r\n        case modes.SignatureHelpTriggerKind.ContentChange:\r\n            // Ignore content changes triggers\r\n            return previous;\r\n        case modes.SignatureHelpTriggerKind.TriggerCharacter:\r\n        default:\r\n            return current;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport './parameterHints.css';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { Context } from './provideSignatureHelp.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorHoverBackground, editorHoverBorder, textCodeBlockBackground, textLinkForeground, editorHoverForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ParameterHintsModel } from './parameterHintsModel.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { assertIsDefined } from '../../../base/common/types.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nconst $ = dom.$;\r\nconst parameterHintsNextIcon = registerIcon('parameter-hints-next', Codicon.chevronDown, nls.localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\r\nconst parameterHintsPreviousIcon = registerIcon('parameter-hints-previous', Codicon.chevronUp, nls.localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\r\nlet ParameterHintsWidget = class ParameterHintsWidget extends Disposable {\r\n    constructor(editor, contextKeyService, openerService, modeService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.renderDisposeables = this._register(new DisposableStore());\r\n        this.visible = false;\r\n        this.announcedLabel = null;\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this.markdownRenderer = this._register(new MarkdownRenderer({ editor }, modeService, openerService));\r\n        this.model = this._register(new ParameterHintsModel(editor));\r\n        this.keyVisible = Context.Visible.bindTo(contextKeyService);\r\n        this.keyMultipleSignatures = Context.MultipleSignatures.bindTo(contextKeyService);\r\n        this._register(this.model.onChangedHints(newParameterHints => {\r\n            if (newParameterHints) {\r\n                this.show();\r\n                this.render(newParameterHints);\r\n            }\r\n            else {\r\n                this.hide();\r\n            }\r\n        }));\r\n    }\r\n    createParameterHintDOMNodes() {\r\n        const element = $('.editor-widget.parameter-hints-widget');\r\n        const wrapper = dom.append(element, $('.phwrapper'));\r\n        wrapper.tabIndex = -1;\r\n        const controls = dom.append(wrapper, $('.controls'));\r\n        const previous = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsPreviousIcon)));\r\n        const overloads = dom.append(controls, $('.overloads'));\r\n        const next = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsNextIcon)));\r\n        this._register(dom.addDisposableListener(previous, 'click', e => {\r\n            dom.EventHelper.stop(e);\r\n            this.previous();\r\n        }));\r\n        this._register(dom.addDisposableListener(next, 'click', e => {\r\n            dom.EventHelper.stop(e);\r\n            this.next();\r\n        }));\r\n        const body = $('.body');\r\n        const scrollbar = new DomScrollableElement(body, {});\r\n        this._register(scrollbar);\r\n        wrapper.appendChild(scrollbar.getDomNode());\r\n        const signature = dom.append(body, $('.signature'));\r\n        const docs = dom.append(body, $('.docs'));\r\n        element.style.userSelect = 'text';\r\n        this.domNodes = {\r\n            element,\r\n            signature,\r\n            overloads,\r\n            docs,\r\n            scrollbar,\r\n        };\r\n        this.editor.addContentWidget(this);\r\n        this.hide();\r\n        this._register(this.editor.onDidChangeCursorSelection(e => {\r\n            if (this.visible) {\r\n                this.editor.layoutContentWidget(this);\r\n            }\r\n        }));\r\n        const updateFont = () => {\r\n            if (!this.domNodes) {\r\n                return;\r\n            }\r\n            const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n            this.domNodes.element.style.fontSize = `${fontInfo.fontSize}px`;\r\n        };\r\n        updateFont();\r\n        this._register(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor))\r\n            .filter(e => e.hasChanged(42 /* fontInfo */))\r\n            .on(updateFont, null));\r\n        this._register(this.editor.onDidLayoutChange(e => this.updateMaxHeight()));\r\n        this.updateMaxHeight();\r\n    }\r\n    show() {\r\n        if (this.visible) {\r\n            return;\r\n        }\r\n        if (!this.domNodes) {\r\n            this.createParameterHintDOMNodes();\r\n        }\r\n        this.keyVisible.set(true);\r\n        this.visible = true;\r\n        setTimeout(() => {\r\n            if (this.domNodes) {\r\n                this.domNodes.element.classList.add('visible');\r\n            }\r\n        }, 100);\r\n        this.editor.layoutContentWidget(this);\r\n    }\r\n    hide() {\r\n        this.renderDisposeables.clear();\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        this.keyVisible.reset();\r\n        this.visible = false;\r\n        this.announcedLabel = null;\r\n        if (this.domNodes) {\r\n            this.domNodes.element.classList.remove('visible');\r\n        }\r\n        this.editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this.visible) {\r\n            return {\r\n                position: this.editor.getPosition(),\r\n                preference: [1 /* ABOVE */, 2 /* BELOW */]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    render(hints) {\r\n        var _a;\r\n        this.renderDisposeables.clear();\r\n        if (!this.domNodes) {\r\n            return;\r\n        }\r\n        const multiple = hints.signatures.length > 1;\r\n        this.domNodes.element.classList.toggle('multiple', multiple);\r\n        this.keyMultipleSignatures.set(multiple);\r\n        this.domNodes.signature.innerText = '';\r\n        this.domNodes.docs.innerText = '';\r\n        const signature = hints.signatures[hints.activeSignature];\r\n        if (!signature) {\r\n            return;\r\n        }\r\n        const code = dom.append(this.domNodes.signature, $('.code'));\r\n        const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n        code.style.fontSize = `${fontInfo.fontSize}px`;\r\n        code.style.fontFamily = fontInfo.fontFamily;\r\n        const hasParameters = signature.parameters.length > 0;\r\n        const activeParameterIndex = (_a = signature.activeParameter) !== null && _a !== void 0 ? _a : hints.activeParameter;\r\n        if (!hasParameters) {\r\n            const label = dom.append(code, $('span'));\r\n            label.textContent = signature.label;\r\n        }\r\n        else {\r\n            this.renderParameters(code, signature, activeParameterIndex);\r\n        }\r\n        const activeParameter = signature.parameters[activeParameterIndex];\r\n        if (activeParameter === null || activeParameter === void 0 ? void 0 : activeParameter.documentation) {\r\n            const documentation = $('span.documentation');\r\n            if (typeof activeParameter.documentation === 'string') {\r\n                documentation.textContent = activeParameter.documentation;\r\n            }\r\n            else {\r\n                const renderedContents = this.renderMarkdownDocs(activeParameter.documentation);\r\n                documentation.appendChild(renderedContents.element);\r\n            }\r\n            dom.append(this.domNodes.docs, $('p', {}, documentation));\r\n        }\r\n        if (signature.documentation === undefined) {\r\n            /** no op */\r\n        }\r\n        else if (typeof signature.documentation === 'string') {\r\n            dom.append(this.domNodes.docs, $('p', {}, signature.documentation));\r\n        }\r\n        else {\r\n            const renderedContents = this.renderMarkdownDocs(signature.documentation);\r\n            dom.append(this.domNodes.docs, renderedContents.element);\r\n        }\r\n        const hasDocs = this.hasDocs(signature, activeParameter);\r\n        this.domNodes.signature.classList.toggle('has-docs', hasDocs);\r\n        this.domNodes.docs.classList.toggle('empty', !hasDocs);\r\n        this.domNodes.overloads.textContent =\r\n            String(hints.activeSignature + 1).padStart(hints.signatures.length.toString().length, '0') + '/' + hints.signatures.length;\r\n        if (activeParameter) {\r\n            let labelToAnnounce = '';\r\n            const param = signature.parameters[activeParameterIndex];\r\n            if (Array.isArray(param.label)) {\r\n                labelToAnnounce = signature.label.substring(param.label[0], param.label[1]);\r\n            }\r\n            else {\r\n                labelToAnnounce = param.label;\r\n            }\r\n            if (param.documentation) {\r\n                labelToAnnounce += typeof param.documentation === 'string' ? `, ${param.documentation}` : `, ${param.documentation.value}`;\r\n            }\r\n            if (signature.documentation) {\r\n                labelToAnnounce += typeof signature.documentation === 'string' ? `, ${signature.documentation}` : `, ${signature.documentation.value}`;\r\n            }\r\n            // Select method gets called on every user type while parameter hints are visible.\r\n            // We do not want to spam the user with same announcements, so we only announce if the current parameter changed.\r\n            if (this.announcedLabel !== labelToAnnounce) {\r\n                aria.alert(nls.localize('hint', \"{0}, hint\", labelToAnnounce));\r\n                this.announcedLabel = labelToAnnounce;\r\n            }\r\n        }\r\n        this.editor.layoutContentWidget(this);\r\n        this.domNodes.scrollbar.scanDomNode();\r\n    }\r\n    renderMarkdownDocs(markdown) {\r\n        const renderedContents = this.renderDisposeables.add(this.markdownRenderer.render(markdown, {\r\n            asyncRenderCallback: () => {\r\n                var _a;\r\n                (_a = this.domNodes) === null || _a === void 0 ? void 0 : _a.scrollbar.scanDomNode();\r\n            }\r\n        }));\r\n        renderedContents.element.classList.add('markdown-docs');\r\n        return renderedContents;\r\n    }\r\n    hasDocs(signature, activeParameter) {\r\n        if (activeParameter && typeof activeParameter.documentation === 'string' && assertIsDefined(activeParameter.documentation).length > 0) {\r\n            return true;\r\n        }\r\n        if (activeParameter && typeof activeParameter.documentation === 'object' && assertIsDefined(activeParameter.documentation).value.length > 0) {\r\n            return true;\r\n        }\r\n        if (signature.documentation && typeof signature.documentation === 'string' && assertIsDefined(signature.documentation).length > 0) {\r\n            return true;\r\n        }\r\n        if (signature.documentation && typeof signature.documentation === 'object' && assertIsDefined(signature.documentation.value).length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    renderParameters(parent, signature, activeParameterIndex) {\r\n        const [start, end] = this.getParameterLabelOffsets(signature, activeParameterIndex);\r\n        const beforeSpan = document.createElement('span');\r\n        beforeSpan.textContent = signature.label.substring(0, start);\r\n        const paramSpan = document.createElement('span');\r\n        paramSpan.textContent = signature.label.substring(start, end);\r\n        paramSpan.className = 'parameter active';\r\n        const afterSpan = document.createElement('span');\r\n        afterSpan.textContent = signature.label.substring(end);\r\n        dom.append(parent, beforeSpan, paramSpan, afterSpan);\r\n    }\r\n    getParameterLabelOffsets(signature, paramIdx) {\r\n        const param = signature.parameters[paramIdx];\r\n        if (!param) {\r\n            return [0, 0];\r\n        }\r\n        else if (Array.isArray(param.label)) {\r\n            return param.label;\r\n        }\r\n        else if (!param.label.length) {\r\n            return [0, 0];\r\n        }\r\n        else {\r\n            const regex = new RegExp(`(\\\\W|^)${escapeRegExpCharacters(param.label)}(?=\\\\W|$)`, 'g');\r\n            regex.test(signature.label);\r\n            const idx = regex.lastIndex - param.label.length;\r\n            return idx >= 0\r\n                ? [idx, regex.lastIndex]\r\n                : [0, 0];\r\n        }\r\n    }\r\n    next() {\r\n        this.editor.focus();\r\n        this.model.next();\r\n    }\r\n    previous() {\r\n        this.editor.focus();\r\n        this.model.previous();\r\n    }\r\n    cancel() {\r\n        this.model.cancel();\r\n    }\r\n    getDomNode() {\r\n        if (!this.domNodes) {\r\n            this.createParameterHintDOMNodes();\r\n        }\r\n        return this.domNodes.element;\r\n    }\r\n    getId() {\r\n        return ParameterHintsWidget.ID;\r\n    }\r\n    trigger(context) {\r\n        this.model.trigger(context, 0);\r\n    }\r\n    updateMaxHeight() {\r\n        if (!this.domNodes) {\r\n            return;\r\n        }\r\n        const height = Math.max(this.editor.getLayoutInfo().height / 4, 250);\r\n        const maxHeight = `${height}px`;\r\n        this.domNodes.element.style.maxHeight = maxHeight;\r\n        const wrapper = this.domNodes.element.getElementsByClassName('phwrapper');\r\n        if (wrapper.length) {\r\n            wrapper[0].style.maxHeight = maxHeight;\r\n        }\r\n    }\r\n};\r\nParameterHintsWidget.ID = 'editor.widget.parameterHintsWidget';\r\nParameterHintsWidget = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IModeService)\r\n], ParameterHintsWidget);\r\nexport { ParameterHintsWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorHoverBorder);\r\n    if (border) {\r\n        const borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`);\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(0.5)}; }`);\r\n    }\r\n    const background = theme.getColor(editorHoverBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorHoverForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { ParameterHintsWidget } from './parameterHintsWidget.js';\r\nimport { Context } from './provideSignatureHelp.js';\r\nimport * as modes from '../../common/modes.js';\r\nlet ParameterHintsController = class ParameterHintsController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.widget = this._register(instantiationService.createInstance(ParameterHintsWidget, this.editor));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ParameterHintsController.ID);\r\n    }\r\n    cancel() {\r\n        this.widget.cancel();\r\n    }\r\n    previous() {\r\n        this.widget.previous();\r\n    }\r\n    next() {\r\n        this.widget.next();\r\n    }\r\n    trigger(context) {\r\n        this.widget.trigger(context);\r\n    }\r\n};\r\nParameterHintsController.ID = 'editor.controller.parameterHints';\r\nParameterHintsController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], ParameterHintsController);\r\nexport class TriggerParameterHintsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.triggerParameterHints',\r\n            label: nls.localize('parameterHints.trigger.label', \"Trigger Parameter Hints\"),\r\n            alias: 'Trigger Parameter Hints',\r\n            precondition: EditorContextKeys.hasSignatureHelpProvider,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 10 /* Space */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = ParameterHintsController.get(editor);\r\n        if (controller) {\r\n            controller.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.Invoke\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(ParameterHintsController.ID, ParameterHintsController);\r\nregisterEditorAction(TriggerParameterHintsAction);\r\nconst weight = 100 /* EditorContrib */ + 75;\r\nconst ParameterHintsCommand = EditorCommand.bindToContribution(ParameterHintsController.get);\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'closeParameterHints',\r\n    precondition: Context.Visible,\r\n    handler: x => x.cancel(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'showPrevParameterHint',\r\n    precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\r\n    handler: x => x.previous(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [512 /* Alt */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [512 /* Alt */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'showNextParameterHint',\r\n    precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\r\n    handler: x => x.next(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [512 /* Alt */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [512 /* Alt */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './renameInputField.css';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { inputBackground, inputBorder, inputForeground, widgetShadow, editorWidgetBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, localize('renameInputVisible', \"Whether the rename input widget is visible\"));\r\nlet RenameInputField = class RenameInputField {\r\n    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._acceptKeybindings = _acceptKeybindings;\r\n        this._themeService = _themeService;\r\n        this._keybindingService = _keybindingService;\r\n        this._disposables = new DisposableStore();\r\n        this.allowEditorOverflow = true;\r\n        this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\r\n        this._editor.addContentWidget(this);\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return '__renameInputWidget';\r\n    }\r\n    getDomNode() {\r\n        if (!this._domNode) {\r\n            this._domNode = document.createElement('div');\r\n            this._domNode.className = 'monaco-editor rename-box';\r\n            this._input = document.createElement('input');\r\n            this._input.className = 'rename-input';\r\n            this._input.type = 'text';\r\n            this._input.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\r\n            this._domNode.appendChild(this._input);\r\n            this._label = document.createElement('div');\r\n            this._label.className = 'rename-label';\r\n            this._domNode.appendChild(this._label);\r\n            const updateLabel = () => {\r\n                var _a, _b;\r\n                const [accept, preview] = this._acceptKeybindings;\r\n                this._keybindingService.lookupKeybinding(accept);\r\n                this._label.innerText = localize({ key: 'label', comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"'] }, \"{0} to Rename, {1} to Preview\", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());\r\n            };\r\n            updateLabel();\r\n            this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));\r\n            this._updateFont();\r\n            this._updateStyles(this._themeService.getColorTheme());\r\n        }\r\n        return this._domNode;\r\n    }\r\n    _updateStyles(theme) {\r\n        var _a, _b, _c, _d;\r\n        if (!this._input || !this._domNode) {\r\n            return;\r\n        }\r\n        const widgetShadowColor = theme.getColor(widgetShadow);\r\n        this._domNode.style.backgroundColor = String((_a = theme.getColor(editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');\r\n        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\r\n        this._domNode.style.color = String((_b = theme.getColor(inputForeground)) !== null && _b !== void 0 ? _b : '');\r\n        this._input.style.backgroundColor = String((_c = theme.getColor(inputBackground)) !== null && _c !== void 0 ? _c : '');\r\n        // this._input.style.color = String(theme.getColor(inputForeground) ?? '');\r\n        const border = theme.getColor(inputBorder);\r\n        this._input.style.borderWidth = border ? '1px' : '0px';\r\n        this._input.style.borderStyle = border ? 'solid' : 'none';\r\n        this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';\r\n    }\r\n    _updateFont() {\r\n        if (!this._input || !this._label) {\r\n            return;\r\n        }\r\n        const fontInfo = this._editor.getOption(42 /* fontInfo */);\r\n        this._input.style.fontFamily = fontInfo.fontFamily;\r\n        this._input.style.fontWeight = fontInfo.fontWeight;\r\n        this._input.style.fontSize = `${fontInfo.fontSize}px`;\r\n        this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;\r\n    }\r\n    getPosition() {\r\n        if (!this._visible) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\r\n        };\r\n    }\r\n    afterRender(position) {\r\n        if (!position) {\r\n            // cancel rename when input widget isn't rendered anymore\r\n            this.cancelInput(true);\r\n        }\r\n    }\r\n    acceptInput(wantsPreview) {\r\n        if (this._currentAcceptInput) {\r\n            this._currentAcceptInput(wantsPreview);\r\n        }\r\n    }\r\n    cancelInput(focusEditor) {\r\n        if (this._currentCancelInput) {\r\n            this._currentCancelInput(focusEditor);\r\n        }\r\n    }\r\n    getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {\r\n        this._domNode.classList.toggle('preview', supportPreview);\r\n        this._position = new Position(where.startLineNumber, where.startColumn);\r\n        this._input.value = value;\r\n        this._input.setAttribute('selectionStart', selectionStart.toString());\r\n        this._input.setAttribute('selectionEnd', selectionEnd.toString());\r\n        this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\r\n        const disposeOnDone = new DisposableStore();\r\n        return new Promise(resolve => {\r\n            this._currentCancelInput = (focusEditor) => {\r\n                this._currentAcceptInput = undefined;\r\n                this._currentCancelInput = undefined;\r\n                resolve(focusEditor);\r\n                return true;\r\n            };\r\n            this._currentAcceptInput = (wantsPreview) => {\r\n                if (this._input.value.trim().length === 0 || this._input.value === value) {\r\n                    // empty or whitespace only or not changed\r\n                    this.cancelInput(true);\r\n                    return;\r\n                }\r\n                this._currentAcceptInput = undefined;\r\n                this._currentCancelInput = undefined;\r\n                resolve({\r\n                    newName: this._input.value,\r\n                    wantsPreview: supportPreview && wantsPreview\r\n                });\r\n            };\r\n            token.onCancellationRequested(() => this.cancelInput(true));\r\n            disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\r\n            this._show();\r\n        }).finally(() => {\r\n            disposeOnDone.dispose();\r\n            this._hide();\r\n        });\r\n    }\r\n    _show() {\r\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* Smooth */);\r\n        this._visible = true;\r\n        this._visibleContextKey.set(true);\r\n        this._editor.layoutContentWidget(this);\r\n        setTimeout(() => {\r\n            this._input.focus();\r\n            this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));\r\n        }, 100);\r\n    }\r\n    _hide() {\r\n        this._visible = false;\r\n        this._visibleContextKey.reset();\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n};\r\nRenameInputField = __decorate([\r\n    __param(2, IThemeService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IContextKeyService)\r\n], RenameInputField);\r\nexport { RenameInputField };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { RenameInputField, CONTEXT_RENAME_INPUT_VISIBLE } from './renameInputField.js';\r\nimport { RenameProviderRegistry } from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { IdleValue, raceCancellation } from '../../../base/common/async.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfigurationService.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nclass RenameSkeleton {\r\n    constructor(model, position) {\r\n        this.model = model;\r\n        this.position = position;\r\n        this._providerRenameIdx = 0;\r\n        this._providers = RenameProviderRegistry.ordered(model);\r\n    }\r\n    hasProvider() {\r\n        return this._providers.length > 0;\r\n    }\r\n    resolveRenameLocation(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const rejects = [];\r\n            for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\r\n                const provider = this._providers[this._providerRenameIdx];\r\n                if (!provider.resolveRenameLocation) {\r\n                    break;\r\n                }\r\n                let res = yield provider.resolveRenameLocation(this.model, this.position, token);\r\n                if (!res) {\r\n                    continue;\r\n                }\r\n                if (res.rejectReason) {\r\n                    rejects.push(res.rejectReason);\r\n                    continue;\r\n                }\r\n                return res;\r\n            }\r\n            const word = this.model.getWordAtPosition(this.position);\r\n            if (!word) {\r\n                return {\r\n                    range: Range.fromPositions(this.position),\r\n                    text: '',\r\n                    rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n                };\r\n            }\r\n            return {\r\n                range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\r\n                text: word.word,\r\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n            };\r\n        });\r\n    }\r\n    provideRenameEdits(newName, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\r\n        });\r\n    }\r\n    _provideRenameEdits(newName, i, rejects, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const provider = this._providers[i];\r\n            if (!provider) {\r\n                return {\r\n                    edits: [],\r\n                    rejectReason: rejects.join('\\n')\r\n                };\r\n            }\r\n            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\r\n            if (!result) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\r\n            }\r\n            else if (result.rejectReason) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexport function rename(model, position, newName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const skeleton = new RenameSkeleton(model, position);\r\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\r\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\r\n            return { edits: [], rejectReason: loc.rejectReason };\r\n        }\r\n        return skeleton.provideRenameEdits(newName, CancellationToken.None);\r\n    });\r\n}\r\n// ---  register actions and commands\r\nlet RenameController = class RenameController {\r\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService) {\r\n        this.editor = editor;\r\n        this._instaService = _instaService;\r\n        this._notificationService = _notificationService;\r\n        this._bulkEditService = _bulkEditService;\r\n        this._progressService = _progressService;\r\n        this._logService = _logService;\r\n        this._configService = _configService;\r\n        this._dispoableStore = new DisposableStore();\r\n        this._cts = new CancellationTokenSource();\r\n        this._renameInputField = this._dispoableStore.add(new IdleValue(() => this._dispoableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']))));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(RenameController.ID);\r\n    }\r\n    dispose() {\r\n        this._dispoableStore.dispose();\r\n        this._cts.dispose(true);\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._cts.dispose(true);\r\n            if (!this.editor.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const skeleton = new RenameSkeleton(this.editor.getModel(), position);\r\n            if (!skeleton.hasProvider()) {\r\n                return undefined;\r\n            }\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */);\r\n            // resolve rename location\r\n            let loc;\r\n            try {\r\n                const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);\r\n                this._progressService.showWhile(resolveLocationOperation, 250);\r\n                loc = yield resolveLocationOperation;\r\n            }\r\n            catch (e) {\r\n                MessageController.get(this.editor).showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\r\n                return undefined;\r\n            }\r\n            if (!loc) {\r\n                return undefined;\r\n            }\r\n            if (loc.rejectReason) {\r\n                MessageController.get(this.editor).showMessage(loc.rejectReason, position);\r\n                return undefined;\r\n            }\r\n            if (this._cts.token.isCancellationRequested) {\r\n                return undefined;\r\n            }\r\n            this._cts.dispose();\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */, loc.range);\r\n            // do rename at location\r\n            let selection = this.editor.getSelection();\r\n            let selectionStart = 0;\r\n            let selectionEnd = loc.text.length;\r\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\r\n                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\r\n                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\r\n            }\r\n            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\r\n            const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);\r\n            // no result, only hint to focus the editor or not\r\n            if (typeof inputFieldResult === 'boolean') {\r\n                if (inputFieldResult) {\r\n                    this.editor.focus();\r\n                }\r\n                return undefined;\r\n            }\r\n            this.editor.focus();\r\n            const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then((renameResult) => __awaiter(this, void 0, void 0, function* () {\r\n                if (!renameResult || !this.editor.hasModel()) {\r\n                    return;\r\n                }\r\n                if (renameResult.rejectReason) {\r\n                    this._notificationService.info(renameResult.rejectReason);\r\n                    return;\r\n                }\r\n                this._bulkEditService.apply(ResourceEdit.convert(renameResult), {\r\n                    editor: this.editor,\r\n                    showPreview: inputFieldResult.wantsPreview,\r\n                    label: nls.localize('label', \"Renaming '{0}'\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                    quotableLabel: nls.localize('quotableLabel', \"Renaming {0}\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                }).then(result => {\r\n                    if (result.ariaSummary) {\r\n                        alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\r\n                    }\r\n                }).catch(err => {\r\n                    this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\r\n                    this._logService.error(err);\r\n                });\r\n            }), err => {\r\n                this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\r\n                this._logService.error(err);\r\n            });\r\n            this._progressService.showWhile(renameOperation, 250);\r\n            return renameOperation;\r\n        });\r\n    }\r\n    acceptRenameInput(wantsPreview) {\r\n        this._renameInputField.value.acceptInput(wantsPreview);\r\n    }\r\n    cancelRenameInput() {\r\n        this._renameInputField.value.cancelInput(true);\r\n    }\r\n};\r\nRenameController.ID = 'editor.contrib.renameController';\r\nRenameController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, INotificationService),\r\n    __param(3, IBulkEditService),\r\n    __param(4, IEditorProgressService),\r\n    __param(5, ILogService),\r\n    __param(6, ITextResourceConfigurationService)\r\n], RenameController);\r\n// ---- action implementation\r\nexport class RenameAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.rename',\r\n            label: nls.localize('rename.label', \"Rename Symbol\"),\r\n            alias: 'Rename Symbol',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.1\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = RenameController.get(editor);\r\n        if (controller) {\r\n            return controller.run();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nregisterEditorContribution(RenameController.ID, RenameController);\r\nregisterEditorAction(RenameAction);\r\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.acceptRenameInput(false),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInputWithPreview',\r\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\r\n    handler: x => x.acceptRenameInput(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 1024 /* Shift */ + 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'cancelRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.cancelRenameInput(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n// ---- api bridge command\r\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (model, position, ...args) {\r\n    const [newName] = args;\r\n    assertType(typeof newName === 'string');\r\n    return rename(model, position, newName);\r\n});\r\n//todo@jrieken use editor options world\r\nRegistry.as(Extensions.Configuration).registerConfiguration({\r\n    id: 'editor',\r\n    properties: {\r\n        'editor.rename.enablePreview': {\r\n            scope: 5 /* LANGUAGE_OVERRIDABLE */,\r\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\r\n            default: true,\r\n            type: 'boolean'\r\n        }\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isUpperAsciiLetter, isLowerAsciiLetter } from '../../../base/common/strings.js';\r\nexport class WordSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        const result = [];\r\n        for (const position of positions) {\r\n            const bucket = [];\r\n            result.push(bucket);\r\n            this._addInWordRanges(bucket, model, position);\r\n            this._addWordRanges(bucket, model, position);\r\n            this._addWhitespaceLine(bucket, model, position);\r\n            bucket.push({ range: model.getFullModelRange() });\r\n        }\r\n        return result;\r\n    }\r\n    _addInWordRanges(bucket, model, pos) {\r\n        const obj = model.getWordAtPosition(pos);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        let { word, startColumn } = obj;\r\n        let offset = pos.column - startColumn;\r\n        let start = offset;\r\n        let end = offset;\r\n        let lastCh = 0;\r\n        // LEFT anchor (start)\r\n        for (; start >= 0; start--) {\r\n            let ch = word.charCodeAt(start);\r\n            if ((start !== offset) && (ch === 95 /* Underline */ || ch === 45 /* Dash */)) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        start += 1;\r\n        // RIGHT anchor (end)\r\n        for (; end < word.length; end++) {\r\n            let ch = word.charCodeAt(end);\r\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            else if (ch === 95 /* Underline */ || ch === 45 /* Dash */) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        if (start < end) {\r\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\r\n        }\r\n    }\r\n    _addWordRanges(bucket, model, pos) {\r\n        const word = model.getWordAtPosition(pos);\r\n        if (word) {\r\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\r\n        }\r\n    }\r\n    _addWhitespaceLine(bucket, model, pos) {\r\n        if (model.getLineLength(pos.lineNumber) > 0\r\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\r\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\r\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { WordSelectionRangeProvider } from './wordSelections.js';\r\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nclass SelectionRanges {\r\n    constructor(index, ranges) {\r\n        this.index = index;\r\n        this.ranges = ranges;\r\n    }\r\n    mov(fwd) {\r\n        let index = this.index + (fwd ? 1 : -1);\r\n        if (index < 0 || index >= this.ranges.length) {\r\n            return this;\r\n        }\r\n        const res = new SelectionRanges(index, this.ranges);\r\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\r\n            // next range equals this range, retry with next-next\r\n            return res.mov(fwd);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nclass SmartSelectController {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ignoreSelection = false;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SmartSelectController.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n    run(forward) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = this._editor.getSelections();\r\n            const model = this._editor.getModel();\r\n            if (!modes.SelectionRangeRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (!this._state) {\r\n                yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(102 /* smartSelect */), CancellationToken.None).then(ranges => {\r\n                    var _a;\r\n                    if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\r\n                        // invalid result\r\n                        return;\r\n                    }\r\n                    if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\r\n                        // invalid editor state\r\n                        return;\r\n                    }\r\n                    for (let i = 0; i < ranges.length; i++) {\r\n                        ranges[i] = ranges[i].filter(range => {\r\n                            // filter ranges inside the selection\r\n                            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\r\n                        });\r\n                        // prepend current selection\r\n                        ranges[i].unshift(selections[i]);\r\n                    }\r\n                    this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\r\n                    // listen to caret move and forget about state\r\n                    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                    this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\r\n                        var _a;\r\n                        if (!this._ignoreSelection) {\r\n                            (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                            this._state = undefined;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            if (!this._state) {\r\n                // no state\r\n                return;\r\n            }\r\n            this._state = this._state.map(state => state.mov(forward));\r\n            const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\r\n            this._ignoreSelection = true;\r\n            try {\r\n                this._editor.setSelections(newSelections);\r\n            }\r\n            finally {\r\n                this._ignoreSelection = false;\r\n            }\r\n        });\r\n    }\r\n}\r\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\r\nclass AbstractSmartSelect extends EditorAction {\r\n    constructor(forward, opts) {\r\n        super(opts);\r\n        this._forward = forward;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = SmartSelectController.get(editor);\r\n            if (controller) {\r\n                yield controller.run(this._forward);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass GrowSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.smartSelect.expand',\r\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\r\n            alias: 'Expand Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\n// renamed command id\r\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\r\nclass ShrinkSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.smartSelect.shrink',\r\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\r\n            alias: 'Shrink Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\r\nregisterEditorAction(GrowSelectionAction);\r\nregisterEditorAction(ShrinkSelectionAction);\r\n// word selection\r\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\r\nexport function provideSelectionRanges(model, positions, options, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const providers = modes.SelectionRangeRegistry.all(model);\r\n        if (providers.length === 1) {\r\n            // add word selection and bracket selection when no provider exists\r\n            providers.unshift(new BracketSelectionRangeProvider());\r\n        }\r\n        let work = [];\r\n        let allRawRanges = [];\r\n        for (const provider of providers) {\r\n            work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\r\n                if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\r\n                    for (let i = 0; i < positions.length; i++) {\r\n                        if (!allRawRanges[i]) {\r\n                            allRawRanges[i] = [];\r\n                        }\r\n                        for (const oneProviderRanges of allProviderRanges[i]) {\r\n                            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\r\n                                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, onUnexpectedExternalError));\r\n        }\r\n        yield Promise.all(work);\r\n        return allRawRanges.map(oneRawRanges => {\r\n            if (oneRawRanges.length === 0) {\r\n                return [];\r\n            }\r\n            // sort all by start/end position\r\n            oneRawRanges.sort((a, b) => {\r\n                if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\r\n                    return 1;\r\n                }\r\n                else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            // remove ranges that don't contain the former range or that are equal to the\r\n            // former range\r\n            let oneRanges = [];\r\n            let last;\r\n            for (const range of oneRawRanges) {\r\n                if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\r\n                    oneRanges.push(range);\r\n                    last = range;\r\n                }\r\n            }\r\n            if (!options.selectLeadingAndTrailingWhitespace) {\r\n                return oneRanges;\r\n            }\r\n            // add ranges that expand trivia at line starts and ends whenever a range\r\n            // wraps onto the a new line\r\n            let oneRangesWithTrivia = [oneRanges[0]];\r\n            for (let i = 1; i < oneRanges.length; i++) {\r\n                const prev = oneRanges[i - 1];\r\n                const cur = oneRanges[i];\r\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\r\n                    // add line/block range without leading/failing whitespace\r\n                    const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\r\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\r\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\r\n                    }\r\n                    // add line/block range\r\n                    const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\r\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\r\n                        oneRangesWithTrivia.push(rangeFull);\r\n                    }\r\n                }\r\n                oneRangesWithTrivia.push(cur);\r\n            }\r\n            return oneRangesWithTrivia;\r\n        });\r\n    });\r\n}\r\nregisterModelCommand('_executeSelectionRangeProvider', function (model, ...args) {\r\n    const [positions] = args;\r\n    return provideSelectionRanges(model, positions, { selectLeadingAndTrailingWhitespace: true }, CancellationToken.None);\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nclass ForceRetokenizeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.forceRetokenize',\r\n            label: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\r\n            alias: 'Developer: Force Retokenize',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        model.resetTokenization();\r\n        const sw = new StopWatch(true);\r\n        model.forceTokenization(model.getLineCount());\r\n        sw.stop();\r\n        console.log(`tokenization took ${sw.elapsed()}`);\r\n    }\r\n}\r\nregisterEditorAction(ForceRetokenizeAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { TabFocus } from '../../common/config/commonEditorConfig.js';\r\nexport class ToggleTabFocusModeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ToggleTabFocusModeAction.ID,\r\n            label: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\r\n            alias: 'Toggle Tab Key Moves Focus',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 2048 /* CtrlCmd */ | 43 /* KEY_M */,\r\n                mac: { primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 43 /* KEY_M */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const oldValue = TabFocus.getTabFocusMode();\r\n        const newValue = !oldValue;\r\n        TabFocus.setTabFocusMode(newValue);\r\n        if (newValue) {\r\n            alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\r\n        }\r\n        else {\r\n            alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\r\n        }\r\n    }\r\n}\r\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\r\nregisterEditorAction(ToggleTabFocusModeAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nconst ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';\r\nfunction writeIgnoreState(codeEditorService, model, state) {\r\n    codeEditorService.setModelProperty(model.uri, ignoreUnusualLineTerminators, state);\r\n}\r\nfunction readIgnoreState(codeEditorService, model) {\r\n    return codeEditorService.getModelProperty(model.uri, ignoreUnusualLineTerminators);\r\n}\r\nlet UnusualLineTerminatorsDetector = class UnusualLineTerminatorsDetector extends Disposable {\r\n    constructor(_editor, _dialogService, _codeEditorService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._dialogService = _dialogService;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._config = this._editor.getOption(113 /* unusualLineTerminators */);\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(113 /* unusualLineTerminators */)) {\r\n                this._config = this._editor.getOption(113 /* unusualLineTerminators */);\r\n                this._checkForUnusualLineTerminators();\r\n            }\r\n        }));\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            this._checkForUnusualLineTerminators();\r\n        }));\r\n        this._register(this._editor.onDidChangeModelContent((e) => {\r\n            if (e.isUndoing) {\r\n                // skip checking in case of undoing\r\n                return;\r\n            }\r\n            this._checkForUnusualLineTerminators();\r\n        }));\r\n    }\r\n    _checkForUnusualLineTerminators() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._config === 'off') {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            if (!model.mightContainUnusualLineTerminators()) {\r\n                return;\r\n            }\r\n            const ignoreState = readIgnoreState(this._codeEditorService, model);\r\n            if (ignoreState === true) {\r\n                // this model should be ignored\r\n                return;\r\n            }\r\n            if (this._editor.getOption(80 /* readOnly */)) {\r\n                // read only editor => sorry!\r\n                return;\r\n            }\r\n            if (this._config === 'auto') {\r\n                // just do it!\r\n                model.removeUnusualLineTerminators(this._editor.getSelections());\r\n                return;\r\n            }\r\n            const result = yield this._dialogService.confirm({\r\n                title: nls.localize('unusualLineTerminators.title', \"Unusual Line Terminators\"),\r\n                message: nls.localize('unusualLineTerminators.message', \"Detected unusual line terminators\"),\r\n                detail: nls.localize('unusualLineTerminators.detail', \"The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\\n\\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.\", basename(model.uri)),\r\n                primaryButton: nls.localize('unusualLineTerminators.fix', \"Remove Unusual Line Terminators\"),\r\n                secondaryButton: nls.localize('unusualLineTerminators.ignore', \"Ignore\")\r\n            });\r\n            if (!result.confirmed) {\r\n                // this model should be ignored\r\n                writeIgnoreState(this._codeEditorService, model, true);\r\n                return;\r\n            }\r\n            model.removeUnusualLineTerminators(this._editor.getSelections());\r\n        });\r\n    }\r\n};\r\nUnusualLineTerminatorsDetector.ID = 'editor.contrib.unusualLineTerminatorsDetector';\r\nUnusualLineTerminatorsDetector = __decorate([\r\n    __param(1, IDialogService),\r\n    __param(2, ICodeEditorService)\r\n], UnusualLineTerminatorsDetector);\r\nexport { UnusualLineTerminatorsDetector };\r\nregisterEditorContribution(UnusualLineTerminatorsDetector.ID, UnusualLineTerminatorsDetector);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { DocumentRangeSemanticTokensProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { toMultilineTokens2 } from '../../common/services/semanticTokensProviderStyling.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { isSemanticColoringEnabled, SEMANTIC_HIGHLIGHTING_SETTING_ID } from '../../common/services/modelServiceImpl.js';\r\nimport { getDocumentRangeSemanticTokensProvider } from '../../common/services/getSemanticTokens.js';\r\nlet ViewportSemanticTokensContribution = class ViewportSemanticTokensContribution extends Disposable {\r\n    constructor(editor, _modelService, _themeService, _configurationService) {\r\n        super();\r\n        this._modelService = _modelService;\r\n        this._themeService = _themeService;\r\n        this._configurationService = _configurationService;\r\n        this._editor = editor;\r\n        this._tokenizeViewport = new RunOnceScheduler(() => this._tokenizeViewportNow(), 100);\r\n        this._outstandingRequests = [];\r\n        this._register(this._editor.onDidScrollChange(() => {\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._editor.onDidChangeModelContent((e) => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(DocumentRangeSemanticTokensProviderRegistry.onDidChange(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\r\n                this._cancelAll();\r\n                this._tokenizeViewport.schedule();\r\n            }\r\n        }));\r\n        this._register(this._themeService.onDidColorThemeChange(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n    }\r\n    _cancelAll() {\r\n        for (const request of this._outstandingRequests) {\r\n            request.cancel();\r\n        }\r\n        this._outstandingRequests = [];\r\n    }\r\n    _removeOutstandingRequest(req) {\r\n        for (let i = 0, len = this._outstandingRequests.length; i < len; i++) {\r\n            if (this._outstandingRequests[i] === req) {\r\n                this._outstandingRequests.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _tokenizeViewportNow() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (model.hasCompleteSemanticTokens()) {\r\n            return;\r\n        }\r\n        if (!isSemanticColoringEnabled(model, this._themeService, this._configurationService)) {\r\n            if (model.hasSomeSemanticTokens()) {\r\n                model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const provider = getDocumentRangeSemanticTokensProvider(model);\r\n        if (!provider) {\r\n            if (model.hasSomeSemanticTokens()) {\r\n                model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const styling = this._modelService.getSemanticTokensProviderStyling(provider);\r\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n        this._outstandingRequests = this._outstandingRequests.concat(visibleRanges.map(range => this._requestRange(model, range, provider, styling)));\r\n    }\r\n    _requestRange(model, range, provider, styling) {\r\n        const requestVersionId = model.getVersionId();\r\n        const request = createCancelablePromise(token => Promise.resolve(provider.provideDocumentRangeSemanticTokens(model, range, token)));\r\n        request.then((r) => {\r\n            if (!r || model.isDisposed() || model.getVersionId() !== requestVersionId) {\r\n                return;\r\n            }\r\n            model.setPartialSemanticTokens(range, toMultilineTokens2(r, styling, model.getLanguageIdentifier()));\r\n        }).then(() => this._removeOutstandingRequest(request), () => this._removeOutstandingRequest(request));\r\n        return request;\r\n    }\r\n};\r\nViewportSemanticTokensContribution.ID = 'editor.contrib.viewportSemanticTokens';\r\nViewportSemanticTokensContribution = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IThemeService),\r\n    __param(3, IConfigurationService)\r\n], ViewportSemanticTokensContribution);\r\nregisterEditorContribution(ViewportSemanticTokensContribution.ID, ViewportSemanticTokensContribution);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { createCancelablePromise, first, timeout } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightKind, DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { activeContrastBorder, editorSelectionHighlight, editorSelectionHighlightBorder, overviewRulerSelectionHighlightForeground, registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nconst editorWordHighlight = registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hc: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst editorWordHighlightStrong = registerColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hc: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst editorWordHighlightBorder = registerColor('editor.wordHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\r\nconst editorWordHighlightStrongBorder = registerColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\r\nconst overviewRulerWordHighlightForeground = registerColor('editorOverviewRuler.wordHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst overviewRulerWordHighlightStrongForeground = registerColor('editorOverviewRuler.wordHighlightStrongForeground', { dark: '#C0A0C0CC', light: '#C0A0C0CC', hc: '#C0A0C0CC' }, nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst ctxHasWordHighlights = new RawContextKey('hasWordHighlights', false);\r\nexport function getOccurrencesAtPosition(model, position, token) {\r\n    const orderedByScore = DocumentHighlightProviderRegistry.ordered(model);\r\n    // in order of score ask the occurrences provider\r\n    // until someone response with a good result\r\n    // (good = none empty array)\r\n    return first(orderedByScore.map(provider => () => {\r\n        return Promise.resolve(provider.provideDocumentHighlights(model, position, token))\r\n            .then(undefined, onUnexpectedExternalError);\r\n    }), arrays.isNonEmptyArray);\r\n}\r\nclass OccurenceAtPositionRequest {\r\n    constructor(model, selection, wordSeparators) {\r\n        this._wordRange = this._getCurrentWordRange(model, selection);\r\n        this.result = createCancelablePromise(token => this._compute(model, selection, wordSeparators, token));\r\n    }\r\n    _getCurrentWordRange(model, selection) {\r\n        const word = model.getWordAtPosition(selection.getPosition());\r\n        if (word) {\r\n            return new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n        }\r\n        return null;\r\n    }\r\n    isValid(model, selection, decorationIds) {\r\n        const lineNumber = selection.startLineNumber;\r\n        const startColumn = selection.startColumn;\r\n        const endColumn = selection.endColumn;\r\n        const currentWordRange = this._getCurrentWordRange(model, selection);\r\n        let requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\r\n        // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\r\n        // (Same symbol)\r\n        for (let i = 0, len = decorationIds.length; !requestIsValid && i < len; i++) {\r\n            let range = model.getDecorationRange(decorationIds[i]);\r\n            if (range && range.startLineNumber === lineNumber) {\r\n                if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\r\n                    requestIsValid = true;\r\n                }\r\n            }\r\n        }\r\n        return requestIsValid;\r\n    }\r\n    cancel() {\r\n        this.result.cancel();\r\n    }\r\n}\r\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\r\n    _compute(model, selection, wordSeparators, token) {\r\n        return getOccurrencesAtPosition(model, selection.getPosition(), token).then(value => value || []);\r\n    }\r\n}\r\nclass TextualOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\r\n    constructor(model, selection, wordSeparators) {\r\n        super(model, selection, wordSeparators);\r\n        this._selectionIsEmpty = selection.isEmpty();\r\n    }\r\n    _compute(model, selection, wordSeparators, token) {\r\n        return timeout(250, token).then(() => {\r\n            if (!selection.isEmpty()) {\r\n                return [];\r\n            }\r\n            const word = model.getWordAtPosition(selection.getPosition());\r\n            if (!word || word.word.length > 1000) {\r\n                return [];\r\n            }\r\n            const matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\r\n            return matches.map(m => {\r\n                return {\r\n                    range: m.range,\r\n                    kind: DocumentHighlightKind.Text\r\n                };\r\n            });\r\n        });\r\n    }\r\n    isValid(model, selection, decorationIds) {\r\n        const currentSelectionIsEmpty = selection.isEmpty();\r\n        if (this._selectionIsEmpty !== currentSelectionIsEmpty) {\r\n            return false;\r\n        }\r\n        return super.isValid(model, selection, decorationIds);\r\n    }\r\n}\r\nfunction computeOccurencesAtPosition(model, selection, wordSeparators) {\r\n    if (DocumentHighlightProviderRegistry.has(model)) {\r\n        return new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators);\r\n    }\r\n    return new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\r\n}\r\nregisterModelAndPositionCommand('_executeDocumentHighlights', (model, position) => getOccurrencesAtPosition(model, position, CancellationToken.None));\r\nclass WordHighlighter {\r\n    constructor(editor, contextKeyService) {\r\n        this.toUnhook = new DisposableStore();\r\n        this.workerRequestTokenId = 0;\r\n        this.workerRequestCompleted = false;\r\n        this.workerRequestValue = [];\r\n        this.lastCursorPositionChangeTime = 0;\r\n        this.renderDecorationsTimer = -1;\r\n        this.editor = editor;\r\n        this._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\r\n        this._ignorePositionChangeEvent = false;\r\n        this.occurrencesHighlight = this.editor.getOption(71 /* occurrencesHighlight */);\r\n        this.model = this.editor.getModel();\r\n        this.toUnhook.add(editor.onDidChangeCursorPosition((e) => {\r\n            if (this._ignorePositionChangeEvent) {\r\n                // We are changing the position => ignore this event\r\n                return;\r\n            }\r\n            if (!this.occurrencesHighlight) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            this._onPositionChanged(e);\r\n        }));\r\n        this.toUnhook.add(editor.onDidChangeModelContent((e) => {\r\n            this._stopAll();\r\n        }));\r\n        this.toUnhook.add(editor.onDidChangeConfiguration((e) => {\r\n            let newValue = this.editor.getOption(71 /* occurrencesHighlight */);\r\n            if (this.occurrencesHighlight !== newValue) {\r\n                this.occurrencesHighlight = newValue;\r\n                this._stopAll();\r\n            }\r\n        }));\r\n        this._decorationIds = [];\r\n        this.workerRequestTokenId = 0;\r\n        this.workerRequest = null;\r\n        this.workerRequestCompleted = false;\r\n        this.lastCursorPositionChangeTime = 0;\r\n        this.renderDecorationsTimer = -1;\r\n    }\r\n    hasDecorations() {\r\n        return (this._decorationIds.length > 0);\r\n    }\r\n    restore() {\r\n        if (!this.occurrencesHighlight) {\r\n            return;\r\n        }\r\n        this._run();\r\n    }\r\n    _getSortedHighlights() {\r\n        return arrays.coalesce(this._decorationIds\r\n            .map((id) => this.model.getDecorationRange(id))\r\n            .sort(Range.compareRangesUsingStarts));\r\n    }\r\n    moveNext() {\r\n        let highlights = this._getSortedHighlights();\r\n        let index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\r\n        let newIndex = ((index + 1) % highlights.length);\r\n        let dest = highlights[newIndex];\r\n        try {\r\n            this._ignorePositionChangeEvent = true;\r\n            this.editor.setPosition(dest.getStartPosition());\r\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\r\n            const word = this._getWord();\r\n            if (word) {\r\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\r\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\r\n            }\r\n        }\r\n        finally {\r\n            this._ignorePositionChangeEvent = false;\r\n        }\r\n    }\r\n    moveBack() {\r\n        let highlights = this._getSortedHighlights();\r\n        let index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\r\n        let newIndex = ((index - 1 + highlights.length) % highlights.length);\r\n        let dest = highlights[newIndex];\r\n        try {\r\n            this._ignorePositionChangeEvent = true;\r\n            this.editor.setPosition(dest.getStartPosition());\r\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\r\n            const word = this._getWord();\r\n            if (word) {\r\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\r\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\r\n            }\r\n        }\r\n        finally {\r\n            this._ignorePositionChangeEvent = false;\r\n        }\r\n    }\r\n    _removeDecorations() {\r\n        if (this._decorationIds.length > 0) {\r\n            // remove decorations\r\n            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\r\n            this._hasWordHighlights.set(false);\r\n        }\r\n    }\r\n    _stopAll() {\r\n        // Remove any existing decorations\r\n        this._removeDecorations();\r\n        // Cancel any renderDecorationsTimer\r\n        if (this.renderDecorationsTimer !== -1) {\r\n            clearTimeout(this.renderDecorationsTimer);\r\n            this.renderDecorationsTimer = -1;\r\n        }\r\n        // Cancel any worker request\r\n        if (this.workerRequest !== null) {\r\n            this.workerRequest.cancel();\r\n            this.workerRequest = null;\r\n        }\r\n        // Invalidate any worker request callback\r\n        if (!this.workerRequestCompleted) {\r\n            this.workerRequestTokenId++;\r\n            this.workerRequestCompleted = true;\r\n        }\r\n    }\r\n    _onPositionChanged(e) {\r\n        // disabled\r\n        if (!this.occurrencesHighlight) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        // ignore typing & other\r\n        if (e.reason !== 3 /* Explicit */) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        this._run();\r\n    }\r\n    _getWord() {\r\n        let editorSelection = this.editor.getSelection();\r\n        let lineNumber = editorSelection.startLineNumber;\r\n        let startColumn = editorSelection.startColumn;\r\n        return this.model.getWordAtPosition({\r\n            lineNumber: lineNumber,\r\n            column: startColumn\r\n        });\r\n    }\r\n    _run() {\r\n        let editorSelection = this.editor.getSelection();\r\n        // ignore multiline selection\r\n        if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        let startColumn = editorSelection.startColumn;\r\n        let endColumn = editorSelection.endColumn;\r\n        const word = this._getWord();\r\n        // The selection must be inside a word or surround one word at most\r\n        if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        // All the effort below is trying to achieve this:\r\n        // - when cursor is moved to a word, trigger immediately a findOccurrences request\r\n        // - 250ms later after the last cursor move event, render the occurrences\r\n        // - no flickering!\r\n        const workerRequestIsValid = (this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this._decorationIds));\r\n        // There are 4 cases:\r\n        // a) old workerRequest is valid & completed, renderDecorationsTimer fired\r\n        // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\r\n        // c) old workerRequest is valid, but not completed\r\n        // d) old workerRequest is not valid\r\n        // For a) no action is needed\r\n        // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\r\n        this.lastCursorPositionChangeTime = (new Date()).getTime();\r\n        if (workerRequestIsValid) {\r\n            if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\r\n                // case b)\r\n                // Delay the firing of renderDecorationsTimer by an extra 250 ms\r\n                clearTimeout(this.renderDecorationsTimer);\r\n                this.renderDecorationsTimer = -1;\r\n                this._beginRenderDecorations();\r\n            }\r\n        }\r\n        else {\r\n            // case d)\r\n            // Stop all previous actions and start fresh\r\n            this._stopAll();\r\n            let myRequestId = ++this.workerRequestTokenId;\r\n            this.workerRequestCompleted = false;\r\n            this.workerRequest = computeOccurencesAtPosition(this.model, this.editor.getSelection(), this.editor.getOption(116 /* wordSeparators */));\r\n            this.workerRequest.result.then(data => {\r\n                if (myRequestId === this.workerRequestTokenId) {\r\n                    this.workerRequestCompleted = true;\r\n                    this.workerRequestValue = data || [];\r\n                    this._beginRenderDecorations();\r\n                }\r\n            }, onUnexpectedError);\r\n        }\r\n    }\r\n    _beginRenderDecorations() {\r\n        let currentTime = (new Date()).getTime();\r\n        let minimumRenderTime = this.lastCursorPositionChangeTime + 250;\r\n        if (currentTime >= minimumRenderTime) {\r\n            // Synchronous\r\n            this.renderDecorationsTimer = -1;\r\n            this.renderDecorations();\r\n        }\r\n        else {\r\n            // Asynchronous\r\n            this.renderDecorationsTimer = setTimeout(() => {\r\n                this.renderDecorations();\r\n            }, (minimumRenderTime - currentTime));\r\n        }\r\n    }\r\n    renderDecorations() {\r\n        this.renderDecorationsTimer = -1;\r\n        let decorations = [];\r\n        for (const info of this.workerRequestValue) {\r\n            if (info.range) {\r\n                decorations.push({\r\n                    range: info.range,\r\n                    options: WordHighlighter._getDecorationOptions(info.kind)\r\n                });\r\n            }\r\n        }\r\n        this._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\r\n        this._hasWordHighlights.set(this.hasDecorations());\r\n    }\r\n    static _getDecorationOptions(kind) {\r\n        if (kind === DocumentHighlightKind.Write) {\r\n            return this._WRITE_OPTIONS;\r\n        }\r\n        else if (kind === DocumentHighlightKind.Text) {\r\n            return this._TEXT_OPTIONS;\r\n        }\r\n        else {\r\n            return this._REGULAR_OPTIONS;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._stopAll();\r\n        this.toUnhook.dispose();\r\n    }\r\n}\r\nWordHighlighter._WRITE_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'word-highlight-strong',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'wordHighlightStrong',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerWordHighlightStrongForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nWordHighlighter._TEXT_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'selection-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nWordHighlighter._REGULAR_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'word-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'wordHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerWordHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nlet WordHighlighterContribution = class WordHighlighterContribution extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this.wordHighlighter = null;\r\n        const createWordHighlighterIfPossible = () => {\r\n            if (editor.hasModel()) {\r\n                this.wordHighlighter = new WordHighlighter(editor, contextKeyService);\r\n            }\r\n        };\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            if (this.wordHighlighter) {\r\n                this.wordHighlighter.dispose();\r\n                this.wordHighlighter = null;\r\n            }\r\n            createWordHighlighterIfPossible();\r\n        }));\r\n        createWordHighlighterIfPossible();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(WordHighlighterContribution.ID);\r\n    }\r\n    saveViewState() {\r\n        if (this.wordHighlighter && this.wordHighlighter.hasDecorations()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveNext() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.moveNext();\r\n        }\r\n    }\r\n    moveBack() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.moveBack();\r\n        }\r\n    }\r\n    restoreViewState(state) {\r\n        if (this.wordHighlighter && state) {\r\n            this.wordHighlighter.restore();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.dispose();\r\n            this.wordHighlighter = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n};\r\nWordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\r\nWordHighlighterContribution = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordHighlighterContribution);\r\nclass WordHighlightNavigationAction extends EditorAction {\r\n    constructor(next, opts) {\r\n        super(opts);\r\n        this._isNext = next;\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = WordHighlighterContribution.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        if (this._isNext) {\r\n            controller.moveNext();\r\n        }\r\n        else {\r\n            controller.moveBack();\r\n        }\r\n    }\r\n}\r\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.wordHighlight.next',\r\n            label: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\r\n            alias: 'Go to Next Symbol Highlight',\r\n            precondition: ctxHasWordHighlights,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.wordHighlight.prev',\r\n            label: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\r\n            alias: 'Go to Previous Symbol Highlight',\r\n            precondition: ctxHasWordHighlights,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass TriggerWordHighlightAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.wordHighlight.trigger',\r\n            label: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\r\n            alias: 'Trigger Symbol Highlight',\r\n            precondition: ctxHasWordHighlights.toNegated(),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        const controller = WordHighlighterContribution.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.restoreViewState(true);\r\n    }\r\n}\r\nregisterEditorContribution(WordHighlighterContribution.ID, WordHighlighterContribution);\r\nregisterEditorAction(NextWordHighlightAction);\r\nregisterEditorAction(PrevWordHighlightAction);\r\nregisterEditorAction(TriggerWordHighlightAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const selectionHighlight = theme.getColor(editorSelectionHighlight);\r\n    if (selectionHighlight) {\r\n        collector.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${selectionHighlight}; }`);\r\n        collector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);\r\n    }\r\n    const wordHighlight = theme.getColor(editorWordHighlight);\r\n    if (wordHighlight) {\r\n        collector.addRule(`.monaco-editor .wordHighlight { background-color: ${wordHighlight}; }`);\r\n    }\r\n    const wordHighlightStrong = theme.getColor(editorWordHighlightStrong);\r\n    if (wordHighlightStrong) {\r\n        collector.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${wordHighlightStrong}; }`);\r\n    }\r\n    const selectionHighlightBorder = theme.getColor(editorSelectionHighlightBorder);\r\n    if (selectionHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .selectionHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${selectionHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const wordHighlightBorder = theme.getColor(editorWordHighlightBorder);\r\n    if (wordHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .wordHighlight { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const wordHighlightStrongBorder = theme.getColor(editorWordHighlightStrongBorder);\r\n    if (wordHighlightStrongBorder) {\r\n        collector.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightStrongBorder}; box-sizing: border-box; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorCommand, registerEditorCommand, EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { CursorState } from '../../common/controller/cursorCommon.js';\r\nimport { WordOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { EditorOptions } from '../../common/config/editorOptions.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IsWindowsContext } from '../../../platform/contextkey/common/contextkeys.js';\r\nexport class MoveWordCommand extends EditorCommand {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._inSelectionMode = opts.inSelectionMode;\r\n        this._wordNavigationType = opts.wordNavigationType;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(116 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const result = selections.map((sel) => {\r\n            const inPosition = new Position(sel.positionLineNumber, sel.positionColumn);\r\n            const outPosition = this._move(wordSeparators, model, inPosition, this._wordNavigationType);\r\n            return this._moveTo(sel, outPosition, this._inSelectionMode);\r\n        });\r\n        model.pushStackElement();\r\n        editor._getViewModel().setCursorStates('moveWordCommand', 3 /* Explicit */, result.map(r => CursorState.fromModelSelection(r)));\r\n        if (result.length === 1) {\r\n            const pos = new Position(result[0].positionLineNumber, result[0].positionColumn);\r\n            editor.revealPosition(pos, 0 /* Smooth */);\r\n        }\r\n    }\r\n    _moveTo(from, to, inSelectionMode) {\r\n        if (inSelectionMode) {\r\n            // move just position\r\n            return new Selection(from.selectionStartLineNumber, from.selectionStartColumn, to.lineNumber, to.column);\r\n        }\r\n        else {\r\n            // move everything\r\n            return new Selection(to.lineNumber, to.column, to.lineNumber, to.column);\r\n        }\r\n    }\r\n}\r\nexport class WordLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class WordRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordStartLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordLeft extends WordLeftCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 1 /* WordStartFast */,\r\n            id: 'cursorWordLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 15 /* LeftArrow */,\r\n                mac: { primary: 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordStartLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 1 /* WordStartFast */,\r\n            id: 'cursorWordLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                mac: { primary: 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\r\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordStartRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndRight extends WordRightCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 17 /* RightArrow */,\r\n                mac: { primary: 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordStartRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                mac: { primary: 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordAccessibilityRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class DeleteWordCommand extends EditorCommand {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._whitespaceHeuristics = opts.whitespaceHeuristics;\r\n        this._wordNavigationType = opts.wordNavigationType;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(116 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const autoClosingBrackets = editor.getOption(5 /* autoClosingBrackets */);\r\n        const autoClosingQuotes = editor.getOption(8 /* autoClosingQuotes */);\r\n        const autoClosingPairs = LanguageConfigurationRegistry.getAutoClosingPairs(model.getLanguageIdentifier().id);\r\n        const viewModel = editor._getViewModel();\r\n        const commands = selections.map((sel) => {\r\n            const deleteRange = this._delete({\r\n                wordSeparators,\r\n                model,\r\n                selection: sel,\r\n                whitespaceHeuristics: this._whitespaceHeuristics,\r\n                autoClosingDelete: editor.getOption(6 /* autoClosingDelete */),\r\n                autoClosingBrackets,\r\n                autoClosingQuotes,\r\n                autoClosingPairs,\r\n                autoClosedCharacters: viewModel.getCursorAutoClosedCharacters()\r\n            }, this._wordNavigationType);\r\n            return new ReplaceCommand(deleteRange, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class DeleteWordLeftCommand extends DeleteWordCommand {\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordOperations.deleteWordLeft(ctx, wordNavigationType);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordRightCommand extends DeleteWordCommand {\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordOperations.deleteWordRight(ctx, wordNavigationType);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class DeleteWordStartLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordStartLeft',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordEndLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordEndLeft',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1 /* Backspace */,\r\n                mac: { primary: 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordStartRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordStartRight',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordEndRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordEndRight',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 20 /* Delete */,\r\n                mac: { primary: 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DeleteInsideWord extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteInsideWord',\r\n            precondition: EditorContextKeys.writable,\r\n            label: nls.localize('deleteInsideWord', \"Delete Word\"),\r\n            alias: 'Delete Word'\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(116 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const commands = selections.map((sel) => {\r\n            const deleteRange = WordOperations.deleteInsideWord(wordSeparators, model, sel);\r\n            return new ReplaceCommand(deleteRange, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nregisterEditorCommand(new CursorWordStartLeft());\r\nregisterEditorCommand(new CursorWordEndLeft());\r\nregisterEditorCommand(new CursorWordLeft());\r\nregisterEditorCommand(new CursorWordStartLeftSelect());\r\nregisterEditorCommand(new CursorWordEndLeftSelect());\r\nregisterEditorCommand(new CursorWordLeftSelect());\r\nregisterEditorCommand(new CursorWordStartRight());\r\nregisterEditorCommand(new CursorWordEndRight());\r\nregisterEditorCommand(new CursorWordRight());\r\nregisterEditorCommand(new CursorWordStartRightSelect());\r\nregisterEditorCommand(new CursorWordEndRightSelect());\r\nregisterEditorCommand(new CursorWordRightSelect());\r\nregisterEditorCommand(new CursorWordAccessibilityLeft());\r\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\r\nregisterEditorCommand(new CursorWordAccessibilityRight());\r\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\r\nregisterEditorCommand(new DeleteWordStartLeft());\r\nregisterEditorCommand(new DeleteWordEndLeft());\r\nregisterEditorCommand(new DeleteWordLeft());\r\nregisterEditorCommand(new DeleteWordStartRight());\r\nregisterEditorCommand(new DeleteWordEndRight());\r\nregisterEditorCommand(new DeleteWordRight());\r\nregisterEditorAction(DeleteInsideWord);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { WordPartOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DeleteWordCommand, MoveWordCommand } from '../wordOperations/wordOperations.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport class DeleteWordPartLeft extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordPartLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartLeft(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordPartRight extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordPartRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartRight(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class WordPartLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartLeft extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\r\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\r\nexport class WordPartRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartRight extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorCommand(new DeleteWordPartLeft());\r\nregisterEditorCommand(new DeleteWordPartRight());\r\nregisterEditorCommand(new CursorWordPartLeft());\r\nregisterEditorCommand(new CursorWordPartLeftSelect());\r\nregisterEditorCommand(new CursorWordPartRight());\r\nregisterEditorCommand(new CursorWordPartRightSelect());\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './accessibilityHelp.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { renderFormattedText } from '../../../../base/browser/formattedTextRenderer.js';\r\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\r\nimport { Widget } from '../../../../base/browser/ui/widget.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { URI } from '../../../../base/common/uri.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { ToggleTabFocusModeAction } from '../../../contrib/toggleTabFocusMode/toggleTabFocusMode.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\r\nimport { contrastBorder, editorWidgetBackground, widgetShadow, editorWidgetForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { AccessibilityHelpNLS } from '../../../common/standaloneStrings.js';\r\nconst CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE = new RawContextKey('accessibilityHelpWidgetVisible', false);\r\nlet AccessibilityHelpController = class AccessibilityHelpController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._widget = this._register(instantiationService.createInstance(AccessibilityHelpWidget, this._editor));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(AccessibilityHelpController.ID);\r\n    }\r\n    show() {\r\n        this._widget.show();\r\n    }\r\n    hide() {\r\n        this._widget.hide();\r\n    }\r\n};\r\nAccessibilityHelpController.ID = 'editor.contrib.accessibilityHelpController';\r\nAccessibilityHelpController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], AccessibilityHelpController);\r\nfunction getSelectionLabel(selections, charactersSelected) {\r\n    if (!selections || selections.length === 0) {\r\n        return AccessibilityHelpNLS.noSelection;\r\n    }\r\n    if (selections.length === 1) {\r\n        if (charactersSelected) {\r\n            return strings.format(AccessibilityHelpNLS.singleSelectionRange, selections[0].positionLineNumber, selections[0].positionColumn, charactersSelected);\r\n        }\r\n        return strings.format(AccessibilityHelpNLS.singleSelection, selections[0].positionLineNumber, selections[0].positionColumn);\r\n    }\r\n    if (charactersSelected) {\r\n        return strings.format(AccessibilityHelpNLS.multiSelectionRange, selections.length, charactersSelected);\r\n    }\r\n    if (selections.length > 0) {\r\n        return strings.format(AccessibilityHelpNLS.multiSelection, selections.length);\r\n    }\r\n    return '';\r\n}\r\nlet AccessibilityHelpWidget = class AccessibilityHelpWidget extends Widget {\r\n    constructor(editor, _contextKeyService, _keybindingService, _openerService) {\r\n        super();\r\n        this._contextKeyService = _contextKeyService;\r\n        this._keybindingService = _keybindingService;\r\n        this._openerService = _openerService;\r\n        this._editor = editor;\r\n        this._isVisibleKey = CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE.bindTo(this._contextKeyService);\r\n        this._domNode = createFastDomNode(document.createElement('div'));\r\n        this._domNode.setClassName('accessibilityHelpWidget');\r\n        this._domNode.setDisplay('none');\r\n        this._domNode.setAttribute('role', 'dialog');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._contentDomNode = createFastDomNode(document.createElement('div'));\r\n        this._contentDomNode.setAttribute('role', 'document');\r\n        this._domNode.appendChild(this._contentDomNode);\r\n        this._isVisible = false;\r\n        this._register(this._editor.onDidLayoutChange(() => {\r\n            if (this._isVisible) {\r\n                this._layout();\r\n            }\r\n        }));\r\n        // Intentionally not configurable!\r\n        this._register(dom.addStandardDisposableListener(this._contentDomNode.domNode, 'keydown', (e) => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            if (e.equals(2048 /* CtrlCmd */ | 35 /* KEY_E */)) {\r\n                alert(AccessibilityHelpNLS.emergencyConfOn);\r\n                this._editor.updateOptions({\r\n                    accessibilitySupport: 'on'\r\n                });\r\n                dom.clearNode(this._contentDomNode.domNode);\r\n                this._buildContent();\r\n                this._contentDomNode.domNode.focus();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            if (e.equals(2048 /* CtrlCmd */ | 38 /* KEY_H */)) {\r\n                alert(AccessibilityHelpNLS.openingDocs);\r\n                let url = this._editor.getRawOptions().accessibilityHelpUrl;\r\n                if (typeof url === 'undefined') {\r\n                    url = 'https://go.microsoft.com/fwlink/?linkid=852450';\r\n                }\r\n                this._openerService.open(URI.parse(url));\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }));\r\n        this.onblur(this._contentDomNode.domNode, () => {\r\n            this.hide();\r\n        });\r\n        this._editor.addOverlayWidget(this);\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return AccessibilityHelpWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: null\r\n        };\r\n    }\r\n    show() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        this._isVisibleKey.set(true);\r\n        this._layout();\r\n        this._domNode.setDisplay('block');\r\n        this._domNode.setAttribute('aria-hidden', 'false');\r\n        this._contentDomNode.domNode.tabIndex = 0;\r\n        this._buildContent();\r\n        this._contentDomNode.domNode.focus();\r\n    }\r\n    _descriptionForCommand(commandId, msg, noKbMsg) {\r\n        let kb = this._keybindingService.lookupKeybinding(commandId);\r\n        if (kb) {\r\n            return strings.format(msg, kb.getAriaLabel());\r\n        }\r\n        return strings.format(noKbMsg, commandId);\r\n    }\r\n    _buildContent() {\r\n        const options = this._editor.getOptions();\r\n        const selections = this._editor.getSelections();\r\n        let charactersSelected = 0;\r\n        if (selections) {\r\n            const model = this._editor.getModel();\r\n            if (model) {\r\n                selections.forEach((selection) => {\r\n                    charactersSelected += model.getValueLengthInRange(selection);\r\n                });\r\n            }\r\n        }\r\n        let text = getSelectionLabel(selections, charactersSelected);\r\n        if (options.get(53 /* inDiffEditor */)) {\r\n            if (options.get(80 /* readOnly */)) {\r\n                text += AccessibilityHelpNLS.readonlyDiffEditor;\r\n            }\r\n            else {\r\n                text += AccessibilityHelpNLS.editableDiffEditor;\r\n            }\r\n        }\r\n        else {\r\n            if (options.get(80 /* readOnly */)) {\r\n                text += AccessibilityHelpNLS.readonlyEditor;\r\n            }\r\n            else {\r\n                text += AccessibilityHelpNLS.editableEditor;\r\n            }\r\n        }\r\n        const turnOnMessage = (platform.isMacintosh\r\n            ? AccessibilityHelpNLS.changeConfigToOnMac\r\n            : AccessibilityHelpNLS.changeConfigToOnWinLinux);\r\n        switch (options.get(2 /* accessibilitySupport */)) {\r\n            case 0 /* Unknown */:\r\n                text += '\\n\\n - ' + turnOnMessage;\r\n                break;\r\n            case 2 /* Enabled */:\r\n                text += '\\n\\n - ' + AccessibilityHelpNLS.auto_on;\r\n                break;\r\n            case 1 /* Disabled */:\r\n                text += '\\n\\n - ' + AccessibilityHelpNLS.auto_off;\r\n                text += ' ' + turnOnMessage;\r\n                break;\r\n        }\r\n        if (options.get(129 /* tabFocusMode */)) {\r\n            text += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, AccessibilityHelpNLS.tabFocusModeOnMsg, AccessibilityHelpNLS.tabFocusModeOnMsgNoKb);\r\n        }\r\n        else {\r\n            text += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, AccessibilityHelpNLS.tabFocusModeOffMsg, AccessibilityHelpNLS.tabFocusModeOffMsgNoKb);\r\n        }\r\n        const openDocMessage = (platform.isMacintosh\r\n            ? AccessibilityHelpNLS.openDocMac\r\n            : AccessibilityHelpNLS.openDocWinLinux);\r\n        text += '\\n\\n - ' + openDocMessage;\r\n        text += '\\n\\n' + AccessibilityHelpNLS.outroMsg;\r\n        this._contentDomNode.domNode.appendChild(renderFormattedText(text));\r\n        // Per https://www.w3.org/TR/wai-aria/roles#document, Authors SHOULD provide a title or label for documents\r\n        this._contentDomNode.domNode.setAttribute('aria-label', text);\r\n    }\r\n    hide() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        this._isVisibleKey.reset();\r\n        this._domNode.setDisplay('none');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._contentDomNode.domNode.tabIndex = -1;\r\n        dom.clearNode(this._contentDomNode.domNode);\r\n        this._editor.focus();\r\n    }\r\n    _layout() {\r\n        let editorLayout = this._editor.getLayoutInfo();\r\n        let w = Math.max(5, Math.min(AccessibilityHelpWidget.WIDTH, editorLayout.width - 40));\r\n        let h = Math.max(5, Math.min(AccessibilityHelpWidget.HEIGHT, editorLayout.height - 40));\r\n        this._domNode.setWidth(w);\r\n        this._domNode.setHeight(h);\r\n        let top = Math.round((editorLayout.height - h) / 2);\r\n        this._domNode.setTop(top);\r\n        let left = Math.round((editorLayout.width - w) / 2);\r\n        this._domNode.setLeft(left);\r\n    }\r\n};\r\nAccessibilityHelpWidget.ID = 'editor.contrib.accessibilityHelpWidget';\r\nAccessibilityHelpWidget.WIDTH = 500;\r\nAccessibilityHelpWidget.HEIGHT = 300;\r\nAccessibilityHelpWidget = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, IOpenerService)\r\n], AccessibilityHelpWidget);\r\nclass ShowAccessibilityHelpAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showAccessibilityHelp',\r\n            label: AccessibilityHelpNLS.showAccessibilityHelpAction,\r\n            alias: 'Show Accessibility Help',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                primary: 512 /* Alt */ | 59 /* F1 */,\r\n                weight: 100 /* EditorContrib */,\r\n                linux: {\r\n                    primary: 512 /* Alt */ | 1024 /* Shift */ | 59 /* F1 */,\r\n                    secondary: [512 /* Alt */ | 59 /* F1 */]\r\n                }\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = AccessibilityHelpController.get(editor);\r\n        if (controller) {\r\n            controller.show();\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(AccessibilityHelpController.ID, AccessibilityHelpController);\r\nregisterEditorAction(ShowAccessibilityHelpAction);\r\nconst AccessibilityHelpCommand = EditorCommand.bindToContribution(AccessibilityHelpController.get);\r\nregisterEditorCommand(new AccessibilityHelpCommand({\r\n    id: 'closeAccessibilityHelp',\r\n    precondition: CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE,\r\n    handler: x => x.hide(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 100,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    if (widgetBackground) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${widgetBackground}; }`);\r\n    }\r\n    const widgetForeground = theme.getColor(editorWidgetForeground);\r\n    if (widgetForeground) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${widgetForeground}; }`);\r\n    }\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${widgetShadowColor}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${hcBorder}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './iPadShowKeyboard.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { isIOS } from '../../../../base/common/platform.js';\r\nexport class IPadShowKeyboard extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this.widget = null;\r\n        if (isIOS) {\r\n            this._register(editor.onDidChangeConfiguration(() => this.update()));\r\n            this.update();\r\n        }\r\n    }\r\n    update() {\r\n        const shouldHaveWidget = (!this.editor.getOption(80 /* readOnly */));\r\n        if (!this.widget && shouldHaveWidget) {\r\n            this.widget = new ShowKeyboardWidget(this.editor);\r\n        }\r\n        else if (this.widget && !shouldHaveWidget) {\r\n            this.widget.dispose();\r\n            this.widget = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        if (this.widget) {\r\n            this.widget.dispose();\r\n            this.widget = null;\r\n        }\r\n    }\r\n}\r\nIPadShowKeyboard.ID = 'editor.contrib.iPadShowKeyboard';\r\nclass ShowKeyboardWidget extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._domNode = document.createElement('textarea');\r\n        this._domNode.className = 'iPadShowKeyboard';\r\n        this._register(dom.addDisposableListener(this._domNode, 'touchstart', (e) => {\r\n            this.editor.focus();\r\n        }));\r\n        this._register(dom.addDisposableListener(this._domNode, 'focus', (e) => {\r\n            this.editor.focus();\r\n        }));\r\n        this.editor.addOverlayWidget(this);\r\n    }\r\n    dispose() {\r\n        this.editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return ShowKeyboardWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: 1 /* BOTTOM_RIGHT_CORNER */\r\n        };\r\n    }\r\n}\r\nShowKeyboardWidget.ID = 'editor.contrib.ShowKeyboardWidget';\r\nregisterEditorContribution(IPadShowKeyboard.ID, IPadShowKeyboard);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './inspectTokens.css';\r\nimport { $, append, reset } from '../../../../base/browser/dom.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { TokenMetadata, TokenizationRegistry } from '../../../common/modes.js';\r\nimport { NULL_STATE, nullTokenize, nullTokenize2 } from '../../../common/modes/nullMode.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\r\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { InspectTokensNLS } from '../../../common/standaloneStrings.js';\r\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\r\nlet InspectTokensController = class InspectTokensController extends Disposable {\r\n    constructor(editor, standaloneColorService, modeService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._modeService = modeService;\r\n        this._widget = null;\r\n        this._register(this._editor.onDidChangeModel((e) => this.stop()));\r\n        this._register(this._editor.onDidChangeModelLanguage((e) => this.stop()));\r\n        this._register(TokenizationRegistry.onDidChange((e) => this.stop()));\r\n        this._register(this._editor.onKeyUp((e) => e.keyCode === 9 /* Escape */ && this.stop()));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(InspectTokensController.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        super.dispose();\r\n    }\r\n    launch() {\r\n        if (this._widget) {\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._widget = new InspectTokensWidget(this._editor, this._modeService);\r\n    }\r\n    stop() {\r\n        if (this._widget) {\r\n            this._widget.dispose();\r\n            this._widget = null;\r\n        }\r\n    }\r\n};\r\nInspectTokensController.ID = 'editor.contrib.inspectTokens';\r\nInspectTokensController = __decorate([\r\n    __param(1, IStandaloneThemeService),\r\n    __param(2, IModeService)\r\n], InspectTokensController);\r\nclass InspectTokens extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inspectTokens',\r\n            label: InspectTokensNLS.inspectTokensAction,\r\n            alias: 'Developer: Inspect Tokens',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = InspectTokensController.get(editor);\r\n        if (controller) {\r\n            controller.launch();\r\n        }\r\n    }\r\n}\r\nfunction renderTokenText(tokenText) {\r\n    let result = '';\r\n    for (let charIndex = 0, len = tokenText.length; charIndex < len; charIndex++) {\r\n        let charCode = tokenText.charCodeAt(charIndex);\r\n        switch (charCode) {\r\n            case 9 /* Tab */:\r\n                result += '\\u2192'; // &rarr;\r\n                break;\r\n            case 32 /* Space */:\r\n                result += '\\u00B7'; // &middot;\r\n                break;\r\n            default:\r\n                result += String.fromCharCode(charCode);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getSafeTokenizationSupport(languageIdentifier) {\r\n    let tokenizationSupport = TokenizationRegistry.get(languageIdentifier.language);\r\n    if (tokenizationSupport) {\r\n        return tokenizationSupport;\r\n    }\r\n    return {\r\n        getInitialState: () => NULL_STATE,\r\n        tokenize: (line, hasEOL, state, deltaOffset) => nullTokenize(languageIdentifier.language, line, state, deltaOffset),\r\n        tokenize2: (line, hasEOL, state, deltaOffset) => nullTokenize2(languageIdentifier.id, line, state, deltaOffset)\r\n    };\r\n}\r\nclass InspectTokensWidget extends Disposable {\r\n    constructor(editor, modeService) {\r\n        super();\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._editor = editor;\r\n        this._modeService = modeService;\r\n        this._model = this._editor.getModel();\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'tokens-inspect-widget';\r\n        this._tokenizationSupport = getSafeTokenizationSupport(this._model.getLanguageIdentifier());\r\n        this._compute(this._editor.getPosition());\r\n        this._register(this._editor.onDidChangeCursorPosition((e) => this._compute(this._editor.getPosition())));\r\n        this._editor.addContentWidget(this);\r\n    }\r\n    dispose() {\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return InspectTokensWidget._ID;\r\n    }\r\n    _compute(position) {\r\n        let data = this._getTokensAtLine(position.lineNumber);\r\n        let token1Index = 0;\r\n        for (let i = data.tokens1.length - 1; i >= 0; i--) {\r\n            let t = data.tokens1[i];\r\n            if (position.column - 1 >= t.offset) {\r\n                token1Index = i;\r\n                break;\r\n            }\r\n        }\r\n        let token2Index = 0;\r\n        for (let i = (data.tokens2.length >>> 1); i >= 0; i--) {\r\n            if (position.column - 1 >= data.tokens2[(i << 1)]) {\r\n                token2Index = i;\r\n                break;\r\n            }\r\n        }\r\n        let lineContent = this._model.getLineContent(position.lineNumber);\r\n        let tokenText = '';\r\n        if (token1Index < data.tokens1.length) {\r\n            let tokenStartIndex = data.tokens1[token1Index].offset;\r\n            let tokenEndIndex = token1Index + 1 < data.tokens1.length ? data.tokens1[token1Index + 1].offset : lineContent.length;\r\n            tokenText = lineContent.substring(tokenStartIndex, tokenEndIndex);\r\n        }\r\n        reset(this._domNode, $('h2.tm-token', undefined, renderTokenText(tokenText), $('span.tm-token-length', undefined, `${tokenText.length} ${tokenText.length === 1 ? 'char' : 'chars'}`)));\r\n        append(this._domNode, $('hr.tokens-inspect-separator', { 'style': 'clear:both' }));\r\n        const metadata = (token2Index << 1) + 1 < data.tokens2.length ? this._decodeMetadata(data.tokens2[(token2Index << 1) + 1]) : null;\r\n        append(this._domNode, $('table.tm-metadata-table', undefined, $('tbody', undefined, $('tr', undefined, $('td.tm-metadata-key', undefined, 'language'), $('td.tm-metadata-value', undefined, `${metadata ? metadata.languageIdentifier.language : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'token type'), $('td.tm-metadata-value', undefined, `${metadata ? this._tokenTypeToString(metadata.tokenType) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'font style'), $('td.tm-metadata-value', undefined, `${metadata ? this._fontStyleToString(metadata.fontStyle) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'foreground'), $('td.tm-metadata-value', undefined, `${metadata ? Color.Format.CSS.formatHex(metadata.foreground) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'background'), $('td.tm-metadata-value', undefined, `${metadata ? Color.Format.CSS.formatHex(metadata.background) : '-?-'}`)))));\r\n        append(this._domNode, $('hr.tokens-inspect-separator'));\r\n        if (token1Index < data.tokens1.length) {\r\n            append(this._domNode, $('span.tm-token-type', undefined, data.tokens1[token1Index].type));\r\n        }\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    _decodeMetadata(metadata) {\r\n        let colorMap = TokenizationRegistry.getColorMap();\r\n        let languageId = TokenMetadata.getLanguageId(metadata);\r\n        let tokenType = TokenMetadata.getTokenType(metadata);\r\n        let fontStyle = TokenMetadata.getFontStyle(metadata);\r\n        let foreground = TokenMetadata.getForeground(metadata);\r\n        let background = TokenMetadata.getBackground(metadata);\r\n        return {\r\n            languageIdentifier: this._modeService.getLanguageIdentifier(languageId),\r\n            tokenType: tokenType,\r\n            fontStyle: fontStyle,\r\n            foreground: colorMap[foreground],\r\n            background: colorMap[background]\r\n        };\r\n    }\r\n    _tokenTypeToString(tokenType) {\r\n        switch (tokenType) {\r\n            case 0 /* Other */: return 'Other';\r\n            case 1 /* Comment */: return 'Comment';\r\n            case 2 /* String */: return 'String';\r\n            case 4 /* RegEx */: return 'RegEx';\r\n            default: return '??';\r\n        }\r\n    }\r\n    _fontStyleToString(fontStyle) {\r\n        let r = '';\r\n        if (fontStyle & 1 /* Italic */) {\r\n            r += 'italic ';\r\n        }\r\n        if (fontStyle & 2 /* Bold */) {\r\n            r += 'bold ';\r\n        }\r\n        if (fontStyle & 4 /* Underline */) {\r\n            r += 'underline ';\r\n        }\r\n        if (r.length === 0) {\r\n            r = '---';\r\n        }\r\n        return r;\r\n    }\r\n    _getTokensAtLine(lineNumber) {\r\n        let stateBeforeLine = this._getStateBeforeLine(lineNumber);\r\n        let tokenizationResult1 = this._tokenizationSupport.tokenize(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);\r\n        let tokenizationResult2 = this._tokenizationSupport.tokenize2(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);\r\n        return {\r\n            startState: stateBeforeLine,\r\n            tokens1: tokenizationResult1.tokens,\r\n            tokens2: tokenizationResult2.tokens,\r\n            endState: tokenizationResult1.endState\r\n        };\r\n    }\r\n    _getStateBeforeLine(lineNumber) {\r\n        let state = this._tokenizationSupport.getInitialState();\r\n        for (let i = 1; i < lineNumber; i++) {\r\n            let tokenizationResult = this._tokenizationSupport.tokenize(this._model.getLineContent(i), true, state, 0);\r\n            state = tokenizationResult.endState;\r\n        }\r\n        return state;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this._editor.getPosition(),\r\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\r\n        };\r\n    }\r\n}\r\nInspectTokensWidget._ID = 'editor.contrib.inspectTokensWidget';\r\nregisterEditorContribution(InspectTokensController.ID, InspectTokensController);\r\nregisterEditorAction(InspectTokens);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorHoverBorder);\r\n    if (border) {\r\n        let borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { border: ${borderWidth}px solid ${border}; }`);\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${border}; }`);\r\n    }\r\n    const background = theme.getColor(editorHoverBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorHoverForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { color: ${foreground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { Extensions } from '../common/quickAccess.js';\r\nimport { IQuickInputService } from '../common/quickInput.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\r\n    constructor(quickInputService) {\r\n        this.quickInputService = quickInputService;\r\n        this.registry = Registry.as(Extensions.Quickaccess);\r\n    }\r\n    provide(picker) {\r\n        const disposables = new DisposableStore();\r\n        // Open a picker with the selected value if picked\r\n        disposables.add(picker.onDidAccept(() => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Also open a picker when we detect the user typed the exact\r\n        // name of a provider (e.g. `?term` for terminals)\r\n        disposables.add(picker.onDidChangeValue(value => {\r\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\r\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\r\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Fill in all providers separated by editor/global scope\r\n        const { editorProviders, globalProviders } = this.getQuickAccessProviders();\r\n        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\r\n            // Without groups\r\n            [\r\n                ...(editorProviders.length === 0 ? globalProviders : editorProviders)\r\n            ] :\r\n            // With groups\r\n            [\r\n                { label: localize('globalCommands', \"global commands\"), type: 'separator' },\r\n                ...globalProviders,\r\n                { label: localize('editorCommands', \"editor commands\"), type: 'separator' },\r\n                ...editorProviders\r\n            ];\r\n        return disposables;\r\n    }\r\n    getQuickAccessProviders() {\r\n        const globalProviders = [];\r\n        const editorProviders = [];\r\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\r\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\r\n                continue; // exclude help which is already active\r\n            }\r\n            for (const helpEntry of provider.helpEntries) {\r\n                const prefix = helpEntry.prefix || provider.prefix;\r\n                const label = prefix || '\\u2026' /* ... */;\r\n                (helpEntry.needsEditor ? editorProviders : globalProviders).push({\r\n                    prefix,\r\n                    label,\r\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\r\n                    description: helpEntry.description\r\n                });\r\n            }\r\n        }\r\n        return { editorProviders, globalProviders };\r\n    }\r\n};\r\nHelpQuickAccessProvider.PREFIX = '?';\r\nHelpQuickAccessProvider = __decorate([\r\n    __param(0, IQuickInputService)\r\n], HelpQuickAccessProvider);\r\nexport { HelpQuickAccessProvider };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { QuickHelpNLS } from '../../../common/standaloneStrings.js';\r\nimport { HelpQuickAccessProvider } from '../../../../platform/quickinput/browser/helpQuickAccess.js';\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: HelpQuickAccessProvider,\r\n    prefix: '',\r\n    helpEntries: [{ description: QuickHelpNLS.helpQuickAccessActionLabel, needsEditor: true }]\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { overviewRulerRangeHighlight } from '../../common/view/editorColorRegistry.js';\r\nimport { DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isDiffEditor, getCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { withNullAsUndefined } from '../../../base/common/types.js';\r\nimport { once } from '../../../base/common/functional.js';\r\n/**\r\n * A reusable quick access provider for the editor with support\r\n * for adding decorations for navigating in the currently active file\r\n * (for example \"Go to line\", \"Go to symbol\").\r\n */\r\nexport class AbstractEditorNavigationQuickAccessProvider {\r\n    constructor(options) {\r\n        this.options = options;\r\n        //#endregion\r\n        //#region Decorations Utils\r\n        this.rangeHighlightDecorationId = undefined;\r\n    }\r\n    //#region Provider methods\r\n    provide(picker, token) {\r\n        var _a;\r\n        const disposables = new DisposableStore();\r\n        // Apply options if any\r\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\r\n        // Disable filtering & sorting, we control the results\r\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\r\n        // Provide based on current active editor\r\n        const pickerDisposable = disposables.add(new MutableDisposable());\r\n        pickerDisposable.value = this.doProvide(picker, token);\r\n        // Re-create whenever the active editor changes\r\n        disposables.add(this.onDidActiveTextEditorControlChange(() => {\r\n            // Clear old\r\n            pickerDisposable.value = undefined;\r\n            // Add new\r\n            pickerDisposable.value = this.doProvide(picker, token);\r\n        }));\r\n        return disposables;\r\n    }\r\n    doProvide(picker, token) {\r\n        const disposables = new DisposableStore();\r\n        // With text control\r\n        const editor = this.activeTextEditorControl;\r\n        if (editor && this.canProvideWithTextEditor(editor)) {\r\n            const context = { editor };\r\n            // Restore any view state if this picker was closed\r\n            // without actually going to a line\r\n            const codeEditor = getCodeEditor(editor);\r\n            if (codeEditor) {\r\n                // Remember view state and update it when the cursor position\r\n                // changes even later because it could be that the user has\r\n                // configured quick access to remain open when focus is lost and\r\n                // we always want to restore the current location.\r\n                let lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\r\n                disposables.add(codeEditor.onDidChangeCursorPosition(() => {\r\n                    lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\r\n                }));\r\n                context.restoreViewState = () => {\r\n                    if (lastKnownEditorViewState && editor === this.activeTextEditorControl) {\r\n                        editor.restoreViewState(lastKnownEditorViewState);\r\n                    }\r\n                };\r\n                disposables.add(once(token.onCancellationRequested)(() => { var _a; return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context); }));\r\n            }\r\n            // Clean up decorations on dispose\r\n            disposables.add(toDisposable(() => this.clearDecorations(editor)));\r\n            // Ask subclass for entries\r\n            disposables.add(this.provideWithTextEditor(context, picker, token));\r\n        }\r\n        // Without text control\r\n        else {\r\n            disposables.add(this.provideWithoutTextEditor(picker, token));\r\n        }\r\n        return disposables;\r\n    }\r\n    /**\r\n     * Subclasses to implement if they can operate on the text editor.\r\n     */\r\n    canProvideWithTextEditor(editor) {\r\n        return true;\r\n    }\r\n    gotoLocation({ editor }, options) {\r\n        editor.setSelection(options.range);\r\n        editor.revealRangeInCenter(options.range, 0 /* Smooth */);\r\n        if (!options.preserveFocus) {\r\n            editor.focus();\r\n        }\r\n    }\r\n    getModel(editor) {\r\n        var _a;\r\n        return isDiffEditor(editor) ?\r\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified :\r\n            editor.getModel();\r\n    }\r\n    addDecorations(editor, range) {\r\n        editor.changeDecorations(changeAccessor => {\r\n            // Reset old decorations if any\r\n            const deleteDecorations = [];\r\n            if (this.rangeHighlightDecorationId) {\r\n                deleteDecorations.push(this.rangeHighlightDecorationId.overviewRulerDecorationId);\r\n                deleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);\r\n                this.rangeHighlightDecorationId = undefined;\r\n            }\r\n            // Add new decorations for the range\r\n            const newDecorations = [\r\n                // highlight the entire line on the range\r\n                {\r\n                    range,\r\n                    options: {\r\n                        description: 'quick-access-range-highlight',\r\n                        className: 'rangeHighlight',\r\n                        isWholeLine: true\r\n                    }\r\n                },\r\n                // also add overview ruler highlight\r\n                {\r\n                    range,\r\n                    options: {\r\n                        description: 'quick-access-range-highlight-overview',\r\n                        overviewRuler: {\r\n                            color: themeColorFromId(overviewRulerRangeHighlight),\r\n                            position: OverviewRulerLane.Full\r\n                        }\r\n                    }\r\n                }\r\n            ];\r\n            const [rangeHighlightId, overviewRulerDecorationId] = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\r\n            this.rangeHighlightDecorationId = { rangeHighlightId, overviewRulerDecorationId };\r\n        });\r\n    }\r\n    clearDecorations(editor) {\r\n        const rangeHighlightDecorationId = this.rangeHighlightDecorationId;\r\n        if (rangeHighlightDecorationId) {\r\n            editor.changeDecorations(changeAccessor => {\r\n                changeAccessor.deltaDecorations([\r\n                    rangeHighlightDecorationId.overviewRulerDecorationId,\r\n                    rangeHighlightDecorationId.rangeHighlightId\r\n                ], []);\r\n            });\r\n            this.rangeHighlightDecorationId = undefined;\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { DisposableStore, Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\r\nimport { getCodeEditor } from '../../browser/editorBrowser.js';\r\nexport class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\r\n    constructor() {\r\n        super({ canAcceptInBackground: true });\r\n    }\r\n    provideWithoutTextEditor(picker) {\r\n        const label = localize('cannotRunGotoLine', \"Open a text editor first to go to a line.\");\r\n        picker.items = [{ label }];\r\n        picker.ariaLabel = label;\r\n        return Disposable.None;\r\n    }\r\n    provideWithTextEditor(context, picker, token) {\r\n        const editor = context.editor;\r\n        const disposables = new DisposableStore();\r\n        // Goto line once picked\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                if (!this.isValidLineNumber(editor, item.lineNumber)) {\r\n                    return;\r\n                }\r\n                this.gotoLocation(context, { range: this.toRange(item.lineNumber, item.column), keyMods: picker.keyMods, preserveFocus: event.inBackground });\r\n                if (!event.inBackground) {\r\n                    picker.hide();\r\n                }\r\n            }\r\n        }));\r\n        // React to picker changes\r\n        const updatePickerAndEditor = () => {\r\n            const position = this.parsePosition(editor, picker.value.trim().substr(AbstractGotoLineQuickAccessProvider.PREFIX.length));\r\n            const label = this.getPickLabel(editor, position.lineNumber, position.column);\r\n            // Picker\r\n            picker.items = [{\r\n                    lineNumber: position.lineNumber,\r\n                    column: position.column,\r\n                    label\r\n                }];\r\n            // ARIA Label\r\n            picker.ariaLabel = label;\r\n            // Clear decorations for invalid range\r\n            if (!this.isValidLineNumber(editor, position.lineNumber)) {\r\n                this.clearDecorations(editor);\r\n                return;\r\n            }\r\n            // Reveal\r\n            const range = this.toRange(position.lineNumber, position.column);\r\n            editor.revealRangeInCenter(range, 0 /* Smooth */);\r\n            // Decorate\r\n            this.addDecorations(editor, range);\r\n        };\r\n        updatePickerAndEditor();\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerAndEditor()));\r\n        // Adjust line number visibility as needed\r\n        const codeEditor = getCodeEditor(editor);\r\n        if (codeEditor) {\r\n            const options = codeEditor.getOptions();\r\n            const lineNumbers = options.get(59 /* lineNumbers */);\r\n            if (lineNumbers.renderType === 2 /* Relative */) {\r\n                codeEditor.updateOptions({ lineNumbers: 'on' });\r\n                disposables.add(toDisposable(() => codeEditor.updateOptions({ lineNumbers: 'relative' })));\r\n            }\r\n        }\r\n        return disposables;\r\n    }\r\n    toRange(lineNumber = 1, column = 1) {\r\n        return {\r\n            startLineNumber: lineNumber,\r\n            startColumn: column,\r\n            endLineNumber: lineNumber,\r\n            endColumn: column\r\n        };\r\n    }\r\n    parsePosition(editor, value) {\r\n        // Support line-col formats of `line,col`, `line:col`, `line#col`\r\n        const numbers = value.split(/,|:|#/).map(part => parseInt(part, 10)).filter(part => !isNaN(part));\r\n        const endLine = this.lineCount(editor) + 1;\r\n        return {\r\n            lineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],\r\n            column: numbers[1]\r\n        };\r\n    }\r\n    getPickLabel(editor, lineNumber, column) {\r\n        // Location valid: indicate this as picker label\r\n        if (this.isValidLineNumber(editor, lineNumber)) {\r\n            if (this.isValidColumn(editor, lineNumber, column)) {\r\n                return localize('gotoLineColumnLabel', \"Go to line {0} and character {1}.\", lineNumber, column);\r\n            }\r\n            return localize('gotoLineLabel', \"Go to line {0}.\", lineNumber);\r\n        }\r\n        // Location invalid: show generic label\r\n        const position = editor.getPosition() || { lineNumber: 1, column: 1 };\r\n        const lineCount = this.lineCount(editor);\r\n        if (lineCount > 1) {\r\n            return localize('gotoLineLabelEmptyWithLimit', \"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.\", position.lineNumber, position.column, lineCount);\r\n        }\r\n        return localize('gotoLineLabelEmpty', \"Current Line: {0}, Character: {1}. Type a line number to navigate to.\", position.lineNumber, position.column);\r\n    }\r\n    isValidLineNumber(editor, lineNumber) {\r\n        if (!lineNumber || typeof lineNumber !== 'number') {\r\n            return false;\r\n        }\r\n        return lineNumber > 0 && lineNumber <= this.lineCount(editor);\r\n    }\r\n    isValidColumn(editor, lineNumber, column) {\r\n        if (!column || typeof column !== 'number') {\r\n            return false;\r\n        }\r\n        const model = this.getModel(editor);\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const positionCandidate = { lineNumber, column };\r\n        return model.validatePosition(positionCandidate).equals(positionCandidate);\r\n    }\r\n    lineCount(editor) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.getModel(editor)) === null || _a === void 0 ? void 0 : _a.getLineCount()) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n}\r\nAbstractGotoLineQuickAccessProvider.PREFIX = ':';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/gotoLineQuickAccess.js';\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneGotoLineQuickAccessProvider = class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\r\n    constructor(editorService) {\r\n        super();\r\n        this.editorService = editorService;\r\n        this.onDidActiveTextEditorControlChange = Event.None;\r\n    }\r\n    get activeTextEditorControl() {\r\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\r\n    }\r\n};\r\nStandaloneGotoLineQuickAccessProvider = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], StandaloneGotoLineQuickAccessProvider);\r\nexport { StandaloneGotoLineQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneGotoLineQuickAccessProvider,\r\n    prefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\r\n    helpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, needsEditor: true }]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.gotoLine',\r\n            label: GoToLineNLS.gotoLineActionLabel,\r\n            alias: 'Go to Line/Column...',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */,\r\n                mac: { primary: 256 /* WinCtrl */ | 37 /* KEY_G */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n","import { createMatches as createFuzzyMatches, fuzzyScore } from './filters.js';\r\nimport { sep } from './path.js';\r\nimport { isWindows } from './platform.js';\r\nimport { stripWildcards } from './strings.js';\r\nconst NO_SCORE2 = [undefined, []];\r\nexport function scoreFuzzy2(target, query, patternStart = 0, wordStart = 0) {\r\n    // Score: multiple inputs\r\n    const preparedQuery = query;\r\n    if (preparedQuery.values && preparedQuery.values.length > 1) {\r\n        return doScoreFuzzy2Multiple(target, preparedQuery.values, patternStart, wordStart);\r\n    }\r\n    // Score: single input\r\n    return doScoreFuzzy2Single(target, query, patternStart, wordStart);\r\n}\r\nfunction doScoreFuzzy2Multiple(target, query, patternStart, wordStart) {\r\n    let totalScore = 0;\r\n    const totalMatches = [];\r\n    for (const queryPiece of query) {\r\n        const [score, matches] = doScoreFuzzy2Single(target, queryPiece, patternStart, wordStart);\r\n        if (typeof score !== 'number') {\r\n            // if a single query value does not match, return with\r\n            // no score entirely, we require all queries to match\r\n            return NO_SCORE2;\r\n        }\r\n        totalScore += score;\r\n        totalMatches.push(...matches);\r\n    }\r\n    // if we have a score, ensure that the positions are\r\n    // sorted in ascending order and distinct\r\n    return [totalScore, normalizeMatches(totalMatches)];\r\n}\r\nfunction doScoreFuzzy2Single(target, query, patternStart, wordStart) {\r\n    const score = fuzzyScore(query.original, query.originalLowercase, patternStart, target, target.toLowerCase(), wordStart, true);\r\n    if (!score) {\r\n        return NO_SCORE2;\r\n    }\r\n    return [score[0], createFuzzyMatches(score)];\r\n}\r\nfunction normalizeMatches(matches) {\r\n    // sort matches by start to be able to normalize\r\n    const sortedMatches = matches.sort((matchA, matchB) => {\r\n        return matchA.start - matchB.start;\r\n    });\r\n    // merge matches that overlap\r\n    const normalizedMatches = [];\r\n    let currentMatch = undefined;\r\n    for (const match of sortedMatches) {\r\n        // if we have no current match or the matches\r\n        // do not overlap, we take it as is and remember\r\n        // it for future merging\r\n        if (!currentMatch || !matchOverlaps(currentMatch, match)) {\r\n            currentMatch = match;\r\n            normalizedMatches.push(match);\r\n        }\r\n        // otherwise we merge the matches\r\n        else {\r\n            currentMatch.start = Math.min(currentMatch.start, match.start);\r\n            currentMatch.end = Math.max(currentMatch.end, match.end);\r\n        }\r\n    }\r\n    return normalizedMatches;\r\n}\r\nfunction matchOverlaps(matchA, matchB) {\r\n    if (matchA.end < matchB.start) {\r\n        return false; // A ends before B starts\r\n    }\r\n    if (matchB.end < matchA.start) {\r\n        return false; // B ends before A starts\r\n    }\r\n    return true;\r\n}\r\n/*\r\n * If a query is wrapped in quotes, the user does not want to\r\n * use fuzzy search for this query.\r\n */\r\nfunction queryExpectsExactMatch(query) {\r\n    return query.startsWith('\"') && query.endsWith('\"');\r\n}\r\n/**\r\n * Helper function to prepare a search value for scoring by removing unwanted characters\r\n * and allowing to score on multiple pieces separated by whitespace character.\r\n */\r\nconst MULTIPLE_QUERY_VALUES_SEPARATOR = ' ';\r\nexport function prepareQuery(original) {\r\n    if (typeof original !== 'string') {\r\n        original = '';\r\n    }\r\n    const originalLowercase = original.toLowerCase();\r\n    const { pathNormalized, normalized, normalizedLowercase } = normalizeQuery(original);\r\n    const containsPathSeparator = pathNormalized.indexOf(sep) >= 0;\r\n    const expectExactMatch = queryExpectsExactMatch(original);\r\n    let values = undefined;\r\n    const originalSplit = original.split(MULTIPLE_QUERY_VALUES_SEPARATOR);\r\n    if (originalSplit.length > 1) {\r\n        for (const originalPiece of originalSplit) {\r\n            const expectExactMatchPiece = queryExpectsExactMatch(originalPiece);\r\n            const { pathNormalized: pathNormalizedPiece, normalized: normalizedPiece, normalizedLowercase: normalizedLowercasePiece } = normalizeQuery(originalPiece);\r\n            if (normalizedPiece) {\r\n                if (!values) {\r\n                    values = [];\r\n                }\r\n                values.push({\r\n                    original: originalPiece,\r\n                    originalLowercase: originalPiece.toLowerCase(),\r\n                    pathNormalized: pathNormalizedPiece,\r\n                    normalized: normalizedPiece,\r\n                    normalizedLowercase: normalizedLowercasePiece,\r\n                    expectContiguousMatch: expectExactMatchPiece\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return { original, originalLowercase, pathNormalized, normalized, normalizedLowercase, values, containsPathSeparator, expectContiguousMatch: expectExactMatch };\r\n}\r\nfunction normalizeQuery(original) {\r\n    let pathNormalized;\r\n    if (isWindows) {\r\n        pathNormalized = original.replace(/\\//g, sep); // Help Windows users to search for paths when using slash\r\n    }\r\n    else {\r\n        pathNormalized = original.replace(/\\\\/g, sep); // Help macOS/Linux users to search for paths when using backslash\r\n    }\r\n    // we remove quotes here because quotes are used for exact match search\r\n    const normalized = stripWildcards(pathNormalized).replace(/\\s|\"/g, '');\r\n    return {\r\n        pathNormalized,\r\n        normalized,\r\n        normalizedLowercase: normalized.toLowerCase()\r\n    };\r\n}\r\nexport function pieceToQuery(arg1) {\r\n    if (Array.isArray(arg1)) {\r\n        return prepareQuery(arg1.map(piece => piece.original).join(MULTIPLE_QUERY_VALUES_SEPARATOR));\r\n    }\r\n    return prepareQuery(arg1.original);\r\n}\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore, Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\r\nimport { SymbolKinds, DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { OutlineModel } from '../documentSymbols/outlineModel.js';\r\nimport { trim, format } from '../../../base/common/strings.js';\r\nimport { prepareQuery, pieceToQuery, scoreFuzzy2 } from '../../../base/common/fuzzyScorer.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport class AbstractGotoSymbolQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\r\n    constructor(options = Object.create(null)) {\r\n        super(options);\r\n        this.options = options;\r\n        this.options.canAcceptInBackground = true;\r\n    }\r\n    provideWithoutTextEditor(picker) {\r\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutEditor', \"To go to a symbol, first open a text editor with symbol information.\"));\r\n        return Disposable.None;\r\n    }\r\n    provideWithTextEditor(context, picker, token) {\r\n        const editor = context.editor;\r\n        const model = this.getModel(editor);\r\n        if (!model) {\r\n            return Disposable.None;\r\n        }\r\n        // Provide symbols from model if available in registry\r\n        if (DocumentSymbolProviderRegistry.has(model)) {\r\n            return this.doProvideWithEditorSymbols(context, model, picker, token);\r\n        }\r\n        // Otherwise show an entry for a model without registry\r\n        // But give a chance to resolve the symbols at a later\r\n        // point if possible\r\n        return this.doProvideWithoutEditorSymbols(context, model, picker, token);\r\n    }\r\n    doProvideWithoutEditorSymbols(context, model, picker, token) {\r\n        const disposables = new DisposableStore();\r\n        // Generic pick for not having any symbol information\r\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutSymbolProvider', \"The active text editor does not provide symbol information.\"));\r\n        // Wait for changes to the registry and see if eventually\r\n        // we do get symbols. This can happen if the picker is opened\r\n        // very early after the model has loaded but before the\r\n        // language registry is ready.\r\n        // https://github.com/microsoft/vscode/issues/70607\r\n        (() => __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield this.waitForLanguageSymbolRegistry(model, disposables);\r\n            if (!result || token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            disposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));\r\n        }))();\r\n        return disposables;\r\n    }\r\n    provideLabelPick(picker, label) {\r\n        picker.items = [{ label, index: 0, kind: 14 /* String */ }];\r\n        picker.ariaLabel = label;\r\n    }\r\n    waitForLanguageSymbolRegistry(model, disposables) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (DocumentSymbolProviderRegistry.has(model)) {\r\n                return true;\r\n            }\r\n            let symbolProviderRegistryPromiseResolve;\r\n            const symbolProviderRegistryPromise = new Promise(resolve => symbolProviderRegistryPromiseResolve = resolve);\r\n            // Resolve promise when registry knows model\r\n            const symbolProviderListener = disposables.add(DocumentSymbolProviderRegistry.onDidChange(() => {\r\n                if (DocumentSymbolProviderRegistry.has(model)) {\r\n                    symbolProviderListener.dispose();\r\n                    symbolProviderRegistryPromiseResolve(true);\r\n                }\r\n            }));\r\n            // Resolve promise when we get disposed too\r\n            disposables.add(toDisposable(() => symbolProviderRegistryPromiseResolve(false)));\r\n            return symbolProviderRegistryPromise;\r\n        });\r\n    }\r\n    doProvideWithEditorSymbols(context, model, picker, token) {\r\n        const editor = context.editor;\r\n        const disposables = new DisposableStore();\r\n        // Goto symbol once picked\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (item && item.range) {\r\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, preserveFocus: event.inBackground });\r\n                if (!event.inBackground) {\r\n                    picker.hide();\r\n                }\r\n            }\r\n        }));\r\n        // Goto symbol side by side if enabled\r\n        disposables.add(picker.onDidTriggerItemButton(({ item }) => {\r\n            if (item && item.range) {\r\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, forceSideBySide: true });\r\n                picker.hide();\r\n            }\r\n        }));\r\n        // Resolve symbols from document once and reuse this\r\n        // request for all filtering and typing then on\r\n        const symbolsPromise = this.getDocumentSymbols(model, token);\r\n        // Set initial picks and update on type\r\n        let picksCts = undefined;\r\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\r\n            // Cancel any previous ask for picks and busy\r\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\r\n            picker.busy = false;\r\n            // Create new cancellation source for this run\r\n            picksCts = new CancellationTokenSource(token);\r\n            // Collect symbol picks\r\n            picker.busy = true;\r\n            try {\r\n                const query = prepareQuery(picker.value.substr(AbstractGotoSymbolQuickAccessProvider.PREFIX.length).trim());\r\n                const items = yield this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token);\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                if (items.length > 0) {\r\n                    picker.items = items;\r\n                }\r\n                else {\r\n                    if (query.original.length > 0) {\r\n                        this.provideLabelPick(picker, localize('noMatchingSymbolResults', \"No matching editor symbols\"));\r\n                    }\r\n                    else {\r\n                        this.provideLabelPick(picker, localize('noSymbolResults', \"No editor symbols\"));\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                if (!token.isCancellationRequested) {\r\n                    picker.busy = false;\r\n                }\r\n            }\r\n        });\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\r\n        updatePickerItems();\r\n        // Reveal and decorate when active item changes\r\n        // However, ignore the very first event so that\r\n        // opening the picker is not immediately revealing\r\n        // and decorating the first entry.\r\n        let ignoreFirstActiveEvent = true;\r\n        disposables.add(picker.onDidChangeActive(() => {\r\n            const [item] = picker.activeItems;\r\n            if (item && item.range) {\r\n                if (ignoreFirstActiveEvent) {\r\n                    ignoreFirstActiveEvent = false;\r\n                    return;\r\n                }\r\n                // Reveal\r\n                editor.revealRangeInCenter(item.range.selection, 0 /* Smooth */);\r\n                // Decorate\r\n                this.addDecorations(editor, item.range.decoration);\r\n            }\r\n        }));\r\n        return disposables;\r\n    }\r\n    doGetSymbolPicks(symbolsPromise, query, options, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const symbols = yield symbolsPromise;\r\n            if (token.isCancellationRequested) {\r\n                return [];\r\n            }\r\n            const filterBySymbolKind = query.original.indexOf(AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX) === 0;\r\n            const filterPos = filterBySymbolKind ? 1 : 0;\r\n            // Split between symbol and container query\r\n            let symbolQuery;\r\n            let containerQuery;\r\n            if (query.values && query.values.length > 1) {\r\n                symbolQuery = pieceToQuery(query.values[0]); // symbol: only match on first part\r\n                containerQuery = pieceToQuery(query.values.slice(1)); // container: match on all but first parts\r\n            }\r\n            else {\r\n                symbolQuery = query;\r\n            }\r\n            // Convert to symbol picks and apply filtering\r\n            const filteredSymbolPicks = [];\r\n            for (let index = 0; index < symbols.length; index++) {\r\n                const symbol = symbols[index];\r\n                const symbolLabel = trim(symbol.name);\r\n                const symbolLabelWithIcon = `$(symbol-${SymbolKinds.toString(symbol.kind) || 'property'}) ${symbolLabel}`;\r\n                const symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\r\n                let containerLabel = symbol.containerName;\r\n                if (options === null || options === void 0 ? void 0 : options.extraContainerLabel) {\r\n                    if (containerLabel) {\r\n                        containerLabel = `${options.extraContainerLabel} • ${containerLabel}`;\r\n                    }\r\n                    else {\r\n                        containerLabel = options.extraContainerLabel;\r\n                    }\r\n                }\r\n                let symbolScore = undefined;\r\n                let symbolMatches = undefined;\r\n                let containerScore = undefined;\r\n                let containerMatches = undefined;\r\n                if (query.original.length > filterPos) {\r\n                    // First: try to score on the entire query, it is possible that\r\n                    // the symbol matches perfectly (e.g. searching for \"change log\"\r\n                    // can be a match on a markdown symbol \"change log\"). In that\r\n                    // case we want to skip the container query altogether.\r\n                    let skipContainerQuery = false;\r\n                    if (symbolQuery !== query) {\r\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, Object.assign(Object.assign({}, query), { values: undefined /* disable multi-query support */ }), filterPos, symbolLabelIconOffset);\r\n                        if (typeof symbolScore === 'number') {\r\n                            skipContainerQuery = true; // since we consumed the query, skip any container matching\r\n                        }\r\n                    }\r\n                    // Otherwise: score on the symbol query and match on the container later\r\n                    if (typeof symbolScore !== 'number') {\r\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);\r\n                        if (typeof symbolScore !== 'number') {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // Score by container if specified\r\n                    if (!skipContainerQuery && containerQuery) {\r\n                        if (containerLabel && containerQuery.original.length > 0) {\r\n                            [containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\r\n                        }\r\n                        if (typeof containerScore !== 'number') {\r\n                            continue;\r\n                        }\r\n                        if (typeof symbolScore === 'number') {\r\n                            symbolScore += containerScore; // boost symbolScore by containerScore\r\n                        }\r\n                    }\r\n                }\r\n                const deprecated = symbol.tags && symbol.tags.indexOf(1 /* Deprecated */) >= 0;\r\n                filteredSymbolPicks.push({\r\n                    index,\r\n                    kind: symbol.kind,\r\n                    score: symbolScore,\r\n                    label: symbolLabelWithIcon,\r\n                    ariaLabel: symbolLabel,\r\n                    description: containerLabel,\r\n                    highlights: deprecated ? undefined : {\r\n                        label: symbolMatches,\r\n                        description: containerMatches\r\n                    },\r\n                    range: {\r\n                        selection: Range.collapseToStart(symbol.selectionRange),\r\n                        decoration: symbol.range\r\n                    },\r\n                    strikethrough: deprecated,\r\n                    buttons: (() => {\r\n                        var _a, _b;\r\n                        const openSideBySideDirection = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.openSideBySideDirection) ? (_b = this.options) === null || _b === void 0 ? void 0 : _b.openSideBySideDirection() : undefined;\r\n                        if (!openSideBySideDirection) {\r\n                            return undefined;\r\n                        }\r\n                        return [\r\n                            {\r\n                                iconClass: openSideBySideDirection === 'right' ? Codicon.splitHorizontal.classNames : Codicon.splitVertical.classNames,\r\n                                tooltip: openSideBySideDirection === 'right' ? localize('openToSide', \"Open to the Side\") : localize('openToBottom', \"Open to the Bottom\")\r\n                            }\r\n                        ];\r\n                    })()\r\n                });\r\n            }\r\n            // Sort by score\r\n            const sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB) => filterBySymbolKind ?\r\n                this.compareByKindAndScore(symbolA, symbolB) :\r\n                this.compareByScore(symbolA, symbolB));\r\n            // Add separator for types\r\n            // - @  only total number of symbols\r\n            // - @: grouped by symbol kind\r\n            let symbolPicks = [];\r\n            if (filterBySymbolKind) {\r\n                let lastSymbolKind = undefined;\r\n                let lastSeparator = undefined;\r\n                let lastSymbolKindCounter = 0;\r\n                function updateLastSeparatorLabel() {\r\n                    if (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) {\r\n                        lastSeparator.label = format(NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);\r\n                    }\r\n                }\r\n                for (const symbolPick of sortedFilteredSymbolPicks) {\r\n                    // Found new kind\r\n                    if (lastSymbolKind !== symbolPick.kind) {\r\n                        // Update last separator with number of symbols we found for kind\r\n                        updateLastSeparatorLabel();\r\n                        lastSymbolKind = symbolPick.kind;\r\n                        lastSymbolKindCounter = 1;\r\n                        // Add new separator for new kind\r\n                        lastSeparator = { type: 'separator' };\r\n                        symbolPicks.push(lastSeparator);\r\n                    }\r\n                    // Existing kind, keep counting\r\n                    else {\r\n                        lastSymbolKindCounter++;\r\n                    }\r\n                    // Add to final result\r\n                    symbolPicks.push(symbolPick);\r\n                }\r\n                // Update last separator with number of symbols we found for kind\r\n                updateLastSeparatorLabel();\r\n            }\r\n            else if (sortedFilteredSymbolPicks.length > 0) {\r\n                symbolPicks = [\r\n                    { label: localize('symbols', \"symbols ({0})\", filteredSymbolPicks.length), type: 'separator' },\r\n                    ...sortedFilteredSymbolPicks\r\n                ];\r\n            }\r\n            return symbolPicks;\r\n        });\r\n    }\r\n    compareByScore(symbolA, symbolB) {\r\n        if (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') {\r\n            return 1;\r\n        }\r\n        else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') {\r\n            return -1;\r\n        }\r\n        if (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\r\n            if (symbolA.score > symbolB.score) {\r\n                return -1;\r\n            }\r\n            else if (symbolA.score < symbolB.score) {\r\n                return 1;\r\n            }\r\n        }\r\n        if (symbolA.index < symbolB.index) {\r\n            return -1;\r\n        }\r\n        else if (symbolA.index > symbolB.index) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    compareByKindAndScore(symbolA, symbolB) {\r\n        const kindA = NLS_SYMBOL_KIND_CACHE[symbolA.kind] || FALLBACK_NLS_SYMBOL_KIND;\r\n        const kindB = NLS_SYMBOL_KIND_CACHE[symbolB.kind] || FALLBACK_NLS_SYMBOL_KIND;\r\n        // Sort by type first if scoped search\r\n        const result = kindA.localeCompare(kindB);\r\n        if (result === 0) {\r\n            return this.compareByScore(symbolA, symbolB);\r\n        }\r\n        return result;\r\n    }\r\n    getDocumentSymbols(document, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const model = yield OutlineModel.create(document, token);\r\n            return token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();\r\n        });\r\n    }\r\n}\r\nAbstractGotoSymbolQuickAccessProvider.PREFIX = '@';\r\nAbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX = ':';\r\nAbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY = `${AbstractGotoSymbolQuickAccessProvider.PREFIX}${AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX}`;\r\n// #region NLS Helpers\r\nconst FALLBACK_NLS_SYMBOL_KIND = localize('property', \"properties ({0})\");\r\nconst NLS_SYMBOL_KIND_CACHE = {\r\n    [5 /* Method */]: localize('method', \"methods ({0})\"),\r\n    [11 /* Function */]: localize('function', \"functions ({0})\"),\r\n    [8 /* Constructor */]: localize('_constructor', \"constructors ({0})\"),\r\n    [12 /* Variable */]: localize('variable', \"variables ({0})\"),\r\n    [4 /* Class */]: localize('class', \"classes ({0})\"),\r\n    [22 /* Struct */]: localize('struct', \"structs ({0})\"),\r\n    [23 /* Event */]: localize('event', \"events ({0})\"),\r\n    [24 /* Operator */]: localize('operator', \"operators ({0})\"),\r\n    [10 /* Interface */]: localize('interface', \"interfaces ({0})\"),\r\n    [2 /* Namespace */]: localize('namespace', \"namespaces ({0})\"),\r\n    [3 /* Package */]: localize('package', \"packages ({0})\"),\r\n    [25 /* TypeParameter */]: localize('typeParameter', \"type parameters ({0})\"),\r\n    [1 /* Module */]: localize('modules', \"modules ({0})\"),\r\n    [6 /* Property */]: localize('property', \"properties ({0})\"),\r\n    [9 /* Enum */]: localize('enum', \"enumerations ({0})\"),\r\n    [21 /* EnumMember */]: localize('enumMember', \"enumeration members ({0})\"),\r\n    [14 /* String */]: localize('string', \"strings ({0})\"),\r\n    [0 /* File */]: localize('file', \"files ({0})\"),\r\n    [17 /* Array */]: localize('array', \"arrays ({0})\"),\r\n    [15 /* Number */]: localize('number', \"numbers ({0})\"),\r\n    [16 /* Boolean */]: localize('boolean', \"booleans ({0})\"),\r\n    [18 /* Object */]: localize('object', \"objects ({0})\"),\r\n    [19 /* Key */]: localize('key', \"keys ({0})\"),\r\n    [7 /* Field */]: localize('field', \"fields ({0})\"),\r\n    [13 /* Constant */]: localize('constant', \"constants ({0})\")\r\n};\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport '../../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../../../contrib/symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport { AbstractGotoSymbolQuickAccessProvider } from '../../../contrib/quickAccess/gotoSymbolQuickAccess.js';\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { QuickOutlineNLS } from '../../../common/standaloneStrings.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneGotoSymbolQuickAccessProvider = class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\r\n    constructor(editorService) {\r\n        super();\r\n        this.editorService = editorService;\r\n        this.onDidActiveTextEditorControlChange = Event.None;\r\n    }\r\n    get activeTextEditorControl() {\r\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\r\n    }\r\n};\r\nStandaloneGotoSymbolQuickAccessProvider = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], StandaloneGotoSymbolQuickAccessProvider);\r\nexport { StandaloneGotoSymbolQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneGotoSymbolQuickAccessProvider,\r\n    prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\r\n    helpEntries: [\r\n        { description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, needsEditor: true },\r\n        { description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY, needsEditor: true }\r\n    ]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.quickOutline',\r\n            label: QuickOutlineNLS.quickOutlineActionLabel,\r\n            alias: 'Go to Symbol...',\r\n            precondition: EditorContextKeys.hasDocumentSymbolProvider,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as arrays from './arrays.js';\r\nimport * as types from './types.js';\r\nimport * as nls from '../../nls.js';\r\nfunction exceptionToErrorMessage(exception, verbose) {\r\n    if (verbose && (exception.stack || exception.stacktrace)) {\r\n        return nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\r\n    }\r\n    return detectSystemErrorMessage(exception);\r\n}\r\nfunction stackToString(stack) {\r\n    if (Array.isArray(stack)) {\r\n        return stack.join('\\n');\r\n    }\r\n    return stack;\r\n}\r\nfunction detectSystemErrorMessage(exception) {\r\n    // See https://nodejs.org/api/errors.html#errors_class_system_error\r\n    if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\r\n        return nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\r\n    }\r\n    return exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n}\r\n/**\r\n * Tries to generate a human readable error message out of the error. If the verbose parameter\r\n * is set to true, the error message will include stacktrace details if provided.\r\n *\r\n * @returns A string containing the error message.\r\n */\r\nexport function toErrorMessage(error = null, verbose = false) {\r\n    if (!error) {\r\n        return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n    }\r\n    if (Array.isArray(error)) {\r\n        const errors = arrays.coalesce(error);\r\n        const msg = toErrorMessage(errors[0], verbose);\r\n        if (errors.length > 1) {\r\n            return nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\r\n        }\r\n        return msg;\r\n    }\r\n    if (types.isString(error)) {\r\n        return error;\r\n    }\r\n    if (error.detail) {\r\n        const detail = error.detail;\r\n        if (detail.error) {\r\n            return exceptionToErrorMessage(detail.error, verbose);\r\n        }\r\n        if (detail.exception) {\r\n            return exceptionToErrorMessage(detail.exception, verbose);\r\n        }\r\n    }\r\n    if (error.stack) {\r\n        return exceptionToErrorMessage(error, verbose);\r\n    }\r\n    if (error.message) {\r\n        return error.message;\r\n    }\r\n    return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { timeout } from '../../../base/common/async.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nexport var TriggerAction;\r\n(function (TriggerAction) {\r\n    /**\r\n     * Do nothing after the button was clicked.\r\n     */\r\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\r\n    /**\r\n     * Close the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\r\n    /**\r\n     * Update the results of the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\r\n    /**\r\n     * Remove the item from the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\r\n})(TriggerAction || (TriggerAction = {}));\r\nfunction isPicksWithActive(obj) {\r\n    const candidate = obj;\r\n    return Array.isArray(candidate.items);\r\n}\r\nfunction isFastAndSlowPicks(obj) {\r\n    const candidate = obj;\r\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\r\n}\r\nexport class PickerQuickAccessProvider extends Disposable {\r\n    constructor(prefix, options) {\r\n        super();\r\n        this.prefix = prefix;\r\n        this.options = options;\r\n    }\r\n    provide(picker, token) {\r\n        var _a;\r\n        const disposables = new DisposableStore();\r\n        // Apply options if any\r\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\r\n        // Disable filtering & sorting, we control the results\r\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\r\n        // Set initial picks and update on type\r\n        let picksCts = undefined;\r\n        const picksDisposable = disposables.add(new MutableDisposable());\r\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\r\n            const picksDisposables = picksDisposable.value = new DisposableStore();\r\n            // Cancel any previous ask for picks and busy\r\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\r\n            picker.busy = false;\r\n            // Create new cancellation source for this run\r\n            picksCts = new CancellationTokenSource(token);\r\n            // Collect picks and support both long running and short or combined\r\n            const picksToken = picksCts.token;\r\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\r\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\r\n            const applyPicks = (picks, skipEmpty) => {\r\n                var _a;\r\n                let items;\r\n                let activeItem = undefined;\r\n                if (isPicksWithActive(picks)) {\r\n                    items = picks.items;\r\n                    activeItem = picks.active;\r\n                }\r\n                else {\r\n                    items = picks;\r\n                }\r\n                if (items.length === 0) {\r\n                    if (skipEmpty) {\r\n                        return false;\r\n                    }\r\n                    if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\r\n                        items = [this.options.noResultsPick];\r\n                    }\r\n                }\r\n                picker.items = items;\r\n                if (activeItem) {\r\n                    picker.activeItems = [activeItem];\r\n                }\r\n                return true;\r\n            };\r\n            // No Picks\r\n            if (providedPicks === null) {\r\n                // Ignore\r\n            }\r\n            // Fast and Slow Picks\r\n            else if (isFastAndSlowPicks(providedPicks)) {\r\n                let fastPicksApplied = false;\r\n                let slowPicksApplied = false;\r\n                yield Promise.all([\r\n                    // Fast Picks: to reduce amount of flicker, we race against\r\n                    // the slow picks over 500ms and then set the fast picks.\r\n                    // If the slow picks are faster, we reduce the flicker by\r\n                    // only setting the items once.\r\n                    (() => __awaiter(this, void 0, void 0, function* () {\r\n                        yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\r\n                        if (picksToken.isCancellationRequested) {\r\n                            return;\r\n                        }\r\n                        if (!slowPicksApplied) {\r\n                            fastPicksApplied = applyPicks(providedPicks.picks, true /* skip over empty to reduce flicker */);\r\n                        }\r\n                    }))(),\r\n                    // Slow Picks: we await the slow picks and then set them at\r\n                    // once together with the fast picks, but only if we actually\r\n                    // have additional results.\r\n                    (() => __awaiter(this, void 0, void 0, function* () {\r\n                        picker.busy = true;\r\n                        try {\r\n                            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\r\n                            if (picksToken.isCancellationRequested) {\r\n                                return;\r\n                            }\r\n                            let picks;\r\n                            let activePick = undefined;\r\n                            if (isPicksWithActive(providedPicks.picks)) {\r\n                                picks = providedPicks.picks.items;\r\n                                activePick = providedPicks.picks.active;\r\n                            }\r\n                            else {\r\n                                picks = providedPicks.picks;\r\n                            }\r\n                            let additionalPicks;\r\n                            let additionalActivePick = undefined;\r\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\r\n                                additionalPicks = awaitedAdditionalPicks.items;\r\n                                additionalActivePick = awaitedAdditionalPicks.active;\r\n                            }\r\n                            else {\r\n                                additionalPicks = awaitedAdditionalPicks;\r\n                            }\r\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\r\n                                // If we do not have any activePick or additionalActivePick\r\n                                // we try to preserve the currently active pick from the\r\n                                // fast results. This fixes an issue where the user might\r\n                                // have made a pick active before the additional results\r\n                                // kick in.\r\n                                // See https://github.com/microsoft/vscode/issues/102480\r\n                                let fallbackActivePick = undefined;\r\n                                if (!activePick && !additionalActivePick) {\r\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\r\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\r\n                                        fallbackActivePick = fallbackActivePickCandidate;\r\n                                    }\r\n                                }\r\n                                applyPicks({\r\n                                    items: [...picks, ...additionalPicks],\r\n                                    active: activePick || additionalActivePick || fallbackActivePick\r\n                                });\r\n                            }\r\n                        }\r\n                        finally {\r\n                            if (!picksToken.isCancellationRequested) {\r\n                                picker.busy = false;\r\n                            }\r\n                            slowPicksApplied = true;\r\n                        }\r\n                    }))()\r\n                ]);\r\n            }\r\n            // Fast Picks\r\n            else if (!(providedPicks instanceof Promise)) {\r\n                applyPicks(providedPicks);\r\n            }\r\n            // Slow Picks\r\n            else {\r\n                picker.busy = true;\r\n                try {\r\n                    const awaitedPicks = yield providedPicks;\r\n                    if (picksToken.isCancellationRequested) {\r\n                        return;\r\n                    }\r\n                    applyPicks(awaitedPicks);\r\n                }\r\n                finally {\r\n                    if (!picksToken.isCancellationRequested) {\r\n                        picker.busy = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\r\n        updatePickerItems();\r\n        // Accept the pick on accept and hide picker\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\r\n                if (!event.inBackground) {\r\n                    picker.hide(); // hide picker unless we accept in background\r\n                }\r\n                item.accept(picker.keyMods, event);\r\n            }\r\n        }));\r\n        // Trigger the pick with button index if button triggered\r\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b, _c;\r\n            if (typeof item.trigger === 'function') {\r\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\r\n                if (buttonIndex >= 0) {\r\n                    const result = item.trigger(buttonIndex, picker.keyMods);\r\n                    const action = (typeof result === 'number') ? result : yield result;\r\n                    if (token.isCancellationRequested) {\r\n                        return;\r\n                    }\r\n                    switch (action) {\r\n                        case TriggerAction.NO_ACTION:\r\n                            break;\r\n                        case TriggerAction.CLOSE_PICKER:\r\n                            picker.hide();\r\n                            break;\r\n                        case TriggerAction.REFRESH_PICKER:\r\n                            updatePickerItems();\r\n                            break;\r\n                        case TriggerAction.REMOVE_ITEM:\r\n                            const index = picker.items.indexOf(item);\r\n                            if (index !== -1) {\r\n                                const items = picker.items.slice();\r\n                                items.splice(index, 1);\r\n                                picker.items = items;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        })));\r\n        return disposables;\r\n    }\r\n}\r\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport { matchesContiguousSubString, matchesPrefix, matchesWords, or } from '../../../base/common/filters.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { withNullAsUndefined } from '../../../base/common/types.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { ICommandService } from '../../commands/common/commands.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { PickerQuickAccessProvider } from './pickerQuickAccess.js';\r\nimport { IStorageService } from '../../storage/common/storage.js';\r\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\r\nlet AbstractCommandsQuickAccessProvider = class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider {\r\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super(AbstractCommandsQuickAccessProvider.PREFIX, options);\r\n        this.instantiationService = instantiationService;\r\n        this.keybindingService = keybindingService;\r\n        this.commandService = commandService;\r\n        this.telemetryService = telemetryService;\r\n        this.dialogService = dialogService;\r\n        this.commandsHistory = this._register(this.instantiationService.createInstance(CommandsHistory));\r\n        this.options = options;\r\n    }\r\n    _getPicks(filter, disposables, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Ask subclass for all command picks\r\n            const allCommandPicks = yield this.getCommandPicks(disposables, token);\r\n            if (token.isCancellationRequested) {\r\n                return [];\r\n            }\r\n            // Filter\r\n            const filteredCommandPicks = [];\r\n            for (const commandPick of allCommandPicks) {\r\n                const labelHighlights = withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.label));\r\n                const aliasHighlights = commandPick.commandAlias ? withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.commandAlias)) : undefined;\r\n                // Add if matching in label or alias\r\n                if (labelHighlights || aliasHighlights) {\r\n                    commandPick.highlights = {\r\n                        label: labelHighlights,\r\n                        detail: this.options.showAlias ? aliasHighlights : undefined\r\n                    };\r\n                    filteredCommandPicks.push(commandPick);\r\n                }\r\n                // Also add if we have a 100% command ID match\r\n                else if (filter === commandPick.commandId) {\r\n                    filteredCommandPicks.push(commandPick);\r\n                }\r\n            }\r\n            // Add description to commands that have duplicate labels\r\n            const mapLabelToCommand = new Map();\r\n            for (const commandPick of filteredCommandPicks) {\r\n                const existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\r\n                if (existingCommandForLabel) {\r\n                    commandPick.description = commandPick.commandId;\r\n                    existingCommandForLabel.description = existingCommandForLabel.commandId;\r\n                }\r\n                else {\r\n                    mapLabelToCommand.set(commandPick.label, commandPick);\r\n                }\r\n            }\r\n            // Sort by MRU order and fallback to name otherwise\r\n            filteredCommandPicks.sort((commandPickA, commandPickB) => {\r\n                const commandACounter = this.commandsHistory.peek(commandPickA.commandId);\r\n                const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\r\n                if (commandACounter && commandBCounter) {\r\n                    return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\r\n                }\r\n                if (commandACounter) {\r\n                    return -1; // first command was used, so it wins over the non used one\r\n                }\r\n                if (commandBCounter) {\r\n                    return 1; // other command was used so it wins over the command\r\n                }\r\n                // both commands were never used, so we sort by name\r\n                return commandPickA.label.localeCompare(commandPickB.label);\r\n            });\r\n            const commandPicks = [];\r\n            let addSeparator = false;\r\n            for (let i = 0; i < filteredCommandPicks.length; i++) {\r\n                const commandPick = filteredCommandPicks[i];\r\n                const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\r\n                const ariaLabel = keybinding ?\r\n                    localize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\r\n                    commandPick.label;\r\n                // Separator: recently used\r\n                if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\r\n                    commandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\r\n                    addSeparator = true;\r\n                }\r\n                // Separator: other commands\r\n                if (i !== 0 && addSeparator && !this.commandsHistory.peek(commandPick.commandId)) {\r\n                    commandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\r\n                    addSeparator = false; // only once\r\n                }\r\n                // Command\r\n                commandPicks.push(Object.assign(Object.assign({}, commandPick), { ariaLabel, detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined, keybinding, accept: () => __awaiter(this, void 0, void 0, function* () {\r\n                        // Add to history\r\n                        this.commandsHistory.push(commandPick.commandId);\r\n                        // Telementry\r\n                        this.telemetryService.publicLog2('workbenchActionExecuted', {\r\n                            id: commandPick.commandId,\r\n                            from: 'quick open'\r\n                        });\r\n                        // Run\r\n                        try {\r\n                            yield this.commandService.executeCommand(commandPick.commandId);\r\n                        }\r\n                        catch (error) {\r\n                            if (!isPromiseCanceledError(error)) {\r\n                                this.dialogService.show(Severity.Error, localize('canNotRun', \"Command '{0}' resulted in an error ({1})\", commandPick.label, toErrorMessage(error)));\r\n                            }\r\n                        }\r\n                    }) }));\r\n            }\r\n            return commandPicks;\r\n        });\r\n    }\r\n};\r\nAbstractCommandsQuickAccessProvider.PREFIX = '>';\r\nAbstractCommandsQuickAccessProvider.WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString);\r\nAbstractCommandsQuickAccessProvider = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, ICommandService),\r\n    __param(4, ITelemetryService),\r\n    __param(5, IDialogService)\r\n], AbstractCommandsQuickAccessProvider);\r\nexport { AbstractCommandsQuickAccessProvider };\r\nlet CommandsHistory = class CommandsHistory extends Disposable {\r\n    constructor(storageService, configurationService) {\r\n        super();\r\n        this.storageService = storageService;\r\n        this.configurationService = configurationService;\r\n        this.configuredCommandsHistoryLength = 0;\r\n        this.updateConfiguration();\r\n        this.load();\r\n        this.registerListeners();\r\n    }\r\n    registerListeners() {\r\n        this._register(this.configurationService.onDidChangeConfiguration(() => this.updateConfiguration()));\r\n    }\r\n    updateConfiguration() {\r\n        this.configuredCommandsHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(this.configurationService);\r\n        if (CommandsHistory.cache && CommandsHistory.cache.limit !== this.configuredCommandsHistoryLength) {\r\n            CommandsHistory.cache.limit = this.configuredCommandsHistoryLength;\r\n            CommandsHistory.saveState(this.storageService);\r\n        }\r\n    }\r\n    load() {\r\n        const raw = this.storageService.get(CommandsHistory.PREF_KEY_CACHE, 0 /* GLOBAL */);\r\n        let serializedCache;\r\n        if (raw) {\r\n            try {\r\n                serializedCache = JSON.parse(raw);\r\n            }\r\n            catch (error) {\r\n                // invalid data\r\n            }\r\n        }\r\n        const cache = CommandsHistory.cache = new LRUCache(this.configuredCommandsHistoryLength, 1);\r\n        if (serializedCache) {\r\n            let entries;\r\n            if (serializedCache.usesLRU) {\r\n                entries = serializedCache.entries;\r\n            }\r\n            else {\r\n                entries = serializedCache.entries.sort((a, b) => a.value - b.value);\r\n            }\r\n            entries.forEach(entry => cache.set(entry.key, entry.value));\r\n        }\r\n        CommandsHistory.counter = this.storageService.getNumber(CommandsHistory.PREF_KEY_COUNTER, 0 /* GLOBAL */, CommandsHistory.counter);\r\n    }\r\n    push(commandId) {\r\n        if (!CommandsHistory.cache) {\r\n            return;\r\n        }\r\n        CommandsHistory.cache.set(commandId, CommandsHistory.counter++); // set counter to command\r\n        CommandsHistory.saveState(this.storageService);\r\n    }\r\n    peek(commandId) {\r\n        var _a;\r\n        return (_a = CommandsHistory.cache) === null || _a === void 0 ? void 0 : _a.peek(commandId);\r\n    }\r\n    static saveState(storageService) {\r\n        if (!CommandsHistory.cache) {\r\n            return;\r\n        }\r\n        const serializedCache = { usesLRU: true, entries: [] };\r\n        CommandsHistory.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\r\n        storageService.store(CommandsHistory.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* GLOBAL */, 0 /* USER */);\r\n        storageService.store(CommandsHistory.PREF_KEY_COUNTER, CommandsHistory.counter, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    static getConfiguredCommandHistoryLength(configurationService) {\r\n        var _a, _b;\r\n        const config = configurationService.getValue();\r\n        const configuredCommandHistoryLength = (_b = (_a = config.workbench) === null || _a === void 0 ? void 0 : _a.commandPalette) === null || _b === void 0 ? void 0 : _b.history;\r\n        if (typeof configuredCommandHistoryLength === 'number') {\r\n            return configuredCommandHistoryLength;\r\n        }\r\n        return CommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH;\r\n    }\r\n};\r\nCommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH = 50;\r\nCommandsHistory.PREF_KEY_CACHE = 'commandPalette.mru.cache';\r\nCommandsHistory.PREF_KEY_COUNTER = 'commandPalette.mru.counter';\r\nCommandsHistory.counter = 1;\r\nCommandsHistory = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IConfigurationService)\r\n], CommandsHistory);\r\nexport { CommandsHistory };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { AbstractCommandsQuickAccessProvider } from '../../../platform/quickinput/browser/commandsQuickAccess.js';\r\nimport { stripIcons } from '../../../base/common/iconLabels.js';\r\nexport class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {\r\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);\r\n    }\r\n    getCodeEditorCommandPicks() {\r\n        const activeTextEditorControl = this.activeTextEditorControl;\r\n        if (!activeTextEditorControl) {\r\n            return [];\r\n        }\r\n        const editorCommandPicks = [];\r\n        for (const editorAction of activeTextEditorControl.getSupportedActions()) {\r\n            editorCommandPicks.push({\r\n                commandId: editorAction.id,\r\n                commandAlias: editorAction.alias,\r\n                label: stripIcons(editorAction.label) || editorAction.id,\r\n            });\r\n        }\r\n        return editorCommandPicks;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { QuickCommandNLS } from '../../../common/standaloneStrings.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { AbstractEditorCommandsQuickAccessProvider } from '../../../contrib/quickAccess/commandsQuickAccess.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\r\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\r\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneCommandsQuickAccessProvider = class StandaloneCommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\r\n    constructor(instantiationService, codeEditorService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super({ showAlias: false }, instantiationService, keybindingService, commandService, telemetryService, dialogService);\r\n        this.codeEditorService = codeEditorService;\r\n    }\r\n    get activeTextEditorControl() { return withNullAsUndefined(this.codeEditorService.getFocusedCodeEditor()); }\r\n    getCommandPicks() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getCodeEditorCommandPicks();\r\n        });\r\n    }\r\n};\r\nStandaloneCommandsQuickAccessProvider = __decorate([\r\n    __param(0, IInstantiationService),\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, ICommandService),\r\n    __param(4, ITelemetryService),\r\n    __param(5, IDialogService)\r\n], StandaloneCommandsQuickAccessProvider);\r\nexport { StandaloneCommandsQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneCommandsQuickAccessProvider,\r\n    prefix: StandaloneCommandsQuickAccessProvider.PREFIX,\r\n    helpEntries: [{ description: QuickCommandNLS.quickCommandHelp, needsEditor: true }]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.quickCommand',\r\n            label: QuickCommandNLS.quickCommandActionLabel,\r\n            alias: 'Command Palette',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 59 /* F1 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'z_commands',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneCommandsQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { ReferencesController } from '../../../contrib/gotoSymbol/peek/referencesController.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nlet StandaloneReferencesController = class StandaloneReferencesController extends ReferencesController {\r\n    constructor(editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService) {\r\n        super(true, editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService);\r\n    }\r\n};\r\nStandaloneReferencesController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, ICodeEditorService),\r\n    __param(3, INotificationService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, IStorageService),\r\n    __param(6, IConfigurationService)\r\n], StandaloneReferencesController);\r\nexport { StandaloneReferencesController };\r\nregisterEditorContribution(ReferencesController.ID, StandaloneReferencesController);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\r\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings.js';\r\nclass ToggleHighContrast extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.toggleHighContrast',\r\n            label: ToggleHighContrastNLS.toggleHighContrast,\r\n            alias: 'Toggle High Contrast Theme',\r\n            precondition: undefined\r\n        });\r\n        this._originalThemeName = null;\r\n    }\r\n    run(accessor, editor) {\r\n        const standaloneThemeService = accessor.get(IStandaloneThemeService);\r\n        if (this._originalThemeName) {\r\n            // We must toggle back to the integrator's theme\r\n            standaloneThemeService.setTheme(this._originalThemeName);\r\n            this._originalThemeName = null;\r\n        }\r\n        else {\r\n            this._originalThemeName = standaloneThemeService.getColorTheme().themeName;\r\n            standaloneThemeService.setTheme('hc-black');\r\n        }\r\n    }\r\n}\r\nregisterEditorAction(ToggleHighContrast);\r\n","/*!\n * cyrillicToLatin.js - Convert cyrillic to latin.\n * https://github.com/stojanovic/cyrillic-to-latin\n */\n\n/*global define: false cyrillicToLatin: true*/\n\n(function(global, factory) {\n  // CommonJS\n  if (typeof exports === 'object' && exports) {\n    module.exports = factory()\n  }\n  // AMD\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  // global\n  else {\n    global.cyrillicToLatin = factory()\n  }\n}(this, function () {\n\n  'use strict';\n\n  return function(string) {\n    var cyrillic = 'А_Б_В_Г_Д_Ђ_Е_Ё_Ж_З_И_Й_Ј_К_Л_Љ_М_Н_Њ_О_П_Р_С_Т_Ћ_У_Ф_Х_Ц_Ч_Џ_Ш_Щ_Ъ_Ы_Ь_Э_Ю_Я_а_б_в_г_д_ђ_е_ё_ж_з_и_й_ј_к_л_љ_м_н_њ_о_п_р_с_т_ћ_у_ф_х_ц_ч_џ_ш_щ_ъ_ы_ь_э_ю_я'.split('_')\n    var latin = 'A_B_V_G_D_Đ_E_Ë_Ž_Z_I_J_J_K_L_Lj_M_N_Nj_O_P_R_S_T_Ć_U_F_H_C_Č_Dž_Š_Ŝ_ʺ_Y_ʹ_È_Û_Â_a_b_v_g_d_đ_e_ë_ž_z_i_j_j_k_l_lj_m_n_nj_o_p_r_s_t_ć_u_f_h_c_č_dž_š_ŝ_ʺ_y_ʹ_è_û_â'.split('_')\n\n    return string.split('').map(function(char) {\n      var index = cyrillic.indexOf(char)\n      if (!~index)\n        return char\n      return latin[index]\n    }).join('')\n  }\n\n}))\n","let keywordMap = {\n  прозор: \"window\",\n  отвори: \"open\",\n  Обећање: \"Promise\",\n  асинхрона: \"async\",\n  одложи: \"setTimeout\",\n  сачекај: \"await\",\n  онда: \"then\",\n  ухвати: \"catch\",\n  пробај: \"try\",\n  празно: \"null\",\n  заСваки: \"forEach\",\n  недефинисано: \"undefined\",\n  Математика: \"Math\",\n  \"минус Бесконачно\": \"Number.NEGATIVE_INFINITY\",\n  Бесконачно: \"Math.Infinity\",\n  насумично: \"random\",\n  функција: \"function\",\n  класа: \"class\",\n  наслеђује: \"extends\",\n  конструктор: \"constructor\",\n  родитељ: \"super\",\n  врати: \"return\",\n  испиши: \"alert\",\n  излогуј: \"console.log\",\n  константа: \"const\",\n  \"дај да\": \"let\",\n  нека: \"let\",\n  ово: \"this\",\n  буде: \"=\",\n  буду: \"=\",\n  постаје: \"=\",\n  дохвати: \"fetch\",\n  пробај: \"try\",\n  баци: \"throw\",\n  Грешку: \"Error\",\n  гурни: \"push\",\n  споји: \"join\",\n  растави: \"split\",\n  \"добија вредност\": \"=\",\n  \"повећај за\": \"+=\",\n  \"увећај за\": \"+=\",\n  \"умањи за\": \"-=\",\n  \"помножи са\": \"*=\",\n  нетачно: \"false\",\n  тачно: \"true\",\n  \"није једнако\": \"!=\",\n  није: \"!\",\n  \"мањи од\": \"<\",\n  \"мање од\": \"<\",\n  \"већи од\": \">\",\n  \"веће од\": \">\",\n  \"је једнако\": \"==\",\n  постаје: \"=\",\n  једнако: \"=\",\n  Низ: \"Array\",\n  процеди: \"filter\",\n  дужина: \"length\",\n  обрни: \"reverse\",\n  окрени: \"reverse\",\n  нови: \"new\",\n  нова: \"new\",\n  ново: \"new\",\n  нову: \"new\",\n  пута: \"*\",\n  за: \"for\",\n  док: \"while\",\n  \"док је\": \"while\",\n  \"ако је\": \"if\",\n  ако: \"if\",\n  \"у супротном\": \"else\",\n  или: \"||\",\n  и: \"&&\",\n  \"ако је инстанца\": \"instanceof\",\n  \"ако је тип\": \"typeof\",\n  стани: \"break\",\n  кочи: \"break\",\n  случај: \"case\",\n  настави: \"continue\",\n  \"шта се покварило\": \"debugger\",\n  подразумевано: \"default\",\n  обриши: \"delete\",\n  ради: \"do\",\n  коначно: \"finally\",\n  напокон: \"finally\",\n  пребаци: \"switch\",\n  подај: \"var\",\n  изнедефиниши: \"void\",\n  извези: \"export\",\n  увези: \"import\",\n  у: \"in\",\n  статично: \"static\",\n  \"остатак при дељењу са\": \"%\",\n  прекини: \"break\",\n  минус: \"–\",\n};\n\nexport const keywords = Object.keys(keywordMap);\n\nexport function transform(code) {\n  code = ` ${code} `;\n\n  let newCode = Object.keys(keywordMap).reduce((prev, keyword) => {\n    return prev.replace(\n      new RegExp(\n        `(\\\\s|\\\\(|\\\\.|\\\\'|\\\\\"|\\\\{}|\\\\=)${keyword}(\\\\s|\\\\(|\\\\.|\\\\'|\\\\\"|\\\\{}|\\\\=|\\\\)|\\\\;)`,\n        \"g\"\n      ),\n      `$1${keywordMap[keyword]}$2`\n    );\n  }, code);\n\n  return newCode;\n}\n\nexport function execute(code) {\n  try {\n    let result = eval(code);\n    return result;\n  } catch (ex) {\n    return ex;\n  }\n}\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.main.js\";\nimport { keywords } from \"./engine\";\n\n// Register a new language\nmonaco.languages.register({ id: \"chpp\" });\n\n// Register a tokens provider for the language\nmonaco.languages.setMonarchTokensProvider(\"chpp\", {\n  tokenizer: {\n    root: [\n      ...keywords.map((keyword) => [new RegExp(` ${keyword} `), \"keyword\"]),\n      [/\\класа/, \"type.identifier\"],\n      // [/\\дај да/, \"keyword\"],\n    ],\n  },\n});\n\n// Define a new theme that contains only rules that match this language\nmonaco.editor.defineTheme(\"chpp-theme\", {\n  base: \"vs-dark\",\n  inherit: true,\n  rules: [{ token: \"variable\", foreground: \"FFA500\" }],\n});\n","export const singletonCode = `\n\nкласа Јединац {\n\n    статично ја добија вредност празно;\n    \n    конструктор() {\n        ако (Јединац.ја) {\n            врати Јединац.ја\n        }\n        \n        Јединац.ја = ово\n        врати ово\n    }\n\n}\n\nдај да новиЈединац буде нови Јединац\nдај да новиЈединац2 буде нови Јединац\n\nновиЈединац === новиЈединац2\n\n`;\n","import \"normalize.css\";\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.main.js\";\nimport convert from \"cyrillic-to-latin\";\n\nimport \"./chpp-lang\";\nimport { execute, transform } from \"./engine\";\nimport { singletonCode } from \"./examples/singleton\";\n\nconst $ = document.querySelector.bind(document);\nlet $code = $(\".js-code\");\nlet $execute = $(\".js-execute\");\nlet $debug = $(\".js-debug\");\nlet $debugOverlay = $(\".js-debug-overlay\");\nlet $output = $(\".js-output\");\n\nlet editor = monaco.editor.create($code, {\n  value: singletonCode,\n  language: \"chpp\",\n\n  roundedSelection: false,\n  scrollBeyondLastLine: false,\n  readOnly: false,\n  minimap: {\n    enabled: false,\n  },\n  theme: \"chpp-theme\",\n  fontSize: 20,\n});\n\n$execute.addEventListener(\"click\", () => {\n  const code = editor.getValue();\n  console.log({ code });\n\n  const jsCode = transform(code);\n  console.log({ jsCode });\n  $debugOverlay.innerText = convert(jsCode);\n\n  const output = execute(jsCode);\n\n  console.log({ output });\n\n  $output.innerText = output;\n});\n\n$debug.addEventListener(\"click\", () => {\n  $debugOverlay.classList.toggle(\"show\");\n});\n"],"names":["$b0ade3e8a89020bb$export$40339995e8a21591","$b0ade3e8a89020bb$export$357eb1b4f03c1402","$b0ade3e8a89020bb$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$52763008e15b5e7e$var$LanguageServiceDefaultsImpl","LanguageServiceDefaultsImpl","languageId","options","modeConfiguration","_onDidChange","$easJH","Emitter","_languageId","setOptions","setModeConfiguration","defineProperty","prototype","get","event","enumerable","configurable","_modeConfiguration","_options","create","fire","this","setDiagnosticsOptions","$52763008e15b5e7e$var$optionsDefault","validate","lint","compatibleVendorPrefixes","vendorPrefix","duplicateProperties","emptyRules","importStatement","boxModel","universalSelector","zeroUnits","fontFaceProperties","hexColorLength","argumentsInColorFunction","unknownProperties","ieHack","unknownVendorSpecificProperties","propertyIgnoredDueToDisplay","important","float","idSelector","data","useDefaultDataProvider","$52763008e15b5e7e$var$modeConfigurationDefault","completionItems","hovers","documentSymbols","definitions","references","documentHighlights","rename","colors","foldingRanges","diagnostics","selectionRanges","$52763008e15b5e7e$export$a87ff7e310793277","$52763008e15b5e7e$export$5bbffe450bca6622","$52763008e15b5e7e$export$eaf41c474da60dd7","$52763008e15b5e7e$var$getMode","languages","css","cssDefaults","lessDefaults","scssDefaults","module","exports","Promise","all","URL","resolve","import","meta","url","toString","then","$dQSd8","bundle","reject","existingLinks","document","getElementsByTagName","concat","some","link","href","rel","indexOf","createElement","onerror","e","onload","remove","appendChild","$a15a2ed02f7aec9d$var$cachedBundles","$a15a2ed02f7aec9d$var$cachedPreloads","$a15a2ed02f7aec9d$var$cachedPrefetches","$a15a2ed02f7aec9d$var$getCache","type","loader","cache","apply","arguments","catch","onLanguage","mode","setupMode","$bc505c807bce2817$var$LanguageServiceDefaultsImpl","diagnosticsOptions","_diagnosticsOptions","$bc505c807bce2817$var$diagnosticDefault","allowComments","schemas","enableSchemaRequest","schemaRequest","schemaValidation","comments","trailingCommas","$bc505c807bce2817$var$modeConfigurationDefault","documentFormattingEdits","documentRangeFormattingEdits","tokens","$bc505c807bce2817$export$d268c46a32392aa4","$bc505c807bce2817$var$getMode","json","jsonDefaults","extensions","aliases","mimetypes","$7f548b42557ce3a3$var$__awaiter","thisArg","_arguments","P","generator","fulfilled","value","step","next","rejected","result","done","body","sent","t","n","v","op","f","TypeError","y","call","_","trys","pop","label","ops","push","g","verb","return","Symbol","iterator","$7f548b42557ce3a3$var$formatDefaults","tabSize","insertSpaces","wrapLineLength","unformatted","contentUnformatted","indentInnerHtml","preserveNewLines","maxPreserveNewLines","indentHandlebars","extraLiners","wrapAttributes","format","$7f548b42557ce3a3$var$getConfigurationDefault","links","$7f548b42557ce3a3$var$htmlLanguageId","$7f548b42557ce3a3$var$handlebarsLanguageId","$7f548b42557ce3a3$var$razorLanguageId","$7f548b42557ce3a3$export$de544f564c181410","$7f548b42557ce3a3$export$a3d3bb4812d48f43","$7f548b42557ce3a3$var$optionsDefault","$7f548b42557ce3a3$export$80f92579b04312fc","defaults","$7f548b42557ce3a3$export$91240bcfa821e3cd","$7f548b42557ce3a3$export$ade9bb860bfec86e","$7f548b42557ce3a3$export$690e76c00434b52c","$7f548b42557ce3a3$export$981a4f75f0fa99c7","$7f548b42557ce3a3$var$getMode","_this","$7f548b42557ce3a3$var$LanguageServiceDefaultsImpl","onLanguageListener","dispose","undefined","html","htmlDefaults","razorDefaults","handlebarDefaults","htmlLanguageService","registerHTMLLanguageService","$4612ba52d3047391$var$languageDefinitions","$4612ba52d3047391$var$lazyLanguageLoaders","$4612ba52d3047391$var$LazyLanguageLoader","LazyLanguageLoader","_loadingTriggered","_lazyLoadPromise","_lazyLoadPromiseResolve","_lazyLoadPromiseReject","getOrCreate","whenLoaded","load","mod","err","$4612ba52d3047391$export$ecb1189b612f157d","$4612ba52d3047391$export$1009f340c2fb4cd1","def","lazyLanguageLoader","setMonarchTokensProvider","language","setLanguageConfiguration","conf","filenames","firstLine","$39ac0b5446d8b314$export$aec284c58bafc4d8","value1","isTrustedOrOptions","_a","_b","$h24lh","illegalArgument","isTrusted","supportThemeIcons","appendText","newlineStyle","$39ac0b5446d8b314$export$efc17dfe9b02748e","$4Wslx","escapeIcons","replace","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","code","$39ac0b5446d8b314$export$99d694b387faa6d3","oneOrMany","$39ac0b5446d8b314$export$2dca106d8b8eb3d5","Array","isArray","every","thing","text","$39ac0b5446d8b314$export$5acc57695013539a","$39ac0b5446d8b314$export$15fd475ca7e00d19","dimensions","splitted","split","map","s","trim","parameters","heightFromParams","exec","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","$25e2239974775e1b$var$__decorate","decorators","target","key","desc","d","r","c","getOwnPropertyDescriptor","Reflect","decorate","$25e2239974775e1b$var$__param","paramIndex","decorator","$lSf2o","RawContextKey","SelectionAnchorController","editor1","contextKeyService","selectionAnchorSetContextKey","$25e2239974775e1b$export$d6fce6fa51f5f075","bindTo","modelChangeListener","onDidChangeModel","reset","static","editor","getContribution","ID","hasModel","previousDecorations","decorationId","deltaDecorations","$5FE62","Selection","fromPositions","position","description","newDecorationId","set","$g6PSK","alert","$01tde","localize","lineNumber","column","anchorPosition","getModel","getDecorationRange","setPosition","getStartPosition","end","getPosition","setSelection","start","cancelSelectionAnchor","IContextKeyService","$lOYnF","EditorAction","weight","$25e2239974775e1b$var$__awaiter","$25e2239974775e1b$var$SelectionAnchorController","alias","precondition","registerEditorContribution","registerEditorAction","$25e2239974775e1b$var$SetSelectionAnchor","$3f05231fd6ad99ea$var$overviewRulerBracketMatchForeground","$asX5G","registerColor","dark","light","hc","$3f05231fd6ad99ea$var$JumpToBracketAction","super","kbOpts","kbExpr","$dJPpa","EditorContextKeys","editorTextFocus","primary","run","accessor","controller","$3f05231fd6ad99ea$export$801af77c521cc14b","jumpToBracket","$3f05231fd6ad99ea$var$SelectToBracketAction","args","name","schema","properties","default","selectBrackets","selectToBracket","$3f05231fd6ad99ea$var$BracketsData","brackets","$fpaXF","Disposable","_editor","_lastBracketsData","_lastVersionId","_decorations","_updateBracketsSoon","_register","$kjKCI","RunOnceScheduler","_updateBrackets","_matchBrackets","getOption","schedule","onDidChangeCursorPosition","onDidChangeModelContent","onDidChangeModelLanguageConfiguration","onDidChangeConfiguration","hasChanged","model","newSelections","getSelections","selection","position1","brackets1","matchBracket","newCursorPosition","containsPosition","enclosingBrackets","findEnclosingBrackets","nextBracket","findNextBracket","range","setSelections","revealRange","forEach","selectFrom","selectTo","sort","$fpVBX","Range","compareRangesUsingStarts","open","close","getEndPosition","tmp","_recomputeBrackets","newDecorations","newDecorationsLen","bracketData","selections","versionId","getVersionId","previousData","positions","positionsLen","len","isEmpty","$l766L","Position","compare","newData","newDataLen","previousIndex","previousLen","i1","len1","isBefore","equals","options1","_DECORATION_OPTIONS_WITH_OVERVIEW_RULER","_DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER","$6OxZg","ModelDecorationOptions","stickiness","className","overviewRuler","color","$WnWhl","themeColorFromId","$bTYq8","OverviewRulerLane","Center","registerThemingParticipant","theme","collector","bracketMatchBackground","getColor","$lrmgW","editorBracketMatchBackground","addRule","bracketMatchBorder","editorBracketMatchBorder","$4akTf","MenuRegistry","appendMenuItem","MenuId","MenubarGoMenu","group","command","title","comment","order","$ccb4d3070ebb1f6d$export$2f5b910561dba428","isMovingLeft","_selection","_isMovingLeft","getEditOperations","builder","startLineNumber","endLineNumber","startColumn","endColumn","getLineMaxColumn","rangeBefore","charBefore","getValueInRange","addEditOperation","rangeAfter","charAfter","computeCursorState","helper","$202f642ee775b539$var$MoveCaretAction","left","opts","commands","pushUndoStop","executeCommands","$202f642ee775b539$var$MoveCaretLeftAction","writable","$202f642ee775b539$var$MoveCaretRightAction","$d98736ea0e18551d$var$TransposeLettersAction","textInputFocus","mac","lastColumn","endPosition","$dh07Q","MoveOperations","rightPosition","middlePosition","leftPosition","beginPosition","leftChar","rightChar","replaceRange","$2shqD","ReplaceCommand","$da8c306494656eec$var$__awaiter","$da8c306494656eec$var$CLIPBOARD_CONTEXT_MENU_GROUP","$da8c306494656eec$var$supportsCut","$fg2QM","isNative","queryCommandSupported","$da8c306494656eec$var$supportsCopy","navigator","clipboard","$fpxAc","isFirefox","$da8c306494656eec$var$registerCommand","$da8c306494656eec$export$a8d6789320b048c","MultiCommand","MenubarEditMenu","menuId","EditorContext","CommandPalette","SimpleEditorContext","$da8c306494656eec$export$8b1bb1da381bfe9d","MenubarCopy","original","EditorContextCopy","$da8c306494656eec$export$a9fe4d1a2388c0e4","$da8c306494656eec$var$supportsPaste","getSelection","$76H5z","CopyOptions","forceCopyWithSyntaxHighlighting","focus","$da8c306494656eec$var$registerExecCommandImpl","browserCommand","addImplementation","focusedEditor","$jSolg","ICodeEditorService","getFocusedCodeEditor","hasTextFocus","emptySelectionClipboard","execCommand","codeEditorService","clipboardService","$aI7Ay","IClipboardService","isWeb","clipboardText","readText","metadata","InMemoryClipboardMetadataManager","INSTANCE","pasteOnNewLine","multicursorText","isFromEmptySelection","$20beed91d878ff9e$export$1b3d3e4661a6e372","executor","_didRun","getValue","_value","_error","$4474cb618f0698f6$export$4a4e7458a0da9102","other","contains","startsWith","sep","intersects","append","part","$4474cb618f0698f6$export$27825e69043be60c","filter","providedKind","include","excludes","exclude","$4474cb618f0698f6$var$excludesAction","includeSourceActions","Source","$4474cb618f0698f6$export$825ab508231dd706","action","actionKind","kind","onlyIncludePreferredActions","isPreferred","None","Empty","QuickFix","Refactor","SourceOrganizeImports","SourceFixAll","$4474cb618f0698f6$export$4ce1b95d28ffb235","preferred","arg","getKindFromUser","getApplyFromUser","getPreferredUser","defaultAutoApply","toLowerCase","defaultKind","$f3f701f92c6ba960$var$__awaiter","$f3f701f92c6ba960$export$1bd4e2dfd61b18c2","$f3f701f92c6ba960$export$a82b5bafd5358407","$f3f701f92c6ba960$export$53c44422ff541409","constructor","provider","token","resolveCodeAction","edit","action1","onUnexpectedExternalError","actions","documentation","disposables","allActions","$f3f701f92c6ba960$var$ManagedCodeActionSet","codeActionsComparator","validActions","disabled","a","b","$3gi5A","isNonEmptyArray","message","localeCompare","hasAutoFix","trigger","only","cts","$96fIA","TextModelCancellationTokenSource","$f3f701f92c6ba960$var$getCodeActionProviders","DisposableStore","providers","provider1","progress","report","providedCodeActions","provideCodeActions","rangeOrSelection","codeActionContext","isCancellationRequested","$f3f701f92c6ba960$var$emptyCodeActionsResponse","documentation1","isPromiseCanceledError","listener","$atUV8","CodeActionProviderRegistry","onDidChange","newProviders","cancel","promises","actions1","allDocumentation","coalesce","x","disposables1","finally","providedCodeActionKinds","entry","currentBest","registerCommand","resource","itemResolveCount","$4Sml3","URI","$fwIdu","IModelService","validatedRangeOrSelection","isISelection","liftSelection","isIRange","validateRange","$f3f701f92c6ba960$export$f7d3e97828274814","Progress","$gundt","CancellationToken","resolving","Math","min","codeActionSet","resolveCount","item","setTimeout","$c5176bb3fa814bdb$var$__decorate","$c5176bb3fa814bdb$var$__param","MessageController","_messageWidget","MutableDisposable","_messageListeners","_visible","MESSAGE_VISIBLE","_editorListener","onDidAttemptReadOnlyEdit","_onDidAttemptReadOnlyEdit","bounds","clear","add","closeMessage","TimeoutTimer","onMouseMove","$c5176bb3fa814bdb$var$MessageWidget","fadeOut","showMessage","$c5176bb3fa814bdb$export$3dbfd35d3f9b386c","$c5176bb3fa814bdb$var$MessageCommand","EditorCommand","bindToContribution","registerEditorCommand","editor2","allowEditorOverflow","suppressMouseDown","revealLinesInCenterIfOutsideViewport","_domNode","classList","anchorTop","textContent","anchorBottom","addContentWidget","messageWidget","handle","clearTimeout","getDomNode","removeEventListener","addEventListener","removeContentWidget","getId","_position","toggle","border","inputValidationInfoBorder","borderWidth","$kXtkL","ColorScheme","HIGH_CONTRAST","background","inputValidationInfoBackground","$dcbe83483c113456$var$__decorate","$dcbe83483c113456$var$__param","$iudek","Action","callback","$dcbe83483c113456$var$stripNewlines","str","_delegate","_contextMenuService","keybindingService","_keybindingResolver","$dcbe83483c113456$export$63746aec074d0acd","getKeybindings","isVisible","codeActions","at","actionsToShow","canceled","_showingActions","menuActions","getMenuActions","resolver","getResolver","useShadowDOM","domForShadowRoot","onHide","autoSelectFirstItem","getKeyBinding","$dcbe83483c113456$var$CodeActionAction","toCodeActionAction","onSelectCodeAction","_getAdditionalMenuItems","Separator","$f3f701f92c6ba960$exports","CodeActionItem","revealPosition","render","cursorCoords","getScrolledVisiblePosition","editorCoords","top","$5Ev0P","IContextMenuService","$e6Mkt","IKeybindingService","_keybindingProvider","codeActionCommands","resolvedKeybinding","organizeImportsCommandId","commandArgs","fixAllCommandId","assign","binding","bestKeybindingForCodeAction","allCodeActionBindings","candidates","candidate","refactorCommandId","codeActionCommandId","$5c2615e54cbfd373$var$__decorate","$5c2615e54cbfd373$var$__param","Hidden","LightBulbState","Showing","editorPosition","widgetPosition","$5c2615e54cbfd373$var$LightBulbState","LightBulbWidget","_quickFixActionId","_preferredFixActionId","_keybindingService","_onClick","$g0V2C","onClick","_state","$7Qr7G","Codicon","lightBulb","classNames","editorModel","state","getLineCount","hide","Gesture","ignoreTarget","$10pDf","addStandardDisposableGenericMouseDownListner","preventDefault","getDomNodePagePosition","lineHeight","pad","floor","posx","addDisposableListener","buttons","monitor","$hvpZm","GlobalMouseMoveMonitor","startMonitoring","standardMouseMoveMerger","enabled","_updateLightBulbTitleAndIcon","onDidUpdateKeybindings","atPosition","getOptions","validatePosition","fontInfo","lineContent","getLineContent","TextModel","computeIndentLevel","isFolded","lineNumber1","getTopForLineNumber","spaceWidth","indent","effectiveLineNumber","preference","_posPref","layoutContentWidget","classNamesArray","lightbulbAutofix","preferredKb","getLabel","kb","lookupKeybinding","$5c2615e54cbfd373$export$c1cb589a34d7825a","editorBackgroundColor","editorBackground","transparent","editorLightBulbForegroundColor","editorLightBulbForeground","cssSelector","$afb1575f696edcc3$var$__decorate","$afb1575f696edcc3$var$__param","$afb1575f696edcc3$var$__classPrivateFieldSet","receiver","has","quickFixActionId","preferredFixActionId","delegate","instantiationService","createInstance","$dcbe83483c113456$exports","CodeActionMenu","applyCodeAction","includeDisabledActions","widget","$afb1575f696edcc3$var$_CodeActionUi_disposed","_c","newState","_lightBulbWidget","rawValue","onUnexpectedError","$afb1575f696edcc3$var$__classPrivateFieldGet","update","tryGetValidActionToApply","validActionToApply","context","invalidAction","getInvalidActionThatWouldHaveBeenApplied","$c5176bb3fa814bdb$exports","_activeCodeActions","_codeActionWidget","show","autoApply","find","$afb1575f696edcc3$var$__awaiter","WeakMap","$397a3c8f489c237f$var$__classPrivateFieldGet","$397a3c8f489c237f$var$__classPrivateFieldSet","_markerService","_signalChange","_delay","_autoTriggerTimer","_onCursorChange","_getRangeOfSelectionUnlessWhitespaceEnclosed","_createEventAndSignalChange","resources","$dQbrg","isEqual","uri","marker","read","markerRange","intersectRanges","lift","line","test","_getRangeOfMarker","CodeActionsState","Triggered","_cancellablePromise","$397a3c8f489c237f$var$emptyCodeActionSet","$397a3c8f489c237f$export$b8546698f8620ac4","_editor1","_markerService1","_progressService","_codeActionOracle","_onDidChangeState","onDidChangeState","_supportedCodeActions","$397a3c8f489c237f$export$6a83bf6bdb44ce42","_update","$397a3c8f489c237f$var$_CodeActionModel_isDisposed","setState","supportedActions","join","$397a3c8f489c237f$var$CodeActionOracle","createCancelablePromise","getCodeActions","$nhYaH","showWhile","skipNotify","$0303cdff7194acf7$var$__decorate","$0303cdff7194acf7$var$__param","$0303cdff7194acf7$var$contextKeyForSupportedActions","ContextKeyExpr","regex","$397a3c8f489c237f$exports","SUPPORTED_CODE_ACTIONS","RegExp","$fVrZo","escapeRegExpCharacters","QuickFixController","markerService","progressService","_instantiationService","_model","CodeActionModel","$afb1575f696edcc3$exports","CodeActionUi","$0303cdff7194acf7$export$a438e7db7d22bc3a","Id","$0303cdff7194acf7$export$6d27186da26b5a22","retrigger","$0303cdff7194acf7$var$__awaiter","_applyCodeAction","_ui","showCodeActionList","notAvailableMessage","triggerPosition","_trigger","invokeFunction","$0303cdff7194acf7$export$26d03e9717135519","bulkEditService","$TV0XQ","IBulkEditService","commandService","$38MEZ","ICommandService","telemetryService","$kqPkl","ITelemetryService","notificationService","$jmEmX","INotificationService","publicLog2","codeActionIsPreferred","executeCommand","$0303cdff7194acf7$var$asMessage","error","$0303cdff7194acf7$var$triggerCodeActionsForEditorSelection","$0303cdff7194acf7$export$f38a519bbf1c4de1","manualTriggerAtCurrentPosition","$ivA4D","IMarkerService","IEditorProgressService","$jHkSQ","IInstantiationService","and","hasCodeActionsProvider","_accessor","userArgs","when","sourceActionCommandId","$0303cdff7194acf7$exports","QuickFixAction","RefactorAction","SourceAction","OrganizeImportsAction","AutoFixAction","FixAllAction","CodeActionCommand","$946cb9aa5a42b1b6$var$__awaiter","lenses","_disposables","list","symbol","$946cb9aa5a42b1b6$export$bbc58402852c0ea8","CodeLensProviderRegistry","ordered","Map","$946cb9aa5a42b1b6$export$deb75f6815c29a96","provideCodeLenses","providerRanks","CommandsRegistry","$2tUkI","assertType","isUri","Boolean","resolveCodeLens","$213a8c1b356501f7$var$CodeLensViewZone","afterLineNumber","heightInPx","onHeight","_onHeight","domNode","onComputedHeight","_lastHeight","$213a8c1b356501f7$var$CodeLensContentWidget","line1","_commands","_isEmpty","_id","_idPool","updatePosition","withCommands","animate","children","hasSymbol","lens","$f5KJA","renderLabelWithIcons","$","String","tooltip","getCommand","parentElement","getLineFirstNonWhitespaceColumn","_widgetPosition","$213a8c1b356501f7$export$f30317118c0ba8e6","_removeDecorations","_addDecorations","_addDecorationsCallbacks","addDecoration","decoration","removeDecoration","commit","changeAccessor","resultingDecorations","$213a8c1b356501f7$export$c73ca93d747a9a75","data1","className1","helper1","viewZoneChangeAccessor1","heightInPx1","updateCallback","_isDisposed","_className","_data","_decorationIds","codeLensData","EMPTY","plusRange","_viewZone","_viewZoneId","addZone","_createContentWidgetIfNecessary","_contentWidget","viewZoneChangeAccessor","removeZone","isDisposed","isValid","range1","updateCodeLensSymbols","updateHeight","layoutZone","computeIfNecessary","hasAttribute","updateCommands","symbols","getLineNumber","getItems","codeLensForeground","editorCodeLensForeground","activeLinkForeground","editorActiveLinkForeground","$1ee4aac8c1949131$var$__decorate","$1ee4aac8c1949131$var$__param","createDecorator","lineCount","storageService","_fakeProvider","_cache","$k5PIA","LRUCache","runWhenIdle","raw1","_deserialize","$bMAOA","once","onWillSaveState","reason","$jRcNF","WillSaveStateReason","SHUTDOWN","store","_serialize","copyModel","$946cb9aa5a42b1b6$exports","CodeLensModel","copyItems","$1ee4aac8c1949131$var$CacheItem","delete","key1","lines","Set","values","stringify","data2","raw","element","$1ee4aac8c1949131$export$840ea9a95132a1f6","$4c67e622731bfc94$var$__decorate","$4c67e622731bfc94$var$__param","_commandService","_notificationService","_codeLensCache","_localToDispose","_lenses","_getCodeLensModelDelays","$kRkjH","LanguageFeatureRequestDelays","_resolveCodeLensesDelays","onDidChangeModelLanguage","_onModelChange","_updateLensStyle","_styleClassName","$8qqh1","hash","_styleElement","createStyleSheet","isInShadowDOM","getContainerDomNode","_localDispose","_oldCodeLensModels","_currentCodeLensModel","codeLensHeight","fontSize","max","_getLayoutInfo","fontFamily","editorFontInfo","fontFamilyVar","fontFeaturesVar","round","newStyle","style","setProperty","fontFeatureSettings","changeViewZones","_getCodeLensModelPromise","_resolveCodeLensesPromise","cachedLenses","_renderCodeLensSymbols","disposableTimeout","cachedLensesNow","registration","scheduler","getCodeLensModel","put","newDelay","Date","now","t1","delay","_resolveCodeLensesInViewportSoon","toDisposable","_resolveCodeLensesScheduler","changeDecorations","decorationsAccessor","viewZonesAccessor","toDispose","lastLensLineNumber","l","splice","onDidFocusEditorWidget","onDidScrollChange","scrollTopChanged","onDidLayoutChange","StableEditorScrollState","capture","_disposeAllLenses","scrollState","restore","onMouseDown","tagName","decChangeAccessor","lastGroup","groups","maxLineNumber","viewZoneAccessor","codeLensIndex","groupsIndex","codeLensLineNumber","symbolsLineNumber","layoutInfo","toResolve","request","promises1","request1","resolvedSymbols","resolvePromise","$1ee4aac8c1949131$exports","ICodeLensCache","$4c67e622731bfc94$export$39a2243123ecd7ab","$4c67e622731bfc94$var$__awaiter","quickInputService","$7n8ME","IQuickInputService","positionLineNumber","codelensController","getLenses","items","pick","$81b2df2c17d2c2cb$export$63776a5bed5e44e","ColorProviderRegistry","reverse","provideDocumentColors","colorInfo","$81b2df2c17d2c2cb$export$e7d2f639eb389617","provideColorPresentations","rawCIs","ci","red","green","blue","alpha","presentations","$6322cb0bf4abb7ba$var$__decorate","$6322cb0bf4abb7ba$var$__param","ColorDetector","_codeEditorService","_configurationService","_decorationsIds","_colorDatas","_isEnabled","isEnabled","onModelChanged","prevIsEnabled","removeAllDecorations","_timeoutTimer","_computePromise","getLanguageIdentifier","deprecatedConfig","colorDecorators","stop","cancelAndSet","beginCompute","RECOMPUTE_TIME","colorInfos","updateDecorations","updateColorDecorators","colorDatas","decorations","newDecorationsTypes","colorData","$6322cb0bf4abb7ba$var$MAX_DECORATORS","rgba","$cmndW","RGBA","subKey","_decorationsTypes","registerDecorationType","contentText","margin","backgroundColor","resolveDecorationOptions","subType","removeDecorationType","_colorDecoratorIds","getDecorationsInRange","$8df1c2a23e39c83f$export$b574971c7d2e43dc","computer","success","error1","hoverTime1","_computer","_hoverTime","_firstWaitScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_showLoadingMessage","_asyncComputationPromise","_asyncComputationPromiseDone","_completeCallback","_errorCallback","_progressCallback","setHoverTime","hoverTime","_firstWaitTime","_secondWaitTime","_loadingMessageTime","computeAsync","asyncResult","_withAsyncResult","_onError","computeSync","onResult","_onComplete","getResult","_onProgress","getResultWithLoadingMessage","$b70a20214c92d513$var$$","$b70a20214c92d513$export$3238181c74eea67c","containerDomNode","tabIndex","setAttribute","contentsDomNode","_scrollbar","$2W6H9","DomScrollableElement","consumeMouseWheelIfScrollbarIsNeeded","onContentsChanged","scanDomNode","$b70a20214c92d513$export$bef3feb6a15b4364","parent1","actionOptions1","keybindingLabel1","actionContainer","iconClass","EventType","CLICK","stopPropagation","setEnabled","parent","actionOptions","keybindingLabel","removeAttribute","$8f144b5f062368a8$export$6186f18389941487","file","base","basename","scheme","$e51y3","Schemas","fsPath","path","isWindows","$lxUVt","isRootOrDriveLetter","$8f144b5f062368a8$export$f866fce9ac6aeacf","hasDriveLetter","charAt","toUpperCase","slice","$3988abdbe95e1f4f$var$__decorate","$3988abdbe95e1f4f$var$__param","$052dp","CodeEditorWidget","domElement","parentEditor","themeService","accessibilityService","getRawOptions","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","updateOptions","_onParentConfigurationChanged","getParentEditor","newOptions","IThemeService","$1424fc8558d6f703$var$defaultColor","Color","$1424fc8558d6f703$var$defaultOptions","showArrow","showFrame","frameColor","arrowColor","keepEditorSelection","$1424fc8558d6f703$var$WIDGET_ID","$1424fc8558d6f703$export$522611097978e8ff","afterColumn","heightInLines1","onDomNodeTop","heightInLines","_onDomNodeTop","_onComputedHeight","$1424fc8558d6f703$export$99c5a2fb6300f493","domNode1","$1424fc8558d6f703$var$Arrow","_ruleName","_IdGenerator","nextId","_color","_height","removeCSSRulesContainingSelector","_updateStyle","createCSSRule","where","$gNEaP","IdGenerator","$1424fc8558d6f703$export$1183a8a63e681696","_arrow","_overlayWidget","_resizeSash","_positionMarkerId","container","_isShowing","$cDftD","deepClone","mixin","isAccessible","info","_getWidth","_getLeft","_onWidth","removeOverlayWidget","_fillContainer","_initSash","_applyStyles","styles","borderTopColor","borderBottomColor","minimap","minimapWidth","verticalScrollbarWidth","minimapLeft","_onViewZoneTop","_onViewZoneHeight","containerHeight","_decoratingElementsHeight","getLayoutInfo","_doLayout","layout","id1","rangeOrPos","_showImpl","viewZoneDomNode","overflow","maxHeightInLines","arrowHeight","frameThickness","addOverlayWidget","width1","frameWidth","borderTopWidth","borderBottomWidth","revealLine","isLastLine","revealLineInCenter","setCssClass","classToReplace","widthInPixel","heightInPixel","_relayout","newHeightInLines","$7Ekef","Sash","orientation","isResizeable","onDidStart","startY","onDidEnd","evt","lineDelta","currentY","roundedLineDelta","ceil","getHorizontalSashLeft","getHorizontalSashTop","getHorizontalSashWidth","$e179ed75bec26912$export$644b19563e21b5ea","ActionRunner","options2","_onDidChangeVisibility","onDidChangeVisibility","_element","_label","labelRenderer","container1","MOUSE_DOWN","$8DJp2","Tap","EventHelper","event1","MouseEvent","detail","visible","KEY_UP","event2","$7yhgj","StandardKeyboardEvent","cleanupFn","addTarget","boxContainer","contents","$e179ed75bec26912$export$9e57f03db3a6c34b","_actions","_contextMenuProvider","contextMenuProvider","actionProvider","menuClassName","menuAsChild","menuOptions","_menuOptions","getActions","showContextMenu","getAnchor","getActionsContext","getActionViewItem","actionViewItemProvider","getMenuClassName","actionRunner","anchorAlignment","$c3db42fd4319a257$export$be98e6ed798491dc","$bl43B","BaseActionViewItem","menuActionsOrProvider","actionItem","isActionsArray","el","_action","dropdownMenu","keybindingProvider","_context","anchorAlignmentProvider","that","updateEnabled","setActionContext","newContext","getAction","$207209d64eca9e5e$var$__decorate","$207209d64eca9e5e$var$__param","$207209d64eca9e5e$export$48f6bea819ebcb4e","menu","primaryGroup","primaryMaxCount","shouldInlineSubmenu","useSeparatorsInPrimaryActions","actionGroup","$207209d64eca9e5e$var$asDisposable","$207209d64eca9e5e$var$fillInActions","useAlternativeActions","isPrimaryAction","Number","MAX_SAFE_INTEGER","primaryBucket","secondaryBucket","secondary","submenuInfo","target1","MenuItemAction","alt","SubmenuAction","index","newLen","group1","submenuActions","unshift","ActionViewItem","_contextKeyService","class","icon","draggable","_wantsAltCommand","_itemClassDispose","ModifierKeyEmitter","getInstance","_menuItemAction","_commandAction","_updateItemClass","mouseOver","alternativeKeyDown","_altKey","keyStatus","altKey","isLinux","shiftKey","wantsAltCommand","updateLabel","updateTooltip","updateClass","updateAltState","keybinding","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","$lumYJ","UILabelProvider","modifierLabels","OS","checked","toggled","ThemeIcon","isThemeIcon","iconClasses","asClassNameArray","asCSSUrl","removeProperty","contextMenuService","dropdownOptions","asClassName","$207209d64eca9e5e$export$f7f1bc7a384d4da3","submenuAction","_keybindingService1","_notificationService1","_menuService","_instaService","_storageService","_b1","_container","_storageKey","submenu","_debugName","defaultActionId","defaultAction","_defaultAction","$207209d64eca9e5e$export$4dbeb4f968cdf2db","dropdownOptions1","_a1","_dropdown","onDidRun","lastAction","$207209d64eca9e5e$var$__awaiter","prepend","primaryContainer","KEY_DOWN","dropdownContainer","setFocusable","_a2","blur","focusable","$207209d64eca9e5e$export$736e595f26a061ed","instaService","action2","options3","SubmenuItemAction","rememberDefaultAction","$207209d64eca9e5e$var$DropdownWithDefaultActionViewItem","IMenuService","IStorageService","$23a5ba7389596e41$var$__decorate","$23a5ba7389596e41$var$__param","$23a5ba7389596e41$export$c98443dac646c2e1","PeekContext","registerSingleton","$23a5ba7389596e41$export$148e5f746ce36a8d","_widgets","existing","notInPeekEditor","inPeekEditor","toNegated","$23a5ba7389596e41$var$PeekContextController","$3988abdbe95e1f4f$exports","EmbeddedCodeEditorWidget","$23a5ba7389596e41$var$defaultOptions","primaryHeadingColor","fromHex","_onDidClose","onDidClose","disposed","headerBackgroundColor","secondaryHeadingColor","_headElement","_primaryHeading","_secondaryHeading","_bodyElement","borderColor","_fillHead","_fillBody","noCloseAction","titleElement","addStandardDisposableListener","_onTitleClick","_fillTitleIcon","_metaHeading","actionsContainer","actionBarOptions","_getActionBarOptions","$jEFZL","ActionBar","_actionbarWidget","$207209d64eca9e5e$exports","createActionViewItem","bind","secondaryHeading","innerText","primaryHeading","clearNode","headHeight","bodyHeight","_doLayoutHead","_doLayoutBody","$23a5ba7389596e41$export$670d037a0928d27c","$23a5ba7389596e41$export$d1a53973613582da","editorInfoForeground","$23a5ba7389596e41$export$edb6c0f4dab5cfec","white","black","$23a5ba7389596e41$export$adf821bd7a215589","$23a5ba7389596e41$export$575bc7438cf347f7","contrastBorder","$23a5ba7389596e41$export$6823b48977157206","$23a5ba7389596e41$export$c62b4ca635aa4209","$23a5ba7389596e41$export$5f867cdd96f32de6","$23a5ba7389596e41$export$9fa68e3b105b1d78","$23a5ba7389596e41$export$54028838992fe3b","$23a5ba7389596e41$export$cdedf5e80e896278","$23a5ba7389596e41$export$e30a076ff8a89417","$23a5ba7389596e41$export$16563b59c2de0dfb","$23a5ba7389596e41$export$16e2670c2172c358","$23a5ba7389596e41$export$fe63b48470c62d3d","$6567ddc337657ebf$export$a8ef68f8a1e780d6","severity","$cJPda","Ignore","Info","Warning","warning","errorIconForeground","problemsErrorIconForeground","errorCodiconSelector","warningIconForeground","problemsWarningIconForeground","warningCodiconSelector","infoIconForeground","problemsInfoIconForeground","infoCodiconSelector","$71263f26fb2eaceb$var$__decorate","$71263f26fb2eaceb$var$__param","onRelatedInformation","_openerService","_labelService","_lines","_longestLineLength","_relatedDiagnostics","_messageBlock","_relatedBlock","related","_scrollable","ScrollableElement","horizontal","vertical","horizontalScrollbarSize","onScroll","scrollLeft","scrollTop","source","relatedInformation","sourceAndCodeLength","splitLines","getAriaLabel","applyFontInfo","lastLineElement","detailsElement","sourceElement","codeElement","allowCommands","_codeLink","relatedInformationNode","paddingTop","relatedResource","getUriLabel","relatedMessage","typicalFullwidthCharacterWidth","scrollWidth","scrollHeight","getHeightInLines","MarkerSeverity","severityLabel","ariaLabel","MarkerNavigationWidget","$23a5ba7389596e41$exports","PeekViewWidget","_themeService","_openerService1","_labelService1","_callOnDispose","_onDidSelectRelatedInformation","onDidSelectRelatedInformation","_severity","_backgroundColor","_applyTheme","getColorTheme","onDidColorThemeChange","$71263f26fb2eaceb$export$3ff454faa29df99a","colorId","$71263f26fb2eaceb$export$e8afbd59cc2216b1","headerBackground","$71263f26fb2eaceb$export$7ce14cbf6f020181","$71263f26fb2eaceb$export$fbe68596611d815c","$71263f26fb2eaceb$export$8b66b1de76269f7c","$71263f26fb2eaceb$export$8eb1fe9f58a509","$71263f26fb2eaceb$export$7a14acf93705ae2f","headerBg","peekViewTitleForeground","peekViewTitleInfoForeground","_parentContainer","onBeforeRun","createMenu","TitleMenu","createAndFillInActionBarActions","_icon","_message","$71263f26fb2eaceb$var$MessageWidget","markerIdx","markerCount","computeRequiredHeight","setTitle","toSeverity","revealPositionNearTop","updateMarker","showStale","_heightInPixel","$gmiHd","IOpenerService","$57mFQ","ILabelService","$71263f26fb2eaceb$export$1adcf9ab2c8e605","$71263f26fb2eaceb$var$errorDefault","oneOf","editorErrorForeground","editorErrorBorder","$71263f26fb2eaceb$var$warningDefault","editorWarningForeground","editorWarningBorder","$71263f26fb2eaceb$var$infoDefault","editorInfoBorder","linkFg","textLinkForeground","$c95e45ef70c57c62$var$__decorate","$c95e45ef70c57c62$var$__param","total","MarkerList","resourceFilter","_dispoables","_nextIdx","_resourceFilter","_markers","m","_compareMarker","onMarkerChanged","uris","selected","marker1","$c95e45ef70c57c62$export$9314d9975cbc223","found","idx","findIndex","word","getWordAtPosition","fwd","resetIndex","_initIdx","oldIdx","res","$c95e45ef70c57c62$export$9e40cc7ed7f673d6","_provider","$b4War","LinkedList","getMarkerList","$c95e45ef70c57c62$var$MarkerNavigationService","$06ff6265c2f497b6$var$__decorate","$06ff6265c2f497b6$var$__param","MarkerController","_markerNavigationService","_editorService","_sessionDispoables","$06ff6265c2f497b6$var$CONTEXT_MARKERS_NAVIGATION_VISIBLE","_cleanUp","_widgetVisible","_widget","matches","move","$71263f26fb2eaceb$exports","openCodeEditor","revealIfOpened","collapseToStart","focusEditor","_getOrCreateModel","showAtMarker","multiFile","pinned","selectionRevealType","otherEditor","nagivate","$c95e45ef70c57c62$exports","IMarkerNavigationService","_next","_multiFile","$06ff6265c2f497b6$var$__awaiter","$06ff6265c2f497b6$var$MarkerNavigationAction","$06ff6265c2f497b6$export$b348f165d3989fd9","LABEL","$06ff6265c2f497b6$var$PrevMarkerAction","$06ff6265c2f497b6$export$8934c6507da023eb","$06ff6265c2f497b6$var$NextMarkerInFilesAction","$06ff6265c2f497b6$var$PrevMarkerInFilesAction","$06ff6265c2f497b6$var$MarkerCommand","$f5e8adaf271e6312$var$__decorate","$f5e8adaf271e6312$var$__param","owner","anchor","_hover","_markerDecorationsService","recentMarkerCodeActionsInfo","lineDecorations","maxColumn","getMarker","$f5e8adaf271e6312$export$6c971156836f115","hoverParts","fragment","statusBar","msg","renderMarkerHover","renderMarkerStatusbar","markerHoverForStatusbar","markerHover","hoverElement","$f5e8adaf271e6312$var$$","markerElement","messageElement","whiteSpace","sourceAndCodeElement","codeLink","opacity","paddingLeft","message1","relatedInfoContainer","marginTop","cursor","messageElement1","addAction","$06ff6265c2f497b6$exports","NextMarkerAction","IMarkerData","makeKey","hasCodeActions","quickfixPlaceholderElement","updatePlaceholderDisposable","codeActionsPromise","display","showing","elementPosition","cancellationToken","$e2AXP","IMarkerDecorationsService","$c602dea483f96085$var$__insane_func","o","u","p","r1","require","toMap","allowedAttributes","iframe","img","allowedClasses","allowedSchemes","allowedTags","voids","parser","sanitizer","insane","strict","buffer","configuration","handler","string","assignment","stack","shift","hasOwnProperty","he","lowercase","elements","rstart","rend","rattrs","rtag","rtagend","chars","lastItem","createStack","last","parsePart","substr","substring","parseEdge","parseEndTag","parseStartTag","parseTagDecode","parseTag","same","parser1","match","tag","rest","unary","attrs","low","doubleQuotedValue","singleQuotedValue","unquotedValue","decode","pos","attributes","out","ignore","ignoring","depth","unignore","valid","classesOk","attrsOk","lkey","start1","colon","questionmark","testUrl","encode","transformText","escapes","unescapes","rescaped","runescaped","escapeHtmlChar","unescapeHtmlChar","escapeHtml","unescapeHtml","escape","unescape","version","asKey","accumulator","reduce","$c602dea483f96085$export$b5e3098aab66bd20","global","factory","$04e98ef35285d777$exports","define","amd","globalThis","self","marked","_defineProperties","props","descriptor","_arrayLikeToArray","arr","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","minLen","from","_unsupportedIterableToArray","defaults$5","getDefaults$1","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","getDefaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape$1","fromCharCode","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","rtrim$1","relativeBase","invert","suffLen","currChar","helpers","opt","obj","val","getRegex","prot","decodeURIComponent","encodeURI","tableRow","count","cells","offset","escaped","curr","level","console","warn","pattern","defaults$4","rtrim","splitCells","_escape","findClosingBracket","outputLink","cap","lexer","inLink","inlineTokens","Tokenizer_1","Tokenizer","_proto","space","src","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentCodeCompensation","lang","heading","trimmed","inline","hr","blockquote","blockTokens","istask","ischecked","blankLine","endsWithBlankLine","itemContents","bull","isordered","loose","itemRegex","trimLeft","search","nextBulletRegex","task","trimRight","pre","table","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","nolink","link1","text1","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","text2","codespan","text3","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","text4","text5","prevCapZero","_backpedal","inlineText","text6","noopTest","merge$1","block$1","_paragraph","_title","bullet","listItemStart","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","repeatString","text7","charCodeAt","random","Lexer_1","Lexer","inlineQueue","rules1","lex","lexInline","Constructor","protoProps","staticProps","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","_this2","keepPrevChar","includes","lastIndexOf","startInline","defaults$2","cleanUrl","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer_1","TextRenderer","text8","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","Parser_1","Parser","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","merge","checkSanitizeDeprecation","pending","_tokens","use","_len","_key","hasExtensions","childTokens","pack","ext","prevRenderer","_len2","args1","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_step","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","_iterator","$af1361daaba467c3$var$_a","$af1361daaba467c3$var$_ttpInsane","window","trustedTypes","createPolicy","$af1361daaba467c3$export$4470d2862de02c","markdown","$3OjO7","$iTQUr","cloneAndChange","revive","encodeURIComponent","isDomUri","FileAccess","asBrowserUri","query","with","_uriMassage","signalInnerHTML","withInnerHTML","hrefAsUri","resolvePath","outerHTML","codeBlockRenderer","defaultGenerator","promise","span","querySelector","_err","asyncRenderCallback","actionHandler","$65Xig","DomEmitter","onAuxClick","Event","any","mouseEvent","$cxSpo","StandardMouseEvent","leftButton","middleButton","dataset","markedOptions","markdownEscapeEscapedIcons","renderedMarkdown","innerHTML","$af1361daaba467c3$var$sanitizeRenderedMarkdown","insaneOptions","$af1361daaba467c3$var$getInsaneOptions","createHTML","http","https","mailto","vscodeRemote","$14495219e3896275$var$__decorate","$14495219e3896275$var$__param","MarkdownRenderer","_modeService","_onDidRenderAsync","onDidRenderAsync","_getRenderOptions","disposeables","languageAlias","$14495219e3896275$var$__awaiter","_d","modeId","getModeIdForLanguageName","triggerMode","tokenization","TokenizationRegistry","getPromise","_ttpTokenizer","$40FCP","tokenizeToString","codeBlockFontFamily","$14495219e3896275$var$_a","$c0761d61135ea49c$export$55af7cd5b0fcb54d","HoverProviderRegistry","support","provideHover","hover","$c0761d61135ea49c$var$isValid","hasRange","hasHtmlContent","registerModelAndPositionCommand","$03f5e58149611ea5$var$__decorate","$03f5e58149611ea5$var$__param","$03f5e58149611ea5$export$de7692bd733bd7d2","hoverMessage","asArray","$03f5e58149611ea5$var$__awaiter","rng","hoverPart","contents1","markdownHoverElement","$03f5e58149611ea5$var$$","$14495219e3896275$exports","hoverContentsElement","renderedContents","$gWcyR","IModeService","$703b7e7aef012856$export$ac4df92b1ad807d","priority","equalsRange","canAdoptVisibleHover","lastAnchor","showAtPosition","$703b7e7aef012856$export$93dc41109c362a13","priority1","$4b0d331fde8ede32$var$__decorate","$4b0d331fde8ede32$var$__param","$4b0d331fde8ede32$var$ttPolicy","$4b0d331fde8ede32$var$_a","partsWidget","$4b0d331fde8ede32$var$DecorationsWidget","additionalLinesWidget","$4b0d331fde8ede32$var$AdditionalLinesWidget","viewMoreContentWidget","shouldShowHoverAtViewZone","viewZoneId","ghostText","inlineTexts","addToAdditionalLines","additionalLines","lastLine","$jDENB","LineDecoration","textBufferLine","hiddenTextStartColumn","getLineTokens","lastIdx","parts","preview","setParts","updateLines","additionalReservedLineCount","renderViewMoreLines","firstLineText","remainingLinesLength","$fryaj","Configuration","applyFontInfoSlow","spacer","disposableStore","button","setExpanded","$4b0d331fde8ede32$var$ViewMoreLinesContentWidget","$4b0d331fde8ede32$export$e797bf9cf0ea6fb4","decorationIds","hiddenText","colorTheme","foreground","ghostTextForeground","Format","CSS","$4b0d331fde8ede32$var$opaque","ghostTextBorder","textModel","currentLinePrefix","hiddenTextDecorations","getContextKeyValue","shouldUseInjectedText","renderSingleLineText","$4b0d331fde8ede32$var$registerDecorationType","inlineClassName","decorationType","lineStart","renderWhitespace","newLine","visibleColumnsByColumns","$ckrnJ","CursorColumns","curCol","minReservedLineCount","$4b0d331fde8ede32$var$renderLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderControlCharacters","fontLigatures","sb","$4jjgk","createStringBuilder","lineData","appendASCIIString","isBasicASCII","containsRTL","lineTokens","$3YS6R","LineTokens","createEmpty","$hLi6M","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","middotWidth","wsmiddotWidth","$dL3tR","EditorFontLigatures","OFF","build","trustedhtml","$4b0d331fde8ede32$var$keyCounter","keyPrefix","service","editor3","$c162d40af4a3b72c$export$dee98dd88d502839","renderForScreenReader","lineText","lastPart","$c162d40af4a3b72c$var$applyEdits","$c162d40af4a3b72c$var$PositionOffsetTransformer","lineStartOffsetByLineIdx","getOffset","edits","transformer","offsetEdits","startOffset","endOffset","$c162d40af4a3b72c$export$f79beca728f4fd64","_expanded","onDidChangeEmitter","expanded","$fef62c366b6e30d4$export$8541daa0011329a3","inlineCompletion","cursorPosition","previewSuffixLength","previewStartInModified","valueToBeReplaced","changes","$fef62c366b6e30d4$var$cachingDiff","filteredChanges","originalLength","originalStart","insertColumn","originalText","firstNonWsCol","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","$fef62c366b6e30d4$var$lastRequest","originalValue","newValue","$fef62c366b6e30d4$var$smartDiff","getMaxCharCode","maxCharCode","charCode","getUniqueCharCode","getElements","characters","Int32Array","elements1","$8dc89f1d5e37264a$export$f304190524c0bb06","$f3652033f686f40c$var$__decorate","$f3652033f686f40c$var$__param","completionSession","active","onDidExecuteCommand","UndoCommand","RedoCommand","$1vg0O","CoreEditingCommands","Tab","DeleteLeft","commandId","handleUserInput","onDidType","session","startSessionIfTriggered","scheduleAutomaticUpdate","InlineCompletionTriggerKind","Automatic","triggerKind","Explicit","ensureUpdateWithExplicitContext","$f3652033f686f40c$export$81a2684b4afbcb90","takeOwnership","commitCurrentCompletion","showNext","showNextInlineCompletion","showPrevious","showPreviousInlineCompletion","$f3652033f686f40c$var$__awaiter","hasMultipleInlineCompletions","$c162d40af4a3b72c$export$289c4343a1e3ac0d","shouldUpdate","commandService1","cache1","initialTriggerKind","lastCompletionItem","updateOperation","currentlySelectedCompletionId","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","InlineCompletionsProviderRegistry","updateSoon","completions","semanticId","currentCachedCompletion","fixAndGetIndexOfCurrentSelection","newIdx","completion","toLiveInlineCompletion","$f3652033f686f40c$export$a690b3d58ad2d416","selectedSuggestionInfo","operation","$f3652033f686f40c$export$45edb0d6e62fe8aa","disposable","executeEdits","$esNVa","EditOperation","replaceMove","cache2","completionsSource","onChange","triggerKind1","$f3652033f686f40c$var$CachedInlineCompletion","newRange","synchronizedRange","$f3652033f686f40c$var$getDefaultRange","provideInlineCompletions","freeInlineCompletions","itemsByHash","results","item1","defaultReplaceRange","result1","$bda1e68c956f6e66$export$838684fa70968537","tokenText","_table","isDigitCharacter","isVariableCharacter","isNaN","$bda1e68c956f6e66$export$d9f9145a3d2de879","_children","child","$bda1e68c956f6e66$export$a90b6065d292b1b0","others","newChildren","_fixParent","snippet","$bda1e68c956f6e66$export$5d98cc89ecdf92e7","prev","cur","clone","$bda1e68c956f6e66$export$226eba19a89ded27","$bda1e68c956f6e66$export$607e81148a39a1eb","isFinalTabstop","choice","$bda1e68c956f6e66$export$174083098cc562b2","transform","$bda1e68c956f6e66$export$a1ec6baf9d29daf8","regexp","didMatch","_replace","$bda1e68c956f6e66$export$d163fce3c0a2332a","elseValue","value2","ignoreCase","index1","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","_toCamelCase","index2","$bda1e68c956f6e66$export$7e9566d3013d80a2","$bda1e68c956f6e66$var$walk","visitor","placeholderInfo","_placeholders","walk","placeholders","fullLen","enclosingPlaceholders","placeholder","resolveVariables","$bda1e68c956f6e66$export$912b1c550122cbb6","_scanner","_token","template","insertFinalTabstop","enforceFinalTabstop","_parse","placeholderDefaultValues","incompletePlaceholders","placeholderCount","defaultValues","_accept","_backTo","_until","nextToken","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","_parseTransform","_parseChoiceElement","name1","variable","regexValue","regexOptions","_parseFormatString","complex","shorthand","ifValue1","elseValue1","$061958da8807443f$export$2a59ac32773a53ea","$061958da8807443f$export$baef78a404a940cc","singleFolderIdentifier","$061958da8807443f$export$67f4d0c4e9c14220","workspace","configPath","folders","$0c230725e1174978$var$_data","Uint8Array","$0c230725e1174978$var$_hex","padStart","$0c230725e1174978$var$_fillRandomValues","$0c230725e1174978$export$4b171a31d0d87958","crypto","getRandomValues","bucket","$fff0a2006a8236fd$export$2891f3c923c75643","_delegates","$fff0a2006a8236fd$export$855192e72cadbd2f","_selectionIdx","_overtypingCapturer","isMultiline","getLastOvertypedInfo","multiline","lineLeadingWhitespace","getLeadingWhitespace","varLeadingWhitespace","whitespaceCommonLength","commonPrefixLength","positionColumn","$fff0a2006a8236fd$export$ca635a24a0412381","_model1","$5rixE","dirname","relative","noPrefix","$fff0a2006a8236fd$export$5352b341f536a07c","_readClipboardText","_selectionIdx1","_selectionCount","_spread","isFalsyOrWhitespace","$fff0a2006a8236fd$export$eaceda1299e501c9","_model2","_selection1","getLanguageIdAtPosition","selectionStartLineNumber","selectionStartColumn","config","$8YSNW","LanguageConfigurationRegistry","getComments","lineCommentToken","blockCommentStartToken","blockCommentEndToken","$fff0a2006a8236fd$export$b1b4743ee370b05b","_date","getFullYear","getMonth","valueOf","getDate","getHours","getMinutes","getSeconds","dayNames","getDay","dayNamesShort","monthNames","monthNamesShort","getTime","$fff0a2006a8236fd$export$4165b22d64e545b4","_workspaceService","workspaceIdentifier","getWorkspace","_resolveWorkspaceName","_resoveWorkspacePath","filename","endsWith","folderpath","$fff0a2006a8236fd$export$ca00663510c7b30b","getColorGraceful","snippetTabstopHighlightBackground","snippetTabstopHighlightBorder","snippetFinalTabstopHighlightBackground","snippetFinalTabstopHighlightBorder","$f63e27a70e88e81f$export$169d3ec12ce4b218","_snippet","_offset","_snippetLineLeadingWhitespace","_nestingLevel","_placeholderGroups","groupBy","compareByIndex","_placeholderGroupsIdx","_placeholderDecorations","_initDecorations","placeholderOffset","placeholderLen","getPositionAt","_decor","inactiveFinal","inactive","operations","currentValue","transformedValueLines","normalizeIndentation","getEOL","couldSkipThisPlaceholder","activePlaceholders","_hasPlaceholderBeenCollapsed","changeDecorationOptions","activeFinal","enclosingPlaceholder","placeholder1","isAtFirstPlaceholder","isAtLastPlaceholder","hasPlaceholder","computePossibleSelections","placeholdersWithEqualIndex","ranges","nested","assert","indexLastPlaceholder","nestedPlaceholder","$f63e27a70e88e81f$var$_defaultOptions","overwriteBefore","overwriteAfter","adjustWhitespace","overtypingCapturer","$f63e27a70e88e81f$export$c526d3c43e8526af","template1","_templateMerges","_snippets","_template","adjustIndentation","adjustNewlines","snippetTextString","positionColumnBefore","positionColumnAfter","createWithDirection","getDirection","snippets","workspaceService","invokeWithinContext","$4ujGH","IWorkspaceContextService","optional","modelBasedVariableResolver","readClipboardText","delta","firstBeforeText","adjustSelection","firstAfterText","firstLineFirstNonWhitespace","indexedSelections","extensionBefore","extensionAfter","snippetSelection","setStartPosition","setEndPosition","snippetLineLeadingWhitespace","getOffsetAt","getValueLengthInRange","identifier","major","minor","_logInfo","insert","createEditsAndSnippets","undoEdits","_move","revealPositionInCenterIfOutsideViewport","oneSelection","isSelectionWithinPlaceholders","allPossibleSelections","possibleSelections","size","containsRange","array","$193c9b6d11d6a516$var$__awaiter","$193c9b6d11d6a516$export$1bc6f8c8440b75b9","Visible","DetailsVisible","MultipleSuggestions","MakesTextEdit","isInvalid","score","$8riwg","FuzzyScore","Default","distance","textLabel","labelLow","sortTextLow","sortText","filterText","editStart","editInsertEnd","editReplaceEnd","spansMultipleLines","resolveCompletionItem","_resolveCache","_isResolved","isResolved","sub","onCancellationRequested","snippetSortOrder","kindFilter","providerFilter","showDeprecated","$193c9b6d11d6a516$var$_snippetSuggestSupport","$193c9b6d11d6a516$export$f1ef74409da76c7d","$193c9b6d11d6a516$export$a0cca07e4c4be47","needsClipboard","durations","sw","$io2P9","StopWatch","durations1","needsClipboard1","sw1","suggestion","suggestions","tags","defaultRange","insertTextRules","guessNeedsClipboard","insertText","$193c9b6d11d6a516$export$655bce049a94824c","isDisposable","elapsedProvider","duration","elapsedOverall","elapsed","onCompletionList","CompletionProviderRegistry","orderedGroups","providerGroup","provideCompletionItems","lenBefore","$193c9b6d11d6a516$export$353df38e894ccf6f","$193c9b6d11d6a516$export$d1ebcc31ac1d1910","entries","$193c9b6d11d6a516$var$defaultComparator","$193c9b6d11d6a516$var$_snippetComparators","snippetConfig","$193c9b6d11d6a516$var$snippetUpComparator","$193c9b6d11d6a516$var$snippetDownComparator","triggerCharacter","maxItemsToResolve","isIPosition","$fMNDS","ITextModelService","createModelReference","incomplete","$193c9b6d11d6a516$var$_provider","onlyOnceSuggestions","$193c9b6d11d6a516$export$774bbe6ce5ed341c","$f99a40e1440a6f26$var$__decorate","$f99a40e1440a6f26$var$__param","$f99a40e1440a6f26$var$_defaultOptions","undoStopBefore","undoStopAfter","SnippetController2","_logService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","_hasNextTabstop","HasNextTabstop","HasPrevTabstop","_hasPrevTabstop","_session","_doInsert","pushStackElement","getAlternativeVersionId","_updateState","onDidChangeCursorSelection","_handleChoice","_currentChoice","first","option","finish","$f99a40e1440a6f26$export$84ffae057a773356","$fJKK2","ILogService","$f99a40e1440a6f26$var$CommandCtor","ctrl","$e76a0521966f1f45$var$__decorate","$e76a0521966f1f45$var$__param","$e76a0521966f1f45$export$8c7e63adc9d126ed","topScore","preselect","$e76a0521966f1f45$export$f3ad761b544cca58","memorize","toJSON","_seq","lineSuffix","select","indexPreselect","indexRecency","seq","peek","touch","completionKindFromString","_trie","TernarySearchTree","forStrings","getWordUntilPosition","findSubstr","SuggestMemoryService","_configService","_persistSoon","_saveState","_withStrategy","overrideIdentifier","_strategy","ctor","_strategyCtors","scope","_storagePrefix","fromJSON","$hKCXZ","IConfigurationService","$e4fd399703802238$var$__decorate","$e4fd399703802238$var$__param","SuggestAlternatives","_index","_ckOtherSuggestions","OtherSuggestions","_listener","_acceptNext","_ignore","acceptNext","newIndex","additionalTextEdits","_moveIndex","$63754a27f2316c6b$export$973ce1943ee53f11","leadingLineContent","characterCountDelta","$63754a27f2316c6b$export$6be0861311bd3fcc","lineContext","wordDistance","snippetSuggestions","_snippetCompareFn","_compareCompletionItems","_items","_column","_wordDistance","_refilterKind","_lineContext","_compareCompletionItemsSnippetsUp","_compareCompletionItemsSnippetsDown","_filteredItems","_ensureCachedState","allProvider","_providerInfo","adopt","except","stats","_stats","_createCachedState","labelLengths","leadingLineContent1","characterCountDelta1","wordLow","scoreFn","filterGraceful","fuzzyScore","fuzzyScoreGracefulAggressive","wordLen","wordPos","filterTextLow","compareIgnoreCase","anyScore","pLabelLen","quickSelect","$b25742f058d997da$var$__awaiter","$b25742f058d997da$export$4f43aaf70fb0c0e2","_bracketsLeftYield","counts","_maxRounds","bracket","_bracketsRightYield","isOpen","closing","innerBracket","outerBracket","_addBracketLeading","startLine","aboveLine","column1","$610748486dbe7973$var$__awaiter","localityBonus","$610748486dbe7973$export$a539eb378be1d5a1","$b25742f058d997da$exports","BracketSelectionRangeProvider","provideSelectionRanges","wordRanges","computeWordRanges","wordUntilPos","wordLines","isFalsyOrEmpty","binarySearch","bestWordRange","blockDistance","$6daa15a8395b57a6$var$__decorate","$6daa15a8395b57a6$var$__param","auto","shy","leadingWord","model1","tokenizeIfCheap","$6daa15a8395b57a6$var$shouldPreventQuickSuggest","configurationService","$6daa15a8395b57a6$var$shouldPreventSuggestOnTriggerCharacters","SuggestModel","_editorWorkerService","_clipboardService","_telemetryService","_toDispose","_quickSuggestDelay","_triggerCharacterListener","_triggerQuickSuggest","_completionDisposables","_onDidCancel","_onDidTrigger","_onDidSuggest","onDidCancel","onDidTrigger","onDidSuggest","_telemetryGate","_updateTriggerCharacters","_updateQuickSuggest","_updateActiveSuggestSession","editorIsComposing","onDidCompositionStart","onDidCompositionEnd","_refilterCompletionItems","supportsByTriggerCharacter","triggerCharacters","$193c9b6d11d6a516$exports","getSnippetSuggestSupport","$6daa15a8395b57a6$export$973ce1943ee53f11","shouldAutoTrigger","lastChar","isLowSurrogate","isHighSurrogate","supports","_completionModel","checkTriggerCharacter","_requestToken","prevSelection","_currentSelection","snippetsPreventQuickSuggestions","$f99a40e1440a6f26$exports","isInSnippet","model2","quickSuggestions","tokenType","getStandardTokenType","findTokenIndexAtOffset","strings","ctx","_onNewContext","onlyFrom","auto1","suggestCtx","CancellationTokenSource","itemKind","itemKindFilter","_createSuggestFilter","$610748486dbe7973$exports","WordDistance","provideSuggestionItems","CompletionOptions","completions1","wordDistance1","$6daa15a8395b57a6$var$__awaiter","cmpFn","getSuggestionComparator","ctx1","_reportDurationsTelemetry","debug","suggestOptions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showUsers","showIssues","inactiveProvider","oldLineContext","isFrozen","$jcpnf","IEditorWorkerService","$a07991bc2b05fcb9$export$81e2343ade07f778","$a07991bc2b05fcb9$export$829d340a9542c830","$a07991bc2b05fcb9$export$1f114fddd93353ce","$a07991bc2b05fcb9$export$b175e8250e7ce04e","$a07991bc2b05fcb9$export$77718e369b153454","$a07991bc2b05fcb9$export$d2883e7b4f812476","$a07991bc2b05fcb9$export$d52aa0d894c6cbd4","$a07991bc2b05fcb9$export$cb58a1d31f472e2a","$a07991bc2b05fcb9$export$1834edcd206ac3d6","$a07991bc2b05fcb9$export$f41e9f6087f473b4","$a07991bc2b05fcb9$export$24cb24bebb80f5d0","$a07991bc2b05fcb9$export$6762422e2eebb8e2","$a07991bc2b05fcb9$export$f0a5039a10983147","$a07991bc2b05fcb9$export$8b3abd946a772cce","$a07991bc2b05fcb9$export$4578a91d48abf9c7","$a07991bc2b05fcb9$export$27f10bfc8c839777","$a07991bc2b05fcb9$export$92f840a8d8a54f3e","$a07991bc2b05fcb9$export$217e2eb55069daf5","$a07991bc2b05fcb9$export$542191987bbc02ea","$a07991bc2b05fcb9$export$b5b646007cf33ceb","$a07991bc2b05fcb9$export$ca96eea958c148e3","$a07991bc2b05fcb9$export$f86ef716417e4fca","$a07991bc2b05fcb9$export$4e22c6e80dc76fe5","$a07991bc2b05fcb9$export$b5b312a99166fff1","$a07991bc2b05fcb9$export$653ed87126d93fa7","$a07991bc2b05fcb9$export$92d57af817e48257","$a07991bc2b05fcb9$export$612121a648a403d2","$a07991bc2b05fcb9$export$c3c128965c880b0a","$a07991bc2b05fcb9$export$af7cfbd38ad32f9c","$a07991bc2b05fcb9$export$301dde2c54d312a6","$a07991bc2b05fcb9$export$863537bd84db068d","$a07991bc2b05fcb9$export$e968b5d2fd0fd235","$a07991bc2b05fcb9$export$3cf5368907612652","symbolIconArrayColor","symbolArray","symbolIconBooleanColor","symbolBoolean","symbolIconClassColor","symbolClass","symbolIconMethodColor","symbolMethod","symbolIconColorColor","symbolColor","symbolIconConstantColor","symbolConstant","symbolIconConstructorColor","symbolConstructor","symbolIconEnumeratorColor","symbolValue","symbolEnum","symbolIconEnumeratorMemberColor","symbolEnumMember","symbolIconEventColor","symbolEvent","symbolIconFieldColor","symbolField","symbolIconFileColor","symbolFile","symbolIconFolderColor","symbolFolder","symbolIconFunctionColor","symbolFunction","symbolIconInterfaceColor","symbolInterface","symbolIconKeyColor","symbolKey","symbolIconKeywordColor","symbolKeyword","symbolIconModuleColor","symbolModule","outlineNamespaceColor","symbolNamespace","symbolIconNullColor","symbolNull","symbolIconNumberColor","symbolNumber","symbolIconObjectColor","symbolObject","symbolIconOperatorColor","symbolOperator","symbolIconPackageColor","symbolPackage","symbolIconPropertyColor","symbolProperty","symbolIconReferenceColor","symbolReference","symbolIconSnippetColor","symbolSnippet","symbolIconStringColor","symbolString","symbolIconStructColor","symbolStruct","symbolIconTextColor","symbolText","symbolIconTypeParameterColor","symbolTypeParameter","symbolIconUnitColor","symbolUnit","symbolIconVariableColor","symbolVariable","$e573c077c15ae29c$export$75e44c779155653b","currentSize","_onDidWillResize","onDidWillResize","_onDidResize","onDidResize","_sashListener","_size","Dimension","_minSize","_maxSize","_eastSash","getVerticalSashLeft","_westSash","_northSash","orthogonalEdge","OrthogonalEdge","North","_southSash","South","orthogonalStartSash","orthogonalEndSash","deltaY","deltaX","dimension","currentX","startX","east","west","north","south","onDidReset","_preferredSize","enableSashes","minHeight","minWidth","maxHeight","maxWidth","newSize","clearSashHoverState","maxSize","minSize","preferredSize","$300ecc664a482be7$var$__decorate","$300ecc664a482be7$var$__param","$300ecc664a482be7$export$264e6e3c605b16f0","_onDidChangeContents","onDidChangeContents","_renderDisposeable","_borderWidth","_markdownRenderer","_body","_header","_close","_type","_docs","_configureFont","fontWeight","fontSizePx","lineHeightPx","verticalPadding","horizontalPadding","explainMode","md","commitCharacters","_debugDisplayName","cappedDetail","clientHeight","userSelect","onmousedown","onclick","clearContents","scrollDown","much","scrollUp","scrollBottom","pageDown","topLeftNow","_added","_resizable","deltaTop","deltaLeft","_topLeft","sizeNow","updateTopLeft","_userSize","_anchorBox","_placeAtAnchor","sessionEnded","anchorBox","bodyBox","getClientArea","maxSizeTop","maxSizeBottom","alignAtTop","alignEast","bottom","borderHeight","topLeft","$bb12008279e7561c$var$__decorate","$bb12008279e7561c$var$__param","MenuEntryActionViewItem","$bb12008279e7561c$var$StatusBarViewItem","symbolPrintEnter","_leftActions","_rightActions","_menuDisposables","suggestWidgetStatusbarMenu","right","renderMenu","$49d241c925b67fe1$export$f69a64c2ff8e24f8","FileKind","$82a37cc3df7a3ebf$export$39df4d594d545c0a","modelService","modeService","fileKind","classes","ROOT_FOLDER","FOLDER","DataUri","parseMetaData","META_DATA_LABEL","$82a37cc3df7a3ebf$export$fa5d24454f1f0ba9","basenameOrAuthority","dotSegments","detectedModeId","$82a37cc3df7a3ebf$export$591b32459bd79449","mime","META_DATA_MIME","getModeId","$6VCK7","PLAINTEXT_MODE_ID","getModeIdByFilepathOrFirstLine","$df1a3eab7277c8f2$var$__decorate","$df1a3eab7277c8f2$var$__param","$df1a3eab7277c8f2$var$_a","$df1a3eab7277c8f2$export$93acf61eaf873d2f","$bo1km","registerIcon","chevronRight","ColorExtractor","_regexStrict","_regexRelaxed","_modelService","_onDidToggleDetails","onDidToggleDetails","templateId","root","colorspan","main","iconContainer","supportHighlights","supportIcons","iconLabel","parametersLabel","qualifierLabel","detailsLabel","readMore","asCSSSelector","$df1a3eab7277c8f2$export$29a2dbc0a5bdbcb9","configureFont","labelEscapeNewLines","createMatches","$df1a3eab7277c8f2$var$_completionItemColor","extract","getFileIconTheme","hasFileIcons","labelClasses","FILE","detailClasses","labelOptions","extraClasses","hasFolderIcons","flatten","completionKindToCssClass","setLabel","$df1a3eab7277c8f2$var$stripNewLines","showInlineDetails","$300ecc664a482be7$exports","canExpandCompletionItem","templateData","$df1a3eab7277c8f2$export$f70abe1ebdd56ba9","$e33378ae0f983318$var$__decorate","$e33378ae0f983318$var$__param","$e33378ae0f983318$export$9c6ed30aa38d1259","editorWidgetBackground","$e33378ae0f983318$export$89900e7a3bba95de","editorWidgetBorder","$e33378ae0f983318$export$4857c090d1c88f1e","editorForeground","$e33378ae0f983318$export$64c55f4972ad88d5","quickInputListFocusForeground","$e33378ae0f983318$export$7f79daa9dfd50ad3","quickInputListFocusIconForeground","$e33378ae0f983318$export$6f094281d825e546","quickInputListFocusBackground","$e33378ae0f983318$export$9ddb601c5f0a29c1","listHighlightForeground","$e33378ae0f983318$export$4812d7375c1636c9","listFocusHighlightForeground","_service","getEditorType","is","SuggestWidget","_isAuto","_ignoreFocusEvents","_forceRenderingAbove","_explainMode","_showTimeout","_onDidSelect","_onDidFocus","_onDidHide","_onDidShow","onDidSelect","onDidFocus","onDidHide","onDidShow","_onDetailsKeydown","onDetailsKeyDown","$e33378ae0f983318$export$1730776dedee3e6f","$e33378ae0f983318$var$PersistedWidgetSize","persistedSize","persistHeight","persistWidth","state1","lockPreference","ResizeState","_persistedSize","_resize","itemHeight","defaultSize","threshold","abs","unlockPreference","_messageElement","_listElement","details","SuggestDetailsWidget","_details","SuggestDetailsOverlay","applyIconStyle","showIcons","toggleDetails","_list","$c4eju","List","alwaysConsumeMouseWheel","_isDetailsVisible","docs","getWidgetRole","_status","$bb12008279e7561c$exports","SuggestWidgetStatus","applyStatusBarStyle","showStatusBar","_onThemeChange","_onCursorSelectionChanged","_ctxSuggestWidgetVisible","Context","_ctxSuggestWidgetMultipleSuggestions","_onEditorMouseDown","_loadingTimeout","browserEvent","_select","_onListSelection","indexes","completionModel","_detailsBorderColor","focusBorderColor","focusBorder","_detailsFocusBorderColor","_currentSuggestionDetails","_focusedItem","activeDescendant","$e33378ae0f983318$var$__awaiter","loading","setFocus","showDetails","setAriaOptions","$df1a3eab7277c8f2$exports","getAriaId","_cappedHeight","LOADING_MESSAGE","_show","NO_SUGGESTIONS_MESSAGE","_setState","selectionIndex","isAuto","visibleCount","_layout","focusNextPage","focusNext","focusLast","pageUp","focusPreviousPage","focusPrevious","focusFirst","getFocus","_ctxSuggestWidgetDetailsVisible","_setDetailsVisible","getFocusedElements","renderLoading","renderItem","_positionDetails","resetPersistedSize","dim","minPersistedHeight","setPreference","preferredWidth","typicalHalfwidthCharacterWidth","fullHeight","statusBarHeight","contentHeight","editorBox","cursorBox","cursorBottom","maxHeightBelow","availableSpaceAbove","maxHeightAbove","capped","wanted","forceRenderingAboveRequiredSpace","placeAtAnchor","$aFQfW","clamp","getBoolean","_preferenceLocked","_hidden","_preference","afterRender","_afterRender","matchHighlight","matchHighlightFocus","selectedForeground","selectedIconForeground","linkHover","textLinkActiveForeground","$b78ee64412d1f6a8$var$__decorate","$b78ee64412d1f6a8$var$__param","WordContextKey","_ckAtEnd","AtEnd","_configListener","_selectionListener","_enabled","checkForWordEnd","$59f681e658e9bac9$export$a35d4c30d77bc313","accept","_onItem","getFocusedItem","onWillType","_active","acceptCharacters","$kjFVD","CharacterSet","$f3e7c08eb3f6aba1$export$98c4fd05e04f1d86","suggestModel","_lastOvertyped","_empty","selectionsLength","willOvertype","_maxSelectionLength","$d519ac389007e286$var$__decorate","$d519ac389007e286$var$__param","_marker","SuggestController","_memoryService","_lineSuffix","$6daa15a8395b57a6$exports","insertMode","ctxInsertMode","IdleValue","_insertSuggestion","commitCharacterController","ctxMakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","toKeybinding","$34SiC","SimpleKeybinding","isMacintosh","isModifierKey","_alternatives","$e4fd399703802238$exports","$b78ee64412d1f6a8$exports","showTriggered","$d519ac389007e286$var$LineSuffix","showSuggestions","hideWidget","onDidBlurEditorWidget","$d519ac389007e286$var$_sticky","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","modelVersionNow","tasks","getOverwriteInfo","restoreRelativeVerticalPositionOfCursor","onDidChangeContent","change","thisPosition","oldFlags","didType","typeListener","applied","trace","docListener","$d519ac389007e286$export$69e6e16147b23e86","undo","toggleMode","positionNow","fallback","makesTextEdit","keepAlternativeSuggestions","alternativeOverwriteConfig","acceptNextSuggestion","acceptPrevSuggestion","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","forceRenderingAbove","isInitialized","stopForceRenderingAbove","$e76a0521966f1f45$exports","ISuggestMemoryService","hasCompletionItemProvider","$d519ac389007e286$export$a67f317e65bf305c","triggerSuggest","$d519ac389007e286$var$weight","$d519ac389007e286$var$SuggestCommand","acceptSelectedSuggestion","KeybindingsRegistry","registerKeybindingRule","InsertMode","isEqualTo","registerCommandAlias","cancelSuggestWidget","isObject","$07f83cc038c42c4b$export$a157f964ef2e3e7c","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentInlineCompletion","setInactiveDelayed","onKeyDown","onKeyUp","suggestController","$d519ac389007e286$exports","isBoundToSuggestWidget","bindToSuggestWidget","selectedItemAsInlineCompletion","newActive","newInlineCompletion","getInlineCompletion","shouldFire","suggestController1","focusedItem","$07f83cc038c42c4b$var$suggestionToInlineCompletion","$e1be366af89dcdd3$var$__awaiter","suggestionInlineCompletionSource","updateCacheSoon","updateCache","newGhostText","$e1be366af89dcdd3$var$sum","isSuggestionPreviewEnabled","isActive","$f3652033f686f40c$exports","UpdateOperation","suggestWidgetState","originalInlineCompletion","$e1be366af89dcdd3$export$bb218c0790edf9a4","augmentedCompletion","finalCompletion","previewMode","inlineCompletionPreviewLength","str1","str2","valueToReplace","$e1be366af89dcdd3$var$lengthOfLongestCommonPrefix","commonSuffixLength","$e1be366af89dcdd3$var$lengthOfLongestCommonSuffix","$0a68e26432a2bd1f$export$e43518f9704ab273","object","$bd911c87cb5694a8$var$__decorate","$bd911c87cb5694a8$var$__param","hasCachedGhostText","currentModelRef","targetModel","cachedGhostText","$bd911c87cb5694a8$export$7f173ac6ca689f7c","sharedCache","$bd911c87cb5694a8$export$16d6098ac397859d","suggestWidgetAdapterModel","$e1be366af89dcdd3$exports","SuggestWidgetPreviewModel","inlineCompletionsModel","InlineCompletionsModel","updateModel","setTargetModel","setActive","hoverRange","activeInlineCompletionsModel","commitCurrentSuggestion","SynchronizedInlineCompletionsCache","clearAndLeak","$9274a421f4bfd47c$var$__decorate","$9274a421f4bfd47c$var$__param","GhostTextController","activeController","updateModelController","activeModel","inlineSuggestOptions","triggeredExplicitly","$9274a421f4bfd47c$export$620dd178cdc780e4","shouldShowHoverAt","triggerInlineCompletion","commitInlineCompletion","hideInlineCompletion","$9274a421f4bfd47c$var$__awaiter","$9274a421f4bfd47c$export$db179af5c12607a7","inlineSuggestionVisible","inlineSuggestionHasIndentation","inlineCompletionSuggestsIndentation","instantiationService1","contextKeyService1","contextKeys","$9274a421f4bfd47c$var$GhostTextContextKeys","$bd911c87cb5694a8$exports","GhostTextModel","$4b0d331fde8ede32$exports","GhostTextWidget","inlineCompletionVisible","updateContextKeys","inIndentation","getLineIndentColumn","suggestionStartsWithWs","$9274a421f4bfd47c$export$ff8949e1d73bc0b6","$9274a421f4bfd47c$var$GhostTextCommand","$5rFiY","tabMovesFocus","$9274a421f4bfd47c$export$3b90ed5c9c39da53","$9274a421f4bfd47c$export$e7d1983ec9cadc87","$00656410f353222c$var$__decorate","$00656410f353222c$var$__param","isValidForHoverAnchor","controller1","$9274a421f4bfd47c$exports","viewZoneData","positionBefore","mightBeForeignElement","$00656410f353222c$export$d624202ffb8f4528","isScreenReaderOptimized","renderScreenReaderText","InlineCompletionsActions","previousAction","ShowNextInlineSuggestionAction","nextAction","ShowPreviousInlineSuggestionAction","commitInlineSuggestionAction","hasMultipleSuggestions","hasMore","inlineSuggestionAvailable","replaceChildren","$0ea3823a9469b937$export$3ae0e8973df6411c","color1","availableColorPresentations","presentationIndex","_onColorFlushed","onColorFlushed","_onDidChangeColor","onDidChangeColor","_onDidChangePresentation","onDidChangePresentation","originalColor","_colorPresentations","presentation","colorPresentations","selectNextColorPresentation","flushColor","guessColorPresentation","$d52c2a769853e89b$var$$","$d52c2a769853e89b$export$b0be74936fde19cf","pickedColorNode","colorBox","editorHoverBackground","isLighter","$d52c2a769853e89b$export$ef9992d5d7adf902","pixelRatio","saturationBox","$d52c2a769853e89b$var$SaturationBox","onDidSaturationValueChange","opacityStrip","$d52c2a769853e89b$var$OpacityStrip","onDidOpacityChange","hueStrip","$d52c2a769853e89b$var$HueStrip","onDidHueChange","hsva","HSVA","h","container2","pixelRatio1","canvas","addDisposableGenericMouseDownListner","origin","onDidChangePosition","offsetX","offsetY","posy","mouseUpListener","addDisposableGenericMouseUpListner","stopMonitoring","paintSelection","offsetWidth","offsetHeight","paint","saturatedColor","getContext","whiteGradient","createLinearGradient","addColorStop","blackGradient","rect","fillStyle","fill","isMonitoring","$d52c2a769853e89b$var$Strip","container3","model3","overlay","slider","updateSliderPosition","onDidChangeTop","container4","model4","opaque","container5","model5","$d52c2a769853e89b$export$cd51be3452d696a5","$9thXV","Widget","container6","model6","pixelRatio2","themeService1","onDidChangeZoomLevel","$680e92a7cb15b3db$var$__decorate","$680e92a7cb15b3db$var$__param","forceShowAtRange","$680e92a7cb15b3db$export$8281fba23b864a56","$6322cb0bf4abb7ba$exports","colorDetector","getColorData","$680e92a7cb15b3db$var$__awaiter","$680e92a7cb15b3db$export$a7b4b72c1507badd","colorHover","textEdits","textEdit","_getTrackedRange","trackedRange","forceMoveMarkers","updateColorPresentations","setColorPicker","$85741a246f1697f6$var$__decorate","$85741a246f1697f6$var$__param","_hasContent","$85741a246f1697f6$var$$","hasContent","actionsElement","_participants","_result","_anchor","setAnchor","getLineDecorations","isWholeLine","$85741a246f1697f6$var$__awaiter","$85741a246f1697f6$var$ModesContentComputer","_getLineDecorations","allResults","_computeAsync","participant","isFromSynchronousComputation","createLoadingMessage","loadingMessage","ModesContentHoverWidget","_hoverVisibleKey","$680e92a7cb15b3db$exports","ColorHoverParticipant","$00656410f353222c$exports","InlineCompletionsHoverParticipant","$f5e8adaf271e6312$exports","MarkerHoverParticipant","_isVisible","_stoleFocus","_renderDisposable","onkeydown","_showAtPosition","_showAtRange","_messages","_lastAnchor","_highlightDecorations","_isChangingDecorations","_shouldFocus","_hoverOperation","_withResult","FOCUS","_colorPicker","BLUR","_renderMessages","targetType","isAfterLines","horizontalDistanceToText","epsilon","anchorCandidates","suggestHoverAnchor","_shouldShowAt","showAtRange","_startShowingAt","getElementsByClassName","_updateFont","clearResult","startShowingAtRange","filteredMessages","isColorPickerVisible","complete","messages","renderColumn","highlightRange","createDocumentFragment","$85741a246f1697f6$var$EditorHoverStatusBar","participantHoverParts","renderHoverParts","hasChildNodes","_showAt","_updateContents","_DECORATION_OPTIONS","$10b8aaf8f43f23c6$export$2e6a1489981a354c","_showAtLineNumber","updateFont","showAt","editorLayout","topForLineNumber","editorScrollTop","getScrollTop","glyphMarginLeft","glyphMarginWidth","updateContents","$14da35d30beeca37$var$MarginComputer","_lineNumber","setLineNumber","toHoverMessage","glyphMarginClassName","glyphMarginHoverMessage","$14da35d30beeca37$export$2cc1e799d2b38527","openerService","NullOpenerService","_renderDisposeables","_lastLineNumber","onModelDecorationsChanged","startShowingAt","$ad1cf26c7434e34f$var$__awaiter","isProviderFirst","_rangeCallback","_range","targetSelectionRange","ariaMessage","getPreview","$ad1cf26c7434e34f$export$5176dc2eaa49239d","_modelReference","textEditorModel","beforeRange","afterRange","inside","before","_previews","ResourceMap","ref","textModelResolverService","_onDidChangeReferenceRange","onDidChangeReferenceRange","_links","providersFirst","$ad1cf26c7434e34f$export$6bc4f63abc79cecc","_compareReferences","extUri","current","$ad1cf26c7434e34f$export$4ddaaf83f2285591","oneRef","$ad1cf26c7434e34f$export$4013f11d3f3efa91","reference","parent2","childCount","groupCount","prefixLen","offsetDist","nearest","$77f02dbf6b1d8294$var$__awaiter","$77f02dbf6b1d8294$var$getLocationLinks","registry","provide","$77f02dbf6b1d8294$export$3215d5e306b1d931","DefinitionProviderRegistry","provideDefinition","$77f02dbf6b1d8294$export$7cf2e45ab44aefc7","DeclarationProviderRegistry","provideDeclaration","$77f02dbf6b1d8294$export$d1a6eb7f4127dfb5","ImplementationProviderRegistry","provideImplementation","$77f02dbf6b1d8294$export$48fcf6d3b16ff831","TypeDefinitionProviderRegistry","provideTypeDefinition","compact","ReferenceProviderRegistry","provideReferences","includeDeclaration","resultWithoutDeclaration","$77f02dbf6b1d8294$var$_sortedAndDeduped","$ad1cf26c7434e34f$exports","ReferencesModel","rawLinks","modelLinks","$95b55a6967899d1c$var$__decorate","$95b55a6967899d1c$var$__param","$95b55a6967899d1c$export$fc182e2999442e8d","_resolverService","FileReferences","$95b55a6967899d1c$export$dbfd4be771ae7ae8","getHeight","getTemplateId","$95b55a6967899d1c$export$884eedab5e44ab2d","$95b55a6967899d1c$export$37eba2268f02bd40","OneReference","$95b55a6967899d1c$export$6da001418758a72a","_uriLabel","$jgRfa","IconLabel","badge","$lRkiY","CountBadge","$6hi0a","attachBadgeStyler","setCount","setTitleFormat","FileReferencesRenderer","renderTemplate","$95b55a6967899d1c$var$FileReferencesTemplate","renderElement","filterData","$95b55a6967899d1c$export$b4a01395692df0b4","$95b55a6967899d1c$var$OneReferenceTemplate","$29Iu9","HighlightedLabel","isDefault","disposeTemplate","$95b55a6967899d1c$export$26c4c0246e45485e","getWidgetAriaLabel","$68cdfba6a1c63b5b$var$__decorate","$68cdfba6a1c63b5b$var$__param","_decorationIgnoreSet","_callOnModelChange","_onModelChanged","removeDecorations","onDidChangeDecorations","_onDecorationChanged","newDecorationsActualIndex","oneReference","$68cdfba6a1c63b5b$var$DecorationsManager","DecorationOptions","toRemove","ratio","$iXfcw","WorkbenchAsyncDataTree","_defaultTreeKeyboardSupport","layoutData","_textModelResolverService","_peekViewService","_undoRedoService","_disposeOnNewModel","_onDidSelectReference","onDidSelectReference","_dim","addExclusiveWidget","setModel","_preview","_previewNotAvailableMessage","_tree","_previewModelReference","_splitView","peekViewBorder","peekViewTitleBackground","revealRangeInCenterIfOutsideViewport","focusOnReferenceTree","domFocus","focusOnPreviewEditor","_getFocusedReference","ctrlKey","metaKey","containerElement","_messageContainer","$lEnKF","SplitView","_previewContainer","verticalScrollbarSize","useShadows","verticalHasArrows","horizontalHasArrows","DEFAULT_CREATION_OPTIONS","_treeContainer","treeOptions","keyboardSupport","accessibilityProvider","$95b55a6967899d1c$exports","AccessibilityProvider","StringRepresentationProvider","selectionNavigation","listBackground","peekViewResultsBackground","dispatchEvent","$68cdfba6a1c63b5b$var$ReferencesTree","Delegate","OneReferenceRenderer","DataSource","addView","Sizing","Distribute","maximumSize","MAX_VALUE","onDidSashChange","getViewSize","onDidOpen","sideBySide","onEvent","editorOptions","_revealReference","newModel","_onNewModel","_decorationsManager","rerender","setInput","revealParent","$68cdfba6a1c63b5b$var$__awaiter","_revealedReference","inMemory","getInput","reveal","expand","scrollType","sel","revealRangeInCenter","IPeekViewService","$ghkPo","IUndoRedoService","findMatchHighlightColor","peekViewResultsMatchHighlight","referenceHighlightColor","peekViewEditorMatchHighlight","referenceHighlightBorder","peekViewEditorMatchHighlightBorder","hcOutline","activeContrastBorder","resultsBackground","resultsMatchForeground","peekViewResultsMatchForeground","resultsFileForeground","peekViewResultsFileForeground","resultsSelectedBackground","peekViewResultsSelectionBackground","resultsSelectedForeground","peekViewResultsSelectionForeground","$9cdbc497702eeede$var$__decorate","$9cdbc497702eeede$var$__param","ReferencesController","_requestIdPool","_ignoreModelChangeEvent","$9cdbc497702eeede$export$cebf9c0ca03ee425","_referenceSearchVisible","modelPromise","peekMode","closeWidget","_peekMode","storageKey","$68cdfba6a1c63b5b$exports","LayoutData","ReferenceWidget","openReference","requestId","setMetaTitle","nearestReference","isPreviewEditorFocused","$9cdbc497702eeede$var$__awaiter","currentPosition","nextOrPreviousReference","previewEditorFocus","_gotoReference","editorFocus","revealReference","openedEditor","toggleWidget","$9cdbc497702eeede$var$withController","fn","outerEditor","getOuterEditor","$9cdbc497702eeede$export$d14faaa1a6756bc","registerCommandAndKeybindingRule","KeyChord","or","not","WorkbenchListFocusContextKey","lastFocusedList","$6aced3ecd30b0fa4$var$__decorate","$6aced3ecd30b0fa4$var$__param","_currentModel","_currentIdx","_ignoreEditorChange","_ctxHasSymbols","$6aced3ecd30b0fa4$export$a33c3258e72337c5","_currentState","_currentMessage","refModel","_showMessage","editorState","$6aced3ecd30b0fa4$var$EditorState","getActiveCodeEditor","seenUri","seenPosition","combinedDisposable","status","$6aced3ecd30b0fa4$export$bc1d707775f3c367","$6aced3ecd30b0fa4$var$SymbolNavigationService","revealNext","editorService","onCodeEditorRemove","_onDidRemoveEditor","onCodeEditorAdd","_onDidAddEditor","listCodeEditors","$93506384bfcb5f37$var$__awaiter","$93506384bfcb5f37$var$_a","$93506384bfcb5f37$var$_b","$93506384bfcb5f37$var$_c","$93506384bfcb5f37$var$_d","$93506384bfcb5f37$var$_e","$93506384bfcb5f37$var$_f","$93506384bfcb5f37$var$_g","$93506384bfcb5f37$var$_h","EditorContextPeek","$93506384bfcb5f37$var$_goToActionIds","$93506384bfcb5f37$var$registerGoToAction","registerInstantiatedEditorAction","_configuration","symbolNavService","$6aced3ecd30b0fa4$exports","ISymbolNavigationService","EditorStateCancellationTokenSource","raceCancellation","_getLocationModel","altAction","referenceAt","altActionId","_getAlternativeCommand","referenceCount","muteMessage","_getNoResultFoundMessage","_onResult","gotoLocation","_getGoToPreference","openInPeek","firstReference","targetEditor","_openReference","openToSide","_openInPeek","isLocationLink","modelNow","ids","$9cdbc497702eeede$exports","$93506384bfcb5f37$var$SymbolNavigationAction","$77f02dbf6b1d8294$exports","getDefinitionsAtPosition","alternativeDefinitionCommand","multipleDefinitions","isStandalone","GoToDefinitionAction","$93506384bfcb5f37$export$7a34275a882b2788","hasDefinitionProvider","isInWalkThroughSnippet","$93506384bfcb5f37$var$goToDefinitionKb","OpenDefinitionToSideAction","PeekDefinitionAction","linux","getDeclarationsAtPosition","alternativeDeclarationCommand","multipleDeclarations","GoToDeclarationAction","$93506384bfcb5f37$var$DeclarationAction","hasDeclarationProvider","getTypeDefinitionsAtPosition","alternativeTypeDefinitionCommand","multipleTypeDefinitions","GoToTypeDefinitionAction","$93506384bfcb5f37$var$TypeDefinitionAction","hasTypeDefinitionProvider","PeekTypeDefinitionAction","getImplementationsAtPosition","alternativeImplementationCommand","multipleImplementations","GoToImplementationAction","$93506384bfcb5f37$var$ImplementationAction","hasImplementationProvider","PeekImplementationAction","$93506384bfcb5f37$var$ReferencesAction","alternativeReferenceCommand","multipleReferences","hasReferenceProvider","_references","_gotoMultipleBehaviour","constraint","multiple","noResultsMessage","isCodeEditor","accessor1","$93506384bfcb5f37$var$GenericGoToLocationAction","control","$6oM28","getReferencesAtPosition","references1","appendMenuItems","$84fb4b97a3c44ff8$var$hasModifier","modifier","$84fb4b97a3c44ff8$export$e9719c57df1ec529","hasTriggerModifier","triggerModifier","hasSideBySideModifier","triggerSideBySideModifier","isNoneOrSingleMouseDown","$84fb4b97a3c44ff8$export$6ee2fe3b4b3a92ff","source1","opts1","keyCodeIsTriggerKey","keyCode","triggerKey","keyCodeIsSideBySideKey","triggerSideBySideKey","$84fb4b97a3c44ff8$export$9ba31c8cb84cdbaf","$84fb4b97a3c44ff8$var$createOptions","multiCursorModifier","$84fb4b97a3c44ff8$export$f6796705852f924d","_onMouseMoveOrRelevantKeyDown","onMouseMoveOrRelevantKeyDown","_onExecute","onExecute","_onCancel","onCancel","_opts","_lastMouseMoveEvent","_hasTriggerKeyOnMouseDown","_lineNumberOnMouseDown","newOpts","_onEditorMouseMove","onMouseUp","_onEditorMouseUp","_onEditorKeyDown","_onEditorKeyUp","onMouseDrag","_resetHandler","_onDidChangeCursorSelection","scrollLeftChanged","currentLineNumber","$b124b2cc3b6dc5df$var$__decorate","$b124b2cc3b6dc5df$var$__param","GotoDefinitionAtPositionEditorContribution","toUnhook","toUnhookForKeyboard","linkDecorations","currentWordAtPosition","previousPromise","linkGesture","keyboardEvent","startFindDefinitionFromMouse","withNullAsUndefined","gotoDefinition","removeLinkDecorations","startFindDefinition","withKey","EditorState","findDefinition","previewValue","getPreviewValue","wordRange","originSelectionRange","rangeToUse","getPreviewRangeBasedOnBrackets","MAX_SOURCE_PREVIEW_LINES","getPreviewRangeBasedOnIndentation","stripIndentationFromPreviewRange","previewRange","minIndent","endIndent","startIndent","ignoreFirstEmpty","currentBracket","lastBracket","nextLineNumber","nextColumn","canPeek","isInPeekEditor","$93506384bfcb5f37$exports","DefinitionAction","$b124b2cc3b6dc5df$export$239f7a1a36e76786","$e86c8cc089964cfc$var$__decorate","$e86c8cc089964cfc$var$__param","ModesHoverController","_toUnhook","_isMouseDown","_hoverClicked","_glyphWidget","_unhookEvents","_hookEvents","hoverVisible","hideWidgetsEventHandler","_hideWidgets","hoverOpts","_isHoverEnabled","onDidChangeModelDecorations","_onModelDecorationsChanged","_onKeyDown","_onEditorScrollChanged","_e","_isHoverSticky","maybeShowAt","_getOrCreateContentWidget","$85741a246f1697f6$exports","showContentHover","_didChangeConfigurationHandler","$e86c8cc089964cfc$export$950763aa65c4524d","$b124b2cc3b6dc5df$exports","startFindDefinitionFromCursor","$e86c8cc089964cfc$var$ShowHoverAction","$e86c8cc089964cfc$var$ShowDefinitionPreviewHoverAction","editorHoverHighlightColor","editorHoverHighlight","hoverBackground","hoverBorder","editorHoverBorder","hoverForeground","editorHoverForeground","actionsBackground","editorHoverStatusBarBackground","$a1cf070b851924c5$export$261d0851d4f29291","hoverController","$e86c8cc089964cfc$exports","$af8056e6052ff3d1$export$d597884efd4f40e1","selection1","insertSpace1","_insertSpace","_usedEndToken","haystack","needle","needleLength","codeA","codeB","_createOperationsForBlockComment","startToken","endToken","insertSpace","startLineText","endLineText","startTokenIndex","endTokenIndex","startLineAfterStartToken","endLineBeforeEndToken","_createRemoveBlockCommentOperations","_createAddBlockCommentOperations","addTrackedEditOperation","inverseEditOperations","getInverseEditOperations","startTokenEditOperation","endTokenEditOperation","srcRange","deltaColumn","$fdc1988c43580f02$export$dd3de507458fa652","tabSize1","type1","ignoreEmptyLines1","ignoreFirstLine1","_tabSize","_selectionId","_deltaColumn","_moveEndPositionDown","_ignoreEmptyLines","_ignoreFirstLine","commentStr","commentStrLength","ignoreEmptyLines","ignoreFirstLine","shouldRemoveComments","onlyWhitespaceLines","lineContentStartOffset","firstNonWhitespaceIndex","commentStrOffset","_haystackHasNeedleAtOffset","commentStrEndOffset","supported","_gatherPreflightCommentStrings","_analyzeLines","_createRemoveLineCommentsOperations","_normalizeInsertionPoint","_createAddLineCommentsOperations","trackSelection","startTokenAllowedBeforeColumn","_attemptRemoveBlockComment","_gatherPreflightData","_executeLineComments","_executeBlockComment","getTrackedSelection","afterCommentStr","currentVisibleColumn","isTab","columnSize","minVisibleColumn","$3290e4c5f4cb0299$var$CommentLineAction","modelOptions","commentsOptions","$3290e4c5f4cb0299$var$ToggleCommentLineAction","menuOpts","$3290e4c5f4cb0299$var$AddLineCommentAction","$3290e4c5f4cb0299$var$RemoveLineCommentAction","$3290e4c5f4cb0299$var$BlockCommentAction","$839791ac3cd3f562$var$__decorate","$839791ac3cd3f562$var$__param","ContextMenuController","_contextViewService","onContextMenu","_onContextMenu","onMouseWheel","_contextMenuIsBeingShownCount","view","getContextViewElement","srcElement","shadowRoot","getShadowRoot","hideContextView","hasSelectionAtPosition","_getMenuActions","isSimpleWidget","_doShowContextMenu","addedItems","subActions","isIOS","_keybindingFor","isMenu","customActionViewItem","wasCancelled","IContextViewService","$2d36587e79001b4f$var$CursorState","thisLen","equalsSelection","$2d36587e79001b4f$var$StackElement","cursorState","$2d36587e79001b4f$export$270099f8959609f2","_isCursorUndoRedo","_undoStack","_redoStack","oldSelections","oldModelVersionId","modelVersionId","prevState","getScrollLeft","cursorUndo","_applyState","cursorRedo","stackElement","setScrollPosition","$2d36587e79001b4f$export$2bb33a171a72f0ab","$2d36587e79001b4f$export$357a5f196248dac2","$125d336b77453de5$export$2d77c2a29ce6ee73","targetPosition","copy","targetSelection","$1bc96da9285dbf0e$var$hasTriggerModifier","$1bc96da9285dbf0e$export$5ba66723926c32ee","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onEditorKeyDown","onEditorKeyUp","onEditorBlur","onDidBlurEditorText","_dndDecorationIds","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","mouseStyle","TRIGGER_KEY_VALUE","_hitContent","_hitMargin","primarySelection","$f9819512fea022bc$export$77ee42369f19921","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","_allDecorations","getCount","getFindScope","getFindScopes","scopes","findScopeDecorationId","newStartPosition","setCurrentFindMatch","_getDecorationIndex","getCurrentMatchesPosition","desiredRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","nextMatch","newCurrentDecorationId","matchPosition","lineBeforeEnd","lineBeforeEndMaxColumn","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","approxPixelsPerLine","mergeLinesDelta","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","matchAfterPosition","zIndex","showIfCollapsed","overviewRulerFindMatchForeground","minimapFindMatch","MinimapPosition","Inline","$51866284f5a35741$export$d13ad2869d522b09","editorSelection","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","o1","o2","resultOps","previousOp","$4c5d981986873c46$export$6fd4a4ac4a1c8616","containsHyphens","$4c5d981986873c46$var$validateSpecificSpecialCharacter","containsUnderscores","$4c5d981986873c46$var$buildReplaceStringForSpecificSpecialCharacter","containsUppercaseCharacter","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","staticValue","$0b0d74f927f6009c$var$DynamicPiecesReplacePattern","pieces","pieces1","$0b0d74f927f6009c$var$StaticValueReplacePattern","$0b0d74f927f6009c$export$ba92250419b831d2","hasReplacementPatterns","preserveCase","piece","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","remainder","caseOps1","staticValue1","$0b0d74f927f6009c$export$ecb1e55c6ef635aa","_source","_lastCharIndex","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","emitStatic","$0b0d74f927f6009c$export$9f1d0c7f20a5aa40","caseOps2","$0b0d74f927f6009c$var$ReplacePieceBuilder","chCode","nextChCode","emitMatchIndex","matchIndex1","nextNextChCode","$8bde66c1d38ee606$export$8b25206025e28aaf","$8bde66c1d38ee606$export$3b1ee0ca5860cd6c","$8bde66c1d38ee606$export$88cb74dd22fd9364","$8bde66c1d38ee606$export$d065474c35bbc600","$8bde66c1d38ee606$export$91250ca630e7e5d3","$8bde66c1d38ee606$export$643f2c09151233e5","$8bde66c1d38ee606$export$921bd387d50986c9","$8bde66c1d38ee606$export$e905ae9dc09cb4e2","$8bde66c1d38ee606$export$2e58a49a639fc212","StartFindAction","StartFindWithSelection","NextMatchFindAction","PreviousMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","CloseFindWidgetCommand","ToggleCaseSensitiveCommand","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction","$8bde66c1d38ee606$export$15b4c206d8a7ae66","$8bde66c1d38ee606$var$RESEARCH_DELAY","$8bde66c1d38ee606$export$4c88abbaa9e306d","_startSearchingTimer","_updateDecorationsScheduler","research","_ignoreModelContentChanged","isFlush","onFindReplaceStateChange","_onStateChanged","searchScope","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","getFullModelRange","newFindScope","_findMatches","currentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","cursorMoveOnType","_moveToNextMatch","_hasMatches","matchesCount","_cannotFind","_setCurrentFindMatch","matchesPosition","_prevSearchPosition","isUsingLineStops","_moveToPrevMatch","isRecursed","canNavigateBack","nextMatchRange","prevMatchRange","searchRange","_getSearchRange","prevMatch","findPreviousMatch","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_getReplacePattern","fromStaticValue","replacePattern","buildReplaceString","_executeEditorCommand","limitResultCount","searchRanges","replaceAll","_largeReplaceAll","_regularReplaceAll","searchData","$8hT6h","SearchParams","parseSearchRequest","searchRegex","modelText","fullModelRange","resultText","ReplaceCommandThatPreservesSelection","selectAllMatches","$c345bcfc36f535e0$var$defaultOpts","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","$c345bcfc36f535e0$export$871dbf7ac6c25eac","_onChange","_checked","isChecked","CSSIcon","actionClassName","notFocusable","applyStyles","ev","ignoreGesture","getAttribute","newIsChecked","enable","disable","$f25f5905e0955d64$var$NLS_CASE_SENSITIVE_CHECKBOX_LABEL","$f25f5905e0955d64$var$NLS_WHOLE_WORD_CHECKBOX_LABEL","$f25f5905e0955d64$var$NLS_REGEX_CHECKBOX_LABEL","$f25f5905e0955d64$export$a2a199185ad6f50a","caseSensitive","appendTitle","$f25f5905e0955d64$export$a99af3aaffb80076","$f25f5905e0955d64$export$2c9fbd485d72ad06","opts2","$59e54ee9fa7d0af5$export$850100d03279d402","_hideSoon","_hide","inputActiveOptionBorderColor","inputActiveOptionForegroundColor","inputActiveOptionBackgroundColor","_keybindingLabelFor","wholeWords","somethingChanged","isRevealed","_revealTemporarily","addDisposableNonBubblingMouseOutListener","_onMouseOut","_onMouseOver","actionId","highlightFindOptions","inputStyles","widgetBackground","widgetForeground","editorWidgetForeground","widgetShadowColor","widgetShadow","hcBorder","$ae931b9418976f1d$var$effectiveOptionValue","override","$ae931b9418976f1d$export$e6f50d4dd54a3902","_onFindReplaceStateChange","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegex","_isRegexOverride","_wholeWord","_wholeWordOverride","_matchCase","_matchCaseOverride","_preserveCase","_preserveCaseOverride","_searchScope","_matchesPosition","_matchesCount","_currentMatch","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","currentMatch","changeEvent","updateHistory","loop","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","newSearchScope","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","$042879feea0df79c$var$NLS_DEFAULT_LABEL","$042879feea0df79c$export$f6c5d0e086bdc5bc","contextViewProvider","_showOptionButtons","fixFocusOnOptionClickEnabled","imeSessionInProgress","_onDidOptionChange","onDidOptionChange","_onMouseDown","_onInput","_onKeyUp","_onCaseSensitiveKeyDown","onCaseSensitiveKeyDown","_onRegexKeyDown","onRegexKeyDown","_lastHighlightFindOptions","validation","inputBackground","inputForeground","inputBorder","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","history","flexibleHeight","flexibleWidth","flexibleMaxHeight","inputBox","$iUz7J","HistoryInputBox","validationOptions","viaKeyboard","paddingRight","activeElement","controls","inputElement","onkeyup","oninput","setFocusInputOnOptionClick","setValue","checkBoxStyles","inputBoxStyles","getCaseSensitive","setCaseSensitive","getWholeWords","setWholeWords","setRegex","focusOnCaseSensitive","clearMessage","hideMessage","$36ea5f7b114fc730$var$NLS_DEFAULT_LABEL","$36ea5f7b114fc730$var$NLS_PRESERVE_CASE_LABEL","$36ea5f7b114fc730$export$f4bca68e0f1209fd","$36ea5f7b114fc730$export$a144676e90876dfe","cachedOptionsWidth","_onPreserveCaseKeyDown","onPreserveCaseKeyDown","appendPreserveCaseLabel","getPreserveCase","setPreserveCase","focusOnPreserve","newWidth","$9982059eabb9c695$var$__decorate","$9982059eabb9c695$var$__param","$9982059eabb9c695$var$HistoryNavigationForwardsEnablementContext","$9982059eabb9c695$var$HistoryNavigationBackwardsEnablementContext","$9982059eabb9c695$var$bindContextScopedWidget","contextKey","$9982059eabb9c695$var$createWidgetScopedContextKeyService","createScoped","$9982059eabb9c695$var$getContextScopedWidget","$9982059eabb9c695$export$e80e7fc7e2e1eefe","scopedContextKeyService","historyNavigationForwardsEnablement","historyNavigationBackwardsEnablement","showFindOptions","$9982059eabb9c695$export$af63f104a1a591a4","contextViewProvider1","showReplaceOptions","$9982059eabb9c695$export$a2bc549e77499702","$9982059eabb9c695$export$a9de88ba31c512da","historyNavigator","$9bf3dc1cf2aac916$var$__awaiter","$9bf3dc1cf2aac916$var$findSelectionIcon","$9bf3dc1cf2aac916$var$findCollapsedIcon","$9bf3dc1cf2aac916$var$findExpandedIcon","chevronDown","$9bf3dc1cf2aac916$export$4d470f20ee9322c9","$9bf3dc1cf2aac916$export$52ccf957742ce1a","$9bf3dc1cf2aac916$export$7999797c1f410735","arrowUp","$9bf3dc1cf2aac916$export$836fa8c70534f008","arrowDown","$9bf3dc1cf2aac916$var$NLS_FIND_INPUT_LABEL","$9bf3dc1cf2aac916$var$NLS_FIND_INPUT_PLACEHOLDER","$9bf3dc1cf2aac916$var$NLS_PREVIOUS_MATCH_BTN_LABEL","$9bf3dc1cf2aac916$var$NLS_NEXT_MATCH_BTN_LABEL","$9bf3dc1cf2aac916$var$NLS_TOGGLE_SELECTION_FIND_TITLE","$9bf3dc1cf2aac916$var$NLS_CLOSE_BTN_LABEL","$9bf3dc1cf2aac916$var$NLS_REPLACE_INPUT_LABEL","$9bf3dc1cf2aac916$var$NLS_REPLACE_INPUT_PLACEHOLDER","$9bf3dc1cf2aac916$var$NLS_REPLACE_BTN_LABEL","$9bf3dc1cf2aac916$var$NLS_REPLACE_ALL_BTN_LABEL","$9bf3dc1cf2aac916$var$NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","$9bf3dc1cf2aac916$var$NLS_MATCHES_COUNT_LIMIT_TITLE","$9bf3dc1cf2aac916$export$809972f6bbad3980","$9bf3dc1cf2aac916$export$5a3ab6b8069a9376","$9bf3dc1cf2aac916$var$FIND_WIDGET_INITIAL_WIDTH","$9bf3dc1cf2aac916$var$PART_WIDTH","$9bf3dc1cf2aac916$var$FIND_INPUT_AREA_WIDTH","$9bf3dc1cf2aac916$var$MAX_MATCHES_COUNT_WIDTH","$9bf3dc1cf2aac916$var$FIND_INPUT_AREA_HEIGHT","$9bf3dc1cf2aac916$var$stopPropagationForMultiLineUpwards","textarea","selectionStart","$9bf3dc1cf2aac916$var$stopPropagationForMultiLineDownwards","selectionEnd","codeEditor","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_ctrlEnterReplaceAllWarningPrompted","$9bf3dc1cf2aac916$var$ctrlEnterReplaceAllWarningPromptedKey","_isReplaceVisible","_updateHistoryDelayer","Delayer","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","updateAccessibilitySupport","addExtraSpaceOnTop","$9bf3dc1cf2aac916$export$ddb61e7583e312b","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","getGlobalBufferTerm","globalBufferTerm","_findInput","trackFocus","_findFocusTracker","_findInputFocused","_updateSearchScope","onDidBlur","_replaceInput","_replaceFocusTracker","_replaceInputFocused","_layoutViewZone","_ignoreChangeEvent","_reveal","getTotalWidth","_tryUpdateHeight","_toggleSelectionFind","showRedOutline","_updateMatchesCount","_delayedUpdateHistory","_updateHistory","addToHistory","firstChild","removeChild","createTextNode","_getAriaLabel","clientWidth","isSelection","_closeBtn","_prevBtn","findInputIsNonEmpty","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","canReplace","isSelectionMultipleLine","layoutOverlayWidget","seedSearchStringFromSelection","startCoords","startLeft","startTop","adjustEditorScrollTop","leftOfFindWidget","getTopLeftOffset","endCoords","focusTheEditor","targetScrollTop","viewZone","_getHeight","setScrollTop","adjustScroll","newHeight","scrollAdjustment","isInDOM","contentWidth","editorWidth","reducedFindWidget","narrowFindWidget","collapsedFindWidget","_resized","findInputWidth","totalheight","totalHeight","$9bf3dc1cf2aac916$var$ctrlKeyMod","insertAtCursor","_sash","$9982059eabb9c695$exports","ContextScopedFindInput","_onFindInputKeyDown","onDidHeightChange","_onFindInputMouseDown","onTrigger","findPart","$9bf3dc1cf2aac916$export$23e6ff72db94143e","widgetClose","ContextScopedReplaceInput","_onReplaceInputKeyDown","replacePart","replaceActionsContainer","originalWidth","parseFloat","getComputedStyle","currentWidth","addBackgroundColorRule","selector","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","findMatchHighlightBorder","editorFindMatchHighlightBorder","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","$d788e04a18051b64$var$__decorate","$d788e04a18051b64$var$__param","$d788e04a18051b64$var$SEARCH_STRING_MAX_LENGTH","$d788e04a18051b64$export$de5cbc82d68f9df1","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","CommonFindController","_findWidgetVisible","loadQueryState","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","updateSearchScope","setGlobalBufferTerm","isFindInputFocused","getState","ignoreWhenVisible","stateChanges","selectionSearchString","currentSelections","$d788e04a18051b64$var$__awaiter","globalFindClipboard","readFindText","writeFindText","$d788e04a18051b64$export$942aab87df2c03","clipboardService1","_findOptionsWidget","_createFindWidget","focusReplaceInput","focusFindInput","$d788e04a18051b64$export$5258ca8b5063fbe4","registerMultiEditorAction","MultiEditorAction","_run","$d788e04a18051b64$export$bcd90166b712a56a","setSearchString","$d788e04a18051b64$export$e599865336ca69be","$d788e04a18051b64$export$c5e56e30241fe78f","currentSelection","findInputFocused","shouldAnimate","$d788e04a18051b64$export$87dc48cae38f9e9c","$d788e04a18051b64$export$bdafdafdbb77ca0","$d788e04a18051b64$export$8f306a713da663ab","$d788e04a18051b64$export$7d7c54ed599974e2","$d788e04a18051b64$export$ad355e20d7b85c88","$d788e04a18051b64$var$FindCommand","win","$b20df8fc0cf6847e$export$3e67012dba56c5d7","$b20df8fc0cf6847e$export$cd21b7b591a5fca5","$b20df8fc0cf6847e$var$MASK_INDENT","$b20df8fc0cf6847e$export$b66fa21e19d1ed85","startIndexes","endIndexes","types","_startIndexes","_endIndexes","_collapseStates","Uint32Array","_types","_parentsComputed","ensureParentIndices","parentIndexes","isInsideLast","getStartLineNumber","getEndLineNumber","parentIndex","getType","hasTypes","isCollapsed","arrayIndex","bit","setCollapsed","setCollapsedAllOfType","toRegion","$b20df8fc0cf6847e$export$1b8ef6daae02ccc1","getParentIndex","high","mid","findRange","regionIndex","containedBy","containsLine","$4d1b89c48e9f30e1$export$817831822d62585d","decorationProvider","_updateEventEmitter","_textModel","_decorationProvider","_regions","_editorDecorationIds","_isInitialized","regions","toggleCollapseState","toggledRegions","r2","processed","dirtyRegionEndLine","lastHiddenLine","updateDecorationsUntil","getDecorationOption","region","editorDecorationId","newCollapseState","collapseStateChanged","newRegions","blockedLineNumers","newEditorDecorations","initRange","blockedLineNumber","isBlocked","decorationRange","nextCollapsed","collapsedIndex","decRange","collapsedStartLineNumber","collapsedRanges","toToogle","getRegionAtLine","levelStack","$4d1b89c48e9f30e1$export$7ffd28588c15a7f3","foldingModel","levels","lineNumbers","regionsInside","getRegionsInside","doCollapse","toToggle","$4d1b89c48e9f30e1$export$8454f44f04ce35da","getAllRegionsAtLine","$4d1b89c48e9f30e1$export$3d952ea619d9cc89","foldLevel","blockedLineNumbers","filteredRegions","filteredRegion","$4d1b89c48e9f30e1$export$cf1d0f18ddaacc0a","regExp","$4d1b89c48e9f30e1$export$bf491a24d6b4f8f1","$4d1b89c48e9f30e1$export$dbc108b821b60576","foldingRegion","parentFoldingIdx","$4d1b89c48e9f30e1$export$8c199948e052b7e","minLineNumber","expectedParentIndex","$4d1b89c48e9f30e1$export$8bb1e6a817617368","$1567e24727850329$export$befe30d66e9d90a7","$1567e24727850329$export$371828234d346455","$1567e24727850329$export$600d9a46c9aff73b","autoHideFoldingControls","showFoldingHighlights","isHidden","HIDDEN_RANGE_DECORATION","COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION","COLLAPSED_VISUAL_DECORATION","EXPANDED_AUTO_HIDE_VISUAL_DECORATION","EXPANDED_VISUAL_DECORATION","oldDecorations","afterContentClassName","firstLineDecorationClassName","$4410a70728a7ae97$export$336f42945d9951d5","_foldingModel","_foldingModelListener","updateHiddenRanges","_hiddenRanges","hiddenRanges","updateHiddenAreas","newHiddenAreas","lastCollapsedStart","lastCollapsedEnd","applyHiddenRanges","applyMemento","hasRanges","$4410a70728a7ae97$var$findRange","hasChanges","lastRange","adjustLine","$4410a70728a7ae97$var$isInside","adjustedStartLine","adjustedEndLine","$a45dc406d90838ee$var$MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT","$a45dc406d90838ee$export$32f344938f91c1d0","$a45dc406d90838ee$export$8310967ef394fbab","compute","cancelationToken","foldingRules","getFoldingRules","offSide","markers","$a45dc406d90838ee$export$de3a23e7886a0fb2","$a45dc406d90838ee$export$de6a05fa847adb9d","foldingRangesLimit","_indentOccurrences","_length","_foldingRangesLimit","insertFirst","toIndentRanges","maxIndent","foldingRangesLimit1","previousRegions","endAbove","previous","$94e2671f1a1b1ff2$var$MAX_FOLDING_REGIONS","$94e2671f1a1b1ff2$var$foldingContext","$94e2671f1a1b1ff2$export$905e18d1938b800e","$94e2671f1a1b1ff2$export$f0beb96d06896719","handleFoldingRangesChange","limit","$94e2671f1a1b1ff2$var$collectSyntaxRanges","$94e2671f1a1b1ff2$export$6e1ac799bb52131b","providers1","rangeData","provideFoldingRanges","nLines","rank","$94e2671f1a1b1ff2$export$de6a05fa847adb9d","_nestingLevels","_nestingLevelCounts","nestingLevel","maxLevel","limit1","sorted","d1","d2","diff","$49b6331423ec509e$export$38337a40008a67d2","$49b6331423ec509e$export$9cce0dc804c461d","initialRanges","onTimeout","timeoutTime","toDecorationRange","getLineLength","timeout","foldingRangeData","$6f5aa5dd6ba5a288$var$__decorate","$6f5aa5dd6ba5a288$var$__param","FoldingController","localToDispose","_useFoldingProviders","_unfoldOnClickAfterEndOfLine","_restoringViewState","_currentModelHasFoldedImports","_foldingImportsByDefault","hiddenRangeModel","rangeProvider","foldingRegionPromise","foldingStateMemento","foldingModelPromise","updateScheduler","cursorChangedScheduler","mouseDownInfo","foldingDecorationProvider","foldingEnabled","onModelContentChanged","onFoldingStrategyChanged","getMemento","collapsedRegions","foldedImports","restoreViewState","isTooLargeForTokenization","getFoldingModel","foldingModel1","revealCursor","onCursorPositionChanged","onEditorMouseDown","onEditorMouseUp","FoldingRangeProviderRegistry","foldingProviders","getRangeProvider","FoldingRangeKind","Imports","selectionLineNumbers","adjustSelections","setHiddenAreas","offsetLeftInGutter","offsetLeft","iconClicked","otherRegion","toMaybeToggle","recursive","$6f5aa5dd6ba5a288$export$f48ee02e56422569","foldingController","reportTelemetry","invoke","selectionLines","getSelectedLines","$6f5aa5dd6ba5a288$var$foldingArgumentsConstraint","isUndefined","foldingArgs","isNumber","direction","isString","$6f5aa5dd6ba5a288$var$FoldingAction","$6f5aa5dd6ba5a288$var$CONTEXT_FOLDING_ENABLED","_foldingController","getLineNumbers","$4d1b89c48e9f30e1$export$83d9da8117ea5665","_args","$4d1b89c48e9f30e1$export$8791ee845b96345e","selectedLines","Comment","Region","getFoldingLevel","$6f5aa5dd6ba5a288$var$FoldLevelAction","ID_PREFIX","$6f5aa5dd6ba5a288$var$GotoParentFoldAction","$6f5aa5dd6ba5a288$var$GotoPreviousFoldAction","$6f5aa5dd6ba5a288$var$GotoNextFoldAction","$6f5aa5dd6ba5a288$var$UnfoldAction","$6f5aa5dd6ba5a288$var$UnFoldRecursivelyAction","$6f5aa5dd6ba5a288$var$FoldAction","$6f5aa5dd6ba5a288$var$FoldRecursivelyAction","$6f5aa5dd6ba5a288$var$FoldAllAction","$6f5aa5dd6ba5a288$var$UnfoldAllAction","$6f5aa5dd6ba5a288$var$FoldAllBlockCommentsAction","$6f5aa5dd6ba5a288$var$FoldAllRegionsAction","$6f5aa5dd6ba5a288$var$UnfoldAllRegionsAction","$6f5aa5dd6ba5a288$var$FoldAllRegionsExceptAction","$6f5aa5dd6ba5a288$var$UnfoldAllRegionsExceptAction","$6f5aa5dd6ba5a288$var$ToggleFoldAction","$6f5aa5dd6ba5a288$export$a76a5b6868218b3a","editorSelectionBackground","$6f5aa5dd6ba5a288$export$66e5a5a20f035b48","iconForeground","$2cbe1b7e6f6cecc1$var$EditorFontZoomIn","$2osBx","EditorZoom","setZoomLevel","getZoomLevel","$2cbe1b7e6f6cecc1$var$EditorFontZoomOut","$2cbe1b7e6f6cecc1$var$EditorFontZoomReset","$20a0394a72820d15$var$__decorate","$20a0394a72820d15$var$__param","_workerService","OnTypeFormattingEditProviderRegistry","_callOnModel","autoFormatTriggerCharacters","triggerChars","lastCharCode","unbind","getOnTypeFormattingEdits","getFormattingOptions","$d7qHd","FormattingEdit","execute","$ezj06","alertFormattingEdits","$20a0394a72820d15$var$FormatOnType","DocumentRangeFormattingEditProviderRegistry","onDidPaste","formatDocumentRangesWithSelectedProvider","notInCompositeEditor","hasDocumentFormattingProvider","formatDocumentWithSelectedProvider","hasDocumentSelectionFormattingProvider","$20a0394a72820d15$var$__awaiter","$20a0394a72820d15$var$FormatOnPaste","$20a0394a72820d15$var$FormatDocumentAction","$20a0394a72820d15$var$FormatSelectionAction","$c171a1802d51068c$export$b6118fb22805ab7","candidateId","$c171a1802d51068c$export$1549495ef8615ed1","$c171a1802d51068c$export$d065f2b97556c88f","$c171a1802d51068c$export$a2bb76a30b60ab46","_groups","_keys","for","_requests","promiseCnt","_create","_requestDurations","DocumentSymbolProviderRegistry","id2","findId","displayName","provideDocumentSymbols","_makeOutlineElement","empty","newProvider","_compact","childInfo","$hh8Di","Iterable","getTopLevelSymbols","roots","child1","asListOfDocumentSymbols","_flattenDocumentSymbols","overrideContainerLabel","containerName","selectionRange","_counter","_hash","$2c8a3f6218d9b22b$var$__awaiter","flat","$2c8a3f6218d9b22b$export$3683f83959f96c84","$e197adb7eef5556f$export$220c6b735169bdc6","spacesCnt","$e197adb7eef5556f$export$41a94d243985c1ff","tabsCnt","$cb266cfed519af0b$export$4249d19cb88a2a5a","inheritedIndent","indentationRules","getIndentationRules","unIndentedLinePattern","indentSize","shiftIndent","indentation","$dpETH","ShiftCommand","unshiftIndent","globalIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","decreaseIndentPattern","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","adjustedLineContent1","$cb266cfed519af0b$export$a24fc0204e5b8e8e","modelOpts","$cb266cfed519af0b$export$a91a0205d188a0ff","$cb266cfed519af0b$export$aa1dddc3c31864bd","$cb266cfed519af0b$export$f891785a5dfc6562","$cb266cfed519af0b$export$fbf8df59b02b6c70","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","placeHolder","activeItem","$cb266cfed519af0b$export$d1f0c119e5a3d1af","$cb266cfed519af0b$export$f225789dbe6e2ae7","$cb266cfed519af0b$export$a44330f003d72ca9","detectIndentation","$cb266cfed519af0b$export$ea97b68a6b217c0e","$cb266cfed519af0b$export$e28b9b1fa0c986ea","editOperations","$cb266cfed519af0b$export$2ef0066567001b37","initialSelection","_initialSelection","_edits","edit1","selectionIsSet","$cb266cfed519af0b$export$26709b45c815a201","callOnDispose","callOnModel","isCheapToTokenize","autoIndent","insertSpaces1","indentConverter","shouldIgnoreLine","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","newIndent","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","originalIndent","cmd","forceTokenization","nonWhitespaceColumn","firstNonWhitespaceTokenIndex","$cb266cfed519af0b$var$getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","lastIndentationColumn","originalIndentationRange","originalIndentation","newIndentation","selectionId","$a5590485e66c0b3b$var$__decorate","$a5590485e66c0b3b$var$__param","$a5590485e66c0b3b$export$6b21487fa6b57e2f","$a5590485e66c0b3b$var$__awaiter","InlayHintsProviderRegistry","provideInlayHints","itemsInRange","hint","datas","_sessionDisposables","_getInlayHintsDelays","_removeAllDecorations","visibleRanges","getVisibleRangesPlusViewportAboveBelow","_updateHintsDecorators","providerListener","onDidChangeInlayHints","hintsData","editorInlayHintBackground","fontColor","editorInlayHintForeground","newDecorationsTypeIds","newDecorationsData","hints","$a5590485e66c0b3b$var$MAX_DECORATORS","whitespaceBefore","whitespaceAfter","marginBefore","marginAfter","$a5590485e66c0b3b$var$fixSpace","borderRadius","_decorationsTypeIds","editorFontSize","$a5590485e66c0b3b$export$65ded08ec616fde","$8806e3c050eb2224$export$2222c60f05bbeebc","editRange","originalSelection","_editRange","_originalSelection","$3d53bb434f8d6244$var$__decorate","$3d53bb434f8d6244$var$__param","InPlaceReplaceController","editorWorkerService","up","currentRequest","canNavigateValueSet","modelURI","navigateValueSet","DECORATION","decorationRemover","$3d53bb434f8d6244$var$InPlaceReplaceController","$3d53bb434f8d6244$var$InPlaceReplaceUp","$3d53bb434f8d6244$var$InPlaceReplaceDown","$070c02b2fce01307$export$3ae9293178a697d1","cursors","_cursors","$070c02b2fce01307$export$78a41d29a9bbfb99","cursors1","rLen","cursorIndex","cursorLen","maxLineColumn","minEditColumn","lastNonWhitespaceIndex","fromColumn","$9afb7d7a420b6d78$export$6ee1ef8a1f46bd43","isCopyingDown","noop","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","sourceLines","sourceText","$49bdbf4584608f58$export$a4507748301b35a5","isMovingDown","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","buildIndentConverter","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","indentOfMovingLine","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","oldIndent","parseEnterResult","enter","enterPrefix","indentAction","$dCRAV","IndentAction","Indent","IndentOutdent","Outdent","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","getEnterAction","validPrecedingLine","oneLineAbove","previousLineText","languageAtSelectionStart","getIndentRulesSupport","$dcc79ea31a32abbe$export$1d1dd349625f668d","descending1","descending","_COLLATOR","Intl","Collator","$dcc79ea31a32abbe$var$sortLines","$dcc79ea31a32abbe$var$getSortData","selection2","descending2","linesToSort","getCollator","$eceb9fd621eb3f9a$var$AbstractCopyLinesAction","down","$eceb9fd621eb3f9a$var$CopyLinesUpAction","MenubarSelectionMenu","$eceb9fd621eb3f9a$var$CopyLinesDownAction","$eceb9fd621eb3f9a$export$c33a19779e136441","insertSelection","ReplaceCommandThatSelectsText","$eceb9fd621eb3f9a$var$AbstractMoveLinesAction","down1","$eceb9fd621eb3f9a$var$MoveLinesUpAction","$eceb9fd621eb3f9a$var$MoveLinesDownAction","$eceb9fd621eb3f9a$export$a98016c756b03729","canRun","$eceb9fd621eb3f9a$export$58f65c5a335cf11e","$eceb9fd621eb3f9a$export$8d7a278e2715e517","$eceb9fd621eb3f9a$export$b2e30811789716e5","$eceb9fd621eb3f9a$export$383e26edf04ba42c","_getLinesToRemove","linesDeleted","mergedOperations","previousOperation","$eceb9fd621eb3f9a$export$b979e62dba4079d0","viewModel","_getViewModel","$5oZDA","TypeOperations","cursorConfig","$eceb9fd621eb3f9a$var$OutdentLinesAction","runEditorCommand","$eceb9fd621eb3f9a$export$59fdf363ad8cf052","lineInsertBefore","$eceb9fd621eb3f9a$export$58e456bcf1af40e","lineInsertAfter","$eceb9fd621eb3f9a$export$4e8cb3faacd95fe0","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","nextRange","endCursorState","_getEndCursorState","$eceb9fd621eb3f9a$export$8f11cda26b829cfe","endPrimaryCursor","deletedLines","endCursor","newStartLine","deleteFromLine","deleteFromColumn","$eceb9fd621eb3f9a$export$9c405282d0460146","$eceb9fd621eb3f9a$export$1fd6139849068091","reducedSelections","lastSelection","previousValue","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","lineTextWithoutIndent","deleteSelection","resultSelection","$eceb9fd621eb3f9a$export$b73fed4918dccb30","$eceb9fd621eb3f9a$export$51c7ec2789846c2b","wordSeparators","_modifyText","$eceb9fd621eb3f9a$export$1e6903c854b09807","$eceb9fd621eb3f9a$export$c961fe1812e5970a","$eceb9fd621eb3f9a$export$4fcac9920b12fb8f","excludedChars","startUpperCase","currentChar","$eceb9fd621eb3f9a$var$BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","isSupported","$eceb9fd621eb3f9a$export$905c2f43d0d0a5e","regExp1","regExp2","$96d21bf9e7c28c41$var$__decorate","$96d21bf9e7c28c41$var$__param","LinkedEditingContribution","_debounceDuration","_visibleContextKey","$96d21bf9e7c28c41$export$cdc8f7ac7354bb3","_currentDecorations","_languageWordPattern","_currentWordPattern","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestModelVersion","reinitialize","forceRefresh","LinkedEditingRangeProviderRegistry","clearRanges","getWordDefinition","onDidChangeLanguageConfiguration","triggerRangeUpdate","rangeUpdateScheduler","updateRanges","triggerRangeSync","rangeSyncScheduler","_syncRanges","referenceRange","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","_currentRequestPosition","$96d21bf9e7c28c41$var$__awaiter","response","$96d21bf9e7c28c41$var$getLinkedEditingRanges","wordPattern","foundReferenceRange","$96d21bf9e7c28c41$var$DECORATION_CLASS_NAME","hasRenameProvider","runCommand","$96d21bf9e7c28c41$export$be68fd3977acff6b","$96d21bf9e7c28c41$var$LinkedEditingCommand","orderedByScore","provideLinkedEditingRanges","$96d21bf9e7c28c41$export$54fcefa33e0f0cda","editorLinkedEditingBackgroundColor","$cf3c898067ae717c$var$__awaiter","_link","resolveLink","tuples","newLinks","$cf3c898067ae717c$export$454c04d8f1b76440","$cf3c898067ae717c$export$ca0457eeaa51340a","_union","oldLinks","oldIndex","oldLen","oldLink","newLink","$cf3c898067ae717c$export$42c2c6c220442c","LinkProviderRegistry","provider2","provideLinks","lists","list1","$fdd53b143458c41f$var$__decorate","$fdd53b143458c41f$var$__param","$fdd53b143458c41f$var$getHoverMessage","useMetaKey","executeCmd","nativeLabel","collapseOnReplaceEdit","$fdd53b143458c41f$var$LinkOccurrence","_getOptions","$fdd53b143458c41f$var$decoration","general","activate","LinkDetector","listenersToRemove","clickLinkGesture","cleanUpActiveLinkDecoration","onModelModeChanged","activeLinksList","currentOccurrences","activeLinkDecorationId","$fdd53b143458c41f$var$__awaiter","$cf3c898067ae717c$exports","getLinks","computePromise","decorationId1","occurance","getLinkOccurrence","occurrence","deactivate","openLinkOccurrence","fromUserGesture","link2","modelUri","parsedUri","originalFSPath","relativePath","joinPath","allowContributedOpeners","messageOrError","currentOccurrence","linkDetector","$fdd53b143458c41f$export$1d534606c9ae12d1","$fdd53b143458c41f$var$OpenLinkAction","$002fd2e40ef60780$var$announceCursorChange","previousCursorState","cursorDiff","cs","pcs","cursorPositions","viewState","$002fd2e40ef60780$export$a60e6fe8fd56d05b","useLogicalLine","logicalLine","readOnly","getCursorStates","setCursorStates","$d7BUb","CursorMoveCommands","addCursorUp","revealTopMostCursor","$002fd2e40ef60780$export$67af8c1d05cf45aa","addCursorDown","revealBottomMostCursor","$002fd2e40ef60780$var$InsertCursorAtEndOfEachLineSelected","getCursorsForSelection","currentLineMaxColumn","$002fd2e40ef60780$var$InsertCursorAtEndOfLineSelected","$002fd2e40ef60780$var$InsertCursorAtTopOfLineSelected","$002fd2e40ef60780$export$70ef8e935195842d","selections1","revealScrollType","$002fd2e40ef60780$export$708fa463677641d3","findController1","isDisconnectedFromFindController","searchText","findController","findState","wholeWord1","matchCase1","isDisconnectedFromFindController1","searchText1","currentMatch1","addSelectionToNextFindMatch","allSelections","moveSelectionToNextFindMatch","lastAddedSelection","addSelectionToPreviousFindMatch","previousMatch","_getPreviousMatch","moveSelectionToPreviousFindMatch","selectAll","$002fd2e40ef60780$export$3233d1122bc10fa9","_sessionDispose","_ignoreSelectionChange","_endSession","_beginSessionIfNeeded","_setSelections","_expandEmptyToWord","_applySessionResult","getSession","$002fd2e40ef60780$var$modelRangesContainSameText","resultingSelections","states","inSelection","$002fd2e40ef60780$export$a8ebc4941c5f77ad","multiCursorController","findController2","$d788e04a18051b64$exports","$002fd2e40ef60780$export$61e53c495685f055","$002fd2e40ef60780$export$88054d813dfca22d","$002fd2e40ef60780$export$8f497aeeaa88c599","$002fd2e40ef60780$export$52d5c13a295b5a5b","$002fd2e40ef60780$export$558e7c1d14f011f7","$002fd2e40ef60780$export$ad3702dd6e1b4fb","contextMenuOpts","$002fd2e40ef60780$var$SelectionHighlighterState","$002fd2e40ef60780$export$88c73484bef7a578","_createState","matchCase2","findStateSearchString","mySearchString","allMatches","selections2","lenJ","cmp","areIntersecting","hasFindOccurrences","_SELECTION_HIGHLIGHT","_SELECTION_HIGHLIGHT_OVERVIEW","selectedText","$002fd2e40ef60780$var$getValueInRange","$470980d66a37e414$var$__awaiter","SignatureHelpProviderRegistry","provideSignatureHelp","SignatureHelpTriggerKind","Invoke","isRetrigger","$2f9fe1ab94602cfa$var$__awaiter","Pending","previouslyActiveHints","Active","$2f9fe1ab94602cfa$var$ParameterHintState","delay1","$2f9fe1ab94602cfa$export$dfcb5f2875b14f25","DEFAULT_DELAY","_onChangedHints","onChangedHints","triggerOnType","_pendingTriggers","_lastSignatureHelpResult","retriggerChars","triggerId","throttledDelayer","onModelContentChange","onEditorConfigurationChange","doTrigger","signatures","activeSignature","cycle","updateActiveSignature","activeSignatureHelp","getLastActiveHints","$2f9fe1ab94602cfa$var$mergeTriggerContexts","triggerContext","$470980d66a37e414$exports","isTriggered","signatureHelpTriggerCharacters","ch1","signatureHelpRetriggerCharacters","lastCharIndex","triggerCharCode","TriggerCharacter","ContentChange","$4ace4fd90123e9f0$var$__decorate","$4ace4fd90123e9f0$var$__param","$4ace4fd90123e9f0$var$$","chevronUp","ParameterHintsWidget","renderDisposeables","announcedLabel","markdownRenderer","$2f9fe1ab94602cfa$exports","ParameterHintsModel","keyVisible","MultipleSignatures","newParameterHints","wrapper","$4ace4fd90123e9f0$var$parameterHintsPreviousIcon","overloads","$4ace4fd90123e9f0$var$parameterHintsNextIcon","scrollbar","signature","domNodes","updateMaxHeight","createParameterHintDOMNodes","keyMultipleSignatures","hasParameters","activeParameterIndex","activeParameter","renderParameters","renderMarkdownDocs","hasDocs","param","labelToAnnounce","assertIsDefined","getParameterLabelOffsets","beforeSpan","paramSpan","afterSpan","paramIdx","$65a3e524e1a6c8b1$var$__decorate","$65a3e524e1a6c8b1$var$__param","ParameterHintsController","$4ace4fd90123e9f0$exports","hasSignatureHelpProvider","$65a3e524e1a6c8b1$var$ParameterHintsController","$65a3e524e1a6c8b1$export$43115826e1ddb15a","$65a3e524e1a6c8b1$var$weight","$65a3e524e1a6c8b1$var$ParameterHintsCommand","$bc84e295284cd0ef$var$__decorate","$bc84e295284cd0ef$var$__param","_acceptKeybindings","$bc84e295284cd0ef$export$f30e27d37f1a2463","_updateStyles","_input","boxShadow","borderStyle","cancelInput","acceptInput","wantsPreview","_currentAcceptInput","_currentCancelInput","supportPreview","newName","disposeOnDone","revealLineInCenterIfOutsideViewport","setSelectionRange","$f0f5c5272907102a$var$__decorate","$f0f5c5272907102a$var$__param","_providerRenameIdx","RenameProviderRegistry","hasProvider","_providers","rejects","resolveRenameLocation","rejectReason","$f0f5c5272907102a$var$__awaiter","_provideRenameEdits","provideRenameEdits","$f0f5c5272907102a$export$a8efddd6831a5199","skeleton","$f0f5c5272907102a$var$RenameSkeleton","loc","RenameController","_bulkEditService","_dispoableStore","_cts","resolveLocationOperation","hasPreviewHandler","inputFieldResult","_renameInputField","renameResult","ResourceEdit","convert","showPreview","quotableLabel","ariaSummary","renameOperation","acceptRenameInput","$lrIbv","ITextResourceConfigurationService","$f0f5c5272907102a$var$RenameController","$f0f5c5272907102a$export$e39e542f74f8d72","$f0f5c5272907102a$var$RenameCommand","$bc84e295284cd0ef$exports","CONTEXT_RENAME_INPUT_VISIBLE","cancelRenameInput","as","$3UWU0","Extensions","registerConfiguration","$f00b71e65c59286a$export$25d319f8602c6458","_addInWordRanges","_addWordRanges","_addWhitespaceLine","lastCh","isLowerAsciiLetter","isUpperAsciiLetter","getLineLastNonWhitespaceColumn","$8973205f4c1364c5$var$__awaiter","$8973205f4c1364c5$var$SelectionRanges","$8973205f4c1364c5$var$SmartSelectController","SelectionRangeRegistry","$8973205f4c1364c5$export$faf59da8742346ab","ranges1","ranges2","_ignoreSelection","forward","$8973205f4c1364c5$var$AbstractSmartSelect","work","allProviderRanges","allRawRanges","oneProviderRanges","oneRawRanges","oneRanges","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","rangeNoWhitespace","rangeFull","$8973205f4c1364c5$var$GrowSelectionAction","$8973205f4c1364c5$var$ShrinkSelectionAction","$2ea8801f41c1f9de$var$ForceRetokenizeAction","resetTokenization","log","$6c8ee8b45a3d280d$export$b98205eee1642f49","$jMEt7","TabFocus","getTabFocusMode","setTabFocusMode","$b4581c4cc361145c$var$__decorate","$b4581c4cc361145c$var$__param","$b4581c4cc361145c$var$ignoreUnusualLineTerminators","$b4581c4cc361145c$var$writeIgnoreState","setModelProperty","$b4581c4cc361145c$var$readIgnoreState","getModelProperty","_dialogService","_config","_checkForUnusualLineTerminators","isUndoing","$b4581c4cc361145c$var$__awaiter","removeUnusualLineTerminators","confirm","primaryButton","secondaryButton","$1FrWB","IDialogService","$16ecdebf3744e05b$var$__decorate","$16ecdebf3744e05b$var$__param","_tokenizeViewport","_tokenizeViewportNow","_outstandingRequests","_cancelAll","DocumentRangeSemanticTokensProviderRegistry","affectsConfiguration","$fLTzv","SEMANTIC_HIGHLIGHTING_SETTING_ID","req","isSemanticColoringEnabled","hasSomeSemanticTokens","setSemanticTokens","_requestRange","styling","requestVersionId","provideDocumentRangeSemanticTokens","_removeOutstandingRequest","$01571aed631a50b4$var$__decorate","$01571aed631a50b4$var$__param","$01571aed631a50b4$var$editorWordHighlight","$01571aed631a50b4$var$editorWordHighlightStrong","$01571aed631a50b4$var$editorWordHighlightBorder","$01571aed631a50b4$var$editorWordHighlightStrongBorder","$01571aed631a50b4$var$overviewRulerWordHighlightForeground","$01571aed631a50b4$var$overviewRulerWordHighlightStrongForeground","$01571aed631a50b4$var$ctxHasWordHighlights","$01571aed631a50b4$export$d0893903319c2985","DocumentHighlightProviderRegistry","provideDocumentHighlights","_wordRange","_getCurrentWordRange","_compute","wordSeparators1","currentWordRange","requestIsValid","$01571aed631a50b4$var$OccurenceAtPositionRequest","wordSeparators2","DocumentHighlightKind","Text","currentSelectionIsEmpty","$01571aed631a50b4$var$computeOccurencesAtPosition","selection3","wordSeparators3","$01571aed631a50b4$var$SemanticOccurenceAtPositionRequest","workerRequestTokenId","workerRequestCompleted","workerRequestValue","lastCursorPositionChangeTime","renderDecorationsTimer","_hasWordHighlights","_ignorePositionChangeEvent","occurrencesHighlight","_onPositionChanged","_stopAll","workerRequest","hasDecorations","_getSortedHighlights","highlights","dest","_getWord","workerRequestIsValid","_beginRenderDecorations","currentTime","minimumRenderTime","renderDecorations","$01571aed631a50b4$var$WordHighlighter","_getDecorationOptions","Write","_WRITE_OPTIONS","_TEXT_OPTIONS","_REGULAR_OPTIONS","WordHighlighterContribution","wordHighlighter","createWordHighlighterIfPossible","saveViewState","moveNext","moveBack","_isNext","$01571aed631a50b4$var$WordHighlighterContribution","$01571aed631a50b4$var$WordHighlightNavigationAction","$01571aed631a50b4$var$NextWordHighlightAction","$01571aed631a50b4$var$PrevWordHighlightAction","$01571aed631a50b4$var$TriggerWordHighlightAction","selectionHighlight","editorSelectionHighlight","wordHighlight","wordHighlightStrong","selectionHighlightBorder","editorSelectionHighlightBorder","wordHighlightBorder","$2740f2d958711d26$export$39b457c50cc5f3ae","_inSelectionMode","inSelectionMode","_wordNavigationType","wordNavigationType","$fHhrd","getMapForWordSeparators","inPosition","outPosition","_moveTo","CursorState","fromModelSelection","to","$2740f2d958711d26$export$bafba5a126a4bac4","$5Ny2W","WordOperations","moveWordLeft","$2740f2d958711d26$export$699daced12b7253a","moveWordRight","$2740f2d958711d26$export$1bb9de0fc6f3aa28","$2740f2d958711d26$export$4918b28070810e92","$2740f2d958711d26$export$328aed536b44f034","$9tLN2","CONTEXT_ACCESSIBILITY_MODE_ENABLED","$l4qQC","IsWindowsContext","negate","$2740f2d958711d26$export$5a37c3a7504a42b5","$2740f2d958711d26$export$b63c9769dc29f2ae","$2740f2d958711d26$export$f22f7085e755fb5e","$2740f2d958711d26$export$31cb4001e24de538","EditorOptions","defaultValue","$2740f2d958711d26$export$ff67cd13d1274f5f","$2740f2d958711d26$export$df888a9479c52469","$2740f2d958711d26$export$423ba2c272016a2a","$2740f2d958711d26$export$5303121770d6c67c","$2740f2d958711d26$export$5af596b0a0622fd","$2740f2d958711d26$export$5d0b373bf600d629","_a3","$2740f2d958711d26$export$6e17a3d0d0f7a332","$2740f2d958711d26$export$1455fb60c7dd950f","$2740f2d958711d26$export$14ab7f0ed3d21abd","$2740f2d958711d26$export$b30eba960ff236d4","_whitespaceHeuristics","whitespaceHeuristics","autoClosingBrackets","autoClosingQuotes","autoClosingPairs","getAutoClosingPairs","deleteRange","_delete","autoClosingDelete","autoClosedCharacters","getCursorAutoClosedCharacters","$2740f2d958711d26$export$79b91b07e7067ba7","deleteWordLeft","$2740f2d958711d26$export$d23d43aa4b55fc64","deleteWordRight","$2740f2d958711d26$export$e7ed2c5280548e79","$2740f2d958711d26$export$4173d1ed9ab04ddb","$2740f2d958711d26$export$b540ca66ac1cc47c","$2740f2d958711d26$export$998d096baa7be6ca","$2740f2d958711d26$export$86c2c3de3807c65e","$2740f2d958711d26$export$6fa1f7b5714b1c04","$2740f2d958711d26$export$481216c444c9510a","deleteInsideWord","$1d7c465498c6a265$export$418e54ed3eba53a8","WordPartOperations","deleteWordPartLeft","$1d7c465498c6a265$export$395083a5b6597fb2","deleteWordPartRight","$1d7c465498c6a265$export$efb58078b50a9b4a","moveWordPartLeft","$1d7c465498c6a265$export$242b79214b49682e","$1d7c465498c6a265$export$2b53e7d2445fefe2","$1d7c465498c6a265$export$b5dea97a07732002","moveWordPartRight","$1d7c465498c6a265$export$9ba1cec362dd4a74","$1d7c465498c6a265$export$593db84e4b907fe8","$19a677fd49b09c63$var$__decorate","$19a677fd49b09c63$var$__param","AccessibilityHelpController","$19a677fd49b09c63$var$AccessibilityHelpWidget","$19a677fd49b09c63$var$getSelectionLabel","charactersSelected","$i04LO","AccessibilityHelpNLS","singleSelectionRange","singleSelection","multiSelectionRange","multiSelection","noSelection","AccessibilityHelpWidget","_isVisibleKey","$19a677fd49b09c63$var$CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE","$lo0FV","createFastDomNode","setClassName","setDisplay","_contentDomNode","_buildContent","openingDocs","accessibilityHelpUrl","onblur","noKbMsg","readonlyDiffEditor","editableDiffEditor","readonlyEditor","editableEditor","changeConfigToOnMac","changeConfigToOnWinLinux","turnOnMessage","auto_on","_descriptionForCommand","tabFocusModeOnMsg","tabFocusModeOnMsgNoKb","tabFocusModeOffMsg","tabFocusModeOffMsgNoKb","openDocMac","openDocWinLinux","outroMsg","renderFormattedText","WIDTH","HEIGHT","setWidth","w","setHeight","setTop","setLeft","showAccessibilityHelpAction","$19a677fd49b09c63$var$AccessibilityHelpController","$19a677fd49b09c63$var$ShowAccessibilityHelpAction","$19a677fd49b09c63$var$AccessibilityHelpCommand","$3087b43817ce025e$export$aa56b4274f5c3d30","shouldHaveWidget","$3087b43817ce025e$var$ShowKeyboardWidget","$4f42496c5641ac63$var$__decorate","$4f42496c5641ac63$var$__param","InspectTokensController","standaloneColorService","$4f42496c5641ac63$var$InspectTokensWidget","$1sHp1","IStandaloneThemeService","launch","$4f42496c5641ac63$var$renderTokenText","charIndex","tokenizationSupport","languageIdentifier","tokenize2","hasEOL","deltaOffset","$9xHXY","nullTokenize2","modeService1","_ID","_getTokensAtLine","token1Index","tokens1","tokens2","token2Index","tokenStartIndex","tokenEndIndex","_decodeMetadata","_tokenTypeToString","_fontStyleToString","fontStyle","formatHex","colorMap","getColorMap","TokenMetadata","getLanguageId","getTokenType","getForeground","getBackground","tokenizationResult1","_tokenizationSupport","tokenize","stateBeforeLine","tokenizationResult2","startState","endState","getInitialState","$4f42496c5641ac63$var$InspectTokensController","$4f42496c5641ac63$var$InspectTokens","$08736cf45c4eaeba$var$__decorate","$08736cf45c4eaeba$var$__param","HelpQuickAccessProvider","$3QAun","Registry","$fCwRJ","Quickaccess","picker","onDidAccept","quickAccess","prefix","preserveValue","onDidChangeValue","providerDescriptor","PREFIX","editorProviders","globalProviders","getQuickAccessProviders","providerA","providerB","helpEntry","helpEntries","needsEditor","registerQuickAccessProvider","$08736cf45c4eaeba$exports","QuickHelpNLS","helpQuickAccessActionLabel","$796b87ed33a15a5c$export$bfba3c5ba7fed8bd","rangeHighlightDecorationId","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","pickerDisposable","doProvide","onDidActiveTextEditorControlChange","activeTextEditorControl","canProvideWithTextEditor","getCodeEditor","lastKnownEditorViewState","clearDecorations","provideWithTextEditor","provideWithoutTextEditor","preserveFocus","isDiffEditor","modified","deleteDecorations","overviewRulerDecorationId","rangeHighlightId","$baf6ead2b6281ce8$export$431149c2906a340a","selectedItems","isValidLineNumber","toRange","keyMods","inBackground","updatePickerAndEditor","parsePosition","getPickLabel","addDecorations","renderType","numbers","endLine","isValidColumn","positionCandidate","$5bed2890d283ded0$var$__decorate","$5bed2890d283ded0$var$__param","$5bed2890d283ded0$export$9bd71a977f9810bf","GoToLineNLS","gotoLineActionLabel","$cd5663a3945a31bc$var$NO_SCORE2","$cd5663a3945a31bc$export$4a032fdd0f400dd","patternStart","wordStart","preparedQuery","$cd5663a3945a31bc$var$doScoreFuzzy2Multiple","$cd5663a3945a31bc$var$doScoreFuzzy2Single","totalScore","totalMatches","queryPiece","$cd5663a3945a31bc$var$normalizeMatches","originalLowercase","sortedMatches","matchA","matchB","normalizedMatches","$cd5663a3945a31bc$var$matchOverlaps","$cd5663a3945a31bc$var$queryExpectsExactMatch","$cd5663a3945a31bc$var$MULTIPLE_QUERY_VALUES_SEPARATOR","$cd5663a3945a31bc$export$257a13b72b1b9a9","pathNormalized","normalized","normalizedLowercase","$cd5663a3945a31bc$var$normalizeQuery","containsPathSeparator","expectExactMatch","originalPiece","originalSplit","pathNormalizedPiece","normalizedPiece","normalizedLowercasePiece","expectExactMatchPiece","stripWildcards","$cc39929822bf0533$var$__awaiter","provideLabelPick","doProvideWithEditorSymbols","doProvideWithoutEditorSymbols","waitForLanguageSymbolRegistry","symbolProviderRegistryPromiseResolve","symbolProviderRegistryPromise","symbolProviderListener","onDidTriggerItemButton","forceSideBySide","symbolsPromise","getDocumentSymbols","picksCts","busy","$cc39929822bf0533$export$ead43d049a6e98d6","doGetSymbolPicks","updatePickerItems","ignoreFirstActiveEvent","onDidChangeActive","activeItems","filterBySymbolKind","SCOPE_PREFIX","filterPos","symbolQuery","containerQuery","$cd5663a3945a31bc$export$b31639e1af503d0f","filteredSymbolPicks","symbolLabel","symbolLabelWithIcon","SymbolKinds","symbolLabelIconOffset","symbolScore","symbolMatches","containerScore","containerMatches","containerLabel","extraContainerLabel","skipContainerQuery","deprecated","openSideBySideDirection","sortedFilteredSymbolPicks","symbolA","symbolB","compareByKindAndScore","compareByScore","symbolPicks","lastSeparator","lastSymbolKindCounter","updateLastSeparatorLabel","lastSymbolKind","$cc39929822bf0533$var$NLS_SYMBOL_KIND_CACHE","$cc39929822bf0533$var$FALLBACK_NLS_SYMBOL_KIND","symbolPick","kindA","kindB","PREFIX_BY_CATEGORY","$5f6483cbd8e11f53$var$__decorate","$5f6483cbd8e11f53$var$__param","$cc39929822bf0533$exports","AbstractGotoSymbolQuickAccessProvider","$5f6483cbd8e11f53$export$315f0ab17bc139cd","QuickOutlineNLS","quickOutlineActionLabel","hasDocumentSymbolProvider","$9060333c0198308d$var$exceptionToErrorMessage","exception","verbose","stacktrace","$9060333c0198308d$var$detectSystemErrorMessage","$9060333c0198308d$var$stackToString","errno","syscall","$9060333c0198308d$export$537b0e6f7724a05b","errors","$3c544e3a970bc863$var$__awaiter","$3c544e3a970bc863$export$37565bab18688b59","TriggerAction","$3c544e3a970bc863$var$isFastAndSlowPicks","additionalPicks","picksDisposables","picksDisposable","picksToken","_getPicks","picksFilter","skipEmpty","$3c544e3a970bc863$var$isPicksWithActive","noResultsPick","providedPicks","$3c544e3a970bc863$export$8dd0c4c76327588c","FAST_PICKS_RACE_DELAY","slowPicksApplied","fastPicksApplied","applyPicks","awaitedAdditionalPicks","activePick","additionalActivePick","fallbackActivePickCandidate","fallbackActivePick","awaitedPicks","NO_ACTION","CLOSE_PICKER","REMOVE_ITEM","$1bc012718048bc75$var$__decorate","$1bc012718048bc75$var$__param","AbstractCommandsQuickAccessProvider","$3c544e3a970bc863$exports","PickerQuickAccessProvider","dialogService","commandsHistory","$1bc012718048bc75$export$ed49034b1c322ae8","$1bc012718048bc75$var$__awaiter","allCommandPicks","getCommandPicks","filteredCommandPicks","commandPick","labelHighlights","WORD_FILTER","aliasHighlights","commandAlias","showAlias","mapLabelToCommand","commandPick1","existingCommandForLabel","commandPickA","commandPickB","commandACounter","commandBCounter","commandPicks","addSeparator","commandPick2","matchesPrefix","matchesWords","matchesContiguousSubString","CommandsHistory","storageService1","configurationService1","configuredCommandsHistoryLength","updateConfiguration","registerListeners","getConfiguredCommandHistoryLength","saveState","PREF_KEY_CACHE","serializedCache","usesLRU","counter","getNumber","PREF_KEY_COUNTER","configuredCommandHistoryLength","workbench","commandPalette","DEFAULT_COMMANDS_HISTORY_LENGTH","$6cbf679fab08b473$export$f1f4ff7e5cbee08d","$1bc012718048bc75$exports","getCodeEditorCommandPicks","editorCommandPicks","editorAction","getSupportedActions","stripIcons","$96ba13a6d43a6121$var$__decorate","$96ba13a6d43a6121$var$__param","$96ba13a6d43a6121$var$__awaiter","$96ba13a6d43a6121$export$4dd64c01976b2a31","QuickCommandNLS","quickCommandActionLabel","$17b52abe8b1403a6$var$__decorate","$17b52abe8b1403a6$var$__param","$17b52abe8b1403a6$export$bc59de1735b40d0","$7acf09670e2a7ca7$var$ToggleHighContrast","ToggleHighContrastNLS","toggleHighContrast","_originalThemeName","standaloneThemeService","setTheme","themeName","$33572c52a1ee935a$exports","cyrillicToLatin","cyrillic","latin","char","keywordMap","keywords","keyword","eval","ex","$21G5o","defineTheme","inherit","$1d2940880afae77e$export$2637e5674e85963c","$bcd23697c49e58e6$var$$","$bcd23697c49e58e6$var$$code","$bcd23697c49e58e6$var$$execute","$bcd23697c49e58e6$var$$debug","$bcd23697c49e58e6$var$$debugOverlay","$bcd23697c49e58e6$var$$output","$bcd23697c49e58e6$var$editor","roundedSelection","scrollBeyondLastLine","jsCode","$parcel$interopDefault","output"],"version":3,"file":"index.e8333c9c.js.map"}