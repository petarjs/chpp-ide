{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6441b2a2f7fb02dd.js","node_modules/monaco-editor/esm/vs/language/css/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-1d84e1975ca0356c.js","node_modules/@parcel/runtime-js/lib/helpers/browser/css-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/helpers/browser/js-loader.js","node_modules/monaco-editor/esm/vs/language/json/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-003257493876574e.js","node_modules/monaco-editor/esm/vs/language/html/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-1d51c5d46f67db17.js","node_modules/monaco-editor/esm/vs/basic-languages/_.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-6515e50a7fd64ac3.js","node_modules/monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d49bbd8156c89968.js","node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-a193a927add08f3a.js","node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-31fdbf1fbe0e02e3.js","node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d03e3d5cc39d2919.js","node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-603613f9a13e0aee.js","node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-416ab277954b7303.js","node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-422b6393d8ceb2d6.js","node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-fd5e01d3de19321f.js","node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-43090686d2cf2f5e.js","node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-136bc9c6175c00b6.js","node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-ceb2d66f19a2bff3.js","node_modules/monaco-editor/esm/vs/basic-languages/css/css.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e7e1870dee4293cc.js","node_modules/monaco-editor/esm/vs/basic-languages/dart/dart.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-81e6ac4870b34bed.js","node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-910f811cd5b0cd0e.js","node_modules/monaco-editor/esm/vs/basic-languages/ecl/ecl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-b98ae23b7a32dc57.js","node_modules/monaco-editor/esm/vs/basic-languages/elixir/elixir.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c126c694062d5ba4.js","node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-eb06070625edc722.js","node_modules/monaco-editor/esm/vs/basic-languages/go/go.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-b336338af45c778f.js","node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-0e475b87cdef4158.js","node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-fa702cb945665780.js","node_modules/monaco-editor/esm/vs/basic-languages/hcl/hcl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-2ce322bbc33a9f94.js","node_modules/monaco-editor/esm/vs/basic-languages/html/html.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-638f87cb421bba3c.js","node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-7b411bff64f0f6cb.js","node_modules/monaco-editor/esm/vs/basic-languages/java/java.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-3286bac2c38121c2.js","node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d8774214c0f71524.js","node_modules/monaco-editor/esm/vs/basic-languages/julia/julia.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-16462b6274025e4a.js","node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d9f02e173bdd404a.js","node_modules/monaco-editor/esm/vs/basic-languages/less/less.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-96ae18057f2320ac.js","node_modules/monaco-editor/esm/vs/basic-languages/lexon/lexon.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-ce6b9b086f0b812b.js","node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-41ad22b566557be0.js","node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c71cbb6faee73d44.js","node_modules/monaco-editor/esm/vs/basic-languages/m3/m3.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-b9c03261a89d6756.js","node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-355d46fa1c6432b3.js","node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-acc339ec8b5a648f.js","node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-8d6de02bf3d7b50c.js","node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-8baff3bde03d8e3d.js","node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-f94702aa34cb74a1.js","node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c0032b16b68a1eee.js","node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-cd185e5dd04b70e8.js","node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-93558d2c10a6b44f.js","node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c8f4f4b7d95a91d8.js","node_modules/monaco-editor/esm/vs/basic-languages/php/php.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-cf22aa8b80427f30.js","node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-b443754de1ab337a.js","node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-afc1c2378061c09f.js","node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-343eb0df0fc9f588.js","node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-0c7017db1960bca2.js","node_modules/monaco-editor/esm/vs/basic-languages/python/python.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-ac29ff43352ca45e.js","node_modules/monaco-editor/esm/vs/basic-languages/qsharp/qsharp.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c679bb89ce90c2f3.js","node_modules/monaco-editor/esm/vs/basic-languages/r/r.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-dde3b584133c2898.js","node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-b2939d0ab74dfa35.js","node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-9cc93cb76c7c7a15.js","node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-41ec44bd0f2c66f8.js","node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-38a71d584127f3cb.js","node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-da2484a3923757ca.js","node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-7d744717a3d48f4a.js","node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-d64dbd9ba83b857d.js","node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-ea325de56a3f338b.js","node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-c9c54ec4771e2bf1.js","node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-300c5143e91a97da.js","node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-fc429d48d711fef9.js","node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-e88b862282ea2804.js","node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-9f410c615a9ee8c8.js","node_modules/monaco-editor/esm/vs/basic-languages/sparql/sparql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-9fe2377f2715699f.js","node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-192743e9365383b8.js","node_modules/monaco-editor/esm/vs/basic-languages/st/st.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-8418ea255a553f13.js","node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-7d4f23c6b2bb80b0.js","node_modules/monaco-editor/esm/vs/basic-languages/systemverilog/systemverilog.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-7618e010c71adc76.js","node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-aca16bee156c1b69.js","node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-b668778186d523fc.js","node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-da1ea7adf8b362b1.js","node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-a2f604c7054421a0.js","node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-7dd9ce69bcdd9dee.js","node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js","node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","node_modules/monaco-editor/esm/vs/editor/contrib/anchorSelect/anchorSelect.js","node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching.js","node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/moveCaretCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/caretOperations.js","node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/transpose.js","node_modules/monaco-editor/esm/vs/editor/contrib/clipboard/clipboard.js","node_modules/monaco-editor/esm/vs/base/common/lazy.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/types.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeAction.js","node_modules/monaco-editor/esm/vs/editor/contrib/message/messageController.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionMenu.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/lightBulbWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionUi.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionCommands.js","node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/codeActionContributions.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelens.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codeLensCache.js","node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/color.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverOperation.js","node_modules/monaco-editor/esm/vs/base/browser/ui/hover/hoverWidget.js","node_modules/monaco-editor/esm/vs/base/common/labels.js","node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/zoneWidget/zoneWidget.js","node_modules/monaco-editor/esm/vs/base/browser/ui/dropdown/dropdown.js","node_modules/monaco-editor/esm/vs/base/browser/ui/dropdown/dropdownActionViewItem.js","node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","node_modules/monaco-editor/esm/vs/editor/contrib/peekView/peekView.js","node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/gotoErrorWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/markerNavigationService.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoError/gotoError.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/markerHoverParticipant.js","node_modules/monaco-editor/esm/vs/base/common/insane/insane.js","node_modules/monaco-editor/esm/vs/base/common/marked/marked.js","node_modules/monaco-editor/esm/vs/base/browser/markdownRenderer.js","node_modules/monaco-editor/esm/vs/editor/browser/core/markdownRenderer.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/getHover.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/markdownHoverParticipant.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverTypes.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostText.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionToGhostText.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/consts.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js","node_modules/monaco-editor/esm/vs/platform/workspaces/common/workspaces.js","node_modules/monaco-editor/esm/vs/base/common/uuid.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetVariables.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetSession.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggest.js","node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestMemory.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestAlternatives.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/bracketSelections.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/wordDistance.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/symbolIcons/symbolIcons.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/resizable.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetDetails.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetStatus.js","node_modules/monaco-editor/esm/vs/platform/files/common/files.js","node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetRenderer.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/wordContextKey.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestCommitCharacters.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestOvertypingCapturer.js","node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/suggestWidgetInlineCompletionProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/suggestWidgetPreviewModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/utils.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextController.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsHoverParticipant.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/colorHoverParticipant.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/modesContentHover.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverWidgets.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/modesGlyphHover.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/referencesModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToSymbol.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesTree.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesController.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/symbolNavigation.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToCommands.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/clickLinkGesture.js","node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition.js","node_modules/monaco-editor/esm/vs/editor/contrib/hover/hover.js","node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorContributions.js","node_modules/monaco-editor/esm/vs/editor/contrib/comment/blockCommentCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/comment/lineCommentCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/comment/comment.js","node_modules/monaco-editor/esm/vs/editor/contrib/contextmenu/contextmenu.js","node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo.js","node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dragAndDropCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dnd.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findDecorations.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/replaceAllCommand.js","node_modules/monaco-editor/esm/vs/base/common/search.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/replacePattern.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findModel.js","node_modules/monaco-editor/esm/vs/base/browser/ui/checkbox/checkbox.js","node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/findInputCheckboxes.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findOptionsWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findState.js","node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/findInput.js","node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/replaceInput.js","node_modules/monaco-editor/esm/vs/platform/browser/contextScopedHistoryWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/find/findController.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingRanges.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/foldingDecorations.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/hiddenRangeModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/indentRangeProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/syntaxRangeProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/intializingRangeProvider.js","node_modules/monaco-editor/esm/vs/editor/contrib/folding/folding.js","node_modules/monaco-editor/esm/vs/editor/contrib/fontZoom/fontZoom.js","node_modules/monaco-editor/esm/vs/editor/contrib/format/formatActions.js","node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/outlineModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/documentSymbols.js","node_modules/monaco-editor/esm/vs/editor/contrib/indentation/indentUtils.js","node_modules/monaco-editor/esm/vs/editor/contrib/indentation/indentation.js","node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/inlayHintsController.js","node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplace.js","node_modules/monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/copyLinesCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/moveLinesCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/sortLinesCommand.js","node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js","node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/linkedEditing.js","node_modules/monaco-editor/esm/vs/editor/contrib/links/getLinks.js","node_modules/monaco-editor/esm/vs/editor/contrib/links/links.js","node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/multicursor.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/provideSignatureHelp.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsModel.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsWidget.js","node_modules/monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHints.js","node_modules/monaco-editor/esm/vs/editor/contrib/rename/renameInputField.js","node_modules/monaco-editor/esm/vs/editor/contrib/rename/rename.js","node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/wordSelections.js","node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect.js","node_modules/monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js","node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.js","node_modules/monaco-editor/esm/vs/editor/contrib/unusualLineTerminators/unusualLineTerminators.js","node_modules/monaco-editor/esm/vs/editor/contrib/viewportSemanticTokens/viewportSemanticTokens.js","node_modules/monaco-editor/esm/vs/editor/contrib/wordHighlighter/wordHighlighter.js","node_modules/monaco-editor/esm/vs/editor/contrib/wordOperations/wordOperations.js","node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/wordPartOperations.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/accessibilityHelp/accessibilityHelp.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/inspectTokens/inspectTokens.js","node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneHelpQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/editorNavigationQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/gotoLineQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.js","node_modules/monaco-editor/esm/vs/base/common/fuzzyScorer.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/gotoSymbolQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.js","node_modules/monaco-editor/esm/vs/base/common/errorMessage.js","node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js","node_modules/monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/commandsQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneCommandsQuickAccess.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/referenceSearch/standaloneReferenceSearch.js","node_modules/monaco-editor/esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.js","node_modules/@swc/helpers/src/_define_property.js","node_modules/@swc/helpers/src/_array_without_holes.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_non_iterable_spread.js","node_modules/@swc/helpers/src/_to_consumable_array.js","node_modules/cyrillic-to-latin/cyrillicToLatin.js","src/engine.js","src/chpp-lang.js","src/examples/singleton.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jJ0ho\\\":\\\"index.972a0fca.js\\\",\\\"bcq3w\\\":\\\"cssMode.d2508f69.js\\\",\\\"gB2Ke\\\":\\\"index.92a1bf40.css\\\",\\\"92jep\\\":\\\"jsonMode.84198ea1.js\\\",\\\"1abh0\\\":\\\"htmlMode.9011785c.js\\\",\\\"37FDJ\\\":\\\"abap.1ccdc61f.js\\\",\\\"7oAkS\\\":\\\"apex.4a97db07.js\\\",\\\"dx9xR\\\":\\\"azcli.8c6a0dbf.js\\\",\\\"bU9F2\\\":\\\"bat.547c5b65.js\\\",\\\"ctYkb\\\":\\\"bicep.1e35bf15.js\\\",\\\"mONwe\\\":\\\"cameligo.66d9d473.js\\\",\\\"jvlBM\\\":\\\"clojure.f7bcc9a2.js\\\",\\\"fjvvB\\\":\\\"coffee.b572d0a8.js\\\",\\\"bzwET\\\":\\\"cpp.0de8b8f6.js\\\",\\\"kgWZm\\\":\\\"csharp.bb1edd5c.js\\\",\\\"bHQ1X\\\":\\\"csp.127d5bf1.js\\\",\\\"5V2qy\\\":\\\"css.8208e9e3.js\\\",\\\"4fI0c\\\":\\\"dart.64568529.js\\\",\\\"3HDrI\\\":\\\"dockerfile.ff62cda8.js\\\",\\\"IlD3v\\\":\\\"ecl.f6d69cc9.js\\\",\\\"6NpLt\\\":\\\"elixir.4ae5d465.js\\\",\\\"g9e4A\\\":\\\"fsharp.b5ddca9c.js\\\",\\\"9fSeU\\\":\\\"go.0297a107.js\\\",\\\"aouPn\\\":\\\"graphql.a79ea465.js\\\",\\\"9jP8j\\\":\\\"handlebars.a06b3962.js\\\",\\\"6c6Ha\\\":\\\"hcl.b767e79a.js\\\",\\\"cI4RT\\\":\\\"html.aca3c6cf.js\\\",\\\"veCWQ\\\":\\\"ini.2b927ee8.js\\\",\\\"bEq6Y\\\":\\\"java.5f735562.js\\\",\\\"icILU\\\":\\\"javascript.c0f76e6e.js\\\",\\\"fVQg6\\\":\\\"typescript.007d326d.js\\\",\\\"fqH8f\\\":\\\"julia.e99ddb25.js\\\",\\\"jprrq\\\":\\\"kotlin.74ab7c11.js\\\",\\\"jK2LZ\\\":\\\"less.6726b650.js\\\",\\\"620ME\\\":\\\"lexon.bdd891fa.js\\\",\\\"eYduv\\\":\\\"lua.6ae0bc95.js\\\",\\\"22g5Z\\\":\\\"liquid.b3e129b6.js\\\",\\\"5PDnP\\\":\\\"m3.7d078283.js\\\",\\\"aw3rP\\\":\\\"markdown.39087374.js\\\",\\\"j42ql\\\":\\\"mips.5d726950.js\\\",\\\"eVnAA\\\":\\\"msdax.951a7324.js\\\",\\\"cw3fB\\\":\\\"mysql.6cbda555.js\\\",\\\"k83UO\\\":\\\"objective-c.e23b1d7e.js\\\",\\\"jzoDV\\\":\\\"pascal.fe9a064c.js\\\",\\\"7RwLE\\\":\\\"pascaligo.18292927.js\\\",\\\"fwJ33\\\":\\\"perl.cfce8e80.js\\\",\\\"kVebA\\\":\\\"pgsql.c6cd38b6.js\\\",\\\"8i4zu\\\":\\\"php.986aafd2.js\\\",\\\"dCQoc\\\":\\\"postiats.9d8bb655.js\\\",\\\"a6WgJ\\\":\\\"powerquery.9d52e1f3.js\\\",\\\"lpTcj\\\":\\\"powershell.89616b84.js\\\",\\\"kU83C\\\":\\\"pug.1c99a40c.js\\\",\\\"5GmaQ\\\":\\\"python.338baedf.js\\\",\\\"gcV5J\\\":\\\"qsharp.21fc710a.js\\\",\\\"kTZZj\\\":\\\"r.b92d9e6b.js\\\",\\\"gzWoD\\\":\\\"razor.82cce09e.js\\\",\\\"1cwl9\\\":\\\"redis.bda43b66.js\\\",\\\"hBs7f\\\":\\\"redshift.7700e247.js\\\",\\\"gD9IO\\\":\\\"restructuredtext.a5dc610a.js\\\",\\\"lD9un\\\":\\\"ruby.0c6bd2e3.js\\\",\\\"5OfEn\\\":\\\"rust.bc2f83c9.js\\\",\\\"7pWSY\\\":\\\"sb.79e0a30b.js\\\",\\\"6fnEg\\\":\\\"scala.1c896974.js\\\",\\\"eKlSK\\\":\\\"scheme.edaeac1e.js\\\",\\\"kO2yS\\\":\\\"scss.27f06096.js\\\",\\\"bON4c\\\":\\\"shell.4d9da8a0.js\\\",\\\"gaHo6\\\":\\\"solidity.e6eac62f.js\\\",\\\"3rh7O\\\":\\\"sophia.81fcad7f.js\\\",\\\"f9eeO\\\":\\\"sparql.6d8964bc.js\\\",\\\"fl9fU\\\":\\\"sql.3627525e.js\\\",\\\"1vJot\\\":\\\"st.2811a017.js\\\",\\\"iNerO\\\":\\\"swift.57b81ef8.js\\\",\\\"fBtzz\\\":\\\"systemverilog.8bb8eb74.js\\\",\\\"ibLyM\\\":\\\"tcl.e20fac86.js\\\",\\\"6rei7\\\":\\\"twig.1e9c0115.js\\\",\\\"cWh4m\\\":\\\"vb.141b8cf2.js\\\",\\\"i9zy6\\\":\\\"xml.8ef190b4.js\\\",\\\"bVVHD\\\":\\\"yaml.13562cfd.js\\\",\\\"ibGUj\\\":\\\"index.444dcb95.js\\\"}\"));","import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages, Emitter } from './fillers/monaco-editor-core.js';\r\n// --- CSS configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this.options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this.setOptions(options);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar optionsDefault = {\r\n    validate: true,\r\n    lint: {\r\n        compatibleVendorPrefixes: 'ignore',\r\n        vendorPrefix: 'warning',\r\n        duplicateProperties: 'warning',\r\n        emptyRules: 'warning',\r\n        importStatement: 'ignore',\r\n        boxModel: 'ignore',\r\n        universalSelector: 'ignore',\r\n        zeroUnits: 'ignore',\r\n        fontFaceProperties: 'warning',\r\n        hexColorLength: 'error',\r\n        argumentsInColorFunction: 'error',\r\n        unknownProperties: 'warning',\r\n        ieHack: 'ignore',\r\n        unknownVendorSpecificProperties: 'ignore',\r\n        propertyIgnoredDueToDisplay: 'warning',\r\n        important: 'ignore',\r\n        float: 'ignore',\r\n        idSelector: 'ignore'\r\n    },\r\n    data: { useDefaultDataProvider: true }\r\n};\r\nvar modeConfigurationDefault = {\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    definitions: true,\r\n    references: true,\r\n    documentHighlights: true,\r\n    rename: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nexport var cssDefaults = new LanguageServiceDefaultsImpl('css', optionsDefault, modeConfigurationDefault);\r\nexport var scssDefaults = new LanguageServiceDefaultsImpl('scss', optionsDefault, modeConfigurationDefault);\r\nexport var lessDefaults = new LanguageServiceDefaultsImpl('less', optionsDefault, modeConfigurationDefault);\r\n// export to the global based API\r\nlanguages.css = { cssDefaults: cssDefaults, lessDefaults: lessDefaults, scssDefaults: scssDefaults };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./cssMode.js');\r\n}\r\nlanguages.onLanguage('less', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(lessDefaults); });\r\n});\r\nlanguages.onLanguage('scss', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(scssDefaults); });\r\n});\r\nlanguages.onLanguage('css', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(cssDefaults); });\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bcq3w\"))]).then(() => parcelRequire('5PeQQ'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same link element twice (e.g. if it was already in the HTML)\n    var existingLinks = document.getElementsByTagName('link');\n\n    if ([].concat(existingLinks).some(function isCurrentBundle(link) {\n      return link.href === bundle && link.rel.indexOf('stylesheet') > -1;\n    })) {\n      resolve();\n      return;\n    }\n\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = bundle;\n\n    link.onerror = function (e) {\n      link.onerror = link.onload = null;\n      link.remove();\n      reject(e);\n    };\n\n    link.onload = function () {\n      link.onerror = link.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(link);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same script twice (e.g. if it was already in the HTML)\n    var existingScripts = document.getElementsByTagName('script');\n\n    if ([].concat(existingScripts).some(function isCurrentBundle(script) {\n      return script.src === bundle;\n    })) {\n      resolve();\n      return;\n    }\n\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      script.remove();\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});","import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter, languages } from './fillers/monaco-editor-core.js';\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setDiagnosticsOptions(diagnosticsOptions);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this._diagnosticsOptions;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this._diagnosticsOptions = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar diagnosticDefault = {\r\n    validate: true,\r\n    allowComments: true,\r\n    schemas: [],\r\n    enableSchemaRequest: false,\r\n    schemaRequest: 'warning',\r\n    schemaValidation: 'warning',\r\n    comments: 'error',\r\n    trailingCommas: 'error'\r\n};\r\nvar modeConfigurationDefault = {\r\n    documentFormattingEdits: true,\r\n    documentRangeFormattingEdits: true,\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    tokens: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nexport var jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault, modeConfigurationDefault);\r\n// export to the global based API\r\nlanguages.json = { jsonDefaults: jsonDefaults };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./jsonMode.js');\r\n}\r\nlanguages.register({\r\n    id: 'json',\r\n    extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc', '.har'],\r\n    aliases: ['JSON', 'json'],\r\n    mimetypes: ['application/json']\r\n});\r\nlanguages.onLanguage('json', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(jsonDefaults); });\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"92jep\"))]).then(() => parcelRequire('axTq7'));","import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { languages, Emitter } from './fillers/monaco-editor-core.js';\r\n// --- HTML configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar formatDefaults = {\r\n    tabSize: 4,\r\n    insertSpaces: false,\r\n    wrapLineLength: 120,\r\n    unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\r\n    contentUnformatted: 'pre',\r\n    indentInnerHtml: false,\r\n    preserveNewLines: true,\r\n    maxPreserveNewLines: null,\r\n    indentHandlebars: false,\r\n    endWithNewline: false,\r\n    extraLiners: 'head, body, /html',\r\n    wrapAttributes: 'auto'\r\n};\r\nvar optionsDefault = {\r\n    format: formatDefaults,\r\n    suggest: {},\r\n    data: { useDefaultDataProvider: true }\r\n};\r\nfunction getConfigurationDefault(languageId) {\r\n    return {\r\n        completionItems: true,\r\n        hovers: true,\r\n        documentSymbols: true,\r\n        links: true,\r\n        documentHighlights: true,\r\n        rename: true,\r\n        colors: true,\r\n        foldingRanges: true,\r\n        selectionRanges: true,\r\n        diagnostics: languageId === htmlLanguageId,\r\n        documentFormattingEdits: languageId === htmlLanguageId,\r\n        documentRangeFormattingEdits: languageId === htmlLanguageId // turned off for Razor and Handlebar\r\n    };\r\n}\r\nvar htmlLanguageId = 'html';\r\nvar handlebarsLanguageId = 'handlebars';\r\nvar razorLanguageId = 'razor';\r\nexport var htmlLanguageService = registerHTMLLanguageService(htmlLanguageId, optionsDefault, getConfigurationDefault(htmlLanguageId));\r\nexport var htmlDefaults = htmlLanguageService.defaults;\r\nexport var handlebarLanguageService = registerHTMLLanguageService(handlebarsLanguageId, optionsDefault, getConfigurationDefault(handlebarsLanguageId));\r\nexport var handlebarDefaults = handlebarLanguageService.defaults;\r\nexport var razorLanguageService = registerHTMLLanguageService(razorLanguageId, optionsDefault, getConfigurationDefault(razorLanguageId));\r\nexport var razorDefaults = razorLanguageService.defaults;\r\n// export to the global based API\r\nlanguages.html = { htmlDefaults: htmlDefaults, razorDefaults: razorDefaults, handlebarDefaults: handlebarDefaults, htmlLanguageService: htmlLanguageService, handlebarLanguageService: handlebarLanguageService, razorLanguageService: razorLanguageService, registerHTMLLanguageService: registerHTMLLanguageService };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./htmlMode.js');\r\n}\r\n/**\r\n * Registers a new HTML language service for the languageId.\r\n * Note: 'html', 'handlebar' and 'razor' are registered by default.\r\n *\r\n * Use this method to register additional language ids with a HTML service.\r\n * The language server has to be registered before an editor model is opened.\r\n */\r\nexport function registerHTMLLanguageService(languageId, options, modeConfiguration) {\r\n    var _this = this;\r\n    if (options === void 0) { options = optionsDefault; }\r\n    if (modeConfiguration === void 0) { modeConfiguration = getConfigurationDefault(languageId); }\r\n    var defaults = new LanguageServiceDefaultsImpl(languageId, options, modeConfiguration);\r\n    var mode;\r\n    // delay the initalization of the mode until the language is accessed the first time\r\n    var onLanguageListener = languages.onLanguage(languageId, function () { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getMode()];\r\n                case 1:\r\n                    mode = (_a.sent()).setupMode(defaults);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); });\r\n    return {\r\n        defaults: defaults,\r\n        dispose: function () {\r\n            onLanguageListener.dispose();\r\n            mode === null || mode === void 0 ? void 0 : mode.dispose();\r\n            mode = undefined;\r\n        }\r\n    };\r\n}\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"1abh0\"))]).then(() => parcelRequire('9qKCT'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from './fillers/monaco-editor-core.js';\r\nvar languageDefinitions = {};\r\nvar lazyLanguageLoaders = {};\r\nvar LazyLanguageLoader = /** @class */ (function () {\r\n    function LazyLanguageLoader(languageId) {\r\n        var _this = this;\r\n        this._languageId = languageId;\r\n        this._loadingTriggered = false;\r\n        this._lazyLoadPromise = new Promise(function (resolve, reject) {\r\n            _this._lazyLoadPromiseResolve = resolve;\r\n            _this._lazyLoadPromiseReject = reject;\r\n        });\r\n    }\r\n    LazyLanguageLoader.getOrCreate = function (languageId) {\r\n        if (!lazyLanguageLoaders[languageId]) {\r\n            lazyLanguageLoaders[languageId] = new LazyLanguageLoader(languageId);\r\n        }\r\n        return lazyLanguageLoaders[languageId];\r\n    };\r\n    LazyLanguageLoader.prototype.whenLoaded = function () {\r\n        return this._lazyLoadPromise;\r\n    };\r\n    LazyLanguageLoader.prototype.load = function () {\r\n        var _this = this;\r\n        if (!this._loadingTriggered) {\r\n            this._loadingTriggered = true;\r\n            languageDefinitions[this._languageId].loader().then(function (mod) { return _this._lazyLoadPromiseResolve(mod); }, function (err) { return _this._lazyLoadPromiseReject(err); });\r\n        }\r\n        return this._lazyLoadPromise;\r\n    };\r\n    return LazyLanguageLoader;\r\n}());\r\nexport function loadLanguage(languageId) {\r\n    return LazyLanguageLoader.getOrCreate(languageId).load();\r\n}\r\nexport function registerLanguage(def) {\r\n    var languageId = def.id;\r\n    languageDefinitions[languageId] = def;\r\n    languages.register(def);\r\n    var lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);\r\n    languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then(function (mod) { return mod.language; }));\r\n    languages.onLanguage(languageId, function () {\r\n        lazyLanguageLoader.load().then(function (mod) {\r\n            languages.setLanguageConfiguration(languageId, mod.conf);\r\n        });\r\n    });\r\n}\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"37FDJ\"))).then(() => parcelRequire('a4yIH'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'abap',\r\n    extensions: ['.abap'],\r\n    aliases: ['abap', 'ABAP'],\r\n    loader: function () { return import('./abap.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"7oAkS\"))).then(() => parcelRequire('cDIWd'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'apex',\r\n    extensions: ['.cls'],\r\n    aliases: ['Apex', 'apex'],\r\n    mimetypes: ['text/x-apex-source', 'text/x-apex'],\r\n    loader: function () { return import('./apex.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"dx9xR\"))).then(() => parcelRequire('070XJ'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'azcli',\r\n    extensions: ['.azcli'],\r\n    aliases: ['Azure CLI', 'azcli'],\r\n    loader: function () { return import('./azcli.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bU9F2\"))).then(() => parcelRequire('e0DIa'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'bat',\r\n    extensions: ['.bat', '.cmd'],\r\n    aliases: ['Batch', 'bat'],\r\n    loader: function () { return import('./bat.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"ctYkb\"))).then(() => parcelRequire('8rVDi'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'bicep',\r\n    extensions: ['.bicep'],\r\n    aliases: ['Bicep'],\r\n    loader: function () { return import('./bicep.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"mONwe\"))).then(() => parcelRequire('edhFW'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'cameligo',\r\n    extensions: ['.mligo'],\r\n    aliases: ['Cameligo'],\r\n    loader: function () { return import('./cameligo.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"jvlBM\"))).then(() => parcelRequire('i5auC'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'clojure',\r\n    extensions: ['.clj', '.cljs', '.cljc', '.edn'],\r\n    aliases: ['clojure', 'Clojure'],\r\n    loader: function () { return import('./clojure.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fjvvB\"))).then(() => parcelRequire('cE0XY'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'coffeescript',\r\n    extensions: ['.coffee'],\r\n    aliases: ['CoffeeScript', 'coffeescript', 'coffee'],\r\n    mimetypes: ['text/x-coffeescript', 'text/coffeescript'],\r\n    loader: function () { return import('./coffee.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bzwET\"))).then(() => parcelRequire('d9nlS'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'c',\r\n    extensions: ['.c', '.h'],\r\n    aliases: ['C', 'c'],\r\n    loader: function () { return import('./cpp.js'); }\r\n});\r\nregisterLanguage({\r\n    id: 'cpp',\r\n    extensions: ['.cpp', '.cc', '.cxx', '.hpp', '.hh', '.hxx'],\r\n    aliases: ['C++', 'Cpp', 'cpp'],\r\n    loader: function () { return import('./cpp.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"kgWZm\"))).then(() => parcelRequire('lggNd'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'csharp',\r\n    extensions: ['.cs', '.csx', '.cake'],\r\n    aliases: ['C#', 'csharp'],\r\n    loader: function () { return import('./csharp.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bHQ1X\"))).then(() => parcelRequire('7DBzE'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'csp',\r\n    extensions: [],\r\n    aliases: ['CSP', 'csp'],\r\n    loader: function () { return import('./csp.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"5V2qy\"))).then(() => parcelRequire('Ec3eV'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'css',\r\n    extensions: ['.css'],\r\n    aliases: ['CSS', 'css'],\r\n    mimetypes: ['text/css'],\r\n    loader: function () { return import('./css.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"4fI0c\"))).then(() => parcelRequire('7XMFt'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'dart',\r\n    extensions: ['.dart'],\r\n    aliases: ['Dart', 'dart'],\r\n    mimetypes: ['text/x-dart-source', 'text/x-dart'],\r\n    loader: function () { return import('./dart.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"3HDrI\"))).then(() => parcelRequire('hCVau'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'dockerfile',\r\n    extensions: ['.dockerfile'],\r\n    filenames: ['Dockerfile'],\r\n    aliases: ['Dockerfile'],\r\n    loader: function () { return import('./dockerfile.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"IlD3v\"))).then(() => parcelRequire('7Hzdn'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ecl',\r\n    extensions: ['.ecl'],\r\n    aliases: ['ECL', 'Ecl', 'ecl'],\r\n    loader: function () { return import('./ecl.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"6NpLt\"))).then(() => parcelRequire('hKxXE'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'elixir',\r\n    extensions: ['.ex', '.exs'],\r\n    aliases: ['Elixir', 'elixir', 'ex'],\r\n    loader: function () { return import('./elixir.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"g9e4A\"))).then(() => parcelRequire('lnvJY'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'fsharp',\r\n    extensions: ['.fs', '.fsi', '.ml', '.mli', '.fsx', '.fsscript'],\r\n    aliases: ['F#', 'FSharp', 'fsharp'],\r\n    loader: function () { return import('./fsharp.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"9fSeU\"))).then(() => parcelRequire('7xs7B'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'go',\r\n    extensions: ['.go'],\r\n    aliases: ['Go'],\r\n    loader: function () { return import('./go.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"aouPn\"))).then(() => parcelRequire('5Itwj'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'graphql',\r\n    extensions: ['.graphql', '.gql'],\r\n    aliases: ['GraphQL', 'graphql', 'gql'],\r\n    mimetypes: ['application/graphql'],\r\n    loader: function () { return import('./graphql.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"9jP8j\"))]).then(() => parcelRequire('ckNA2'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'handlebars',\r\n    extensions: ['.handlebars', '.hbs'],\r\n    aliases: ['Handlebars', 'handlebars', 'hbs'],\r\n    mimetypes: ['text/x-handlebars-template'],\r\n    loader: function () { return import('./handlebars.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"6c6Ha\"))).then(() => parcelRequire('ftS2v'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'hcl',\r\n    extensions: ['.tf', '.tfvars', '.hcl'],\r\n    aliases: ['Terraform', 'tf', 'HCL', 'hcl'],\r\n    loader: function () { return import('./hcl.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"cI4RT\"))]).then(() => parcelRequire('jvMiM'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'html',\r\n    extensions: ['.html', '.htm', '.shtml', '.xhtml', '.mdoc', '.jsp', '.asp', '.aspx', '.jshtm'],\r\n    aliases: ['HTML', 'htm', 'html', 'xhtml'],\r\n    mimetypes: ['text/html', 'text/x-jshtm', 'text/template', 'text/ng-template'],\r\n    loader: function () { return import('./html.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"veCWQ\"))).then(() => parcelRequire('krkAq'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ini',\r\n    extensions: ['.ini', '.properties', '.gitconfig'],\r\n    filenames: ['config', '.gitattributes', '.gitconfig', '.editorconfig'],\r\n    aliases: ['Ini', 'ini'],\r\n    loader: function () { return import('./ini.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bEq6Y\"))).then(() => parcelRequire('gK6JF'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'java',\r\n    extensions: ['.java', '.jav'],\r\n    aliases: ['Java', 'java'],\r\n    mimetypes: ['text/x-java-source', 'text/x-java'],\r\n    loader: function () { return import('./java.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fVQg6\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"icILU\"))]).then(() => parcelRequire('6FIhV'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'javascript',\r\n    extensions: ['.js', '.es6', '.jsx', '.mjs'],\r\n    firstLine: '^#!.*\\\\bnode',\r\n    filenames: ['jakefile'],\r\n    aliases: ['JavaScript', 'javascript', 'js'],\r\n    mimetypes: ['text/javascript'],\r\n    loader: function () { return import('./javascript.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fqH8f\"))).then(() => parcelRequire('afyNW'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'julia',\r\n    extensions: ['.jl'],\r\n    aliases: ['julia', 'Julia'],\r\n    loader: function () { return import('./julia.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"jprrq\"))).then(() => parcelRequire('7AI75'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'kotlin',\r\n    extensions: ['.kt'],\r\n    aliases: ['Kotlin', 'kotlin'],\r\n    mimetypes: ['text/x-kotlin-source', 'text/x-kotlin'],\r\n    loader: function () { return import('./kotlin.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"jK2LZ\"))).then(() => parcelRequire('5ft20'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'less',\r\n    extensions: ['.less'],\r\n    aliases: ['Less', 'less'],\r\n    mimetypes: ['text/x-less', 'text/less'],\r\n    loader: function () { return import('./less.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"620ME\"))).then(() => parcelRequire('9OX00'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'lexon',\r\n    extensions: ['.lex'],\r\n    aliases: ['Lexon'],\r\n    loader: function () { return import('./lexon.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"eYduv\"))).then(() => parcelRequire('aRMKR'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'lua',\r\n    extensions: ['.lua'],\r\n    aliases: ['Lua', 'lua'],\r\n    loader: function () { return import('./lua.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"22g5Z\"))]).then(() => parcelRequire('kXSqR'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'liquid',\r\n    extensions: ['.liquid', '.html.liquid'],\r\n    aliases: ['Liquid', 'liquid'],\r\n    mimetypes: ['application/liquid'],\r\n    loader: function () { return import('./liquid.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"5PDnP\"))).then(() => parcelRequire('jfusz'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'm3',\r\n    extensions: ['.m3', '.i3', '.mg', '.ig'],\r\n    aliases: ['Modula-3', 'Modula3', 'modula3', 'm3'],\r\n    loader: function () { return import('./m3.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"aw3rP\"))).then(() => parcelRequire('aQPbU'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'markdown',\r\n    extensions: ['.md', '.markdown', '.mdown', '.mkdn', '.mkd', '.mdwn', '.mdtxt', '.mdtext'],\r\n    aliases: ['Markdown', 'markdown'],\r\n    loader: function () { return import('./markdown.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"j42ql\"))).then(() => parcelRequire('NT8dM'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'mips',\r\n    extensions: ['.s'],\r\n    aliases: ['MIPS', 'MIPS-V'],\r\n    mimetypes: ['text/x-mips', 'text/mips', 'text/plaintext'],\r\n    loader: function () { return import('./mips.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"eVnAA\"))).then(() => parcelRequire('kUMXW'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'msdax',\r\n    extensions: ['.dax', '.msdax'],\r\n    aliases: ['DAX', 'MSDAX'],\r\n    loader: function () { return import('./msdax.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"cw3fB\"))).then(() => parcelRequire('gHAOm'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'mysql',\r\n    extensions: [],\r\n    aliases: ['MySQL', 'mysql'],\r\n    loader: function () { return import('./mysql.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"k83UO\"))).then(() => parcelRequire('4vQ3k'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'objective-c',\r\n    extensions: ['.m'],\r\n    aliases: ['Objective-C'],\r\n    loader: function () { return import('./objective-c.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"jzoDV\"))).then(() => parcelRequire('4zvzQ'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pascal',\r\n    extensions: ['.pas', '.p', '.pp'],\r\n    aliases: ['Pascal', 'pas'],\r\n    mimetypes: ['text/x-pascal-source', 'text/x-pascal'],\r\n    loader: function () { return import('./pascal.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"7RwLE\"))).then(() => parcelRequire('8f7pa'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pascaligo',\r\n    extensions: ['.ligo'],\r\n    aliases: ['Pascaligo', 'ligo'],\r\n    loader: function () { return import('./pascaligo.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fwJ33\"))).then(() => parcelRequire('zh2en'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'perl',\r\n    extensions: ['.pl'],\r\n    aliases: ['Perl', 'pl'],\r\n    loader: function () { return import('./perl.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"kVebA\"))).then(() => parcelRequire('2iYL7'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pgsql',\r\n    extensions: [],\r\n    aliases: ['PostgreSQL', 'postgres', 'pg', 'postgre'],\r\n    loader: function () { return import('./pgsql.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"8i4zu\"))).then(() => parcelRequire('7JnCa'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'php',\r\n    extensions: ['.php', '.php4', '.php5', '.phtml', '.ctp'],\r\n    aliases: ['PHP', 'php'],\r\n    mimetypes: ['application/x-php'],\r\n    loader: function () { return import('./php.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"dCQoc\"))).then(() => parcelRequire('4Kaq5'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'postiats',\r\n    extensions: ['.dats', '.sats', '.hats'],\r\n    aliases: ['ATS', 'ATS/Postiats'],\r\n    loader: function () { return import('./postiats.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"a6WgJ\"))).then(() => parcelRequire('2uDW3'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'powerquery',\r\n    extensions: ['.pq', '.pqm'],\r\n    aliases: ['PQ', 'M', 'Power Query', 'Power Query M'],\r\n    loader: function () { return import('./powerquery.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"lpTcj\"))).then(() => parcelRequire('fyC4Q'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'powershell',\r\n    extensions: ['.ps1', '.psm1', '.psd1'],\r\n    aliases: ['PowerShell', 'powershell', 'ps', 'ps1'],\r\n    loader: function () { return import('./powershell.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"kU83C\"))).then(() => parcelRequire('gqBk4'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pug',\r\n    extensions: ['.jade', '.pug'],\r\n    aliases: ['Pug', 'Jade', 'jade'],\r\n    loader: function () { return import('./pug.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"5GmaQ\"))]).then(() => parcelRequire('6vP63'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'python',\r\n    extensions: ['.py', '.rpy', '.pyw', '.cpy', '.gyp', '.gypi'],\r\n    aliases: ['Python', 'py'],\r\n    firstLine: '^#!/.*\\\\bpython[0-9.-]*\\\\b',\r\n    loader: function () { return import('./python.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gcV5J\"))).then(() => parcelRequire('ap0SH'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'qsharp',\r\n    extensions: ['.qs'],\r\n    aliases: ['Q#', 'qsharp'],\r\n    loader: function () { return import('./qsharp.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"kTZZj\"))).then(() => parcelRequire('1GaFz'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'r',\r\n    extensions: ['.r', '.rhistory', '.rmd', '.rprofile', '.rt'],\r\n    aliases: ['R', 'r'],\r\n    loader: function () { return import('./r.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gzWoD\"))]).then(() => parcelRequire('pPZ4O'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'razor',\r\n    extensions: ['.cshtml'],\r\n    aliases: ['Razor', 'razor'],\r\n    mimetypes: ['text/x-cshtml'],\r\n    loader: function () { return import('./razor.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"1cwl9\"))).then(() => parcelRequire('goQj9'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'redis',\r\n    extensions: ['.redis'],\r\n    aliases: ['redis'],\r\n    loader: function () { return import('./redis.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"hBs7f\"))).then(() => parcelRequire('75JmC'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'redshift',\r\n    extensions: [],\r\n    aliases: ['Redshift', 'redshift'],\r\n    loader: function () { return import('./redshift.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gD9IO\"))).then(() => parcelRequire('5YQhZ'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'restructuredtext',\r\n    extensions: ['.rst'],\r\n    aliases: ['reStructuredText', 'restructuredtext'],\r\n    loader: function () { return import('./restructuredtext.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"lD9un\"))).then(() => parcelRequire('28f4u'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ruby',\r\n    extensions: ['.rb', '.rbx', '.rjs', '.gemspec', '.pp'],\r\n    filenames: ['rakefile', 'Gemfile'],\r\n    aliases: ['Ruby', 'rb'],\r\n    loader: function () { return import('./ruby.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"5OfEn\"))).then(() => parcelRequire('cB0d1'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'rust',\r\n    extensions: ['.rs', '.rlib'],\r\n    aliases: ['Rust', 'rust'],\r\n    loader: function () { return import('./rust.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"7pWSY\"))).then(() => parcelRequire('82dYW'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sb',\r\n    extensions: ['.sb'],\r\n    aliases: ['Small Basic', 'sb'],\r\n    loader: function () { return import('./sb.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"6fnEg\"))).then(() => parcelRequire('2rdpd'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scala',\r\n    extensions: ['.scala', '.sc', '.sbt'],\r\n    aliases: ['Scala', 'scala', 'SBT', 'Sbt', 'sbt', 'Dotty', 'dotty'],\r\n    mimetypes: ['text/x-scala-source', 'text/x-scala', 'text/x-sbt', 'text/x-dotty'],\r\n    loader: function () { return import('./scala.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"eKlSK\"))).then(() => parcelRequire('7sTom'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scheme',\r\n    extensions: ['.scm', '.ss', '.sch', '.rkt'],\r\n    aliases: ['scheme', 'Scheme'],\r\n    loader: function () { return import('./scheme.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"kO2yS\"))).then(() => parcelRequire('gypyS'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scss',\r\n    extensions: ['.scss'],\r\n    aliases: ['Sass', 'sass', 'scss'],\r\n    mimetypes: ['text/x-scss', 'text/scss'],\r\n    loader: function () { return import('./scss.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bON4c\"))).then(() => parcelRequire('cr5XI'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'shell',\r\n    extensions: ['.sh', '.bash'],\r\n    aliases: ['Shell', 'sh'],\r\n    loader: function () { return import('./shell.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gaHo6\"))).then(() => parcelRequire('bDhlr'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sol',\r\n    extensions: ['.sol'],\r\n    aliases: ['sol', 'solidity', 'Solidity'],\r\n    loader: function () { return import('./solidity.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"3rh7O\"))).then(() => parcelRequire('iNMFx'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'aes',\r\n    extensions: ['.aes'],\r\n    aliases: ['aes', 'sophia', 'Sophia'],\r\n    loader: function () { return import('./sophia.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"f9eeO\"))).then(() => parcelRequire('9CdFr'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sparql',\r\n    extensions: ['.rq'],\r\n    aliases: ['sparql', 'SPARQL'],\r\n    loader: function () { return import('./sparql.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fl9fU\"))).then(() => parcelRequire('7vv4D'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sql',\r\n    extensions: ['.sql'],\r\n    aliases: ['SQL'],\r\n    loader: function () { return import('./sql.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"1vJot\"))).then(() => parcelRequire('9taVg'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'st',\r\n    extensions: ['.st', '.iecst', '.iecplc', '.lc3lib'],\r\n    aliases: ['StructuredText', 'scl', 'stl'],\r\n    loader: function () { return import('./st.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"iNerO\"))).then(() => parcelRequire('5EoAL'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'swift',\r\n    aliases: ['Swift', 'swift'],\r\n    extensions: ['.swift'],\r\n    mimetypes: ['text/swift'],\r\n    loader: function () { return import('./swift.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fBtzz\"))).then(() => parcelRequire('hiBdm'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'systemverilog',\r\n    extensions: ['.sv', '.svh'],\r\n    aliases: ['SV', 'sv', 'SystemVerilog', 'systemverilog'],\r\n    loader: function () { return import('./systemverilog.js'); }\r\n});\r\nregisterLanguage({\r\n    id: 'verilog',\r\n    extensions: ['.v', '.vh'],\r\n    aliases: ['V', 'v', 'Verilog', 'verilog'],\r\n    loader: function () { return import('./systemverilog.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"ibLyM\"))).then(() => parcelRequire('bexTp'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'tcl',\r\n    extensions: ['.tcl'],\r\n    aliases: ['tcl', 'Tcl', 'tcltk', 'TclTk', 'tcl/tk', 'Tcl/Tk'],\r\n    loader: function () { return import('./tcl.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"6rei7\"))).then(() => parcelRequire('a1NnI'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'twig',\r\n    extensions: ['.twig'],\r\n    aliases: ['Twig', 'twig'],\r\n    mimetypes: ['text/x-twig'],\r\n    loader: function () { return import('./twig.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"fVQg6\"))]).then(() => parcelRequire('lFdBX'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'typescript',\r\n    extensions: ['.ts', '.tsx'],\r\n    aliases: ['TypeScript', 'ts', 'typescript'],\r\n    mimetypes: ['text/typescript'],\r\n    loader: function () { return import('./typescript.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"cWh4m\"))).then(() => parcelRequire('jmA70'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'vb',\r\n    extensions: ['.vb'],\r\n    aliases: ['Visual Basic', 'vb'],\r\n    loader: function () { return import('./vb.js'); }\r\n});\r\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"gB2Ke\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"i9zy6\"))]).then(() => parcelRequire('bStGQ'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'xml',\r\n    extensions: [\r\n        '.xml',\r\n        '.dtd',\r\n        '.ascx',\r\n        '.csproj',\r\n        '.config',\r\n        '.wxi',\r\n        '.wxl',\r\n        '.wxs',\r\n        '.xaml',\r\n        '.svg',\r\n        '.svgz',\r\n        '.opf',\r\n        '.xsl'\r\n    ],\r\n    firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\r\n    aliases: ['XML', 'xml'],\r\n    mimetypes: ['text/xml', 'application/xml', 'application/xaml+xml', 'application/xml-dtd'],\r\n    loader: function () { return import('./xml.js'); }\r\n});\r\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('jJ0ho') + require('./helpers/bundle-manifest').resolve(\"bVVHD\"))).then(() => parcelRequire('foDfK'));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'yaml',\r\n    extensions: ['.yaml', '.yml'],\r\n    aliases: ['YAML', 'yaml', 'YML', 'yml'],\r\n    mimetypes: ['application/x-yaml', 'text/x-yaml'],\r\n    loader: function () { return import('./yaml.js'); }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { illegalArgument } from './errors.js';\r\nimport { escapeIcons } from './iconLabels.js';\r\nexport class MarkdownString {\r\n    constructor(value = '', isTrustedOrOptions = false) {\r\n        var _a, _b;\r\n        this.value = value;\r\n        if (typeof this.value !== 'string') {\r\n            throw illegalArgument('value');\r\n        }\r\n        if (typeof isTrustedOrOptions === 'boolean') {\r\n            this.isTrusted = isTrustedOrOptions;\r\n            this.supportThemeIcons = false;\r\n        }\r\n        else {\r\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\r\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\r\n        }\r\n    }\r\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\r\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\r\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\r\n            .replace(/^>/gm, '\\\\>')\r\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\r\n        return this;\r\n    }\r\n    appendMarkdown(value) {\r\n        this.value += value;\r\n        return this;\r\n    }\r\n    appendCodeblock(langId, code) {\r\n        this.value += '\\n```';\r\n        this.value += langId;\r\n        this.value += '\\n';\r\n        this.value += code;\r\n        this.value += '\\n```\\n';\r\n        return this;\r\n    }\r\n}\r\nexport function isEmptyMarkdownString(oneOrMany) {\r\n    if (isMarkdownString(oneOrMany)) {\r\n        return !oneOrMany.value;\r\n    }\r\n    else if (Array.isArray(oneOrMany)) {\r\n        return oneOrMany.every(isEmptyMarkdownString);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nexport function isMarkdownString(thing) {\r\n    if (thing instanceof MarkdownString) {\r\n        return true;\r\n    }\r\n    else if (thing && typeof thing === 'object') {\r\n        return typeof thing.value === 'string'\r\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\r\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\r\n    }\r\n    return false;\r\n}\r\nexport function escapeMarkdownSyntaxTokens(text) {\r\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\r\n}\r\nexport function removeMarkdownEscapes(text) {\r\n    if (!text) {\r\n        return text;\r\n    }\r\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\r\n}\r\nexport function parseHrefAndDimensions(href) {\r\n    const dimensions = [];\r\n    const splitted = href.split('|').map(s => s.trim());\r\n    href = splitted[0];\r\n    const parameters = splitted[1];\r\n    if (parameters) {\r\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\r\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\r\n        const height = heightFromParams ? heightFromParams[1] : '';\r\n        const width = widthFromParams ? widthFromParams[1] : '';\r\n        const widthIsFinite = isFinite(parseInt(width));\r\n        const heightIsFinite = isFinite(parseInt(height));\r\n        if (widthIsFinite) {\r\n            dimensions.push(`width=\"${width}\"`);\r\n        }\r\n        if (heightIsFinite) {\r\n            dimensions.push(`height=\"${height}\"`);\r\n        }\r\n    }\r\n    return { href, dimensions };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './anchorSelect.css';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\r\nlet SelectionAnchorController = class SelectionAnchorController {\r\n    constructor(editor, contextKeyService) {\r\n        this.editor = editor;\r\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\r\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SelectionAnchorController.ID);\r\n    }\r\n    setSelectionAnchor() {\r\n        if (this.editor.hasModel()) {\r\n            const position = this.editor.getPosition();\r\n            const previousDecorations = this.decorationId ? [this.decorationId] : [];\r\n            const newDecorationId = this.editor.deltaDecorations(previousDecorations, [{\r\n                    range: Selection.fromPositions(position, position),\r\n                    options: {\r\n                        description: 'selection-anchor',\r\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n                        hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\r\n                        className: 'selection-anchor'\r\n                    }\r\n                }]);\r\n            this.decorationId = newDecorationId[0];\r\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\r\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\r\n        }\r\n    }\r\n    goToSelectionAnchor() {\r\n        if (this.editor.hasModel() && this.decorationId) {\r\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\r\n            if (anchorPosition) {\r\n                this.editor.setPosition(anchorPosition.getStartPosition());\r\n            }\r\n        }\r\n    }\r\n    selectFromAnchorToCursor() {\r\n        if (this.editor.hasModel() && this.decorationId) {\r\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\r\n            if (start) {\r\n                const end = this.editor.getPosition();\r\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\r\n                this.cancelSelectionAnchor();\r\n            }\r\n        }\r\n    }\r\n    cancelSelectionAnchor() {\r\n        if (this.decorationId) {\r\n            this.editor.deltaDecorations([this.decorationId], []);\r\n            this.decorationId = undefined;\r\n            this.selectionAnchorSetContextKey.set(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancelSelectionAnchor();\r\n        this.modelChangeListener.dispose();\r\n    }\r\n};\r\nSelectionAnchorController.ID = 'editor.contrib.selectionAnchorController';\r\nSelectionAnchorController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SelectionAnchorController);\r\nclass SetSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.setSelectionAnchor',\r\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\r\n            alias: 'Set Selection Anchor',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 32 /* KEY_B */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.setSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nclass GoToSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.goToSelectionAnchor',\r\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\r\n            alias: 'Go to Selection Anchor',\r\n            precondition: SelectionAnchorSet,\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.goToSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nclass SelectFromAnchorToCursor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectFromAnchorToCursor',\r\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\r\n            alias: 'Select from Anchor to Cursor',\r\n            precondition: SelectionAnchorSet,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 41 /* KEY_K */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.selectFromAnchorToCursor();\r\n        });\r\n    }\r\n}\r\nclass CancelSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.cancelSelectionAnchor',\r\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\r\n            alias: 'Cancel Selection Anchor',\r\n            precondition: SelectionAnchorSet,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 9 /* Escape */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.cancelSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController);\r\nregisterEditorAction(SetSelectionAnchor);\r\nregisterEditorAction(GoToSelectionAnchor);\r\nregisterEditorAction(SelectFromAnchorToCursor);\r\nregisterEditorAction(CancelSelectionAnchor);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './bracketMatching.css';\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { editorBracketMatchBackground, editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\r\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { MenuRegistry, MenuId } from '../../../platform/actions/common/actions.js';\r\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hc: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\r\nclass JumpToBracketAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.jumpToBracket',\r\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\r\n            alias: 'Go to Bracket',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 88 /* US_BACKSLASH */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = BracketMatchingController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.jumpToBracket();\r\n    }\r\n}\r\nclass SelectToBracketAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectToBracket',\r\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\r\n            alias: 'Select to Bracket',\r\n            precondition: undefined,\r\n            description: {\r\n                description: `Select to Bracket`,\r\n                args: [{\r\n                        name: 'args',\r\n                        schema: {\r\n                            type: 'object',\r\n                            properties: {\r\n                                'selectBrackets': {\r\n                                    type: 'boolean',\r\n                                    default: true\r\n                                }\r\n                            },\r\n                        }\r\n                    }]\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        const controller = BracketMatchingController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        let selectBrackets = true;\r\n        if (args && args.selectBrackets === false) {\r\n            selectBrackets = false;\r\n        }\r\n        controller.selectToBracket(selectBrackets);\r\n    }\r\n}\r\nclass BracketsData {\r\n    constructor(position, brackets, options) {\r\n        this.position = position;\r\n        this.brackets = brackets;\r\n        this.options = options;\r\n    }\r\n}\r\nexport class BracketMatchingController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._lastBracketsData = [];\r\n        this._lastVersionId = 0;\r\n        this._decorations = [];\r\n        this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\r\n        this._matchBrackets = this._editor.getOption(63 /* matchBrackets */);\r\n        this._updateBracketsSoon.schedule();\r\n        this._register(editor.onDidChangeCursorPosition((e) => {\r\n            if (this._matchBrackets === 'never') {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._lastBracketsData = [];\r\n            this._decorations = [];\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModelLanguageConfiguration((e) => {\r\n            this._lastBracketsData = [];\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(63 /* matchBrackets */)) {\r\n                this._matchBrackets = this._editor.getOption(63 /* matchBrackets */);\r\n                this._decorations = this._editor.deltaDecorations(this._decorations, []);\r\n                this._lastBracketsData = [];\r\n                this._lastVersionId = 0;\r\n                this._updateBracketsSoon.schedule();\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(BracketMatchingController.ID);\r\n    }\r\n    jumpToBracket() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const newSelections = this._editor.getSelections().map(selection => {\r\n            const position = selection.getStartPosition();\r\n            // find matching brackets if position is on a bracket\r\n            const brackets = model.matchBracket(position);\r\n            let newCursorPosition = null;\r\n            if (brackets) {\r\n                if (brackets[0].containsPosition(position)) {\r\n                    newCursorPosition = brackets[1].getStartPosition();\r\n                }\r\n                else if (brackets[1].containsPosition(position)) {\r\n                    newCursorPosition = brackets[0].getStartPosition();\r\n                }\r\n            }\r\n            else {\r\n                // find the enclosing brackets if the position isn't on a matching bracket\r\n                const enclosingBrackets = model.findEnclosingBrackets(position);\r\n                if (enclosingBrackets) {\r\n                    newCursorPosition = enclosingBrackets[0].getStartPosition();\r\n                }\r\n                else {\r\n                    // no enclosing brackets, try the very first next bracket\r\n                    const nextBracket = model.findNextBracket(position);\r\n                    if (nextBracket && nextBracket.range) {\r\n                        newCursorPosition = nextBracket.range.getStartPosition();\r\n                    }\r\n                }\r\n            }\r\n            if (newCursorPosition) {\r\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n            }\r\n            return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        });\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealRange(newSelections[0]);\r\n    }\r\n    selectToBracket(selectBrackets) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const newSelections = [];\r\n        this._editor.getSelections().forEach(selection => {\r\n            const position = selection.getStartPosition();\r\n            let brackets = model.matchBracket(position);\r\n            if (!brackets) {\r\n                brackets = model.findEnclosingBrackets(position);\r\n                if (!brackets) {\r\n                    const nextBracket = model.findNextBracket(position);\r\n                    if (nextBracket && nextBracket.range) {\r\n                        brackets = model.matchBracket(nextBracket.range.getStartPosition());\r\n                    }\r\n                }\r\n            }\r\n            let selectFrom = null;\r\n            let selectTo = null;\r\n            if (brackets) {\r\n                brackets.sort(Range.compareRangesUsingStarts);\r\n                const [open, close] = brackets;\r\n                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\r\n                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\r\n                if (close.containsPosition(position)) {\r\n                    // select backwards if the cursor was on the closing bracket\r\n                    const tmp = selectFrom;\r\n                    selectFrom = selectTo;\r\n                    selectTo = tmp;\r\n                }\r\n            }\r\n            if (selectFrom && selectTo) {\r\n                newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\r\n            }\r\n        });\r\n        if (newSelections.length > 0) {\r\n            this._editor.setSelections(newSelections);\r\n            this._editor.revealRange(newSelections[0]);\r\n        }\r\n    }\r\n    _updateBrackets() {\r\n        if (this._matchBrackets === 'never') {\r\n            return;\r\n        }\r\n        this._recomputeBrackets();\r\n        let newDecorations = [], newDecorationsLen = 0;\r\n        for (const bracketData of this._lastBracketsData) {\r\n            let brackets = bracketData.brackets;\r\n            if (brackets) {\r\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\r\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\r\n            }\r\n        }\r\n        this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\r\n    }\r\n    _recomputeBrackets() {\r\n        if (!this._editor.hasModel()) {\r\n            // no model => no brackets!\r\n            this._lastBracketsData = [];\r\n            this._lastVersionId = 0;\r\n            return;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length > 100) {\r\n            // no bracket matching for high numbers of selections\r\n            this._lastBracketsData = [];\r\n            this._lastVersionId = 0;\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const versionId = model.getVersionId();\r\n        let previousData = [];\r\n        if (this._lastVersionId === versionId) {\r\n            // use the previous data only if the model is at the same version id\r\n            previousData = this._lastBracketsData;\r\n        }\r\n        let positions = [], positionsLen = 0;\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            if (selection.isEmpty()) {\r\n                // will bracket match a cursor only if the selection is collapsed\r\n                positions[positionsLen++] = selection.getStartPosition();\r\n            }\r\n        }\r\n        // sort positions for `previousData` cache hits\r\n        if (positions.length > 1) {\r\n            positions.sort(Position.compare);\r\n        }\r\n        let newData = [], newDataLen = 0;\r\n        let previousIndex = 0, previousLen = previousData.length;\r\n        for (let i = 0, len = positions.length; i < len; i++) {\r\n            let position = positions[i];\r\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\r\n                previousIndex++;\r\n            }\r\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\r\n                newData[newDataLen++] = previousData[previousIndex];\r\n            }\r\n            else {\r\n                let brackets = model.matchBracket(position);\r\n                let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\r\n                if (!brackets && this._matchBrackets === 'always') {\r\n                    brackets = model.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\r\n                    options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\r\n                }\r\n                newData[newDataLen++] = new BracketsData(position, brackets, options);\r\n            }\r\n        }\r\n        this._lastBracketsData = newData;\r\n        this._lastVersionId = versionId;\r\n    }\r\n}\r\nBracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\r\nBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\r\n    description: 'bracket-match-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'bracket-match',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerBracketMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\r\n    description: 'bracket-match-no-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'bracket-match'\r\n});\r\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController);\r\nregisterEditorAction(SelectToBracketAction);\r\nregisterEditorAction(JumpToBracketAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const bracketMatchBackground = theme.getColor(editorBracketMatchBackground);\r\n    if (bracketMatchBackground) {\r\n        collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);\r\n    }\r\n    const bracketMatchBorder = theme.getColor(editorBracketMatchBorder);\r\n    if (bracketMatchBorder) {\r\n        collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);\r\n    }\r\n});\r\n// Go to menu\r\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\r\n    group: '5_infile_nav',\r\n    command: {\r\n        id: 'editor.action.jumpToBracket',\r\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\r\n    },\r\n    order: 2\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class MoveCaretCommand {\r\n    constructor(selection, isMovingLeft) {\r\n        this._selection = selection;\r\n        this._isMovingLeft = isMovingLeft;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\r\n            return;\r\n        }\r\n        const lineNumber = this._selection.startLineNumber;\r\n        const startColumn = this._selection.startColumn;\r\n        const endColumn = this._selection.endColumn;\r\n        if (this._isMovingLeft && startColumn === 1) {\r\n            return;\r\n        }\r\n        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\r\n            return;\r\n        }\r\n        if (this._isMovingLeft) {\r\n            const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\r\n            const charBefore = model.getValueInRange(rangeBefore);\r\n            builder.addEditOperation(rangeBefore, null);\r\n            builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\r\n        }\r\n        else {\r\n            const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\r\n            const charAfter = model.getValueInRange(rangeAfter);\r\n            builder.addEditOperation(rangeAfter, null);\r\n            builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        if (this._isMovingLeft) {\r\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\r\n        }\r\n        else {\r\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveCaretCommand } from './moveCaretCommand.js';\r\nclass MoveCaretAction extends EditorAction {\r\n    constructor(left, opts) {\r\n        super(opts);\r\n        this.left = left;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let commands = [];\r\n        let selections = editor.getSelections();\r\n        for (const selection of selections) {\r\n            commands.push(new MoveCaretCommand(selection, this.left));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass MoveCaretLeftAction extends MoveCaretAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.moveCarretLeftAction',\r\n            label: nls.localize('caret.moveLeft', \"Move Selected Text Left\"),\r\n            alias: 'Move Selected Text Left',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nclass MoveCaretRightAction extends MoveCaretAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.moveCarretRightAction',\r\n            label: nls.localize('caret.moveRight', \"Move Selected Text Right\"),\r\n            alias: 'Move Selected Text Right',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nregisterEditorAction(MoveCaretLeftAction);\r\nregisterEditorAction(MoveCaretRightAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveOperations } from '../../common/controller/cursorMoveOperations.js';\r\nclass TransposeLettersAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transposeLetters',\r\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\r\n            alias: 'Transpose Letters',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 50 /* KEY_T */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let model = editor.getModel();\r\n        let commands = [];\r\n        let selections = editor.getSelections();\r\n        for (let selection of selections) {\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            let lineNumber = selection.startLineNumber;\r\n            let column = selection.startColumn;\r\n            let lastColumn = model.getLineMaxColumn(lineNumber);\r\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\r\n                // at beginning of file, nothing to do\r\n                continue;\r\n            }\r\n            // handle special case: when at end of line, transpose left two chars\r\n            // otherwise, transpose left and right chars\r\n            let endPosition = (column === lastColumn) ?\r\n                selection.getPosition() :\r\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\r\n            let middlePosition = MoveOperations.leftPosition(model, endPosition);\r\n            let beginPosition = MoveOperations.leftPosition(model, middlePosition);\r\n            let leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\r\n            let rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\r\n            let replaceRange = Range.fromPositions(beginPosition, endPosition);\r\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\r\n        }\r\n        if (commands.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, commands);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nregisterEditorAction(TransposeLettersAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { CopyOptions, InMemoryClipboardMetadataManager } from '../../browser/controller/textAreaInput.js';\r\nimport { EditorAction, registerEditorAction, MultiCommand } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MenuRegistry, MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nconst CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';\r\nconst supportsCut = (platform.isNative || document.queryCommandSupported('cut'));\r\nconst supportsCopy = (platform.isNative || document.queryCommandSupported('copy'));\r\n// Firefox only supports navigator.clipboard.readText() in browser extensions.\r\n// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility\r\n// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313\r\nconst supportsPaste = (typeof navigator.clipboard === 'undefined' || browser.isFirefox) ? document.queryCommandSupported('paste') : true;\r\nfunction registerCommand(command) {\r\n    command.register();\r\n    return command;\r\n}\r\nexport const CutAction = supportsCut ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardCutAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind cut keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 54 /* KEY_X */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 54 /* KEY_X */, secondary: [1024 /* Shift */ | 20 /* Delete */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miCut', comment: ['&& denotes a mnemonic'] }, \"Cu&&t\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 1,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 1,\r\n        }]\r\n})) : undefined;\r\nexport const CopyAction = supportsCopy ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardCopyAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind copy keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 33 /* KEY_C */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 33 /* KEY_C */, secondary: [2048 /* CtrlCmd */ | 19 /* Insert */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miCopy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\r\n            order: 2\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 2,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 2,\r\n        }]\r\n})) : undefined;\r\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, { submenu: MenuId.MenubarCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: '2_ccp', order: 3 });\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: CLIPBOARD_CONTEXT_MENU_GROUP, order: 3 });\r\nexport const PasteAction = supportsPaste ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardPasteAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind paste keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */, secondary: [1024 /* Shift */ | 19 /* Insert */] },\r\n        linux: { primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */, secondary: [1024 /* Shift */ | 19 /* Insert */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miPaste', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\r\n            order: 4\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 4,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 4,\r\n        }]\r\n})) : undefined;\r\nclass ExecCommandCopyWithSyntaxHighlightingAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',\r\n            label: nls.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', \"Copy With Syntax Highlighting\"),\r\n            alias: 'Copy With Syntax Highlighting',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const emptySelectionClipboard = editor.getOption(31 /* emptySelectionClipboard */);\r\n        if (!emptySelectionClipboard && editor.getSelection().isEmpty()) {\r\n            return;\r\n        }\r\n        CopyOptions.forceCopyWithSyntaxHighlighting = true;\r\n        editor.focus();\r\n        document.execCommand('copy');\r\n        CopyOptions.forceCopyWithSyntaxHighlighting = false;\r\n    }\r\n}\r\nfunction registerExecCommandImpl(target, browserCommand) {\r\n    if (!target) {\r\n        return;\r\n    }\r\n    // 1. handle case when focus is in editor.\r\n    target.addImplementation(10000, 'code-editor', (accessor, args) => {\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            // Do not execute if there is no selection and empty selection clipboard is off\r\n            const emptySelectionClipboard = focusedEditor.getOption(31 /* emptySelectionClipboard */);\r\n            const selection = focusedEditor.getSelection();\r\n            if (selection && selection.isEmpty() && !emptySelectionClipboard) {\r\n                return true;\r\n            }\r\n            document.execCommand(browserCommand);\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    // 2. (default) handle case when focus is somewhere else.\r\n    target.addImplementation(0, 'generic-dom', (accessor, args) => {\r\n        document.execCommand(browserCommand);\r\n        return true;\r\n    });\r\n}\r\nregisterExecCommandImpl(CutAction, 'cut');\r\nregisterExecCommandImpl(CopyAction, 'copy');\r\nif (PasteAction) {\r\n    // 1. Paste: handle case when focus is in editor.\r\n    PasteAction.addImplementation(10000, 'code-editor', (accessor, args) => {\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        const clipboardService = accessor.get(IClipboardService);\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        const focusedEditor = codeEditorService.getFocusedCodeEditor();\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            const result = document.execCommand('paste');\r\n            // Use the clipboard service if document.execCommand('paste') was not successful\r\n            if (!result && platform.isWeb) {\r\n                (() => __awaiter(void 0, void 0, void 0, function* () {\r\n                    const clipboardText = yield clipboardService.readText();\r\n                    if (clipboardText !== '') {\r\n                        const metadata = InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);\r\n                        let pasteOnNewLine = false;\r\n                        let multicursorText = null;\r\n                        let mode = null;\r\n                        if (metadata) {\r\n                            pasteOnNewLine = (focusedEditor.getOption(31 /* emptySelectionClipboard */) && !!metadata.isFromEmptySelection);\r\n                            multicursorText = (typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null);\r\n                            mode = metadata.mode;\r\n                        }\r\n                        focusedEditor.trigger('keyboard', \"paste\" /* Paste */, {\r\n                            text: clipboardText,\r\n                            pasteOnNewLine,\r\n                            multicursorText,\r\n                            mode\r\n                        });\r\n                    }\r\n                }))();\r\n                return true;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    // 2. Paste: (default) handle case when focus is somewhere else.\r\n    PasteAction.addImplementation(0, 'generic-dom', (accessor, args) => {\r\n        document.execCommand('paste');\r\n        return true;\r\n    });\r\n}\r\nif (supportsCopy) {\r\n    registerEditorAction(ExecCommandCopyWithSyntaxHighlightingAction);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Lazy {\r\n    constructor(executor) {\r\n        this.executor = executor;\r\n        this._didRun = false;\r\n    }\r\n    /**\r\n     * Get the wrapped value.\r\n     *\r\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\r\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\r\n     */\r\n    getValue() {\r\n        if (!this._didRun) {\r\n            try {\r\n                this._value = this.executor();\r\n            }\r\n            catch (err) {\r\n                this._error = err;\r\n            }\r\n            finally {\r\n                this._didRun = true;\r\n            }\r\n        }\r\n        if (this._error) {\r\n            throw this._error;\r\n        }\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Get the wrapped value without forcing evaluation.\r\n     */\r\n    get rawValue() { return this._value; }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class CodeActionKind {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    equals(other) {\r\n        return this.value === other.value;\r\n    }\r\n    contains(other) {\r\n        return this.equals(other) || this.value === '' || other.value.startsWith(this.value + CodeActionKind.sep);\r\n    }\r\n    intersects(other) {\r\n        return this.contains(other) || other.contains(this);\r\n    }\r\n    append(part) {\r\n        return new CodeActionKind(this.value + CodeActionKind.sep + part);\r\n    }\r\n}\r\nCodeActionKind.sep = '.';\r\nCodeActionKind.None = new CodeActionKind('@@none@@'); // Special code action that contains nothing\r\nCodeActionKind.Empty = new CodeActionKind('');\r\nCodeActionKind.QuickFix = new CodeActionKind('quickfix');\r\nCodeActionKind.Refactor = new CodeActionKind('refactor');\r\nCodeActionKind.Source = new CodeActionKind('source');\r\nCodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\r\nCodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\r\nexport function mayIncludeActionsOfKind(filter, providedKind) {\r\n    // A provided kind may be a subset or superset of our filtered kind.\r\n    if (filter.include && !filter.include.intersects(providedKind)) {\r\n        return false;\r\n    }\r\n    if (filter.excludes) {\r\n        if (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function filtersAction(filter, action) {\r\n    const actionKind = action.kind ? new CodeActionKind(action.kind) : undefined;\r\n    // Filter out actions by kind\r\n    if (filter.include) {\r\n        if (!actionKind || !filter.include.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.excludes) {\r\n        if (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions) {\r\n        if (actionKind && CodeActionKind.Source.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.onlyIncludePreferredActions) {\r\n        if (!action.isPreferred) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction excludesAction(providedKind, exclude, include) {\r\n    if (!exclude.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    if (include && exclude.contains(include)) {\r\n        // The include is more specific, don't filter out\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport class CodeActionCommandArgs {\r\n    constructor(kind, apply, preferred) {\r\n        this.kind = kind;\r\n        this.apply = apply;\r\n        this.preferred = preferred;\r\n    }\r\n    static fromUser(arg, defaults) {\r\n        if (!arg || typeof arg !== 'object') {\r\n            return new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\r\n        }\r\n        return new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg, defaults.kind), CodeActionCommandArgs.getApplyFromUser(arg, defaults.apply), CodeActionCommandArgs.getPreferredUser(arg));\r\n    }\r\n    static getApplyFromUser(arg, defaultAutoApply) {\r\n        switch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\r\n            case 'first': return \"first\" /* First */;\r\n            case 'never': return \"never\" /* Never */;\r\n            case 'ifsingle': return \"ifSingle\" /* IfSingle */;\r\n            default: return defaultAutoApply;\r\n        }\r\n    }\r\n    static getKindFromUser(arg, defaultKind) {\r\n        return typeof arg.kind === 'string'\r\n            ? new CodeActionKind(arg.kind)\r\n            : defaultKind;\r\n    }\r\n    static getPreferredUser(arg) {\r\n        return typeof arg.preferred === 'boolean'\r\n            ? arg.preferred\r\n            : false;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { equals, flatten, isNonEmptyArray, coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, isPromiseCanceledError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport const codeActionCommandId = 'editor.action.codeAction';\r\nexport const refactorCommandId = 'editor.action.refactor';\r\nexport const sourceActionCommandId = 'editor.action.sourceAction';\r\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\r\nexport const fixAllCommandId = 'editor.action.fixAll';\r\nexport class CodeActionItem {\r\n    constructor(action, provider) {\r\n        this.action = action;\r\n        this.provider = provider;\r\n    }\r\n    resolve(token) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\r\n                let action;\r\n                try {\r\n                    action = yield this.provider.resolveCodeAction(this.action, token);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n                if (action) {\r\n                    this.action.edit = action.edit;\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nclass ManagedCodeActionSet extends Disposable {\r\n    constructor(actions, documentation, disposables) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this._register(disposables);\r\n        this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\r\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\r\n    }\r\n    static codeActionsComparator({ action: a }, { action: b }) {\r\n        if (a.isPreferred && !b.isPreferred) {\r\n            return -1;\r\n        }\r\n        else if (!a.isPreferred && b.isPreferred) {\r\n            return 1;\r\n        }\r\n        if (isNonEmptyArray(a.diagnostics)) {\r\n            if (isNonEmptyArray(b.diagnostics)) {\r\n                return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (isNonEmptyArray(b.diagnostics)) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0; // both have no diagnostics\r\n        }\r\n    }\r\n    get hasAutoFix() {\r\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\r\n    }\r\n}\r\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\r\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\r\n    var _a;\r\n    const filter = trigger.filter || {};\r\n    const codeActionContext = {\r\n        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\r\n        trigger: trigger.type,\r\n    };\r\n    const cts = new TextModelCancellationTokenSource(model, token);\r\n    const providers = getCodeActionProviders(model, filter);\r\n    const disposables = new DisposableStore();\r\n    const promises = providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            progress.report(provider);\r\n            const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\r\n            if (providedCodeActions) {\r\n                disposables.add(providedCodeActions);\r\n            }\r\n            if (cts.token.isCancellationRequested) {\r\n                return emptyCodeActionsResponse;\r\n            }\r\n            const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\r\n            const documentation = getDocumentation(provider, filteredActions, filter.include);\r\n            return {\r\n                actions: filteredActions.map(action => new CodeActionItem(action, provider)),\r\n                documentation\r\n            };\r\n        }\r\n        catch (err) {\r\n            if (isPromiseCanceledError(err)) {\r\n                throw err;\r\n            }\r\n            onUnexpectedExternalError(err);\r\n            return emptyCodeActionsResponse;\r\n        }\r\n    }));\r\n    const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\r\n        const newProviders = modes.CodeActionProviderRegistry.all(model);\r\n        if (!equals(newProviders, providers)) {\r\n            cts.cancel();\r\n        }\r\n    });\r\n    return Promise.all(promises).then(actions => {\r\n        const allActions = flatten(actions.map(x => x.actions));\r\n        const allDocumentation = coalesce(actions.map(x => x.documentation));\r\n        return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\r\n    })\r\n        .finally(() => {\r\n        listener.dispose();\r\n        cts.dispose();\r\n    });\r\n}\r\nfunction getCodeActionProviders(model, filter) {\r\n    return modes.CodeActionProviderRegistry.all(model)\r\n        // Don't include providers that we know will not return code actions of interest\r\n        .filter(provider => {\r\n        if (!provider.providedCodeActionKinds) {\r\n            // We don't know what type of actions this provider will return.\r\n            return true;\r\n        }\r\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\r\n    });\r\n}\r\nfunction getDocumentation(provider, providedCodeActions, only) {\r\n    if (!provider.documentation) {\r\n        return undefined;\r\n    }\r\n    const documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\r\n    if (only) {\r\n        let currentBest;\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(only)) {\r\n                if (!currentBest) {\r\n                    currentBest = entry;\r\n                }\r\n                else {\r\n                    // Take best match\r\n                    if (currentBest.kind.contains(entry.kind)) {\r\n                        currentBest = entry;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (currentBest) {\r\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\r\n        }\r\n    }\r\n    // Otherwise, check to see if any of the provided actions match.\r\n    for (const action of providedCodeActions) {\r\n        if (!action.kind) {\r\n            continue;\r\n        }\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(new CodeActionKind(action.kind))) {\r\n                return entry.command;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!(resource instanceof URI)) {\r\n            throw illegalArgument();\r\n        }\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw illegalArgument();\r\n        }\r\n        const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\r\n            ? Selection.liftSelection(rangeOrSelection)\r\n            : Range.isIRange(rangeOrSelection)\r\n                ? model.validateRange(rangeOrSelection)\r\n                : undefined;\r\n        if (!validatedRangeOrSelection) {\r\n            throw illegalArgument();\r\n        }\r\n        const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\r\n        const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, { type: 1 /* Invoke */, filter: { includeSourceActions: true, include } }, Progress.None, CancellationToken.None);\r\n        const resolving = [];\r\n        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\r\n        for (let i = 0; i < resolveCount; i++) {\r\n            resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return codeActionSet.validActions.map(item => item.action);\r\n        }\r\n        finally {\r\n            setTimeout(() => codeActionSet.dispose(), 100);\r\n        }\r\n    });\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './messageController.css';\r\nimport * as nls from '../../../nls.js';\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerEditorContribution, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nlet MessageController = class MessageController {\r\n    constructor(editor, contextKeyService) {\r\n        this._messageWidget = new MutableDisposable();\r\n        this._messageListeners = new DisposableStore();\r\n        this._editor = editor;\r\n        this._visible = MessageController.MESSAGE_VISIBLE.bindTo(contextKeyService);\r\n        this._editorListener = this._editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit());\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MessageController.ID);\r\n    }\r\n    dispose() {\r\n        this._editorListener.dispose();\r\n        this._messageListeners.dispose();\r\n        this._messageWidget.dispose();\r\n        this._visible.reset();\r\n    }\r\n    showMessage(message, position) {\r\n        alert(message);\r\n        this._visible.set(true);\r\n        this._messageWidget.clear();\r\n        this._messageListeners.clear();\r\n        this._messageWidget.value = new MessageWidget(this._editor, position, message);\r\n        // close on blur, cursor, model change, dispose\r\n        this._messageListeners.add(this._editor.onDidBlurEditorText(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidChangeCursorPosition(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidDispose(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidChangeModel(() => this.closeMessage()));\r\n        // 3sec\r\n        this._messageListeners.add(new TimeoutTimer(() => this.closeMessage(), 3000));\r\n        // close on mouse move\r\n        let bounds;\r\n        this._messageListeners.add(this._editor.onMouseMove(e => {\r\n            // outside the text area\r\n            if (!e.target.position) {\r\n                return;\r\n            }\r\n            if (!bounds) {\r\n                // define bounding box around position and first mouse occurance\r\n                bounds = new Range(position.lineNumber - 3, 1, e.target.position.lineNumber + 3, 1);\r\n            }\r\n            else if (!bounds.containsPosition(e.target.position)) {\r\n                // check if position is still in bounds\r\n                this.closeMessage();\r\n            }\r\n        }));\r\n    }\r\n    closeMessage() {\r\n        this._visible.reset();\r\n        this._messageListeners.clear();\r\n        if (this._messageWidget.value) {\r\n            this._messageListeners.add(MessageWidget.fadeOut(this._messageWidget.value));\r\n        }\r\n    }\r\n    _onDidAttemptReadOnlyEdit() {\r\n        if (this._editor.hasModel()) {\r\n            this.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this._editor.getPosition());\r\n        }\r\n    }\r\n};\r\nMessageController.ID = 'editor.contrib.messageController';\r\nMessageController.MESSAGE_VISIBLE = new RawContextKey('messageVisible', false, nls.localize('messageVisible', 'Whether the editor is currently showing an inline message'));\r\nMessageController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], MessageController);\r\nexport { MessageController };\r\nconst MessageCommand = EditorCommand.bindToContribution(MessageController.get);\r\nregisterEditorCommand(new MessageCommand({\r\n    id: 'leaveEditorMessage',\r\n    precondition: MessageController.MESSAGE_VISIBLE,\r\n    handler: c => c.closeMessage(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        primary: 9 /* Escape */\r\n    }\r\n}));\r\nclass MessageWidget {\r\n    constructor(editor, { lineNumber, column }, text) {\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._editor = editor;\r\n        this._editor.revealLinesInCenterIfOutsideViewport(lineNumber, lineNumber, 0 /* Smooth */);\r\n        this._position = { lineNumber, column: column - 1 };\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.classList.add('monaco-editor-overlaymessage');\r\n        const anchorTop = document.createElement('div');\r\n        anchorTop.classList.add('anchor', 'top');\r\n        this._domNode.appendChild(anchorTop);\r\n        const message = document.createElement('div');\r\n        message.classList.add('message');\r\n        message.textContent = text;\r\n        this._domNode.appendChild(message);\r\n        const anchorBottom = document.createElement('div');\r\n        anchorBottom.classList.add('anchor', 'below');\r\n        this._domNode.appendChild(anchorBottom);\r\n        this._editor.addContentWidget(this);\r\n        this._domNode.classList.add('fadeIn');\r\n    }\r\n    static fadeOut(messageWidget) {\r\n        let handle;\r\n        const dispose = () => {\r\n            messageWidget.dispose();\r\n            clearTimeout(handle);\r\n            messageWidget.getDomNode().removeEventListener('animationend', dispose);\r\n        };\r\n        handle = setTimeout(dispose, 110);\r\n        messageWidget.getDomNode().addEventListener('animationend', dispose);\r\n        messageWidget.getDomNode().classList.add('fadeOut');\r\n        return { dispose };\r\n    }\r\n    dispose() {\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'messageoverlay';\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return { position: this._position, preference: [1 /* ABOVE */, 2 /* BELOW */] };\r\n    }\r\n    afterRender(position) {\r\n        this._domNode.classList.toggle('below', position === 2 /* BELOW */);\r\n    }\r\n}\r\nregisterEditorContribution(MessageController.ID, MessageController);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(inputValidationInfoBorder);\r\n    if (border) {\r\n        let borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.below { border-top-color: ${border}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.top { border-bottom-color: ${border}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { border: ${borderWidth}px solid ${border}; }`);\r\n    }\r\n    const background = theme.getColor(inputValidationInfoBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(inputValidationInfoForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { color: ${foreground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { getDomNodePagePosition } from '../../../base/browser/dom.js';\r\nimport { Action, Separator } from '../../../base/common/actions.js';\r\nimport { canceled } from '../../../base/common/errors.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\r\nimport { codeActionCommandId, CodeActionItem, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nclass CodeActionAction extends Action {\r\n    constructor(action, callback) {\r\n        super(action.command ? action.command.id : action.title, stripNewlines(action.title), undefined, !action.disabled, callback);\r\n        this.action = action;\r\n    }\r\n}\r\nfunction stripNewlines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\r\n}\r\nlet CodeActionMenu = class CodeActionMenu extends Disposable {\r\n    constructor(_editor, _delegate, _contextMenuService, keybindingService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._delegate = _delegate;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._visible = false;\r\n        this._showingActions = this._register(new MutableDisposable());\r\n        this._keybindingResolver = new CodeActionKeybindingResolver({\r\n            getKeybindings: () => keybindingService.getKeybindings()\r\n        });\r\n    }\r\n    get isVisible() {\r\n        return this._visible;\r\n    }\r\n    show(trigger, codeActions, at, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const actionsToShow = options.includeDisabledActions ? codeActions.allActions : codeActions.validActions;\r\n            if (!actionsToShow.length) {\r\n                this._visible = false;\r\n                return;\r\n            }\r\n            if (!this._editor.getDomNode()) {\r\n                // cancel when editor went off-dom\r\n                this._visible = false;\r\n                throw canceled();\r\n            }\r\n            this._visible = true;\r\n            this._showingActions.value = codeActions;\r\n            const menuActions = this.getMenuActions(trigger, actionsToShow, codeActions.documentation);\r\n            const anchor = Position.isIPosition(at) ? this._toCoords(at) : at || { x: 0, y: 0 };\r\n            const resolver = this._keybindingResolver.getResolver();\r\n            const useShadowDOM = this._editor.getOption(114 /* useShadowDOM */);\r\n            this._contextMenuService.showContextMenu({\r\n                domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\r\n                getAnchor: () => anchor,\r\n                getActions: () => menuActions,\r\n                onHide: () => {\r\n                    this._visible = false;\r\n                    this._editor.focus();\r\n                },\r\n                autoSelectFirstItem: true,\r\n                getKeyBinding: action => action instanceof CodeActionAction ? resolver(action.action) : undefined,\r\n            });\r\n        });\r\n    }\r\n    getMenuActions(trigger, actionsToShow, documentation) {\r\n        var _a, _b;\r\n        const toCodeActionAction = (item) => new CodeActionAction(item.action, () => this._delegate.onSelectCodeAction(item));\r\n        const result = actionsToShow\r\n            .map(toCodeActionAction);\r\n        const allDocumentation = [...documentation];\r\n        const model = this._editor.getModel();\r\n        if (model && result.length) {\r\n            for (const provider of CodeActionProviderRegistry.all(model)) {\r\n                if (provider._getAdditionalMenuItems) {\r\n                    allDocumentation.push(...provider._getAdditionalMenuItems({ trigger: trigger.type, only: (_b = (_a = trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.value }, actionsToShow.map(item => item.action)));\r\n                }\r\n            }\r\n        }\r\n        if (allDocumentation.length) {\r\n            result.push(new Separator(), ...allDocumentation.map(command => toCodeActionAction(new CodeActionItem({\r\n                title: command.title,\r\n                command: command,\r\n            }, undefined))));\r\n        }\r\n        return result;\r\n    }\r\n    _toCoords(position) {\r\n        if (!this._editor.hasModel()) {\r\n            return { x: 0, y: 0 };\r\n        }\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n        this._editor.render();\r\n        // Translate to absolute editor position\r\n        const cursorCoords = this._editor.getScrolledVisiblePosition(position);\r\n        const editorCoords = getDomNodePagePosition(this._editor.getDomNode());\r\n        const x = editorCoords.left + cursorCoords.left;\r\n        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\r\n        return { x, y };\r\n    }\r\n};\r\nCodeActionMenu = __decorate([\r\n    __param(2, IContextMenuService),\r\n    __param(3, IKeybindingService)\r\n], CodeActionMenu);\r\nexport { CodeActionMenu };\r\nexport class CodeActionKeybindingResolver {\r\n    constructor(_keybindingProvider) {\r\n        this._keybindingProvider = _keybindingProvider;\r\n    }\r\n    getResolver() {\r\n        // Lazy since we may not actually ever read the value\r\n        const allCodeActionBindings = new Lazy(() => this._keybindingProvider.getKeybindings()\r\n            .filter(item => CodeActionKeybindingResolver.codeActionCommands.indexOf(item.command) >= 0)\r\n            .filter(item => item.resolvedKeybinding)\r\n            .map((item) => {\r\n            // Special case these commands since they come built-in with VS Code and don't use 'commandArgs'\r\n            let commandArgs = item.commandArgs;\r\n            if (item.command === organizeImportsCommandId) {\r\n                commandArgs = { kind: CodeActionKind.SourceOrganizeImports.value };\r\n            }\r\n            else if (item.command === fixAllCommandId) {\r\n                commandArgs = { kind: CodeActionKind.SourceFixAll.value };\r\n            }\r\n            return Object.assign({ resolvedKeybinding: item.resolvedKeybinding }, CodeActionCommandArgs.fromUser(commandArgs, {\r\n                kind: CodeActionKind.None,\r\n                apply: \"never\" /* Never */\r\n            }));\r\n        }));\r\n        return (action) => {\r\n            if (action.kind) {\r\n                const binding = this.bestKeybindingForCodeAction(action, allCodeActionBindings.getValue());\r\n                return binding === null || binding === void 0 ? void 0 : binding.resolvedKeybinding;\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n    bestKeybindingForCodeAction(action, candidates) {\r\n        if (!action.kind) {\r\n            return undefined;\r\n        }\r\n        const kind = new CodeActionKind(action.kind);\r\n        return candidates\r\n            .filter(candidate => candidate.kind.contains(kind))\r\n            .filter(candidate => {\r\n            if (candidate.preferred) {\r\n                // If the candidate keybinding only applies to preferred actions, the this action must also be preferred\r\n                return action.isPreferred;\r\n            }\r\n            return true;\r\n        })\r\n            .reduceRight((currentBest, candidate) => {\r\n            if (!currentBest) {\r\n                return candidate;\r\n            }\r\n            // Select the more specific binding\r\n            return currentBest.kind.contains(candidate.kind) ? candidate : currentBest;\r\n        }, undefined);\r\n    }\r\n}\r\nCodeActionKeybindingResolver.codeActionCommands = [\r\n    refactorCommandId,\r\n    codeActionCommandId,\r\n    sourceActionCommandId,\r\n    organizeImportsCommandId,\r\n    fixAllCommandId\r\n];\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../base/browser/globalMouseMoveMonitor.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport './lightBulbWidget.css';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { editorLightBulbForeground, editorLightBulbAutoFixForeground, editorBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Gesture } from '../../../base/browser/touch.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nvar LightBulbState;\r\n(function (LightBulbState) {\r\n    LightBulbState.Hidden = { type: 0 /* Hidden */ };\r\n    class Showing {\r\n        constructor(actions, trigger, editorPosition, widgetPosition) {\r\n            this.actions = actions;\r\n            this.trigger = trigger;\r\n            this.editorPosition = editorPosition;\r\n            this.widgetPosition = widgetPosition;\r\n            this.type = 1 /* Showing */;\r\n        }\r\n    }\r\n    LightBulbState.Showing = Showing;\r\n})(LightBulbState || (LightBulbState = {}));\r\nlet LightBulbWidget = class LightBulbWidget extends Disposable {\r\n    constructor(_editor, _quickFixActionId, _preferredFixActionId, _keybindingService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._quickFixActionId = _quickFixActionId;\r\n        this._preferredFixActionId = _preferredFixActionId;\r\n        this._keybindingService = _keybindingService;\r\n        this._onClick = this._register(new Emitter());\r\n        this.onClick = this._onClick.event;\r\n        this._state = LightBulbState.Hidden;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = Codicon.lightBulb.classNames;\r\n        this._editor.addContentWidget(this);\r\n        this._register(this._editor.onDidChangeModelContent(_ => {\r\n            // cancel when the line in question has been removed\r\n            const editorModel = this._editor.getModel();\r\n            if (this.state.type !== 1 /* Showing */ || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        Gesture.ignoreTarget(this._domNode);\r\n        this._register(dom.addStandardDisposableGenericMouseDownListner(this._domNode, e => {\r\n            if (this.state.type !== 1 /* Showing */) {\r\n                return;\r\n            }\r\n            // Make sure that focus / cursor location is not lost when clicking widget icon\r\n            this._editor.focus();\r\n            e.preventDefault();\r\n            // a bit of extra work to make sure the menu\r\n            // doesn't cover the line-text\r\n            const { top, height } = dom.getDomNodePagePosition(this._domNode);\r\n            const lineHeight = this._editor.getOption(58 /* lineHeight */);\r\n            let pad = Math.floor(lineHeight / 3);\r\n            if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\r\n                pad += lineHeight;\r\n            }\r\n            this._onClick.fire({\r\n                x: e.posx,\r\n                y: top + height + pad,\r\n                actions: this.state.actions,\r\n                trigger: this.state.trigger,\r\n            });\r\n        }));\r\n        this._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e) => {\r\n            if ((e.buttons & 1) !== 1) {\r\n                return;\r\n            }\r\n            // mouse enters lightbulb while the primary/left button\r\n            // is being pressed -> hide the lightbulb and block future\r\n            // showings until mouse is released\r\n            this.hide();\r\n            const monitor = new GlobalMouseMoveMonitor();\r\n            monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, () => { }, () => {\r\n                monitor.dispose();\r\n            });\r\n        }));\r\n        this._register(this._editor.onDidChangeConfiguration(e => {\r\n            // hide when told to do so\r\n            if (e.hasChanged(56 /* lightbulb */) && !this._editor.getOption(56 /* lightbulb */).enabled) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        this._updateLightBulbTitleAndIcon();\r\n        this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon, this));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'LightBulbWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return this._state.type === 1 /* Showing */ ? this._state.widgetPosition : null;\r\n    }\r\n    update(actions, trigger, atPosition) {\r\n        if (actions.validActions.length <= 0) {\r\n            return this.hide();\r\n        }\r\n        const options = this._editor.getOptions();\r\n        if (!options.get(56 /* lightbulb */).enabled) {\r\n            return this.hide();\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return this.hide();\r\n        }\r\n        const { lineNumber, column } = model.validatePosition(atPosition);\r\n        const tabSize = model.getOptions().tabSize;\r\n        const fontInfo = options.get(42 /* fontInfo */);\r\n        const lineContent = model.getLineContent(lineNumber);\r\n        const indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n        const lineHasSpace = fontInfo.spaceWidth * indent > 22;\r\n        const isFolded = (lineNumber) => {\r\n            return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\r\n        };\r\n        let effectiveLineNumber = lineNumber;\r\n        if (!lineHasSpace) {\r\n            if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\r\n                effectiveLineNumber -= 1;\r\n            }\r\n            else if (!isFolded(lineNumber + 1)) {\r\n                effectiveLineNumber += 1;\r\n            }\r\n            else if (column * fontInfo.spaceWidth < 22) {\r\n                // cannot show lightbulb above/below and showing\r\n                // it inline would overlay the cursor...\r\n                return this.hide();\r\n            }\r\n        }\r\n        this.state = new LightBulbState.Showing(actions, trigger, atPosition, {\r\n            position: { lineNumber: effectiveLineNumber, column: 1 },\r\n            preference: LightBulbWidget._posPref\r\n        });\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    hide() {\r\n        this.state = LightBulbState.Hidden;\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        this._state = value;\r\n        this._updateLightBulbTitleAndIcon();\r\n    }\r\n    _updateLightBulbTitleAndIcon() {\r\n        if (this.state.type === 1 /* Showing */ && this.state.actions.hasAutoFix) {\r\n            // update icon\r\n            this._domNode.classList.remove(...Codicon.lightBulb.classNamesArray);\r\n            this._domNode.classList.add(...Codicon.lightbulbAutofix.classNamesArray);\r\n            const preferredKb = this._keybindingService.lookupKeybinding(this._preferredFixActionId);\r\n            if (preferredKb) {\r\n                this.title = nls.localize('preferredcodeActionWithKb', \"Show Code Actions. Preferred Quick Fix Available ({0})\", preferredKb.getLabel());\r\n                return;\r\n            }\r\n        }\r\n        // update icon\r\n        this._domNode.classList.remove(...Codicon.lightbulbAutofix.classNamesArray);\r\n        this._domNode.classList.add(...Codicon.lightBulb.classNamesArray);\r\n        const kb = this._keybindingService.lookupKeybinding(this._quickFixActionId);\r\n        if (kb) {\r\n            this.title = nls.localize('codeActionWithKb', \"Show Code Actions ({0})\", kb.getLabel());\r\n        }\r\n        else {\r\n            this.title = nls.localize('codeAction', \"Show Code Actions\");\r\n        }\r\n    }\r\n    set title(value) {\r\n        this._domNode.title = value;\r\n    }\r\n};\r\nLightBulbWidget._posPref = [0 /* EXACT */];\r\nLightBulbWidget = __decorate([\r\n    __param(3, IKeybindingService)\r\n], LightBulbWidget);\r\nexport { LightBulbWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    var _a;\r\n    const editorBackgroundColor = (_a = theme.getColor(editorBackground)) === null || _a === void 0 ? void 0 : _a.transparent(0.7);\r\n    // Lightbulb Icon\r\n    const editorLightBulbForegroundColor = theme.getColor(editorLightBulbForeground);\r\n    if (editorLightBulbForegroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .contentWidgets ${Codicon.lightBulb.cssSelector} {\n\t\t\tcolor: ${editorLightBulbForegroundColor};\n\t\t\tbackground-color: ${editorBackgroundColor};\n\t\t}`);\r\n    }\r\n    // Lightbulb Auto Fix Icon\r\n    const editorLightBulbAutoFixForegroundColor = theme.getColor(editorLightBulbAutoFixForeground);\r\n    if (editorLightBulbAutoFixForegroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .contentWidgets ${Codicon.lightbulbAutofix.cssSelector} {\n\t\t\tcolor: ${editorLightBulbAutoFixForegroundColor};\n\t\t\tbackground-color: ${editorBackgroundColor};\n\t\t}`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _CodeActionUi_disposed;\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { CodeActionMenu } from './codeActionMenu.js';\r\nimport { LightBulbWidget } from './lightBulbWidget.js';\r\nlet CodeActionUi = class CodeActionUi extends Disposable {\r\n    constructor(_editor, quickFixActionId, preferredFixActionId, delegate, instantiationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this.delegate = delegate;\r\n        this._activeCodeActions = this._register(new MutableDisposable());\r\n        _CodeActionUi_disposed.set(this, false);\r\n        this._codeActionWidget = new Lazy(() => {\r\n            return this._register(instantiationService.createInstance(CodeActionMenu, this._editor, {\r\n                onSelectCodeAction: (action) => __awaiter(this, void 0, void 0, function* () {\r\n                    this.delegate.applyCodeAction(action, /* retrigger */ true);\r\n                })\r\n            }));\r\n        });\r\n        this._lightBulbWidget = new Lazy(() => {\r\n            const widget = this._register(instantiationService.createInstance(LightBulbWidget, this._editor, quickFixActionId, preferredFixActionId));\r\n            this._register(widget.onClick(e => this.showCodeActionList(e.trigger, e.actions, e, { includeDisabledActions: false })));\r\n            return widget;\r\n        });\r\n    }\r\n    dispose() {\r\n        __classPrivateFieldSet(this, _CodeActionUi_disposed, true, \"f\");\r\n        super.dispose();\r\n    }\r\n    update(newState) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (newState.type !== 1 /* Triggered */) {\r\n                (_a = this._lightBulbWidget.rawValue) === null || _a === void 0 ? void 0 : _a.hide();\r\n                return;\r\n            }\r\n            let actions;\r\n            try {\r\n                actions = yield newState.actions;\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n                return;\r\n            }\r\n            if (__classPrivateFieldGet(this, _CodeActionUi_disposed, \"f\")) {\r\n                return;\r\n            }\r\n            this._lightBulbWidget.getValue().update(actions, newState.trigger, newState.position);\r\n            if (newState.trigger.type === 1 /* Invoke */) {\r\n                if ((_b = newState.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) { // Triggered for specific scope\r\n                    // Check to see if we want to auto apply.\r\n                    const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\r\n                    if (validActionToApply) {\r\n                        try {\r\n                            yield this.delegate.applyCodeAction(validActionToApply, false);\r\n                        }\r\n                        finally {\r\n                            actions.dispose();\r\n                        }\r\n                        return;\r\n                    }\r\n                    // Check to see if there is an action that we would have applied were it not invalid\r\n                    if (newState.trigger.context) {\r\n                        const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\r\n                        if (invalidAction && invalidAction.action.disabled) {\r\n                            MessageController.get(this._editor).showMessage(invalidAction.action.disabled, newState.trigger.context.position);\r\n                            actions.dispose();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                const includeDisabledActions = !!((_c = newState.trigger.filter) === null || _c === void 0 ? void 0 : _c.include);\r\n                if (newState.trigger.context) {\r\n                    if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\r\n                        MessageController.get(this._editor).showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\r\n                        this._activeCodeActions.value = actions;\r\n                        actions.dispose();\r\n                        return;\r\n                    }\r\n                }\r\n                this._activeCodeActions.value = actions;\r\n                this._codeActionWidget.getValue().show(newState.trigger, actions, newState.position, { includeDisabledActions });\r\n            }\r\n            else {\r\n                // auto magically triggered\r\n                if (this._codeActionWidget.getValue().isVisible) {\r\n                    // TODO: Figure out if we should update the showing menu?\r\n                    actions.dispose();\r\n                }\r\n                else {\r\n                    this._activeCodeActions.value = actions;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\r\n        if (!actions.allActions.length) {\r\n            return undefined;\r\n        }\r\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length === 0)\r\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.allActions.length === 1)) {\r\n            return actions.allActions.find(({ action }) => action.disabled);\r\n        }\r\n        return undefined;\r\n    }\r\n    tryGetValidActionToApply(trigger, actions) {\r\n        if (!actions.validActions.length) {\r\n            return undefined;\r\n        }\r\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length > 0)\r\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.validActions.length === 1)) {\r\n            return actions.validActions[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    showCodeActionList(trigger, actions, at, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._codeActionWidget.getValue().show(trigger, actions, at, options);\r\n        });\r\n    }\r\n};\r\n_CodeActionUi_disposed = new WeakMap();\r\nCodeActionUi = __decorate([\r\n    __param(4, IInstantiationService)\r\n], CodeActionUi);\r\nexport { CodeActionUi };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _CodeActionModel_isDisposed;\r\nimport { createCancelablePromise, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isEqual } from '../../../base/common/resources.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { getCodeActions } from './codeAction.js';\r\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\r\nclass CodeActionOracle extends Disposable {\r\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._markerService = _markerService;\r\n        this._signalChange = _signalChange;\r\n        this._delay = _delay;\r\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\r\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\r\n        this._register(this._editor.onDidChangeCursorPosition(() => this._onCursorChange()));\r\n    }\r\n    trigger(trigger) {\r\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\r\n        return this._createEventAndSignalChange(trigger, selection);\r\n    }\r\n    _onMarkerChanges(resources) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (resources.some(resource => isEqual(resource, model.uri))) {\r\n            this._autoTriggerTimer.cancelAndSet(() => {\r\n                this.trigger({ type: 2 /* Auto */ });\r\n            }, this._delay);\r\n        }\r\n    }\r\n    _onCursorChange() {\r\n        this._autoTriggerTimer.cancelAndSet(() => {\r\n            this.trigger({ type: 2 /* Auto */ });\r\n        }, this._delay);\r\n    }\r\n    _getRangeOfMarker(selection) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        for (const marker of this._markerService.read({ resource: model.uri })) {\r\n            const markerRange = model.validateRange(marker);\r\n            if (Range.intersectRanges(markerRange, selection)) {\r\n                return Range.lift(markerRange);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\r\n        if (!this._editor.hasModel()) {\r\n            return undefined;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const selection = this._editor.getSelection();\r\n        if (selection.isEmpty() && trigger.type === 2 /* Auto */) {\r\n            const { lineNumber, column } = selection.getPosition();\r\n            const line = model.getLineContent(lineNumber);\r\n            if (line.length === 0) {\r\n                // empty line\r\n                return undefined;\r\n            }\r\n            else if (column === 1) {\r\n                // look only right\r\n                if (/\\s/.test(line[0])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            else if (column === model.getLineMaxColumn(lineNumber)) {\r\n                // look only left\r\n                if (/\\s/.test(line[line.length - 1])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            else {\r\n                // look left and right\r\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n        }\r\n        return selection;\r\n    }\r\n    _createEventAndSignalChange(trigger, selection) {\r\n        const model = this._editor.getModel();\r\n        if (!selection || !model) {\r\n            // cancel\r\n            this._signalChange(undefined);\r\n            return undefined;\r\n        }\r\n        const markerRange = this._getRangeOfMarker(selection);\r\n        const position = markerRange ? markerRange.getStartPosition() : selection.getStartPosition();\r\n        const e = {\r\n            trigger,\r\n            selection,\r\n            position\r\n        };\r\n        this._signalChange(e);\r\n        return e;\r\n    }\r\n}\r\nexport var CodeActionsState;\r\n(function (CodeActionsState) {\r\n    CodeActionsState.Empty = { type: 0 /* Empty */ };\r\n    class Triggered {\r\n        constructor(trigger, rangeOrSelection, position, _cancellablePromise) {\r\n            this.trigger = trigger;\r\n            this.rangeOrSelection = rangeOrSelection;\r\n            this.position = position;\r\n            this._cancellablePromise = _cancellablePromise;\r\n            this.type = 1 /* Triggered */;\r\n            this.actions = _cancellablePromise.catch((e) => {\r\n                if (isPromiseCanceledError(e)) {\r\n                    return emptyCodeActionSet;\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        cancel() {\r\n            this._cancellablePromise.cancel();\r\n        }\r\n    }\r\n    CodeActionsState.Triggered = Triggered;\r\n})(CodeActionsState || (CodeActionsState = {}));\r\nconst emptyCodeActionSet = {\r\n    allActions: [],\r\n    validActions: [],\r\n    dispose: () => { },\r\n    documentation: [],\r\n    hasAutoFix: false\r\n};\r\nexport class CodeActionModel extends Disposable {\r\n    constructor(_editor, _markerService, contextKeyService, _progressService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._markerService = _markerService;\r\n        this._progressService = _progressService;\r\n        this._codeActionOracle = this._register(new MutableDisposable());\r\n        this._state = CodeActionsState.Empty;\r\n        this._onDidChangeState = this._register(new Emitter());\r\n        this.onDidChangeState = this._onDidChangeState.event;\r\n        _CodeActionModel_isDisposed.set(this, false);\r\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\r\n        this._register(this._editor.onDidChangeModel(() => this._update()));\r\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._register(CodeActionProviderRegistry.onDidChange(() => this._update()));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        if (__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _CodeActionModel_isDisposed, true, \"f\");\r\n        super.dispose();\r\n        this.setState(CodeActionsState.Empty, true);\r\n    }\r\n    _update() {\r\n        if (__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            return;\r\n        }\r\n        this._codeActionOracle.value = undefined;\r\n        this.setState(CodeActionsState.Empty);\r\n        const model = this._editor.getModel();\r\n        if (model\r\n            && CodeActionProviderRegistry.has(model)\r\n            && !this._editor.getOption(80 /* readOnly */)) {\r\n            const supportedActions = [];\r\n            for (const provider of CodeActionProviderRegistry.all(model)) {\r\n                if (Array.isArray(provider.providedCodeActionKinds)) {\r\n                    supportedActions.push(...provider.providedCodeActionKinds);\r\n                }\r\n            }\r\n            this._supportedCodeActions.set(supportedActions.join(' '));\r\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\r\n                var _a;\r\n                if (!trigger) {\r\n                    this.setState(CodeActionsState.Empty);\r\n                    return;\r\n                }\r\n                const actions = createCancelablePromise(token => getCodeActions(model, trigger.selection, trigger.trigger, Progress.None, token));\r\n                if (trigger.trigger.type === 1 /* Invoke */) {\r\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\r\n                }\r\n                this.setState(new CodeActionsState.Triggered(trigger.trigger, trigger.selection, trigger.position, actions));\r\n            }, undefined);\r\n            this._codeActionOracle.value.trigger({ type: 2 /* Auto */ });\r\n        }\r\n        else {\r\n            this._supportedCodeActions.reset();\r\n        }\r\n    }\r\n    trigger(trigger) {\r\n        if (this._codeActionOracle.value) {\r\n            this._codeActionOracle.value.trigger(trigger);\r\n        }\r\n    }\r\n    setState(newState, skipNotify) {\r\n        if (newState === this._state) {\r\n            return;\r\n        }\r\n        // Cancel old request\r\n        if (this._state.type === 1 /* Triggered */) {\r\n            this._state.cancel();\r\n        }\r\n        this._state = newState;\r\n        if (!skipNotify && !__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            this._onDidChangeState.fire(newState);\r\n        }\r\n    }\r\n}\r\n_CodeActionModel_isDisposed = new WeakMap();\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionUi } from './codeActionUi.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nfunction contextKeyForSupportedActions(kind) {\r\n    return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\r\n}\r\nconst argsSchema = {\r\n    type: 'object',\r\n    defaultSnippets: [{ body: { kind: '' } }],\r\n    properties: {\r\n        'kind': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\r\n        },\r\n        'apply': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\r\n            default: \"ifSingle\" /* IfSingle */,\r\n            enum: [\"first\" /* First */, \"ifSingle\" /* IfSingle */, \"never\" /* Never */],\r\n            enumDescriptions: [\r\n                nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\r\n                nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\r\n                nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\r\n            ]\r\n        },\r\n        'preferred': {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\r\n        }\r\n    }\r\n};\r\nlet QuickFixController = class QuickFixController extends Disposable {\r\n    constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\r\n        super();\r\n        this._instantiationService = _instantiationService;\r\n        this._editor = editor;\r\n        this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\r\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\r\n        this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\r\n            applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    yield this._applyCodeAction(action);\r\n                }\r\n                finally {\r\n                    if (retrigger) {\r\n                        this._trigger({ type: 2 /* Auto */, filter: {} });\r\n                    }\r\n                }\r\n            })\r\n        }, this._instantiationService)));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(QuickFixController.ID);\r\n    }\r\n    update(newState) {\r\n        this._ui.getValue().update(newState);\r\n    }\r\n    showCodeActions(trigger, actions, at) {\r\n        return this._ui.getValue().showCodeActionList(trigger, actions, at, { includeDisabledActions: false });\r\n    }\r\n    manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        MessageController.get(this._editor).closeMessage();\r\n        const triggerPosition = this._editor.getPosition();\r\n        this._trigger({ type: 1 /* Invoke */, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\r\n    }\r\n    _trigger(trigger) {\r\n        return this._model.trigger(trigger);\r\n    }\r\n    _applyCodeAction(action) {\r\n        return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\r\n    }\r\n};\r\nQuickFixController.ID = 'editor.contrib.quickFixController';\r\nQuickFixController = __decorate([\r\n    __param(1, IMarkerService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IEditorProgressService),\r\n    __param(4, IInstantiationService)\r\n], QuickFixController);\r\nexport { QuickFixController };\r\nexport function applyCodeAction(accessor, item, editor) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const bulkEditService = accessor.get(IBulkEditService);\r\n        const commandService = accessor.get(ICommandService);\r\n        const telemetryService = accessor.get(ITelemetryService);\r\n        const notificationService = accessor.get(INotificationService);\r\n        telemetryService.publicLog2('codeAction.applyCodeAction', {\r\n            codeActionTitle: item.action.title,\r\n            codeActionKind: item.action.kind,\r\n            codeActionIsPreferred: !!item.action.isPreferred,\r\n        });\r\n        yield item.resolve(CancellationToken.None);\r\n        if (item.action.edit) {\r\n            yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), { editor, label: item.action.title });\r\n        }\r\n        if (item.action.command) {\r\n            try {\r\n                yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                const message = asMessage(err);\r\n                notificationService.error(typeof message === 'string'\r\n                    ? message\r\n                    : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction asMessage(err) {\r\n    if (typeof err === 'string') {\r\n        return err;\r\n    }\r\n    else if (err instanceof Error && typeof err.message === 'string') {\r\n        return err.message;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\r\n    if (editor.hasModel()) {\r\n        const controller = QuickFixController.get(editor);\r\n        if (controller) {\r\n            controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\r\n        }\r\n    }\r\n}\r\nexport class QuickFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: QuickFixAction.Id,\r\n            label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\r\n            alias: 'Quick Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\r\n    }\r\n}\r\nQuickFixAction.Id = 'editor.action.quickFix';\r\nexport class CodeActionCommand extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: codeActionCommandId,\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            description: {\r\n                description: 'Trigger a code action',\r\n                args: [{ name: 'args', schema: argsSchema, }]\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Empty,\r\n            apply: \"ifSingle\" /* IfSingle */,\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\r\n                : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\r\n            include: args.kind,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class RefactorAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: refactorCommandId,\r\n            label: nls.localize('refactor.label', \"Refactor...\"),\r\n            alias: 'Refactor...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 48 /* KEY_R */,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 48 /* KEY_R */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor)),\r\n            },\r\n            description: {\r\n                description: 'Refactor...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Refactor,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\r\n                : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\r\n            include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class SourceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: sourceActionCommandId,\r\n            label: nls.localize('source.label', \"Source Action...\"),\r\n            alias: 'Source Action...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2.1,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source)),\r\n            },\r\n            description: {\r\n                description: 'Source Action...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Source,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\r\n                : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\r\n            include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class OrganizeImportsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: organizeImportsCommandId,\r\n            label: nls.localize('organizeImports.label', \"Organize Imports\"),\r\n            alias: 'Organize Imports',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), { include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class FixAllAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: fixAllCommandId,\r\n            label: nls.localize('fixAll.label', \"Fix All\"),\r\n            alias: 'Fix All',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), { include: CodeActionKind.SourceFixAll, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class AutoFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: AutoFixAction.Id,\r\n            label: nls.localize('autoFix.label', \"Auto Fix...\"),\r\n            alias: 'Auto Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 84 /* US_DOT */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\r\n            include: CodeActionKind.QuickFix,\r\n            onlyIncludePreferredActions: true\r\n        }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nAutoFixAction.Id = 'editor.action.autoFix';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CodeActionCommand, OrganizeImportsAction, QuickFixAction, QuickFixController, RefactorAction, SourceAction, AutoFixAction, FixAllAction } from './codeActionCommands.js';\r\nregisterEditorContribution(QuickFixController.ID, QuickFixController);\r\nregisterEditorAction(QuickFixAction);\r\nregisterEditorAction(RefactorAction);\r\nregisterEditorAction(SourceAction);\r\nregisterEditorAction(OrganizeImportsAction);\r\nregisterEditorAction(AutoFixAction);\r\nregisterEditorAction(FixAllAction);\r\nregisterEditorCommand(new CodeActionCommand());\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport class CodeLensModel {\r\n    constructor() {\r\n        this.lenses = [];\r\n        this._disposables = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n    add(list, provider) {\r\n        this._disposables.add(list);\r\n        for (const symbol of list.lenses) {\r\n            this.lenses.push({ symbol, provider });\r\n        }\r\n    }\r\n}\r\nexport function getCodeLensModel(model, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const provider = CodeLensProviderRegistry.ordered(model);\r\n        const providerRanks = new Map();\r\n        const result = new CodeLensModel();\r\n        const promises = provider.map((provider, i) => __awaiter(this, void 0, void 0, function* () {\r\n            providerRanks.set(provider, i);\r\n            try {\r\n                const list = yield Promise.resolve(provider.provideCodeLenses(model, token));\r\n                if (list) {\r\n                    result.add(list, provider);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }));\r\n        yield Promise.all(promises);\r\n        result.lenses = result.lenses.sort((a, b) => {\r\n            // sort by lineNumber, provider-rank, and column\r\n            if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\r\n                return -1;\r\n            }\r\n            else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\r\n                return 1;\r\n            }\r\n            else if ((providerRanks.get(a.provider)) < (providerRanks.get(b.provider))) {\r\n                return -1;\r\n            }\r\n            else if ((providerRanks.get(a.provider)) > (providerRanks.get(b.provider))) {\r\n                return 1;\r\n            }\r\n            else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\r\n                return -1;\r\n            }\r\n            else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        return result;\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeLensProvider', function (accessor, ...args) {\r\n    let [uri, itemResolveCount] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(typeof itemResolveCount === 'number' || !itemResolveCount);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const result = [];\r\n    const disposables = new DisposableStore();\r\n    return getCodeLensModel(model, CancellationToken.None).then(value => {\r\n        disposables.add(value);\r\n        let resolve = [];\r\n        for (const item of value.lenses) {\r\n            if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) {\r\n                result.push(item.symbol);\r\n            }\r\n            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\r\n                resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\r\n            }\r\n        }\r\n        return Promise.all(resolve);\r\n    }).then(() => {\r\n        return result;\r\n    }).finally(() => {\r\n        // make sure to return results, then (on next tick)\r\n        // dispose the results\r\n        setTimeout(() => disposables.dispose(), 100);\r\n    });\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './codelensWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { editorCodeLensForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { editorActiveLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { renderLabelWithIcons } from '../../../base/browser/ui/iconLabel/iconLabels.js';\r\nclass CodeLensViewZone {\r\n    constructor(afterLineNumber, heightInPx, onHeight) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = heightInPx;\r\n        this._onHeight = onHeight;\r\n        this.suppressMouseDown = true;\r\n        this.domNode = document.createElement('div');\r\n    }\r\n    onComputedHeight(height) {\r\n        if (this._lastHeight === undefined) {\r\n            this._lastHeight = height;\r\n        }\r\n        else if (this._lastHeight !== height) {\r\n            this._lastHeight = height;\r\n            this._onHeight();\r\n        }\r\n    }\r\n}\r\nclass CodeLensContentWidget {\r\n    constructor(editor, className, line) {\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = true;\r\n        this._commands = new Map();\r\n        this._isEmpty = true;\r\n        this._editor = editor;\r\n        this._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\r\n        this.updatePosition(line);\r\n        this._domNode = document.createElement('span');\r\n        this._domNode.className = `codelens-decoration ${className}`;\r\n    }\r\n    withCommands(lenses, animate) {\r\n        this._commands.clear();\r\n        let children = [];\r\n        let hasSymbol = false;\r\n        for (let i = 0; i < lenses.length; i++) {\r\n            const lens = lenses[i];\r\n            if (!lens) {\r\n                continue;\r\n            }\r\n            hasSymbol = true;\r\n            if (lens.command) {\r\n                const title = renderLabelWithIcons(lens.command.title.trim());\r\n                if (lens.command.id) {\r\n                    children.push(dom.$('a', { id: String(i), title: lens.command.tooltip }, ...title));\r\n                    this._commands.set(String(i), lens.command);\r\n                }\r\n                else {\r\n                    children.push(dom.$('span', { title: lens.command.tooltip }, ...title));\r\n                }\r\n                if (i + 1 < lenses.length) {\r\n                    children.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\r\n                }\r\n            }\r\n        }\r\n        if (!hasSymbol) {\r\n            // symbols but no commands\r\n            dom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\r\n        }\r\n        else {\r\n            // symbols and commands\r\n            dom.reset(this._domNode, ...children);\r\n            if (this._isEmpty && animate) {\r\n                this._domNode.classList.add('fadein');\r\n            }\r\n            this._isEmpty = false;\r\n        }\r\n    }\r\n    getCommand(link) {\r\n        return link.parentElement === this._domNode\r\n            ? this._commands.get(link.id)\r\n            : undefined;\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    updatePosition(line) {\r\n        const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\r\n        this._widgetPosition = {\r\n            position: { lineNumber: line, column: column },\r\n            preference: [1 /* ABOVE */]\r\n        };\r\n    }\r\n    getPosition() {\r\n        return this._widgetPosition || null;\r\n    }\r\n}\r\nCodeLensContentWidget._idPool = 0;\r\nexport class CodeLensHelper {\r\n    constructor() {\r\n        this._removeDecorations = [];\r\n        this._addDecorations = [];\r\n        this._addDecorationsCallbacks = [];\r\n    }\r\n    addDecoration(decoration, callback) {\r\n        this._addDecorations.push(decoration);\r\n        this._addDecorationsCallbacks.push(callback);\r\n    }\r\n    removeDecoration(decorationId) {\r\n        this._removeDecorations.push(decorationId);\r\n    }\r\n    commit(changeAccessor) {\r\n        let resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\r\n        for (let i = 0, len = resultingDecorations.length; i < len; i++) {\r\n            this._addDecorationsCallbacks[i](resultingDecorations[i]);\r\n        }\r\n    }\r\n}\r\nexport class CodeLensWidget {\r\n    constructor(data, editor, className, helper, viewZoneChangeAccessor, heightInPx, updateCallback) {\r\n        this._isDisposed = false;\r\n        this._editor = editor;\r\n        this._className = className;\r\n        this._data = data;\r\n        // create combined range, track all ranges with decorations,\r\n        // check if there is already something to render\r\n        this._decorationIds = [];\r\n        let range;\r\n        let lenses = [];\r\n        this._data.forEach((codeLensData, i) => {\r\n            if (codeLensData.symbol.command) {\r\n                lenses.push(codeLensData.symbol);\r\n            }\r\n            helper.addDecoration({\r\n                range: codeLensData.symbol.range,\r\n                options: ModelDecorationOptions.EMPTY\r\n            }, id => this._decorationIds[i] = id);\r\n            // the range contains all lenses on this line\r\n            if (!range) {\r\n                range = Range.lift(codeLensData.symbol.range);\r\n            }\r\n            else {\r\n                range = Range.plusRange(range, codeLensData.symbol.range);\r\n            }\r\n        });\r\n        this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);\r\n        this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\r\n        if (lenses.length > 0) {\r\n            this._createContentWidgetIfNecessary();\r\n            this._contentWidget.withCommands(lenses, false);\r\n        }\r\n    }\r\n    _createContentWidgetIfNecessary() {\r\n        if (!this._contentWidget) {\r\n            this._contentWidget = new CodeLensContentWidget(this._editor, this._className, this._viewZone.afterLineNumber + 1);\r\n            this._editor.addContentWidget(this._contentWidget);\r\n        }\r\n        else {\r\n            this._editor.layoutContentWidget(this._contentWidget);\r\n        }\r\n    }\r\n    dispose(helper, viewZoneChangeAccessor) {\r\n        this._decorationIds.forEach(helper.removeDecoration, helper);\r\n        this._decorationIds = [];\r\n        if (viewZoneChangeAccessor) {\r\n            viewZoneChangeAccessor.removeZone(this._viewZoneId);\r\n        }\r\n        if (this._contentWidget) {\r\n            this._editor.removeContentWidget(this._contentWidget);\r\n            this._contentWidget = undefined;\r\n        }\r\n        this._isDisposed = true;\r\n    }\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    isValid() {\r\n        return this._decorationIds.some((id, i) => {\r\n            const range = this._editor.getModel().getDecorationRange(id);\r\n            const symbol = this._data[i].symbol;\r\n            return !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\r\n        });\r\n    }\r\n    updateCodeLensSymbols(data, helper) {\r\n        this._decorationIds.forEach(helper.removeDecoration, helper);\r\n        this._decorationIds = [];\r\n        this._data = data;\r\n        this._data.forEach((codeLensData, i) => {\r\n            helper.addDecoration({\r\n                range: codeLensData.symbol.range,\r\n                options: ModelDecorationOptions.EMPTY\r\n            }, id => this._decorationIds[i] = id);\r\n        });\r\n    }\r\n    updateHeight(height, viewZoneChangeAccessor) {\r\n        this._viewZone.heightInPx = height;\r\n        viewZoneChangeAccessor.layoutZone(this._viewZoneId);\r\n        if (this._contentWidget) {\r\n            this._editor.layoutContentWidget(this._contentWidget);\r\n        }\r\n    }\r\n    computeIfNecessary(model) {\r\n        if (!this._viewZone.domNode.hasAttribute('monaco-visible-view-zone')) {\r\n            return null;\r\n        }\r\n        // Read editor current state\r\n        for (let i = 0; i < this._decorationIds.length; i++) {\r\n            const range = model.getDecorationRange(this._decorationIds[i]);\r\n            if (range) {\r\n                this._data[i].symbol.range = range;\r\n            }\r\n        }\r\n        return this._data;\r\n    }\r\n    updateCommands(symbols) {\r\n        this._createContentWidgetIfNecessary();\r\n        this._contentWidget.withCommands(symbols, true);\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            const resolved = symbols[i];\r\n            if (resolved) {\r\n                const { symbol } = this._data[i];\r\n                symbol.command = resolved.command || symbol.command;\r\n            }\r\n        }\r\n    }\r\n    getCommand(link) {\r\n        var _a;\r\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);\r\n    }\r\n    getLineNumber() {\r\n        const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\r\n        if (range) {\r\n            return range.startLineNumber;\r\n        }\r\n        return -1;\r\n    }\r\n    update(viewZoneChangeAccessor) {\r\n        if (this.isValid()) {\r\n            const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\r\n            if (range) {\r\n                this._viewZone.afterLineNumber = range.startLineNumber - 1;\r\n                viewZoneChangeAccessor.layoutZone(this._viewZoneId);\r\n                if (this._contentWidget) {\r\n                    this._contentWidget.updatePosition(range.startLineNumber);\r\n                    this._editor.layoutContentWidget(this._contentWidget);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getItems() {\r\n        return this._data;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const codeLensForeground = theme.getColor(editorCodeLensForeground);\r\n    if (codeLensForeground) {\r\n        collector.addRule(`.monaco-editor .codelens-decoration { color: ${codeLensForeground}; }`);\r\n        collector.addRule(`.monaco-editor .codelens-decoration .codicon { color: ${codeLensForeground}; }`);\r\n    }\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .codelens-decoration > a:hover { color: ${activeLinkForeground} !important; }`);\r\n        collector.addRule(`.monaco-editor .codelens-decoration > a:hover .codicon { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { CodeLensModel } from './codelens.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { runWhenIdle } from '../../../base/common/async.js';\r\nimport { once } from '../../../base/common/functional.js';\r\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\r\nclass CacheItem {\r\n    constructor(lineCount, data) {\r\n        this.lineCount = lineCount;\r\n        this.data = data;\r\n    }\r\n}\r\nlet CodeLensCache = class CodeLensCache {\r\n    constructor(storageService) {\r\n        this._fakeProvider = new class {\r\n            provideCodeLenses() {\r\n                throw new Error('not supported');\r\n            }\r\n        };\r\n        this._cache = new LRUCache(20, 0.75);\r\n        // remove old data\r\n        const oldkey = 'codelens/cache';\r\n        runWhenIdle(() => storageService.remove(oldkey, 1 /* WORKSPACE */));\r\n        // restore lens data on start\r\n        const key = 'codelens/cache2';\r\n        const raw = storageService.get(key, 1 /* WORKSPACE */, '{}');\r\n        this._deserialize(raw);\r\n        // store lens data on shutdown\r\n        once(storageService.onWillSaveState)(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                storageService.store(key, this._serialize(), 1 /* WORKSPACE */, 1 /* MACHINE */);\r\n            }\r\n        });\r\n    }\r\n    put(model, data) {\r\n        // create a copy of the model that is without command-ids\r\n        // but with comand-labels\r\n        const copyItems = data.lenses.map(item => {\r\n            var _a;\r\n            return {\r\n                range: item.symbol.range,\r\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\r\n            };\r\n        });\r\n        const copyModel = new CodeLensModel();\r\n        copyModel.add({ lenses: copyItems, dispose: () => { } }, this._fakeProvider);\r\n        const item = new CacheItem(model.getLineCount(), copyModel);\r\n        this._cache.set(model.uri.toString(), item);\r\n    }\r\n    get(model) {\r\n        const item = this._cache.get(model.uri.toString());\r\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\r\n    }\r\n    delete(model) {\r\n        this._cache.delete(model.uri.toString());\r\n    }\r\n    // --- persistence\r\n    _serialize() {\r\n        const data = Object.create(null);\r\n        for (const [key, value] of this._cache) {\r\n            const lines = new Set();\r\n            for (const d of value.data.lenses) {\r\n                lines.add(d.symbol.range.startLineNumber);\r\n            }\r\n            data[key] = {\r\n                lineCount: value.lineCount,\r\n                lines: [...lines.values()]\r\n            };\r\n        }\r\n        return JSON.stringify(data);\r\n    }\r\n    _deserialize(raw) {\r\n        try {\r\n            const data = JSON.parse(raw);\r\n            for (const key in data) {\r\n                const element = data[key];\r\n                const lenses = [];\r\n                for (const line of element.lines) {\r\n                    lenses.push({ range: new Range(line, 1, line, 11) });\r\n                }\r\n                const model = new CodeLensModel();\r\n                model.add({ lenses, dispose() { } }, this._fakeProvider);\r\n                this._cache.set(key, new CacheItem(element.lineCount, model));\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore...\r\n        }\r\n    }\r\n};\r\nCodeLensCache = __decorate([\r\n    __param(0, IStorageService)\r\n], CodeLensCache);\r\nexport { CodeLensCache };\r\nregisterSingleton(ICodeLensCache, CodeLensCache);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { registerEditorContribution, registerEditorAction, EditorAction } from '../../browser/editorExtensions.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { getCodeLensModel } from './codelens.js';\r\nimport { CodeLensWidget, CodeLensHelper } from './codelensWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { ICodeLensCache } from './codeLensCache.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nlet CodeLensContribution = class CodeLensContribution {\r\n    constructor(_editor, _commandService, _notificationService, _codeLensCache) {\r\n        this._editor = _editor;\r\n        this._commandService = _commandService;\r\n        this._notificationService = _notificationService;\r\n        this._codeLensCache = _codeLensCache;\r\n        this._disposables = new DisposableStore();\r\n        this._localToDispose = new DisposableStore();\r\n        this._lenses = [];\r\n        this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._oldCodeLensModels = new DisposableStore();\r\n        this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\r\n        this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(42 /* fontInfo */) || e.hasChanged(15 /* codeLensFontSize */) || e.hasChanged(14 /* codeLensFontFamily */)) {\r\n                this._updateLensStyle();\r\n            }\r\n            if (e.hasChanged(13 /* codeLens */)) {\r\n                this._onModelChange();\r\n            }\r\n        }));\r\n        this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\r\n        this._onModelChange();\r\n        this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\r\n        this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode())\r\n            ? this._editor.getContainerDomNode()\r\n            : undefined);\r\n        this._updateLensStyle();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._localDispose();\r\n        this._disposables.dispose();\r\n        this._oldCodeLensModels.dispose();\r\n        (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styleElement.remove();\r\n    }\r\n    _getLayoutInfo() {\r\n        let fontSize = this._editor.getOption(15 /* codeLensFontSize */);\r\n        let codeLensHeight;\r\n        if (!fontSize || fontSize < 5) {\r\n            fontSize = (this._editor.getOption(44 /* fontSize */) * .9) | 0;\r\n            codeLensHeight = this._editor.getOption(58 /* lineHeight */);\r\n        }\r\n        else {\r\n            codeLensHeight = (fontSize * Math.max(1.3, this._editor.getOption(58 /* lineHeight */) / this._editor.getOption(44 /* fontSize */))) | 0;\r\n        }\r\n        return { codeLensHeight, fontSize };\r\n    }\r\n    _updateLensStyle() {\r\n        const { codeLensHeight, fontSize } = this._getLayoutInfo();\r\n        const fontFamily = this._editor.getOption(14 /* codeLensFontFamily */);\r\n        const editorFontInfo = this._editor.getOption(42 /* fontInfo */);\r\n        const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;\r\n        const fontFeaturesVar = `--codelens-font-features${this._styleClassName}`;\r\n        let newStyle = `\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: var(${fontFeaturesVar}) }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;\r\n        if (fontFamily) {\r\n            newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar})}`;\r\n        }\r\n        this._styleElement.textContent = newStyle;\r\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\r\n        this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar, editorFontInfo.fontFeatureSettings);\r\n        //\r\n        this._editor.changeViewZones(accessor => {\r\n            for (let lens of this._lenses) {\r\n                lens.updateHeight(codeLensHeight, accessor);\r\n            }\r\n        });\r\n    }\r\n    _localDispose() {\r\n        var _a, _b, _c;\r\n        (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._getCodeLensModelPromise = undefined;\r\n        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        this._localToDispose.clear();\r\n        this._oldCodeLensModels.clear();\r\n        (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\r\n    }\r\n    _onModelChange() {\r\n        this._localDispose();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(13 /* codeLens */)) {\r\n            return;\r\n        }\r\n        const cachedLenses = this._codeLensCache.get(model);\r\n        if (cachedLenses) {\r\n            this._renderCodeLensSymbols(cachedLenses);\r\n        }\r\n        if (!CodeLensProviderRegistry.has(model)) {\r\n            // no provider -> return but check with\r\n            // cached lenses. they expire after 30 seconds\r\n            if (cachedLenses) {\r\n                this._localToDispose.add(disposableTimeout(() => {\r\n                    const cachedLensesNow = this._codeLensCache.get(model);\r\n                    if (cachedLenses === cachedLensesNow) {\r\n                        this._codeLensCache.delete(model);\r\n                        this._onModelChange();\r\n                    }\r\n                }, 30 * 1000));\r\n            }\r\n            return;\r\n        }\r\n        for (const provider of CodeLensProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                let registration = provider.onDidChange(() => scheduler.schedule());\r\n                this._localToDispose.add(registration);\r\n            }\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => {\r\n            var _a;\r\n            const t1 = Date.now();\r\n            (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\r\n            this._getCodeLensModelPromise.then(result => {\r\n                if (this._currentCodeLensModel) {\r\n                    this._oldCodeLensModels.add(this._currentCodeLensModel);\r\n                }\r\n                this._currentCodeLensModel = result;\r\n                // cache model to reduce flicker\r\n                this._codeLensCache.put(model, result);\r\n                // update moving average\r\n                const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\r\n                scheduler.delay = newDelay;\r\n                // render lenses\r\n                this._renderCodeLensSymbols(result);\r\n                // dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());\r\n                this._resolveCodeLensesInViewportSoon();\r\n            }, onUnexpectedError);\r\n        }, this._getCodeLensModelDelays.get(model));\r\n        this._localToDispose.add(scheduler);\r\n        this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            this._editor.changeDecorations(decorationsAccessor => {\r\n                this._editor.changeViewZones(viewZonesAccessor => {\r\n                    let toDispose = [];\r\n                    let lastLensLineNumber = -1;\r\n                    this._lenses.forEach((lens) => {\r\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\r\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\r\n                            // line_number -> lenses should never be on the same line\r\n                            toDispose.push(lens);\r\n                        }\r\n                        else {\r\n                            lens.update(viewZonesAccessor);\r\n                            lastLensLineNumber = lens.getLineNumber();\r\n                        }\r\n                    });\r\n                    let helper = new CodeLensHelper();\r\n                    toDispose.forEach((l) => {\r\n                        l.dispose(helper, viewZonesAccessor);\r\n                        this._lenses.splice(this._lenses.indexOf(l), 1);\r\n                    });\r\n                    helper.commit(decorationsAccessor);\r\n                });\r\n            });\r\n            // Ask for all references again\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidScrollChange(e => {\r\n            if (e.scrollTopChanged && this._lenses.length > 0) {\r\n                this._resolveCodeLensesInViewportSoon();\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidLayoutChange(() => {\r\n            this._resolveCodeLensesInViewportSoon();\r\n        }));\r\n        this._localToDispose.add(toDisposable(() => {\r\n            if (this._editor.getModel()) {\r\n                const scrollState = StableEditorScrollState.capture(this._editor);\r\n                this._editor.changeDecorations(decorationsAccessor => {\r\n                    this._editor.changeViewZones(viewZonesAccessor => {\r\n                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\r\n                    });\r\n                });\r\n                scrollState.restore(this._editor);\r\n            }\r\n            else {\r\n                // No accessors available\r\n                this._disposeAllLenses(undefined, undefined);\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onMouseDown(e => {\r\n            if (e.target.type !== 9 /* CONTENT_WIDGET */) {\r\n                return;\r\n            }\r\n            let target = e.target.element;\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\r\n                target = target.parentElement;\r\n            }\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\r\n                for (const lens of this._lenses) {\r\n                    let command = lens.getCommand(target);\r\n                    if (command) {\r\n                        this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        scheduler.schedule();\r\n    }\r\n    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\r\n        const helper = new CodeLensHelper();\r\n        for (const lens of this._lenses) {\r\n            lens.dispose(helper, viewZoneChangeAccessor);\r\n        }\r\n        if (decChangeAccessor) {\r\n            helper.commit(decChangeAccessor);\r\n        }\r\n        this._lenses.length = 0;\r\n    }\r\n    _renderCodeLensSymbols(symbols) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let maxLineNumber = this._editor.getModel().getLineCount();\r\n        let groups = [];\r\n        let lastGroup;\r\n        for (let symbol of symbols.lenses) {\r\n            let line = symbol.symbol.range.startLineNumber;\r\n            if (line < 1 || line > maxLineNumber) {\r\n                // invalid code lens\r\n                continue;\r\n            }\r\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\r\n                // on same line as previous\r\n                lastGroup.push(symbol);\r\n            }\r\n            else {\r\n                // on later line as previous\r\n                lastGroup = [symbol];\r\n                groups.push(lastGroup);\r\n            }\r\n        }\r\n        const scrollState = StableEditorScrollState.capture(this._editor);\r\n        const layoutInfo = this._getLayoutInfo();\r\n        this._editor.changeDecorations(decorationsAccessor => {\r\n            this._editor.changeViewZones(viewZoneAccessor => {\r\n                const helper = new CodeLensHelper();\r\n                let codeLensIndex = 0;\r\n                let groupsIndex = 0;\r\n                while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\r\n                    let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\r\n                    let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\r\n                    if (codeLensLineNumber < symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                        this._lenses.splice(codeLensIndex, 1);\r\n                    }\r\n                    else if (codeLensLineNumber === symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\r\n                        groupsIndex++;\r\n                        codeLensIndex++;\r\n                    }\r\n                    else {\r\n                        this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                        codeLensIndex++;\r\n                        groupsIndex++;\r\n                    }\r\n                }\r\n                // Delete extra code lenses\r\n                while (codeLensIndex < this._lenses.length) {\r\n                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                    this._lenses.splice(codeLensIndex, 1);\r\n                }\r\n                // Create extra symbols\r\n                while (groupsIndex < groups.length) {\r\n                    this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                    groupsIndex++;\r\n                }\r\n                helper.commit(decorationsAccessor);\r\n            });\r\n        });\r\n        scrollState.restore(this._editor);\r\n    }\r\n    _resolveCodeLensesInViewportSoon() {\r\n        const model = this._editor.getModel();\r\n        if (model) {\r\n            this._resolveCodeLensesScheduler.schedule();\r\n        }\r\n    }\r\n    _resolveCodeLensesInViewport() {\r\n        var _a;\r\n        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        const toResolve = [];\r\n        const lenses = [];\r\n        this._lenses.forEach((lens) => {\r\n            const request = lens.computeIfNecessary(model);\r\n            if (request) {\r\n                toResolve.push(request);\r\n                lenses.push(lens);\r\n            }\r\n        });\r\n        if (toResolve.length === 0) {\r\n            return;\r\n        }\r\n        const t1 = Date.now();\r\n        const resolvePromise = createCancelablePromise(token => {\r\n            const promises = toResolve.map((request, i) => {\r\n                const resolvedSymbols = new Array(request.length);\r\n                const promises = request.map((request, i) => {\r\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\r\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\r\n                            resolvedSymbols[i] = symbol;\r\n                        }, onUnexpectedExternalError);\r\n                    }\r\n                    else {\r\n                        resolvedSymbols[i] = request.symbol;\r\n                        return Promise.resolve(undefined);\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(() => {\r\n                    if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\r\n                        lenses[i].updateCommands(resolvedSymbols);\r\n                    }\r\n                });\r\n            });\r\n            return Promise.all(promises);\r\n        });\r\n        this._resolveCodeLensesPromise = resolvePromise;\r\n        this._resolveCodeLensesPromise.then(() => {\r\n            // update moving average\r\n            const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\r\n            this._resolveCodeLensesScheduler.delay = newDelay;\r\n            if (this._currentCodeLensModel) { // update the cached state with new resolved items\r\n                this._codeLensCache.put(model, this._currentCodeLensModel);\r\n            }\r\n            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        }, err => {\r\n            onUnexpectedError(err); // can also be cancellation!\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        });\r\n    }\r\n    getLenses() {\r\n        return this._lenses;\r\n    }\r\n};\r\nCodeLensContribution.ID = 'css.editor.codeLens';\r\nCodeLensContribution = __decorate([\r\n    __param(1, ICommandService),\r\n    __param(2, INotificationService),\r\n    __param(3, ICodeLensCache)\r\n], CodeLensContribution);\r\nexport { CodeLensContribution };\r\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\r\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'codelens.showLensesInCurrentLine',\r\n            precondition: EditorContextKeys.hasCodeLensProvider,\r\n            label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\r\n            alias: 'Show CodeLens Commands For Current Line',\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const quickInputService = accessor.get(IQuickInputService);\r\n            const commandService = accessor.get(ICommandService);\r\n            const notificationService = accessor.get(INotificationService);\r\n            const lineNumber = editor.getSelection().positionLineNumber;\r\n            const codelensController = editor.getContribution(CodeLensContribution.ID);\r\n            const items = [];\r\n            for (let lens of codelensController.getLenses()) {\r\n                if (lens.getLineNumber() === lineNumber) {\r\n                    for (let item of lens.getItems()) {\r\n                        const { command } = item.symbol;\r\n                        if (command) {\r\n                            items.push({\r\n                                label: command.title,\r\n                                command: command\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (items.length === 0) {\r\n                // We dont want an empty picker\r\n                return;\r\n            }\r\n            const item = yield quickInputService.pick(items, { canPickMany: false });\r\n            if (!item) {\r\n                // Nothing picked\r\n                return;\r\n            }\r\n            try {\r\n                yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport function getColors(model, token) {\r\n    const colors = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let colorInfo of result) {\r\n                colors.push({ colorInfo, provider });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => colors);\r\n}\r\nexport function getColorPresentations(model, colorInfo, provider, token) {\r\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\r\n    const [resource] = args;\r\n    if (!(resource instanceof URI)) {\r\n        throw illegalArgument();\r\n    }\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const rawCIs = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let ci of result) {\r\n                rawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => rawCIs);\r\n});\r\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\r\n    const [color, context] = args;\r\n    const { uri, range } = context;\r\n    if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\r\n        throw illegalArgument();\r\n    }\r\n    const [red, green, blue, alpha] = color;\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const colorInfo = {\r\n        range,\r\n        color: { red, green, blue, alpha }\r\n    };\r\n    const presentations = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            presentations.push(...result);\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => presentations);\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { TimeoutTimer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { RGBA } from '../../../base/common/color.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { getColors } from './color.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst MAX_DECORATORS = 500;\r\nlet ColorDetector = class ColorDetector extends Disposable {\r\n    constructor(_editor, _codeEditorService, _configurationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._configurationService = _configurationService;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._decorationsIds = [];\r\n        this._colorDatas = new Map();\r\n        this._colorDecoratorIds = [];\r\n        this._decorationsTypes = new Set();\r\n        this._register(_editor.onDidChangeModel(() => {\r\n            this._isEnabled = this.isEnabled();\r\n            this.onModelChanged();\r\n        }));\r\n        this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\r\n        this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\r\n        this._register(_editor.onDidChangeConfiguration(() => {\r\n            let prevIsEnabled = this._isEnabled;\r\n            this._isEnabled = this.isEnabled();\r\n            if (prevIsEnabled !== this._isEnabled) {\r\n                if (this._isEnabled) {\r\n                    this.onModelChanged();\r\n                }\r\n                else {\r\n                    this.removeAllDecorations();\r\n                }\r\n            }\r\n        }));\r\n        this._timeoutTimer = null;\r\n        this._computePromise = null;\r\n        this._isEnabled = this.isEnabled();\r\n        this.onModelChanged();\r\n    }\r\n    isEnabled() {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const languageId = model.getLanguageIdentifier();\r\n        // handle deprecated settings. [languageId].colorDecorators.enable\r\n        const deprecatedConfig = this._configurationService.getValue(languageId.language);\r\n        if (deprecatedConfig && typeof deprecatedConfig === 'object') {\r\n            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\r\n            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\r\n                return colorDecorators['enable'];\r\n            }\r\n        }\r\n        return this._editor.getOption(16 /* colorDecorators */);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(this.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        this.removeAllDecorations();\r\n        super.dispose();\r\n    }\r\n    onModelChanged() {\r\n        this.stop();\r\n        if (!this._isEnabled) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !ColorProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            if (!this._timeoutTimer) {\r\n                this._timeoutTimer = new TimeoutTimer();\r\n                this._timeoutTimer.cancelAndSet(() => {\r\n                    this._timeoutTimer = null;\r\n                    this.beginCompute();\r\n                }, ColorDetector.RECOMPUTE_TIME);\r\n            }\r\n        }));\r\n        this.beginCompute();\r\n    }\r\n    beginCompute() {\r\n        this._computePromise = createCancelablePromise(token => {\r\n            const model = this._editor.getModel();\r\n            if (!model) {\r\n                return Promise.resolve([]);\r\n            }\r\n            return getColors(model, token);\r\n        });\r\n        this._computePromise.then((colorInfos) => {\r\n            this.updateDecorations(colorInfos);\r\n            this.updateColorDecorators(colorInfos);\r\n            this._computePromise = null;\r\n        }, onUnexpectedError);\r\n    }\r\n    stop() {\r\n        if (this._timeoutTimer) {\r\n            this._timeoutTimer.cancel();\r\n            this._timeoutTimer = null;\r\n        }\r\n        if (this._computePromise) {\r\n            this._computePromise.cancel();\r\n            this._computePromise = null;\r\n        }\r\n        this._localToDispose.clear();\r\n    }\r\n    updateDecorations(colorDatas) {\r\n        const decorations = colorDatas.map(c => ({\r\n            range: {\r\n                startLineNumber: c.colorInfo.range.startLineNumber,\r\n                startColumn: c.colorInfo.range.startColumn,\r\n                endLineNumber: c.colorInfo.range.endLineNumber,\r\n                endColumn: c.colorInfo.range.endColumn\r\n            },\r\n            options: ModelDecorationOptions.EMPTY\r\n        }));\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\r\n        this._colorDatas = new Map();\r\n        this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\r\n    }\r\n    updateColorDecorators(colorData) {\r\n        let decorations = [];\r\n        let newDecorationsTypes = {};\r\n        for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\r\n            const { red, green, blue, alpha } = colorData[i].colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            let subKey = hash(`rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`).toString(16);\r\n            let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\r\n            let key = 'colorBox-' + subKey;\r\n            if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\r\n                this._codeEditorService.registerDecorationType('color-detector-color', key, {\r\n                    before: {\r\n                        contentText: ' ',\r\n                        border: 'solid 0.1em #000',\r\n                        margin: '0.1em 0.2em 0 0.2em',\r\n                        width: '0.8em',\r\n                        height: '0.8em',\r\n                        backgroundColor: color\r\n                    },\r\n                    dark: {\r\n                        before: {\r\n                            border: 'solid 0.1em #eee'\r\n                        }\r\n                    }\r\n                }, undefined, this._editor);\r\n            }\r\n            newDecorationsTypes[key] = true;\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,\r\n                    startColumn: colorData[i].colorInfo.range.startColumn,\r\n                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,\r\n                    endColumn: colorData[i].colorInfo.range.endColumn\r\n                },\r\n                options: this._codeEditorService.resolveDecorationOptions(key, true)\r\n            });\r\n        }\r\n        this._decorationsTypes.forEach(subType => {\r\n            if (!newDecorationsTypes[subType]) {\r\n                this._codeEditorService.removeDecorationType(subType);\r\n            }\r\n        });\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\r\n    }\r\n    removeAllDecorations() {\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\r\n        this._decorationsTypes.forEach(subType => {\r\n            this._codeEditorService.removeDecorationType(subType);\r\n        });\r\n    }\r\n    getColorData(position) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return null;\r\n        }\r\n        const decorations = model\r\n            .getDecorationsInRange(Range.fromPositions(position, position))\r\n            .filter(d => this._colorDatas.has(d.id));\r\n        if (decorations.length === 0) {\r\n            return null;\r\n        }\r\n        return this._colorDatas.get(decorations[0].id);\r\n    }\r\n};\r\nColorDetector.ID = 'editor.contrib.colorDetector';\r\nColorDetector.RECOMPUTE_TIME = 1000; // ms\r\nColorDetector = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IConfigurationService)\r\n], ColorDetector);\r\nexport { ColorDetector };\r\nregisterEditorContribution(ColorDetector.ID, ColorDetector);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nexport class HoverOperation {\r\n    constructor(computer, success, error, progress, hoverTime) {\r\n        this._computer = computer;\r\n        this._state = 0 /* IDLE */;\r\n        this._hoverTime = hoverTime;\r\n        this._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), 0);\r\n        this._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), 0);\r\n        this._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 0);\r\n        this._asyncComputationPromise = null;\r\n        this._asyncComputationPromiseDone = false;\r\n        this._completeCallback = success;\r\n        this._errorCallback = error;\r\n        this._progressCallback = progress;\r\n    }\r\n    setHoverTime(hoverTime) {\r\n        this._hoverTime = hoverTime;\r\n    }\r\n    _firstWaitTime() {\r\n        return this._hoverTime / 2;\r\n    }\r\n    _secondWaitTime() {\r\n        return this._hoverTime / 2;\r\n    }\r\n    _loadingMessageTime() {\r\n        return 3 * this._hoverTime;\r\n    }\r\n    _triggerAsyncComputation() {\r\n        this._state = 2 /* SECOND_WAIT */;\r\n        this._secondWaitScheduler.schedule(this._secondWaitTime());\r\n        if (this._computer.computeAsync) {\r\n            this._asyncComputationPromiseDone = false;\r\n            this._asyncComputationPromise = createCancelablePromise(token => this._computer.computeAsync(token));\r\n            this._asyncComputationPromise.then((asyncResult) => {\r\n                this._asyncComputationPromiseDone = true;\r\n                this._withAsyncResult(asyncResult);\r\n            }, (e) => this._onError(e));\r\n        }\r\n        else {\r\n            this._asyncComputationPromiseDone = true;\r\n        }\r\n    }\r\n    _triggerSyncComputation() {\r\n        if (this._computer.computeSync) {\r\n            this._computer.onResult(this._computer.computeSync(), true);\r\n        }\r\n        if (this._asyncComputationPromiseDone) {\r\n            this._state = 0 /* IDLE */;\r\n            this._onComplete(this._computer.getResult());\r\n        }\r\n        else {\r\n            this._state = 3 /* WAITING_FOR_ASYNC_COMPUTATION */;\r\n            this._onProgress(this._computer.getResult());\r\n        }\r\n    }\r\n    _showLoadingMessage() {\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            this._onProgress(this._computer.getResultWithLoadingMessage());\r\n        }\r\n    }\r\n    _withAsyncResult(asyncResult) {\r\n        if (asyncResult) {\r\n            this._computer.onResult(asyncResult, false);\r\n        }\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            this._state = 0 /* IDLE */;\r\n            this._onComplete(this._computer.getResult());\r\n        }\r\n    }\r\n    _onComplete(value) {\r\n        this._completeCallback(value);\r\n    }\r\n    _onError(error) {\r\n        if (this._errorCallback) {\r\n            this._errorCallback(error);\r\n        }\r\n        else {\r\n            onUnexpectedError(error);\r\n        }\r\n    }\r\n    _onProgress(value) {\r\n        this._progressCallback(value);\r\n    }\r\n    start(mode) {\r\n        if (mode === 0 /* Delayed */) {\r\n            if (this._state === 0 /* IDLE */) {\r\n                this._state = 1 /* FIRST_WAIT */;\r\n                this._firstWaitScheduler.schedule(this._firstWaitTime());\r\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime());\r\n            }\r\n        }\r\n        else {\r\n            switch (this._state) {\r\n                case 0 /* IDLE */:\r\n                    this._triggerAsyncComputation();\r\n                    this._secondWaitScheduler.cancel();\r\n                    this._triggerSyncComputation();\r\n                    break;\r\n                case 2 /* SECOND_WAIT */:\r\n                    this._secondWaitScheduler.cancel();\r\n                    this._triggerSyncComputation();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    cancel() {\r\n        this._loadingMessageScheduler.cancel();\r\n        if (this._state === 1 /* FIRST_WAIT */) {\r\n            this._firstWaitScheduler.cancel();\r\n        }\r\n        if (this._state === 2 /* SECOND_WAIT */) {\r\n            this._secondWaitScheduler.cancel();\r\n            if (this._asyncComputationPromise) {\r\n                this._asyncComputationPromise.cancel();\r\n                this._asyncComputationPromise = null;\r\n            }\r\n        }\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            if (this._asyncComputationPromise) {\r\n                this._asyncComputationPromise.cancel();\r\n                this._asyncComputationPromise = null;\r\n            }\r\n        }\r\n        this._state = 0 /* IDLE */;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport './hover.css';\r\nconst $ = dom.$;\r\nexport class HoverWidget extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this.containerDomNode = document.createElement('div');\r\n        this.containerDomNode.className = 'monaco-hover';\r\n        this.containerDomNode.tabIndex = 0;\r\n        this.containerDomNode.setAttribute('role', 'tooltip');\r\n        this.contentsDomNode = document.createElement('div');\r\n        this.contentsDomNode.className = 'monaco-hover-content';\r\n        this._scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\r\n            consumeMouseWheelIfScrollbarIsNeeded: true\r\n        }));\r\n        this.containerDomNode.appendChild(this._scrollbar.getDomNode());\r\n    }\r\n    onContentsChanged() {\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n}\r\nexport class HoverAction extends Disposable {\r\n    constructor(parent, actionOptions, keybindingLabel) {\r\n        super();\r\n        this.actionContainer = dom.append(parent, $('div.action-container'));\r\n        this.action = dom.append(this.actionContainer, $('a.action'));\r\n        this.action.setAttribute('href', '#');\r\n        this.action.setAttribute('role', 'button');\r\n        if (actionOptions.iconClass) {\r\n            dom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\r\n        }\r\n        const label = dom.append(this.action, $('span'));\r\n        label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\r\n        this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.CLICK, e => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            actionOptions.run(this.actionContainer);\r\n        }));\r\n        this.setEnabled(true);\r\n    }\r\n    static render(parent, actionOptions, keybindingLabel) {\r\n        return new HoverAction(parent, actionOptions, keybindingLabel);\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.actionContainer.classList.remove('disabled');\r\n            this.actionContainer.removeAttribute('aria-disabled');\r\n        }\r\n        else {\r\n            this.actionContainer.classList.add('disabled');\r\n            this.actionContainer.setAttribute('aria-disabled', 'true');\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { hasDriveLetter, isRootOrDriveLetter } from './extpath.js';\r\nimport { Schemas } from './network.js';\r\nimport { isWindows } from './platform.js';\r\nimport { basename } from './resources.js';\r\nimport { URI } from './uri.js';\r\nexport function getBaseLabel(resource) {\r\n    if (!resource) {\r\n        return undefined;\r\n    }\r\n    if (typeof resource === 'string') {\r\n        resource = URI.file(resource);\r\n    }\r\n    const base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\r\n    // convert c: => C:\r\n    if (isWindows && isRootOrDriveLetter(base)) {\r\n        return normalizeDriveLetter(base);\r\n    }\r\n    return base;\r\n}\r\nexport function normalizeDriveLetter(path) {\r\n    if (hasDriveLetter(path)) {\r\n        return path.charAt(0).toUpperCase() + path.slice(1);\r\n    }\r\n    return path;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\r\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService) {\r\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\r\n        this._parentEditor = parentEditor;\r\n        this._overwriteOptions = options;\r\n        // Overwrite parent's options\r\n        super.updateOptions(this._overwriteOptions);\r\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\r\n    }\r\n    getParentEditor() {\r\n        return this._parentEditor;\r\n    }\r\n    _onParentConfigurationChanged(e) {\r\n        super.updateOptions(this._parentEditor.getRawOptions());\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n    updateOptions(newOptions) {\r\n        objects.mixin(this._overwriteOptions, newOptions, true);\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n};\r\nEmbeddedCodeEditorWidget = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, ICodeEditorService),\r\n    __param(5, ICommandService),\r\n    __param(6, IContextKeyService),\r\n    __param(7, IThemeService),\r\n    __param(8, INotificationService),\r\n    __param(9, IAccessibilityService)\r\n], EmbeddedCodeEditorWidget);\r\nexport { EmbeddedCodeEditorWidget };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './zoneWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { IdGenerator } from '../../../base/common/idGenerator.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nconst defaultColor = new Color(new RGBA(0, 122, 204));\r\nconst defaultOptions = {\r\n    showArrow: true,\r\n    showFrame: true,\r\n    className: '',\r\n    frameColor: defaultColor,\r\n    arrowColor: defaultColor,\r\n    keepEditorSelection: false\r\n};\r\nconst WIDGET_ID = 'vs.editor.contrib.zoneWidget';\r\nexport class ViewZoneDelegate {\r\n    constructor(domNode, afterLineNumber, afterColumn, heightInLines, onDomNodeTop, onComputedHeight) {\r\n        this.id = ''; // A valid zone id should be greater than 0\r\n        this.domNode = domNode;\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.afterColumn = afterColumn;\r\n        this.heightInLines = heightInLines;\r\n        this._onDomNodeTop = onDomNodeTop;\r\n        this._onComputedHeight = onComputedHeight;\r\n    }\r\n    onDomNodeTop(top) {\r\n        this._onDomNodeTop(top);\r\n    }\r\n    onComputedHeight(height) {\r\n        this._onComputedHeight(height);\r\n    }\r\n}\r\nexport class OverlayWidgetDelegate {\r\n    constructor(id, domNode) {\r\n        this._id = id;\r\n        this._domNode = domNode;\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n}\r\nclass Arrow {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ruleName = Arrow._IdGenerator.nextId();\r\n        this._decorations = [];\r\n        this._color = null;\r\n        this._height = -1;\r\n        //\r\n    }\r\n    dispose() {\r\n        this.hide();\r\n        dom.removeCSSRulesContainingSelector(this._ruleName);\r\n    }\r\n    set color(value) {\r\n        if (this._color !== value) {\r\n            this._color = value;\r\n            this._updateStyle();\r\n        }\r\n    }\r\n    set height(value) {\r\n        if (this._height !== value) {\r\n            this._height = value;\r\n            this._updateStyle();\r\n        }\r\n    }\r\n    _updateStyle() {\r\n        dom.removeCSSRulesContainingSelector(this._ruleName);\r\n        dom.createCSSRule(`.monaco-editor ${this._ruleName}`, `border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `);\r\n    }\r\n    show(where) {\r\n        this._decorations = this._editor.deltaDecorations(this._decorations, [{ range: Range.fromPositions(where), options: { description: 'zone-widget-arrow', className: this._ruleName, stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ } }]);\r\n    }\r\n    hide() {\r\n        this._editor.deltaDecorations(this._decorations, []);\r\n    }\r\n}\r\nArrow._IdGenerator = new IdGenerator('.arrow-decoration-');\r\nexport class ZoneWidget {\r\n    constructor(editor, options = {}) {\r\n        this._arrow = null;\r\n        this._overlayWidget = null;\r\n        this._resizeSash = null;\r\n        this._positionMarkerId = [];\r\n        this._viewZone = null;\r\n        this._disposables = new DisposableStore();\r\n        this.container = null;\r\n        this._isShowing = false;\r\n        this.editor = editor;\r\n        this.options = objects.deepClone(options);\r\n        objects.mixin(this.options, defaultOptions, false);\r\n        this.domNode = document.createElement('div');\r\n        if (!this.options.isAccessible) {\r\n            this.domNode.setAttribute('aria-hidden', 'true');\r\n            this.domNode.setAttribute('role', 'presentation');\r\n        }\r\n        this._disposables.add(this.editor.onDidLayoutChange((info) => {\r\n            const width = this._getWidth(info);\r\n            this.domNode.style.width = width + 'px';\r\n            this.domNode.style.left = this._getLeft(info) + 'px';\r\n            this._onWidth(width);\r\n        }));\r\n    }\r\n    dispose() {\r\n        if (this._overlayWidget) {\r\n            this.editor.removeOverlayWidget(this._overlayWidget);\r\n            this._overlayWidget = null;\r\n        }\r\n        if (this._viewZone) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    accessor.removeZone(this._viewZone.id);\r\n                }\r\n                this._viewZone = null;\r\n            });\r\n        }\r\n        this.editor.deltaDecorations(this._positionMarkerId, []);\r\n        this._positionMarkerId = [];\r\n        this._disposables.dispose();\r\n    }\r\n    create() {\r\n        this.domNode.classList.add('zone-widget');\r\n        if (this.options.className) {\r\n            this.domNode.classList.add(this.options.className);\r\n        }\r\n        this.container = document.createElement('div');\r\n        this.container.classList.add('zone-widget-container');\r\n        this.domNode.appendChild(this.container);\r\n        if (this.options.showArrow) {\r\n            this._arrow = new Arrow(this.editor);\r\n            this._disposables.add(this._arrow);\r\n        }\r\n        this._fillContainer(this.container);\r\n        this._initSash();\r\n        this._applyStyles();\r\n    }\r\n    style(styles) {\r\n        if (styles.frameColor) {\r\n            this.options.frameColor = styles.frameColor;\r\n        }\r\n        if (styles.arrowColor) {\r\n            this.options.arrowColor = styles.arrowColor;\r\n        }\r\n        this._applyStyles();\r\n    }\r\n    _applyStyles() {\r\n        if (this.container && this.options.frameColor) {\r\n            let frameColor = this.options.frameColor.toString();\r\n            this.container.style.borderTopColor = frameColor;\r\n            this.container.style.borderBottomColor = frameColor;\r\n        }\r\n        if (this._arrow && this.options.arrowColor) {\r\n            let arrowColor = this.options.arrowColor.toString();\r\n            this._arrow.color = arrowColor;\r\n        }\r\n    }\r\n    _getWidth(info) {\r\n        return info.width - info.minimap.minimapWidth - info.verticalScrollbarWidth;\r\n    }\r\n    _getLeft(info) {\r\n        // If minimap is to the left, we move beyond it\r\n        if (info.minimap.minimapWidth > 0 && info.minimap.minimapLeft === 0) {\r\n            return info.minimap.minimapWidth;\r\n        }\r\n        return 0;\r\n    }\r\n    _onViewZoneTop(top) {\r\n        this.domNode.style.top = top + 'px';\r\n    }\r\n    _onViewZoneHeight(height) {\r\n        this.domNode.style.height = `${height}px`;\r\n        if (this.container) {\r\n            let containerHeight = height - this._decoratingElementsHeight();\r\n            this.container.style.height = `${containerHeight}px`;\r\n            const layoutInfo = this.editor.getLayoutInfo();\r\n            this._doLayout(containerHeight, this._getWidth(layoutInfo));\r\n        }\r\n        if (this._resizeSash) {\r\n            this._resizeSash.layout();\r\n        }\r\n    }\r\n    get position() {\r\n        const [id] = this._positionMarkerId;\r\n        if (!id) {\r\n            return undefined;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        const range = model.getDecorationRange(id);\r\n        if (!range) {\r\n            return undefined;\r\n        }\r\n        return range.getStartPosition();\r\n    }\r\n    show(rangeOrPos, heightInLines) {\r\n        const range = Range.isIRange(rangeOrPos) ? Range.lift(rangeOrPos) : Range.fromPositions(rangeOrPos);\r\n        this._isShowing = true;\r\n        this._showImpl(range, heightInLines);\r\n        this._isShowing = false;\r\n        this._positionMarkerId = this.editor.deltaDecorations(this._positionMarkerId, [{ range, options: ModelDecorationOptions.EMPTY }]);\r\n    }\r\n    hide() {\r\n        if (this._viewZone) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    accessor.removeZone(this._viewZone.id);\r\n                }\r\n            });\r\n            this._viewZone = null;\r\n        }\r\n        if (this._overlayWidget) {\r\n            this.editor.removeOverlayWidget(this._overlayWidget);\r\n            this._overlayWidget = null;\r\n        }\r\n        if (this._arrow) {\r\n            this._arrow.hide();\r\n        }\r\n    }\r\n    _decoratingElementsHeight() {\r\n        let lineHeight = this.editor.getOption(58 /* lineHeight */);\r\n        let result = 0;\r\n        if (this.options.showArrow) {\r\n            let arrowHeight = Math.round(lineHeight / 3);\r\n            result += 2 * arrowHeight;\r\n        }\r\n        if (this.options.showFrame) {\r\n            let frameThickness = Math.round(lineHeight / 9);\r\n            result += 2 * frameThickness;\r\n        }\r\n        return result;\r\n    }\r\n    _showImpl(where, heightInLines) {\r\n        const position = where.getStartPosition();\r\n        const layoutInfo = this.editor.getLayoutInfo();\r\n        const width = this._getWidth(layoutInfo);\r\n        this.domNode.style.width = `${width}px`;\r\n        this.domNode.style.left = this._getLeft(layoutInfo) + 'px';\r\n        // Render the widget as zone (rendering) and widget (lifecycle)\r\n        const viewZoneDomNode = document.createElement('div');\r\n        viewZoneDomNode.style.overflow = 'hidden';\r\n        const lineHeight = this.editor.getOption(58 /* lineHeight */);\r\n        // adjust heightInLines to viewport\r\n        const maxHeightInLines = Math.max(12, (this.editor.getLayoutInfo().height / lineHeight) * 0.8);\r\n        heightInLines = Math.min(heightInLines, maxHeightInLines);\r\n        let arrowHeight = 0;\r\n        let frameThickness = 0;\r\n        // Render the arrow one 1/3 of an editor line height\r\n        if (this._arrow && this.options.showArrow) {\r\n            arrowHeight = Math.round(lineHeight / 3);\r\n            this._arrow.height = arrowHeight;\r\n            this._arrow.show(position);\r\n        }\r\n        // Render the frame as 1/9 of an editor line height\r\n        if (this.options.showFrame) {\r\n            frameThickness = Math.round(lineHeight / 9);\r\n        }\r\n        // insert zone widget\r\n        this.editor.changeViewZones((accessor) => {\r\n            if (this._viewZone) {\r\n                accessor.removeZone(this._viewZone.id);\r\n            }\r\n            if (this._overlayWidget) {\r\n                this.editor.removeOverlayWidget(this._overlayWidget);\r\n                this._overlayWidget = null;\r\n            }\r\n            this.domNode.style.top = '-1000px';\r\n            this._viewZone = new ViewZoneDelegate(viewZoneDomNode, position.lineNumber, position.column, heightInLines, (top) => this._onViewZoneTop(top), (height) => this._onViewZoneHeight(height));\r\n            this._viewZone.id = accessor.addZone(this._viewZone);\r\n            this._overlayWidget = new OverlayWidgetDelegate(WIDGET_ID + this._viewZone.id, this.domNode);\r\n            this.editor.addOverlayWidget(this._overlayWidget);\r\n        });\r\n        if (this.container && this.options.showFrame) {\r\n            const width = this.options.frameWidth ? this.options.frameWidth : frameThickness;\r\n            this.container.style.borderTopWidth = width + 'px';\r\n            this.container.style.borderBottomWidth = width + 'px';\r\n        }\r\n        let containerHeight = heightInLines * lineHeight - this._decoratingElementsHeight();\r\n        if (this.container) {\r\n            this.container.style.top = arrowHeight + 'px';\r\n            this.container.style.height = containerHeight + 'px';\r\n            this.container.style.overflow = 'hidden';\r\n        }\r\n        this._doLayout(containerHeight, width);\r\n        if (!this.options.keepEditorSelection) {\r\n            this.editor.setSelection(where);\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (model) {\r\n            const revealLine = where.endLineNumber + 1;\r\n            if (revealLine <= model.getLineCount()) {\r\n                // reveal line below the zone widget\r\n                this.revealLine(revealLine, false);\r\n            }\r\n            else {\r\n                // reveal last line atop\r\n                this.revealLine(model.getLineCount(), true);\r\n            }\r\n        }\r\n    }\r\n    revealLine(lineNumber, isLastLine) {\r\n        if (isLastLine) {\r\n            this.editor.revealLineInCenter(lineNumber, 0 /* Smooth */);\r\n        }\r\n        else {\r\n            this.editor.revealLine(lineNumber, 0 /* Smooth */);\r\n        }\r\n    }\r\n    setCssClass(className, classToReplace) {\r\n        if (!this.container) {\r\n            return;\r\n        }\r\n        if (classToReplace) {\r\n            this.container.classList.remove(classToReplace);\r\n        }\r\n        this.container.classList.add(className);\r\n    }\r\n    _onWidth(widthInPixel) {\r\n        // implement in subclass\r\n    }\r\n    _doLayout(heightInPixel, widthInPixel) {\r\n        // implement in subclass\r\n    }\r\n    _relayout(newHeightInLines) {\r\n        if (this._viewZone && this._viewZone.heightInLines !== newHeightInLines) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    this._viewZone.heightInLines = newHeightInLines;\r\n                    accessor.layoutZone(this._viewZone.id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // --- sash\r\n    _initSash() {\r\n        if (this._resizeSash) {\r\n            return;\r\n        }\r\n        this._resizeSash = this._disposables.add(new Sash(this.domNode, this, { orientation: 1 /* HORIZONTAL */ }));\r\n        if (!this.options.isResizeable) {\r\n            this._resizeSash.hide();\r\n            this._resizeSash.state = 0 /* Disabled */;\r\n        }\r\n        let data;\r\n        this._disposables.add(this._resizeSash.onDidStart((e) => {\r\n            if (this._viewZone) {\r\n                data = {\r\n                    startY: e.startY,\r\n                    heightInLines: this._viewZone.heightInLines,\r\n                };\r\n            }\r\n        }));\r\n        this._disposables.add(this._resizeSash.onDidEnd(() => {\r\n            data = undefined;\r\n        }));\r\n        this._disposables.add(this._resizeSash.onDidChange((evt) => {\r\n            if (data) {\r\n                let lineDelta = (evt.currentY - data.startY) / this.editor.getOption(58 /* lineHeight */);\r\n                let roundedLineDelta = lineDelta < 0 ? Math.ceil(lineDelta) : Math.floor(lineDelta);\r\n                let newHeightInLines = data.heightInLines + roundedLineDelta;\r\n                if (newHeightInLines > 5 && newHeightInLines < 35) {\r\n                    this._relayout(newHeightInLines);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    getHorizontalSashLeft() {\r\n        return 0;\r\n    }\r\n    getHorizontalSashTop() {\r\n        return (this.domNode.style.height === null ? 0 : parseInt(this.domNode.style.height)) - (this._decoratingElementsHeight() / 2);\r\n    }\r\n    getHorizontalSashWidth() {\r\n        const layoutInfo = this.editor.getLayoutInfo();\r\n        return layoutInfo.width - layoutInfo.minimap.minimapWidth;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { EventType as GestureEventType, Gesture } from '../../touch.js';\r\nimport { ActionRunner } from '../../../common/actions.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './dropdown.css';\r\nexport class BaseDropdown extends ActionRunner {\r\n    constructor(container, options) {\r\n        super();\r\n        this._onDidChangeVisibility = new Emitter();\r\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\r\n        this._element = append(container, $('.monaco-dropdown'));\r\n        this._label = append(this._element, $('.dropdown-label'));\r\n        let labelRenderer = options.labelRenderer;\r\n        if (!labelRenderer) {\r\n            labelRenderer = (container) => {\r\n                container.textContent = options.label || '';\r\n                return null;\r\n            };\r\n        }\r\n        for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\r\n        }\r\n        for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this._label, event, e => {\r\n                if (e instanceof MouseEvent && e.detail > 1) {\r\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\r\n                }\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(3 /* Enter */) || event.equals(10 /* Space */)) {\r\n                EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n        }));\r\n        const cleanupFn = labelRenderer(this._label);\r\n        if (cleanupFn) {\r\n            this._register(cleanupFn);\r\n        }\r\n        this._register(Gesture.addTarget(this._label));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    show() {\r\n        if (!this.visible) {\r\n            this.visible = true;\r\n            this._onDidChangeVisibility.fire(true);\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.visible) {\r\n            this.visible = false;\r\n            this._onDidChangeVisibility.fire(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.hide();\r\n        if (this.boxContainer) {\r\n            this.boxContainer.remove();\r\n            this.boxContainer = undefined;\r\n        }\r\n        if (this.contents) {\r\n            this.contents.remove();\r\n            this.contents = undefined;\r\n        }\r\n        if (this._label) {\r\n            this._label.remove();\r\n            this._label = undefined;\r\n        }\r\n    }\r\n}\r\nexport class DropdownMenu extends BaseDropdown {\r\n    constructor(container, options) {\r\n        super(container, options);\r\n        this._actions = [];\r\n        this._contextMenuProvider = options.contextMenuProvider;\r\n        this.actions = options.actions || [];\r\n        this.actionProvider = options.actionProvider;\r\n        this.menuClassName = options.menuClassName || '';\r\n        this.menuAsChild = !!options.menuAsChild;\r\n    }\r\n    set menuOptions(options) {\r\n        this._menuOptions = options;\r\n    }\r\n    get menuOptions() {\r\n        return this._menuOptions;\r\n    }\r\n    get actions() {\r\n        if (this.actionProvider) {\r\n            return this.actionProvider.getActions();\r\n        }\r\n        return this._actions;\r\n    }\r\n    set actions(actions) {\r\n        this._actions = actions;\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.element.classList.add('active');\r\n        this._contextMenuProvider.showContextMenu({\r\n            getAnchor: () => this.element,\r\n            getActions: () => this.actions,\r\n            getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\r\n            getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\r\n            getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\r\n            getMenuClassName: () => this.menuClassName,\r\n            onHide: () => this.onHide(),\r\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\r\n            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */,\r\n            domForShadowRoot: this.menuAsChild ? this.element : undefined\r\n        });\r\n    }\r\n    hide() {\r\n        super.hide();\r\n    }\r\n    onHide() {\r\n        this.hide();\r\n        this.element.classList.remove('active');\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $, append } from '../../dom.js';\r\nimport { BaseActionViewItem } from '../actionbar/actionViewItems.js';\r\nimport { DropdownMenu } from './dropdown.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './dropdown.css';\r\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\r\n    constructor(action, menuActionsOrProvider, contextMenuProvider, options = Object.create(null)) {\r\n        super(null, action, options);\r\n        this.actionItem = null;\r\n        this._onDidChangeVisibility = this._register(new Emitter());\r\n        this.menuActionsOrProvider = menuActionsOrProvider;\r\n        this.contextMenuProvider = contextMenuProvider;\r\n        this.options = options;\r\n        if (this.options.actionRunner) {\r\n            this.actionRunner = this.options.actionRunner;\r\n        }\r\n    }\r\n    render(container) {\r\n        this.actionItem = container;\r\n        const labelRenderer = (el) => {\r\n            this.element = append(el, $('a.action-label'));\r\n            let classNames = [];\r\n            if (typeof this.options.classNames === 'string') {\r\n                classNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\r\n            }\r\n            else if (this.options.classNames) {\r\n                classNames = this.options.classNames;\r\n            }\r\n            // todo@aeschli: remove codicon, should come through `this.options.classNames`\r\n            if (!classNames.find(c => c === 'icon')) {\r\n                classNames.push('codicon');\r\n            }\r\n            this.element.classList.add(...classNames);\r\n            this.element.setAttribute('role', 'button');\r\n            this.element.setAttribute('aria-haspopup', 'true');\r\n            this.element.setAttribute('aria-expanded', 'false');\r\n            this.element.title = this._action.label || '';\r\n            return null;\r\n        };\r\n        const isActionsArray = Array.isArray(this.menuActionsOrProvider);\r\n        const options = {\r\n            contextMenuProvider: this.contextMenuProvider,\r\n            labelRenderer: labelRenderer,\r\n            menuAsChild: this.options.menuAsChild,\r\n            actions: isActionsArray ? this.menuActionsOrProvider : undefined,\r\n            actionProvider: isActionsArray ? undefined : this.menuActionsOrProvider\r\n        };\r\n        this.dropdownMenu = this._register(new DropdownMenu(container, options));\r\n        this._register(this.dropdownMenu.onDidChangeVisibility(visible => {\r\n            var _a;\r\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.setAttribute('aria-expanded', `${visible}`);\r\n            this._onDidChangeVisibility.fire(visible);\r\n        }));\r\n        this.dropdownMenu.menuOptions = {\r\n            actionViewItemProvider: this.options.actionViewItemProvider,\r\n            actionRunner: this.actionRunner,\r\n            getKeyBinding: this.options.keybindingProvider,\r\n            context: this._context\r\n        };\r\n        if (this.options.anchorAlignmentProvider) {\r\n            const that = this;\r\n            this.dropdownMenu.menuOptions = Object.assign(Object.assign({}, this.dropdownMenu.menuOptions), { get anchorAlignment() {\r\n                    return that.options.anchorAlignmentProvider();\r\n                } });\r\n        }\r\n        this.updateEnabled();\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        if (this.dropdownMenu) {\r\n            if (this.dropdownMenu.menuOptions) {\r\n                this.dropdownMenu.menuOptions.context = newContext;\r\n            }\r\n            else {\r\n                this.dropdownMenu.menuOptions = { context: newContext };\r\n            }\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        var _a, _b;\r\n        const disabled = !this.getAction().enabled;\r\n        (_a = this.actionItem) === null || _a === void 0 ? void 0 : _a.classList.toggle('disabled', disabled);\r\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.toggle('disabled', disabled);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\r\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\r\nimport { ActionViewItem, BaseActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\r\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { DisposableStore, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\r\nimport './menuEntryActionViewItem.css';\r\nimport { localize } from '../../../nls.js';\r\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { IStorageService } from '../../storage/common/storage.js';\r\nimport { ThemeIcon } from '../../theme/common/themeService.js';\r\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\r\n    const groups = menu.getActions(options);\r\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\r\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\r\n    fillInActions(groups, target, false, isPrimaryAction, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\r\n    return asDisposable(groups);\r\n}\r\nfunction asDisposable(groups) {\r\n    const disposables = new DisposableStore();\r\n    for (const [, actions] of groups) {\r\n        for (const action of actions) {\r\n            disposables.add(action);\r\n        }\r\n    }\r\n    return disposables;\r\n}\r\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', primaryMaxCount = Number.MAX_SAFE_INTEGER, shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\r\n    let primaryBucket;\r\n    let secondaryBucket;\r\n    if (Array.isArray(target)) {\r\n        primaryBucket = target;\r\n        secondaryBucket = target;\r\n    }\r\n    else {\r\n        primaryBucket = target.primary;\r\n        secondaryBucket = target.secondary;\r\n    }\r\n    const submenuInfo = new Set();\r\n    for (const [group, actions] of groups) {\r\n        let target;\r\n        if (isPrimaryAction(group)) {\r\n            target = primaryBucket;\r\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        else {\r\n            target = secondaryBucket;\r\n            if (target.length > 0) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        for (let action of actions) {\r\n            if (useAlternativeActions) {\r\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\r\n            }\r\n            const newLen = target.push(action);\r\n            // keep submenu info for later inlining\r\n            if (action instanceof SubmenuAction) {\r\n                submenuInfo.add({ group, action, index: newLen - 1 });\r\n            }\r\n        }\r\n    }\r\n    // ask the outside if submenu should be inlined or not. only ask when\r\n    // there would be enough space\r\n    for (const { group, action, index } of submenuInfo) {\r\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\r\n        // inlining submenus with length 0 or 1 is easy,\r\n        // larger submenus need to be checked with the overall limit\r\n        const submenuActions = action.actions;\r\n        if ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group, target.length)) {\r\n            target.splice(index, 1, ...submenuActions);\r\n        }\r\n    }\r\n    // overflow items from the primary group into the secondary bucket\r\n    if (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {\r\n        const overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);\r\n        secondaryBucket.unshift(...overflow, new Separator());\r\n    }\r\n}\r\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\r\n    constructor(_action, options, _keybindingService, _notificationService, _contextKeyService) {\r\n        super(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable });\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._wantsAltCommand = false;\r\n        this._itemClassDispose = this._register(new MutableDisposable());\r\n        this._altKey = ModifierKeyEmitter.getInstance();\r\n    }\r\n    get _menuItemAction() {\r\n        return this._action;\r\n    }\r\n    get _commandAction() {\r\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\r\n    }\r\n    onClick(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            try {\r\n                yield this.actionRunner.run(this._commandAction, this._context);\r\n            }\r\n            catch (err) {\r\n                this._notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        container.classList.add('menu-entry');\r\n        this._updateItemClass(this._menuItemAction.item);\r\n        let mouseOver = false;\r\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\r\n        const updateAltState = () => {\r\n            const wantsAltCommand = mouseOver && alternativeKeyDown;\r\n            if (wantsAltCommand !== this._wantsAltCommand) {\r\n                this._wantsAltCommand = wantsAltCommand;\r\n                this.updateLabel();\r\n                this.updateTooltip();\r\n                this.updateClass();\r\n            }\r\n        };\r\n        if (this._menuItemAction.alt) {\r\n            this._register(this._altKey.event(value => {\r\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\r\n                updateAltState();\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(container, 'mouseleave', _ => {\r\n            mouseOver = false;\r\n            updateAltState();\r\n        }));\r\n        this._register(addDisposableListener(container, 'mouseenter', _ => {\r\n            mouseOver = true;\r\n            updateAltState();\r\n        }));\r\n    }\r\n    updateLabel() {\r\n        if (this.options.label && this.label) {\r\n            this.label.textContent = this._commandAction.label;\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        if (this.label) {\r\n            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\r\n            const keybindingLabel = keybinding && keybinding.getLabel();\r\n            const tooltip = this._commandAction.tooltip || this._commandAction.label;\r\n            let title = keybindingLabel\r\n                ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\r\n                : tooltip;\r\n            if (!this._wantsAltCommand && this._menuItemAction.alt) {\r\n                const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\r\n                const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\r\n                const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\r\n                const altTitleSection = altKeybindingLabel\r\n                    ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\r\n                    : altTooltip;\r\n                title += `\\n[${UILabelProvider.modifierLabels[OS].altKey}] ${altTitleSection}`;\r\n            }\r\n            this.label.title = title;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.options.icon) {\r\n            if (this._commandAction !== this._menuItemAction) {\r\n                if (this._menuItemAction.alt) {\r\n                    this._updateItemClass(this._menuItemAction.alt.item);\r\n                }\r\n            }\r\n            else if (this._menuItemAction.alt) {\r\n                this._updateItemClass(this._menuItemAction.item);\r\n            }\r\n        }\r\n    }\r\n    _updateItemClass(item) {\r\n        var _a;\r\n        this._itemClassDispose.value = undefined;\r\n        const { element, label } = this;\r\n        if (!element || !label) {\r\n            return;\r\n        }\r\n        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\r\n        if (!icon) {\r\n            return;\r\n        }\r\n        if (ThemeIcon.isThemeIcon(icon)) {\r\n            // theme icons\r\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\r\n            label.classList.add(...iconClasses);\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove(...iconClasses);\r\n            });\r\n        }\r\n        else {\r\n            // icon path/url\r\n            if (icon.light) {\r\n                label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n            }\r\n            if (icon.dark) {\r\n                label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n            }\r\n            label.classList.add('icon');\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove('icon');\r\n                label.style.removeProperty('--menu-entry-icon-light');\r\n                label.style.removeProperty('--menu-entry-icon-dark');\r\n            });\r\n        }\r\n    }\r\n};\r\nMenuEntryActionViewItem = __decorate([\r\n    __param(2, IKeybindingService),\r\n    __param(3, INotificationService),\r\n    __param(4, IContextKeyService)\r\n], MenuEntryActionViewItem);\r\nexport { MenuEntryActionViewItem };\r\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\r\n    constructor(action, options, contextMenuService) {\r\n        var _a, _b;\r\n        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {\r\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\r\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\r\n        });\r\n        super(action, { getActions: () => action.actions }, contextMenuService, dropdownOptions);\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (this.element) {\r\n            container.classList.add('menu-entry');\r\n            const { icon } = this._action.item;\r\n            if (icon && !ThemeIcon.isThemeIcon(icon)) {\r\n                this.element.classList.add('icon');\r\n                if (icon.light) {\r\n                    this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n                }\r\n                if (icon.dark) {\r\n                    this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nSubmenuEntryActionViewItem = __decorate([\r\n    __param(2, IContextMenuService)\r\n], SubmenuEntryActionViewItem);\r\nexport { SubmenuEntryActionViewItem };\r\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\r\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\r\n        var _a, _b, _c;\r\n        super(null, submenuAction);\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._menuService = _menuService;\r\n        this._instaService = _instaService;\r\n        this._storageService = _storageService;\r\n        this._container = null;\r\n        this._storageKey = `${submenuAction.item.submenu._debugName}_lastActionId`;\r\n        // determine default action\r\n        let defaultAction;\r\n        let defaultActionId = _storageService.get(this._storageKey, 1 /* WORKSPACE */);\r\n        if (defaultActionId) {\r\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\r\n        }\r\n        if (!defaultAction) {\r\n            defaultAction = submenuAction.actions[0];\r\n        }\r\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, undefined);\r\n        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {\r\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\r\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'],\r\n            actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner()\r\n        });\r\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\r\n        this._dropdown.actionRunner.onDidRun((e) => {\r\n            if (e.action instanceof MenuItemAction) {\r\n                this.update(e.action);\r\n            }\r\n        });\r\n    }\r\n    update(lastAction) {\r\n        this._storageService.store(this._storageKey, lastAction.id, 1 /* WORKSPACE */, 0 /* USER */);\r\n        this._defaultAction.dispose();\r\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, undefined);\r\n        this._defaultAction.actionRunner = new class extends ActionRunner {\r\n            runAction(action, context) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    yield action.run(undefined);\r\n                });\r\n            }\r\n        }();\r\n        if (this._container) {\r\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\r\n        }\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        this._defaultAction.setActionContext(newContext);\r\n        this._dropdown.setActionContext(newContext);\r\n    }\r\n    render(container) {\r\n        this._container = container;\r\n        super.render(this._container);\r\n        this._container.classList.add('monaco-dropdown-with-default');\r\n        const primaryContainer = $('.action-container');\r\n        this._defaultAction.render(append(this._container, primaryContainer));\r\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(17 /* RightArrow */)) {\r\n                this._defaultAction.element.tabIndex = -1;\r\n                this._dropdown.focus();\r\n                event.stopPropagation();\r\n            }\r\n        }));\r\n        const dropdownContainer = $('.dropdown-action-container');\r\n        this._dropdown.render(append(this._container, dropdownContainer));\r\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\r\n            var _a;\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(15 /* LeftArrow */)) {\r\n                this._defaultAction.element.tabIndex = 0;\r\n                this._dropdown.setFocusable(false);\r\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\r\n                event.stopPropagation();\r\n            }\r\n        }));\r\n    }\r\n    focus(fromRight) {\r\n        if (fromRight) {\r\n            this._dropdown.focus();\r\n        }\r\n        else {\r\n            this._defaultAction.element.tabIndex = 0;\r\n            this._defaultAction.element.focus();\r\n        }\r\n    }\r\n    blur() {\r\n        this._defaultAction.element.tabIndex = -1;\r\n        this._dropdown.blur();\r\n        this._container.blur();\r\n    }\r\n    setFocusable(focusable) {\r\n        if (focusable) {\r\n            this._defaultAction.element.tabIndex = 0;\r\n        }\r\n        else {\r\n            this._defaultAction.element.tabIndex = -1;\r\n            this._dropdown.setFocusable(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        this._defaultAction.dispose();\r\n        this._dropdown.dispose();\r\n        super.dispose();\r\n    }\r\n};\r\nDropdownWithDefaultActionViewItem = __decorate([\r\n    __param(2, IKeybindingService),\r\n    __param(3, INotificationService),\r\n    __param(4, IContextMenuService),\r\n    __param(5, IMenuService),\r\n    __param(6, IInstantiationService),\r\n    __param(7, IStorageService)\r\n], DropdownWithDefaultActionViewItem);\r\n/**\r\n * Creates action view items for menu actions or submenu actions.\r\n */\r\nexport function createActionViewItem(instaService, action, options) {\r\n    if (action instanceof MenuItemAction) {\r\n        return instaService.createInstance(MenuEntryActionViewItem, action, undefined);\r\n    }\r\n    else if (action instanceof SubmenuItemAction) {\r\n        if (action.item.rememberDefaultAction) {\r\n            return instaService.createInstance(DropdownWithDefaultActionViewItem, action, options);\r\n        }\r\n        else {\r\n            return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './media/peekViewWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { ZoneWidget } from '../zoneWidget/zoneWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { registerColor, contrastBorder, activeContrastBorder, editorInfoForeground, transparent } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { createActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nexport const IPeekViewService = createDecorator('IPeekViewService');\r\nregisterSingleton(IPeekViewService, class {\r\n    constructor() {\r\n        this._widgets = new Map();\r\n    }\r\n    addExclusiveWidget(editor, widget) {\r\n        const existing = this._widgets.get(editor);\r\n        if (existing) {\r\n            existing.listener.dispose();\r\n            existing.widget.dispose();\r\n        }\r\n        const remove = () => {\r\n            const data = this._widgets.get(editor);\r\n            if (data && data.widget === widget) {\r\n                data.listener.dispose();\r\n                this._widgets.delete(editor);\r\n            }\r\n        };\r\n        this._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\r\n    }\r\n});\r\nexport var PeekContext;\r\n(function (PeekContext) {\r\n    PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\r\n    PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\r\n})(PeekContext || (PeekContext = {}));\r\nlet PeekContextController = class PeekContextController {\r\n    constructor(editor, contextKeyService) {\r\n        if (editor instanceof EmbeddedCodeEditorWidget) {\r\n            PeekContext.inPeekEditor.bindTo(contextKeyService);\r\n        }\r\n    }\r\n    dispose() { }\r\n};\r\nPeekContextController.ID = 'editor.contrib.referenceController';\r\nPeekContextController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], PeekContextController);\r\nregisterEditorContribution(PeekContextController.ID, PeekContextController);\r\nexport function getOuterEditor(accessor) {\r\n    let editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n    if (editor instanceof EmbeddedCodeEditorWidget) {\r\n        return editor.getParentEditor();\r\n    }\r\n    return editor;\r\n}\r\nconst defaultOptions = {\r\n    headerBackgroundColor: Color.white,\r\n    primaryHeadingColor: Color.fromHex('#333333'),\r\n    secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\r\n};\r\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\r\n    constructor(editor, options, instantiationService) {\r\n        super(editor, options);\r\n        this.instantiationService = instantiationService;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        objects.mixin(this.options, defaultOptions, false);\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.disposed = true; // prevent consumers who dispose on onDidClose from looping\r\n            super.dispose();\r\n            this._onDidClose.fire(this);\r\n        }\r\n    }\r\n    style(styles) {\r\n        let options = this.options;\r\n        if (styles.headerBackgroundColor) {\r\n            options.headerBackgroundColor = styles.headerBackgroundColor;\r\n        }\r\n        if (styles.primaryHeadingColor) {\r\n            options.primaryHeadingColor = styles.primaryHeadingColor;\r\n        }\r\n        if (styles.secondaryHeadingColor) {\r\n            options.secondaryHeadingColor = styles.secondaryHeadingColor;\r\n        }\r\n        super.style(styles);\r\n    }\r\n    _applyStyles() {\r\n        super._applyStyles();\r\n        let options = this.options;\r\n        if (this._headElement && options.headerBackgroundColor) {\r\n            this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\r\n        }\r\n        if (this._primaryHeading && options.primaryHeadingColor) {\r\n            this._primaryHeading.style.color = options.primaryHeadingColor.toString();\r\n        }\r\n        if (this._secondaryHeading && options.secondaryHeadingColor) {\r\n            this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\r\n        }\r\n        if (this._bodyElement && options.frameColor) {\r\n            this._bodyElement.style.borderColor = options.frameColor.toString();\r\n        }\r\n    }\r\n    _fillContainer(container) {\r\n        this.setCssClass('peekview-widget');\r\n        this._headElement = dom.$('.head');\r\n        this._bodyElement = dom.$('.body');\r\n        this._fillHead(this._headElement);\r\n        this._fillBody(this._bodyElement);\r\n        container.appendChild(this._headElement);\r\n        container.appendChild(this._bodyElement);\r\n    }\r\n    _fillHead(container, noCloseAction) {\r\n        const titleElement = dom.$('.peekview-title');\r\n        if (this.options.supportOnTitleClick) {\r\n            titleElement.classList.add('clickable');\r\n            dom.addStandardDisposableListener(titleElement, 'click', event => this._onTitleClick(event));\r\n        }\r\n        dom.append(this._headElement, titleElement);\r\n        this._fillTitleIcon(titleElement);\r\n        this._primaryHeading = dom.$('span.filename');\r\n        this._secondaryHeading = dom.$('span.dirname');\r\n        this._metaHeading = dom.$('span.meta');\r\n        dom.append(titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\r\n        const actionsContainer = dom.$('.peekview-actions');\r\n        dom.append(this._headElement, actionsContainer);\r\n        const actionBarOptions = this._getActionBarOptions();\r\n        this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\r\n        this._disposables.add(this._actionbarWidget);\r\n        if (!noCloseAction) {\r\n            this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), Codicon.close.classNames, true, () => {\r\n                this.dispose();\r\n                return Promise.resolve();\r\n            }), { label: false, icon: true });\r\n        }\r\n    }\r\n    _fillTitleIcon(container) {\r\n    }\r\n    _getActionBarOptions() {\r\n        return {\r\n            actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\r\n            orientation: 0 /* HORIZONTAL */\r\n        };\r\n    }\r\n    _onTitleClick(event) {\r\n        // implement me if supportOnTitleClick option is set\r\n    }\r\n    setTitle(primaryHeading, secondaryHeading) {\r\n        if (this._primaryHeading && this._secondaryHeading) {\r\n            this._primaryHeading.innerText = primaryHeading;\r\n            this._primaryHeading.setAttribute('title', primaryHeading);\r\n            if (secondaryHeading) {\r\n                this._secondaryHeading.innerText = secondaryHeading;\r\n            }\r\n            else {\r\n                dom.clearNode(this._secondaryHeading);\r\n            }\r\n        }\r\n    }\r\n    setMetaTitle(value) {\r\n        if (this._metaHeading) {\r\n            if (value) {\r\n                this._metaHeading.innerText = value;\r\n                dom.show(this._metaHeading);\r\n            }\r\n            else {\r\n                dom.hide(this._metaHeading);\r\n            }\r\n        }\r\n    }\r\n    _doLayout(heightInPixel, widthInPixel) {\r\n        if (!this._isShowing && heightInPixel < 0) {\r\n            // Looks like the view zone got folded away!\r\n            this.dispose();\r\n            return;\r\n        }\r\n        const headHeight = Math.ceil(this.editor.getOption(58 /* lineHeight */) * 1.2);\r\n        const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\r\n        this._doLayoutHead(headHeight, widthInPixel);\r\n        this._doLayoutBody(bodyHeight, widthInPixel);\r\n    }\r\n    _doLayoutHead(heightInPixel, widthInPixel) {\r\n        if (this._headElement) {\r\n            this._headElement.style.height = `${heightInPixel}px`;\r\n            this._headElement.style.lineHeight = this._headElement.style.height;\r\n        }\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        if (this._bodyElement) {\r\n            this._bodyElement.style.height = `${heightInPixel}px`;\r\n        }\r\n    }\r\n};\r\nPeekViewWidget = __decorate([\r\n    __param(2, IInstantiationService)\r\n], PeekViewWidget);\r\nexport { PeekViewWidget };\r\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: transparent(editorInfoForeground, .1), light: transparent(editorInfoForeground, .1), hc: null }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\r\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: Color.white, light: Color.black, hc: Color.white }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\r\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161e6', hc: '#FFFFFF99' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\r\nexport const peekViewBorder = registerColor('peekView.border', { dark: editorInfoForeground, light: editorInfoForeground, hc: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\r\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hc: Color.black }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\r\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hc: Color.white }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\r\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hc: Color.white }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\r\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hc: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\r\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hc: Color.white }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\r\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hc: Color.black }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\r\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hc: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\r\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hc: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\r\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hc: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\r\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\r\nexport var SeverityIcon;\r\n(function (SeverityIcon) {\r\n    function className(severity) {\r\n        switch (severity) {\r\n            case Severity.Ignore:\r\n                return 'severity-ignore ' + Codicon.info.classNames;\r\n            case Severity.Info:\r\n                return Codicon.info.classNames;\r\n            case Severity.Warning:\r\n                return Codicon.warning.classNames;\r\n            case Severity.Error:\r\n                return Codicon.error.classNames;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    SeverityIcon.className = className;\r\n})(SeverityIcon || (SeverityIcon = {}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\r\n    if (errorIconForeground) {\r\n        const errorCodiconSelector = Codicon.error.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\r\n    if (warningIconForeground) {\r\n        const warningCodiconSelector = Codicon.warning.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\r\n    if (infoIconForeground) {\r\n        const infoCodiconSelector = Codicon.info.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './media/gotoErrorWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerColor, oneOf, textLinkForeground, editorErrorForeground, editorErrorBorder, editorWarningForeground, editorWarningBorder, editorInfoForeground, editorInfoBorder, textLinkActiveForeground, transparent, editorBackground, contrastBorder } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { ScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { getBaseLabel } from '../../../base/common/labels.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { PeekViewWidget, peekViewTitleForeground, peekViewTitleInfoForeground } from '../peekView/peekView.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nimport { SeverityIcon } from '../../../platform/severityIcon/common/severityIcon.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { MenuId, IMenuService } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createAndFillInActionBarActions } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { splitLines } from '../../../base/common/strings.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nclass MessageWidget {\r\n    constructor(parent, editor, onRelatedInformation, _openerService, _labelService) {\r\n        this._openerService = _openerService;\r\n        this._labelService = _labelService;\r\n        this._lines = 0;\r\n        this._longestLineLength = 0;\r\n        this._relatedDiagnostics = new WeakMap();\r\n        this._disposables = new DisposableStore();\r\n        this._editor = editor;\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'descriptioncontainer';\r\n        this._messageBlock = document.createElement('div');\r\n        this._messageBlock.classList.add('message');\r\n        this._messageBlock.setAttribute('aria-live', 'assertive');\r\n        this._messageBlock.setAttribute('role', 'alert');\r\n        domNode.appendChild(this._messageBlock);\r\n        this._relatedBlock = document.createElement('div');\r\n        domNode.appendChild(this._relatedBlock);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._relatedBlock, 'click', event => {\r\n            event.preventDefault();\r\n            const related = this._relatedDiagnostics.get(event.target);\r\n            if (related) {\r\n                onRelatedInformation(related);\r\n            }\r\n        }));\r\n        this._scrollable = new ScrollableElement(domNode, {\r\n            horizontal: 1 /* Auto */,\r\n            vertical: 1 /* Auto */,\r\n            useShadows: false,\r\n            horizontalScrollbarSize: 3,\r\n            verticalScrollbarSize: 3\r\n        });\r\n        parent.appendChild(this._scrollable.getDomNode());\r\n        this._disposables.add(this._scrollable.onScroll(e => {\r\n            domNode.style.left = `-${e.scrollLeft}px`;\r\n            domNode.style.top = `-${e.scrollTop}px`;\r\n        }));\r\n        this._disposables.add(this._scrollable);\r\n    }\r\n    dispose() {\r\n        dispose(this._disposables);\r\n    }\r\n    update(marker) {\r\n        const { source, message, relatedInformation, code } = marker;\r\n        let sourceAndCodeLength = ((source === null || source === void 0 ? void 0 : source.length) || 0) + '()'.length;\r\n        if (code) {\r\n            if (typeof code === 'string') {\r\n                sourceAndCodeLength += code.length;\r\n            }\r\n            else {\r\n                sourceAndCodeLength += code.value.length;\r\n            }\r\n        }\r\n        const lines = splitLines(message);\r\n        this._lines = lines.length;\r\n        this._longestLineLength = 0;\r\n        for (const line of lines) {\r\n            this._longestLineLength = Math.max(line.length + sourceAndCodeLength, this._longestLineLength);\r\n        }\r\n        dom.clearNode(this._messageBlock);\r\n        this._messageBlock.setAttribute('aria-label', this.getAriaLabel(marker));\r\n        this._editor.applyFontInfo(this._messageBlock);\r\n        let lastLineElement = this._messageBlock;\r\n        for (const line of lines) {\r\n            lastLineElement = document.createElement('div');\r\n            lastLineElement.innerText = line;\r\n            if (line === '') {\r\n                lastLineElement.style.height = this._messageBlock.style.lineHeight;\r\n            }\r\n            this._messageBlock.appendChild(lastLineElement);\r\n        }\r\n        if (source || code) {\r\n            const detailsElement = document.createElement('span');\r\n            detailsElement.classList.add('details');\r\n            lastLineElement.appendChild(detailsElement);\r\n            if (source) {\r\n                const sourceElement = document.createElement('span');\r\n                sourceElement.innerText = source;\r\n                sourceElement.classList.add('source');\r\n                detailsElement.appendChild(sourceElement);\r\n            }\r\n            if (code) {\r\n                if (typeof code === 'string') {\r\n                    const codeElement = document.createElement('span');\r\n                    codeElement.innerText = `(${code})`;\r\n                    codeElement.classList.add('code');\r\n                    detailsElement.appendChild(codeElement);\r\n                }\r\n                else {\r\n                    this._codeLink = dom.$('a.code-link');\r\n                    this._codeLink.setAttribute('href', `${code.target.toString()}`);\r\n                    this._codeLink.onclick = (e) => {\r\n                        this._openerService.open(code.target, { allowCommands: true });\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    };\r\n                    const codeElement = dom.append(this._codeLink, dom.$('span'));\r\n                    codeElement.innerText = code.value;\r\n                    detailsElement.appendChild(this._codeLink);\r\n                }\r\n            }\r\n        }\r\n        dom.clearNode(this._relatedBlock);\r\n        this._editor.applyFontInfo(this._relatedBlock);\r\n        if (isNonEmptyArray(relatedInformation)) {\r\n            const relatedInformationNode = this._relatedBlock.appendChild(document.createElement('div'));\r\n            relatedInformationNode.style.paddingTop = `${Math.floor(this._editor.getOption(58 /* lineHeight */) * 0.66)}px`;\r\n            this._lines += 1;\r\n            for (const related of relatedInformation) {\r\n                let container = document.createElement('div');\r\n                let relatedResource = document.createElement('a');\r\n                relatedResource.classList.add('filename');\r\n                relatedResource.innerText = `${getBaseLabel(related.resource)}(${related.startLineNumber}, ${related.startColumn}): `;\r\n                relatedResource.title = this._labelService.getUriLabel(related.resource);\r\n                this._relatedDiagnostics.set(relatedResource, related);\r\n                let relatedMessage = document.createElement('span');\r\n                relatedMessage.innerText = related.message;\r\n                container.appendChild(relatedResource);\r\n                container.appendChild(relatedMessage);\r\n                this._lines += 1;\r\n                relatedInformationNode.appendChild(container);\r\n            }\r\n        }\r\n        const fontInfo = this._editor.getOption(42 /* fontInfo */);\r\n        const scrollWidth = Math.ceil(fontInfo.typicalFullwidthCharacterWidth * this._longestLineLength * 0.75);\r\n        const scrollHeight = fontInfo.lineHeight * this._lines;\r\n        this._scrollable.setScrollDimensions({ scrollWidth, scrollHeight });\r\n    }\r\n    layout(height, width) {\r\n        this._scrollable.getDomNode().style.height = `${height}px`;\r\n        this._scrollable.getDomNode().style.width = `${width}px`;\r\n        this._scrollable.setScrollDimensions({ width, height });\r\n    }\r\n    getHeightInLines() {\r\n        return Math.min(17, this._lines);\r\n    }\r\n    getAriaLabel(marker) {\r\n        let severityLabel = '';\r\n        switch (marker.severity) {\r\n            case MarkerSeverity.Error:\r\n                severityLabel = nls.localize('Error', \"Error\");\r\n                break;\r\n            case MarkerSeverity.Warning:\r\n                severityLabel = nls.localize('Warning', \"Warning\");\r\n                break;\r\n            case MarkerSeverity.Info:\r\n                severityLabel = nls.localize('Info', \"Info\");\r\n                break;\r\n            case MarkerSeverity.Hint:\r\n                severityLabel = nls.localize('Hint', \"Hint\");\r\n                break;\r\n        }\r\n        let ariaLabel = nls.localize('marker aria', \"{0} at {1}. \", severityLabel, marker.startLineNumber + ':' + marker.startColumn);\r\n        const model = this._editor.getModel();\r\n        if (model && (marker.startLineNumber <= model.getLineCount()) && (marker.startLineNumber >= 1)) {\r\n            const lineContent = model.getLineContent(marker.startLineNumber);\r\n            ariaLabel = `${lineContent}, ${ariaLabel}`;\r\n        }\r\n        return ariaLabel;\r\n    }\r\n}\r\nlet MarkerNavigationWidget = class MarkerNavigationWidget extends PeekViewWidget {\r\n    constructor(editor, _themeService, _openerService, _menuService, instantiationService, _contextKeyService, _labelService) {\r\n        super(editor, { showArrow: true, showFrame: true, isAccessible: true, frameWidth: 1 }, instantiationService);\r\n        this._themeService = _themeService;\r\n        this._openerService = _openerService;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._labelService = _labelService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._onDidSelectRelatedInformation = new Emitter();\r\n        this.onDidSelectRelatedInformation = this._onDidSelectRelatedInformation.event;\r\n        this._severity = MarkerSeverity.Warning;\r\n        this._backgroundColor = Color.white;\r\n        this._applyTheme(_themeService.getColorTheme());\r\n        this._callOnDispose.add(_themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this.create();\r\n    }\r\n    _applyTheme(theme) {\r\n        this._backgroundColor = theme.getColor(editorMarkerNavigationBackground);\r\n        let colorId = editorMarkerNavigationError;\r\n        let headerBackground = editorMarkerNavigationErrorHeader;\r\n        if (this._severity === MarkerSeverity.Warning) {\r\n            colorId = editorMarkerNavigationWarning;\r\n            headerBackground = editorMarkerNavigationWarningHeader;\r\n        }\r\n        else if (this._severity === MarkerSeverity.Info) {\r\n            colorId = editorMarkerNavigationInfo;\r\n            headerBackground = editorMarkerNavigationInfoHeader;\r\n        }\r\n        const frameColor = theme.getColor(colorId);\r\n        const headerBg = theme.getColor(headerBackground);\r\n        this.style({\r\n            arrowColor: frameColor,\r\n            frameColor: frameColor,\r\n            headerBackgroundColor: headerBg,\r\n            primaryHeadingColor: theme.getColor(peekViewTitleForeground),\r\n            secondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\r\n        }); // style() will trigger _applyStyles\r\n    }\r\n    _applyStyles() {\r\n        if (this._parentContainer) {\r\n            this._parentContainer.style.backgroundColor = this._backgroundColor ? this._backgroundColor.toString() : '';\r\n        }\r\n        super._applyStyles();\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        super.dispose();\r\n    }\r\n    _fillHead(container) {\r\n        super._fillHead(container);\r\n        this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(e => this.editor.focus()));\r\n        const actions = [];\r\n        const menu = this._menuService.createMenu(MarkerNavigationWidget.TitleMenu, this._contextKeyService);\r\n        createAndFillInActionBarActions(menu, undefined, actions);\r\n        this._actionbarWidget.push(actions, { label: false, icon: true, index: 0 });\r\n        menu.dispose();\r\n    }\r\n    _fillTitleIcon(container) {\r\n        this._icon = dom.append(container, dom.$(''));\r\n    }\r\n    _fillBody(container) {\r\n        this._parentContainer = container;\r\n        container.classList.add('marker-widget');\r\n        this._parentContainer.tabIndex = 0;\r\n        this._parentContainer.setAttribute('role', 'tooltip');\r\n        this._container = document.createElement('div');\r\n        container.appendChild(this._container);\r\n        this._message = new MessageWidget(this._container, this.editor, related => this._onDidSelectRelatedInformation.fire(related), this._openerService, this._labelService);\r\n        this._disposables.add(this._message);\r\n    }\r\n    show() {\r\n        throw new Error('call showAtMarker');\r\n    }\r\n    showAtMarker(marker, markerIdx, markerCount) {\r\n        // update:\r\n        // * title\r\n        // * message\r\n        this._container.classList.remove('stale');\r\n        this._message.update(marker);\r\n        // update frame color (only applied on 'show')\r\n        this._severity = marker.severity;\r\n        this._applyTheme(this._themeService.getColorTheme());\r\n        // show\r\n        let range = Range.lift(marker);\r\n        const editorPosition = this.editor.getPosition();\r\n        let position = editorPosition && range.containsPosition(editorPosition) ? editorPosition : range.getStartPosition();\r\n        super.show(position, this.computeRequiredHeight());\r\n        const model = this.editor.getModel();\r\n        if (model) {\r\n            const detail = markerCount > 1\r\n                ? nls.localize('problems', \"{0} of {1} problems\", markerIdx, markerCount)\r\n                : nls.localize('change', \"{0} of {1} problem\", markerIdx, markerCount);\r\n            this.setTitle(basename(model.uri), detail);\r\n        }\r\n        this._icon.className = `codicon ${SeverityIcon.className(MarkerSeverity.toSeverity(this._severity))}`;\r\n        this.editor.revealPositionNearTop(position, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    updateMarker(marker) {\r\n        this._container.classList.remove('stale');\r\n        this._message.update(marker);\r\n    }\r\n    showStale() {\r\n        this._container.classList.add('stale');\r\n        this._relayout();\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        super._doLayoutBody(heightInPixel, widthInPixel);\r\n        this._heightInPixel = heightInPixel;\r\n        this._message.layout(heightInPixel, widthInPixel);\r\n        this._container.style.height = `${heightInPixel}px`;\r\n    }\r\n    _onWidth(widthInPixel) {\r\n        this._message.layout(this._heightInPixel, widthInPixel);\r\n    }\r\n    _relayout() {\r\n        super._relayout(this.computeRequiredHeight());\r\n    }\r\n    computeRequiredHeight() {\r\n        return 3 + this._message.getHeightInLines();\r\n    }\r\n};\r\nMarkerNavigationWidget.TitleMenu = new MenuId('gotoErrorTitleMenu');\r\nMarkerNavigationWidget = __decorate([\r\n    __param(1, IThemeService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IMenuService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, ILabelService)\r\n], MarkerNavigationWidget);\r\nexport { MarkerNavigationWidget };\r\n// theming\r\nlet errorDefault = oneOf(editorErrorForeground, editorErrorBorder);\r\nlet warningDefault = oneOf(editorWarningForeground, editorWarningBorder);\r\nlet infoDefault = oneOf(editorInfoForeground, editorInfoBorder);\r\nexport const editorMarkerNavigationError = registerColor('editorMarkerNavigationError.background', { dark: errorDefault, light: errorDefault, hc: contrastBorder }, nls.localize('editorMarkerNavigationError', 'Editor marker navigation widget error color.'));\r\nexport const editorMarkerNavigationErrorHeader = registerColor('editorMarkerNavigationError.headerBackground', { dark: transparent(editorMarkerNavigationError, .1), light: transparent(editorMarkerNavigationError, .1), hc: null }, nls.localize('editorMarkerNavigationErrorHeaderBackground', 'Editor marker navigation widget error heading background.'));\r\nexport const editorMarkerNavigationWarning = registerColor('editorMarkerNavigationWarning.background', { dark: warningDefault, light: warningDefault, hc: contrastBorder }, nls.localize('editorMarkerNavigationWarning', 'Editor marker navigation widget warning color.'));\r\nexport const editorMarkerNavigationWarningHeader = registerColor('editorMarkerNavigationWarning.headerBackground', { dark: transparent(editorMarkerNavigationWarning, .1), light: transparent(editorMarkerNavigationWarning, .1), hc: '#0C141F' }, nls.localize('editorMarkerNavigationWarningBackground', 'Editor marker navigation widget warning heading background.'));\r\nexport const editorMarkerNavigationInfo = registerColor('editorMarkerNavigationInfo.background', { dark: infoDefault, light: infoDefault, hc: contrastBorder }, nls.localize('editorMarkerNavigationInfo', 'Editor marker navigation widget info color.'));\r\nexport const editorMarkerNavigationInfoHeader = registerColor('editorMarkerNavigationInfo.headerBackground', { dark: transparent(editorMarkerNavigationInfo, .1), light: transparent(editorMarkerNavigationInfo, .1), hc: null }, nls.localize('editorMarkerNavigationInfoHeaderBackground', 'Editor marker navigation widget info heading background.'));\r\nexport const editorMarkerNavigationBackground = registerColor('editorMarkerNavigation.background', { dark: editorBackground, light: editorBackground, hc: editorBackground }, nls.localize('editorMarkerNavigationBackground', 'Editor marker navigation widget background.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-editor .marker-widget a.code-link span { color: ${linkFg}; }`);\r\n    }\r\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\r\n    if (activeLinkFg) {\r\n        collector.addRule(`.monaco-editor .marker-widget a.code-link span:hover { color: ${activeLinkFg}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { compare } from '../../../base/common/strings.js';\r\nimport { binarySearch } from '../../../base/common/arrays.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class MarkerCoordinate {\r\n    constructor(marker, index, total) {\r\n        this.marker = marker;\r\n        this.index = index;\r\n        this.total = total;\r\n    }\r\n}\r\nlet MarkerList = class MarkerList {\r\n    constructor(resourceFilter, _markerService) {\r\n        this._markerService = _markerService;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._dispoables = new DisposableStore();\r\n        this._markers = [];\r\n        this._nextIdx = -1;\r\n        if (URI.isUri(resourceFilter)) {\r\n            this._resourceFilter = uri => uri.toString() === resourceFilter.toString();\r\n        }\r\n        else if (resourceFilter) {\r\n            this._resourceFilter = resourceFilter;\r\n        }\r\n        const updateMarker = () => {\r\n            this._markers = this._markerService.read({\r\n                resource: URI.isUri(resourceFilter) ? resourceFilter : undefined,\r\n                severities: MarkerSeverity.Error | MarkerSeverity.Warning | MarkerSeverity.Info\r\n            });\r\n            if (typeof resourceFilter === 'function') {\r\n                this._markers = this._markers.filter(m => this._resourceFilter(m.resource));\r\n            }\r\n            this._markers.sort(MarkerList._compareMarker);\r\n        };\r\n        updateMarker();\r\n        this._dispoables.add(_markerService.onMarkerChanged(uris => {\r\n            if (!this._resourceFilter || uris.some(uri => this._resourceFilter(uri))) {\r\n                updateMarker();\r\n                this._nextIdx = -1;\r\n                this._onDidChange.fire();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._dispoables.dispose();\r\n        this._onDidChange.dispose();\r\n    }\r\n    matches(uri) {\r\n        if (!this._resourceFilter && !uri) {\r\n            return true;\r\n        }\r\n        if (!this._resourceFilter || !uri) {\r\n            return false;\r\n        }\r\n        return this._resourceFilter(uri);\r\n    }\r\n    get selected() {\r\n        const marker = this._markers[this._nextIdx];\r\n        return marker && new MarkerCoordinate(marker, this._nextIdx + 1, this._markers.length);\r\n    }\r\n    _initIdx(model, position, fwd) {\r\n        let found = false;\r\n        let idx = this._markers.findIndex(marker => marker.resource.toString() === model.uri.toString());\r\n        if (idx < 0) {\r\n            idx = binarySearch(this._markers, { resource: model.uri }, (a, b) => compare(a.resource.toString(), b.resource.toString()));\r\n            if (idx < 0) {\r\n                idx = ~idx;\r\n            }\r\n        }\r\n        for (let i = idx; i < this._markers.length; i++) {\r\n            let range = Range.lift(this._markers[i]);\r\n            if (range.isEmpty()) {\r\n                const word = model.getWordAtPosition(range.getStartPosition());\r\n                if (word) {\r\n                    range = new Range(range.startLineNumber, word.startColumn, range.startLineNumber, word.endColumn);\r\n                }\r\n            }\r\n            if (position && (range.containsPosition(position) || position.isBeforeOrEqual(range.getStartPosition()))) {\r\n                this._nextIdx = i;\r\n                found = true;\r\n                break;\r\n            }\r\n            if (this._markers[i].resource.toString() !== model.uri.toString()) {\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            // after the last change\r\n            this._nextIdx = fwd ? 0 : this._markers.length - 1;\r\n        }\r\n        if (this._nextIdx < 0) {\r\n            this._nextIdx = this._markers.length - 1;\r\n        }\r\n    }\r\n    resetIndex() {\r\n        this._nextIdx = -1;\r\n    }\r\n    move(fwd, model, position) {\r\n        if (this._markers.length === 0) {\r\n            return false;\r\n        }\r\n        let oldIdx = this._nextIdx;\r\n        if (this._nextIdx === -1) {\r\n            this._initIdx(model, position, fwd);\r\n        }\r\n        else if (fwd) {\r\n            this._nextIdx = (this._nextIdx + 1) % this._markers.length;\r\n        }\r\n        else if (!fwd) {\r\n            this._nextIdx = (this._nextIdx - 1 + this._markers.length) % this._markers.length;\r\n        }\r\n        if (oldIdx !== this._nextIdx) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    find(uri, position) {\r\n        let idx = this._markers.findIndex(marker => marker.resource.toString() === uri.toString());\r\n        if (idx < 0) {\r\n            return undefined;\r\n        }\r\n        for (; idx < this._markers.length; idx++) {\r\n            if (Range.containsPosition(this._markers[idx], position)) {\r\n                return new MarkerCoordinate(this._markers[idx], idx + 1, this._markers.length);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static _compareMarker(a, b) {\r\n        let res = compare(a.resource.toString(), b.resource.toString());\r\n        if (res === 0) {\r\n            res = MarkerSeverity.compare(a.severity, b.severity);\r\n        }\r\n        if (res === 0) {\r\n            res = Range.compareRangesUsingStarts(a, b);\r\n        }\r\n        return res;\r\n    }\r\n};\r\nMarkerList = __decorate([\r\n    __param(1, IMarkerService)\r\n], MarkerList);\r\nexport { MarkerList };\r\nexport const IMarkerNavigationService = createDecorator('IMarkerNavigationService');\r\nlet MarkerNavigationService = class MarkerNavigationService {\r\n    constructor(_markerService) {\r\n        this._markerService = _markerService;\r\n        this._provider = new LinkedList();\r\n    }\r\n    getMarkerList(resource) {\r\n        for (let provider of this._provider) {\r\n            const result = provider.getMarkerList(resource);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        // default\r\n        return new MarkerList(resource, this._markerService);\r\n    }\r\n};\r\nMarkerNavigationService = __decorate([\r\n    __param(0, IMarkerService)\r\n], MarkerNavigationService);\r\nregisterSingleton(IMarkerNavigationService, MarkerNavigationService, true);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MarkerNavigationWidget } from './gotoErrorWidget.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerNavigationService } from './markerNavigationService.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nlet MarkerController = class MarkerController {\r\n    constructor(editor, _markerNavigationService, _contextKeyService, _editorService, _instantiationService) {\r\n        this._markerNavigationService = _markerNavigationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._editorService = _editorService;\r\n        this._instantiationService = _instantiationService;\r\n        this._sessionDispoables = new DisposableStore();\r\n        this._editor = editor;\r\n        this._widgetVisible = CONTEXT_MARKERS_NAVIGATION_VISIBLE.bindTo(this._contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MarkerController.ID);\r\n    }\r\n    dispose() {\r\n        this._cleanUp();\r\n        this._sessionDispoables.dispose();\r\n    }\r\n    _cleanUp() {\r\n        this._widgetVisible.reset();\r\n        this._sessionDispoables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    _getOrCreateModel(uri) {\r\n        if (this._model && this._model.matches(uri)) {\r\n            return this._model;\r\n        }\r\n        let reusePosition = false;\r\n        if (this._model) {\r\n            reusePosition = true;\r\n            this._cleanUp();\r\n        }\r\n        this._model = this._markerNavigationService.getMarkerList(uri);\r\n        if (reusePosition) {\r\n            this._model.move(true, this._editor.getModel(), this._editor.getPosition());\r\n        }\r\n        this._widget = this._instantiationService.createInstance(MarkerNavigationWidget, this._editor);\r\n        this._widget.onDidClose(() => this.close(), this, this._sessionDispoables);\r\n        this._widgetVisible.set(true);\r\n        this._sessionDispoables.add(this._model);\r\n        this._sessionDispoables.add(this._widget);\r\n        // follow cursor\r\n        this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(e => {\r\n            var _a, _b, _c;\r\n            if (!((_a = this._model) === null || _a === void 0 ? void 0 : _a.selected) || !Range.containsPosition((_b = this._model) === null || _b === void 0 ? void 0 : _b.selected.marker, e.position)) {\r\n                (_c = this._model) === null || _c === void 0 ? void 0 : _c.resetIndex();\r\n            }\r\n        }));\r\n        // update markers\r\n        this._sessionDispoables.add(this._model.onDidChange(() => {\r\n            if (!this._widget || !this._widget.position || !this._model) {\r\n                return;\r\n            }\r\n            const info = this._model.find(this._editor.getModel().uri, this._widget.position);\r\n            if (info) {\r\n                this._widget.updateMarker(info.marker);\r\n            }\r\n            else {\r\n                this._widget.showStale();\r\n            }\r\n        }));\r\n        // open related\r\n        this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(related => {\r\n            this._editorService.openCodeEditor({\r\n                resource: related.resource,\r\n                options: { pinned: true, revealIfOpened: true, selection: Range.lift(related).collapseToStart() }\r\n            }, this._editor);\r\n            this.close(false);\r\n        }));\r\n        this._sessionDispoables.add(this._editor.onDidChangeModel(() => this._cleanUp()));\r\n        return this._model;\r\n    }\r\n    close(focusEditor = true) {\r\n        this._cleanUp();\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n    }\r\n    showAtMarker(marker) {\r\n        if (this._editor.hasModel()) {\r\n            const model = this._getOrCreateModel(this._editor.getModel().uri);\r\n            model.resetIndex();\r\n            model.move(true, this._editor.getModel(), new Position(marker.startLineNumber, marker.startColumn));\r\n            if (model.selected) {\r\n                this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);\r\n            }\r\n        }\r\n    }\r\n    nagivate(next, multiFile) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.hasModel()) {\r\n                const model = this._getOrCreateModel(multiFile ? undefined : this._editor.getModel().uri);\r\n                model.move(next, this._editor.getModel(), this._editor.getPosition());\r\n                if (!model.selected) {\r\n                    return;\r\n                }\r\n                if (model.selected.marker.resource.toString() !== this._editor.getModel().uri.toString()) {\r\n                    // show in different editor\r\n                    this._cleanUp();\r\n                    const otherEditor = yield this._editorService.openCodeEditor({\r\n                        resource: model.selected.marker.resource,\r\n                        options: { pinned: false, revealIfOpened: true, selectionRevealType: 2 /* NearTop */, selection: model.selected.marker }\r\n                    }, this._editor);\r\n                    if (otherEditor) {\r\n                        MarkerController.get(otherEditor).close();\r\n                        MarkerController.get(otherEditor).nagivate(next, multiFile);\r\n                    }\r\n                }\r\n                else {\r\n                    // show in this editor\r\n                    this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nMarkerController.ID = 'editor.contrib.markerController';\r\nMarkerController = __decorate([\r\n    __param(1, IMarkerNavigationService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, IInstantiationService)\r\n], MarkerController);\r\nexport { MarkerController };\r\nclass MarkerNavigationAction extends EditorAction {\r\n    constructor(_next, _multiFile, opts) {\r\n        super(opts);\r\n        this._next = _next;\r\n        this._multiFile = _multiFile;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (editor.hasModel()) {\r\n                MarkerController.get(editor).nagivate(this._next, this._multiFile);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMarkerAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(true, false, {\r\n            id: NextMarkerAction.ID,\r\n            label: NextMarkerAction.LABEL,\r\n            alias: 'Go to Next Problem (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 512 /* Alt */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MarkerNavigationWidget.TitleMenu,\r\n                title: NextMarkerAction.LABEL,\r\n                icon: registerIcon('marker-navigation-next', Codicon.arrowDown, nls.localize('nextMarkerIcon', 'Icon for goto next marker.')),\r\n                group: 'navigation',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nNextMarkerAction.ID = 'editor.action.marker.next';\r\nNextMarkerAction.LABEL = nls.localize('markerAction.next.label', \"Go to Next Problem (Error, Warning, Info)\");\r\nclass PrevMarkerAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(false, false, {\r\n            id: PrevMarkerAction.ID,\r\n            label: PrevMarkerAction.LABEL,\r\n            alias: 'Go to Previous Problem (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MarkerNavigationWidget.TitleMenu,\r\n                title: NextMarkerAction.LABEL,\r\n                icon: registerIcon('marker-navigation-previous', Codicon.arrowUp, nls.localize('previousMarkerIcon', 'Icon for goto previous marker.')),\r\n                group: 'navigation',\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nPrevMarkerAction.ID = 'editor.action.marker.prev';\r\nPrevMarkerAction.LABEL = nls.localize('markerAction.previous.label', \"Go to Previous Problem (Error, Warning, Info)\");\r\nclass NextMarkerInFilesAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(true, true, {\r\n            id: 'editor.action.marker.nextInFiles',\r\n            label: nls.localize('markerAction.nextInFiles.label', \"Go to Next Problem in Files (Error, Warning, Info)\"),\r\n            alias: 'Go to Next Problem in Files (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                title: nls.localize({ key: 'miGotoNextProblem', comment: ['&& denotes a mnemonic'] }, \"Next &&Problem\"),\r\n                group: '6_problem_nav',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass PrevMarkerInFilesAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(false, true, {\r\n            id: 'editor.action.marker.prevInFiles',\r\n            label: nls.localize('markerAction.previousInFiles.label', \"Go to Previous Problem in Files (Error, Warning, Info)\"),\r\n            alias: 'Go to Previous Problem in Files (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                title: nls.localize({ key: 'miGotoPreviousProblem', comment: ['&& denotes a mnemonic'] }, \"Previous &&Problem\"),\r\n                group: '6_problem_nav',\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(MarkerController.ID, MarkerController);\r\nregisterEditorAction(NextMarkerAction);\r\nregisterEditorAction(PrevMarkerAction);\r\nregisterEditorAction(NextMarkerInFilesAction);\r\nregisterEditorAction(PrevMarkerInFilesAction);\r\nconst CONTEXT_MARKERS_NAVIGATION_VISIBLE = new RawContextKey('markersNavigationVisible', false);\r\nconst MarkerCommand = EditorCommand.bindToContribution(MarkerController.get);\r\nregisterEditorCommand(new MarkerCommand({\r\n    id: 'closeMarkersNavigation',\r\n    precondition: CONTEXT_MARKERS_NAVIGATION_VISIBLE,\r\n    handler: x => x.close(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 50,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { IMarkerData, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { MarkerController, NextMarkerAction } from '../gotoError/gotoError.js';\r\nimport { createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { getCodeActions } from '../codeAction/codeAction.js';\r\nimport { QuickFixAction, QuickFixController } from '../codeAction/codeActionCommands.js';\r\nimport { CodeActionKind } from '../codeAction/types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { textLinkActiveForeground, textLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nconst $ = dom.$;\r\nexport class MarkerHover {\r\n    constructor(owner, range, marker) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.marker = marker;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nconst markerCodeActionTrigger = {\r\n    type: 1 /* Invoke */,\r\n    filter: { include: CodeActionKind.QuickFix }\r\n};\r\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\r\n    constructor(_editor, _hover, _markerDecorationsService, _openerService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._markerDecorationsService = _markerDecorationsService;\r\n        this._openerService = _openerService;\r\n        this.recentMarkerCodeActionsInfo = undefined;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const result = [];\r\n        for (const d of lineDecorations) {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\r\n            if (!marker) {\r\n                continue;\r\n            }\r\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\r\n            result.push(new MarkerHover(this, range, marker));\r\n        }\r\n        return result;\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        if (!hoverParts.length) {\r\n            return Disposable.None;\r\n        }\r\n        const disposables = new DisposableStore();\r\n        hoverParts.forEach(msg => fragment.appendChild(this.renderMarkerHover(msg, disposables)));\r\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\r\n        this.renderMarkerStatusbar(markerHoverForStatusbar, statusBar, disposables);\r\n        return disposables;\r\n    }\r\n    renderMarkerHover(markerHover, disposables) {\r\n        const hoverElement = $('div.hover-row');\r\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\r\n        const { source, message, code, relatedInformation } = markerHover.marker;\r\n        this._editor.applyFontInfo(markerElement);\r\n        const messageElement = dom.append(markerElement, $('span'));\r\n        messageElement.style.whiteSpace = 'pre-wrap';\r\n        messageElement.innerText = message;\r\n        if (source || code) {\r\n            // Code has link\r\n            if (code && typeof code !== 'string') {\r\n                const sourceAndCodeElement = $('span');\r\n                if (source) {\r\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\r\n                    sourceElement.innerText = source;\r\n                }\r\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\r\n                codeLink.setAttribute('href', code.target.toString());\r\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\r\n                    this._openerService.open(code.target, { allowCommands: true });\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }));\r\n                const codeElement = dom.append(codeLink, $('span'));\r\n                codeElement.innerText = code.value;\r\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\r\n                detailsElement.style.opacity = '0.6';\r\n                detailsElement.style.paddingLeft = '6px';\r\n            }\r\n            else {\r\n                const detailsElement = dom.append(markerElement, $('span'));\r\n                detailsElement.style.opacity = '0.6';\r\n                detailsElement.style.paddingLeft = '6px';\r\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\r\n            }\r\n        }\r\n        if (isNonEmptyArray(relatedInformation)) {\r\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\r\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\r\n                relatedInfoContainer.style.marginTop = '8px';\r\n                const a = dom.append(relatedInfoContainer, $('a'));\r\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\r\n                a.style.cursor = 'pointer';\r\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (this._openerService) {\r\n                        this._openerService.open(resource, {\r\n                            fromUserGesture: true,\r\n                            editorOptions: { selection: { startLineNumber, startColumn } }\r\n                        }).catch(onUnexpectedError);\r\n                    }\r\n                }));\r\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\r\n                messageElement.innerText = message;\r\n                this._editor.applyFontInfo(messageElement);\r\n            }\r\n        }\r\n        return hoverElement;\r\n    }\r\n    renderMarkerStatusbar(markerHover, statusBar, disposables) {\r\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\r\n            statusBar.addAction({\r\n                label: nls.localize('view problem', \"View Problem\"),\r\n                commandId: NextMarkerAction.ID,\r\n                run: () => {\r\n                    this._hover.hide();\r\n                    MarkerController.get(this._editor).showAtMarker(markerHover.marker);\r\n                    this._editor.focus();\r\n                }\r\n            });\r\n        }\r\n        if (!this._editor.getOption(80 /* readOnly */)) {\r\n            const quickfixPlaceholderElement = statusBar.append($('div'));\r\n            if (this.recentMarkerCodeActionsInfo) {\r\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\r\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\r\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\r\n                    }\r\n                }\r\n                else {\r\n                    this.recentMarkerCodeActionsInfo = undefined;\r\n                }\r\n            }\r\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\r\n            if (!quickfixPlaceholderElement.textContent) {\r\n                // Have some content in here to avoid flickering\r\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\r\n            }\r\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\r\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\r\n            codeActionsPromise.then(actions => {\r\n                updatePlaceholderDisposable.dispose();\r\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\r\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\r\n                    actions.dispose();\r\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\r\n                    return;\r\n                }\r\n                quickfixPlaceholderElement.style.display = 'none';\r\n                let showing = false;\r\n                disposables.add(toDisposable(() => {\r\n                    if (!showing) {\r\n                        actions.dispose();\r\n                    }\r\n                }));\r\n                statusBar.addAction({\r\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\r\n                    commandId: QuickFixAction.Id,\r\n                    run: (target) => {\r\n                        showing = true;\r\n                        const controller = QuickFixController.get(this._editor);\r\n                        const elementPosition = dom.getDomNodePagePosition(target);\r\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\r\n                        // context menu as well when using keyboard navigation\r\n                        this._hover.hide();\r\n                        controller.showCodeActions(markerCodeActionTrigger, actions, {\r\n                            x: elementPosition.left + 6,\r\n                            y: elementPosition.top + elementPosition.height + 6\r\n                        });\r\n                    }\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n    }\r\n    getCodeActions(marker) {\r\n        return createCancelablePromise(cancellationToken => {\r\n            return getCodeActions(this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\r\n        });\r\n    }\r\n};\r\nMarkerHoverParticipant = __decorate([\r\n    __param(2, IMarkerDecorationsService),\r\n    __param(3, IOpenerService)\r\n], MarkerHoverParticipant);\r\nexport { MarkerHoverParticipant };\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${linkFg}; }`);\r\n    }\r\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\r\n    if (activeLinkFg) {\r\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${activeLinkFg}; }`);\r\n    }\r\n});\r\n","/*\nThe MIT License (MIT)\n\nCopyright © 2015 Nicolas Bevacqua\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet __insane_func;\n\n(function () { function r(e, n, t) { function o(i, f) { if (!n[i]) { if (!e[i]) { var c = \"function\" == typeof require && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); var a = new Error(\"Cannot find module '\" + i + \"'\"); throw a.code = \"MODULE_NOT_FOUND\", a } var p = n[i] = { exports: {} }; e[i][0].call(p.exports, function (r) { var n = e[i][1][r]; return o(n || r) }, p, p.exports, r, e, n, t) } return n[i].exports } for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++)o(t[i]); return o } return r })()({\n\t1: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\n\t\tmodule.exports = {\n\t\t\turis: toMap(uris) // attributes that have an href and hence need to be sanitized\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 2: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar defaults = {\n\t\t\tallowedAttributes: {\n\t\t\t\t'*': ['title', 'accesskey'],\n\t\t\t\ta: ['href', 'name', 'target', 'aria-label'],\n\t\t\t\tiframe: ['allowfullscreen', 'frameborder', 'src'],\n\t\t\t\timg: ['src', 'alt', 'title', 'aria-label']\n\t\t\t},\n\t\t\tallowedClasses: {},\n\t\t\tallowedSchemes: ['http', 'https', 'mailto'],\n\t\t\tallowedTags: [\n\t\t\t\t'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n\t\t\t\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n\t\t\t\t'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n\t\t\t\t'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n\t\t\t],\n\t\t\tfilter: null\n\t\t};\n\n\t\tmodule.exports = defaults;\n\n\t}, {}], 3: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\n\t\tmodule.exports = {\n\t\t\tvoids: toMap(voids)\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 4: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar assign = require('assignment');\n\t\tvar parser = require('./parser');\n\t\tvar sanitizer = require('./sanitizer');\n\t\tvar defaults = require('./defaults');\n\n\t\tfunction insane(html, options, strict) {\n\t\t\tvar buffer = [];\n\t\t\tvar configuration = strict === true ? options : assign({}, defaults, options);\n\t\t\tvar handler = sanitizer(buffer, configuration);\n\n\t\t\tparser(html, handler);\n\n\t\t\treturn buffer.join('');\n\t\t}\n\n\t\tinsane.defaults = defaults;\n\t\tmodule.exports = insane;\n\t\t__insane_func = insane;\n\n\t}, { \"./defaults\": 2, \"./parser\": 7, \"./sanitizer\": 8, \"assignment\": 6, \"he\": 9 }], 5: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tmodule.exports = function lowercase(string) {\n\t\t\treturn typeof string === 'string' ? string.toLowerCase() : string;\n\t\t};\n\n\t}, {}], 6: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction assignment(result) {\n\t\t\tvar stack = Array.prototype.slice.call(arguments, 1);\n\t\t\tvar item;\n\t\t\tvar key;\n\t\t\twhile (stack.length) {\n\t\t\t\titem = stack.shift();\n\t\t\t\tfor (key in item) {\n\t\t\t\t\tif (item.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (Object.prototype.toString.call(result[key]) === '[object Object]') {\n\t\t\t\t\t\t\tresult[key] = assignment(result[key], item[key]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult[key] = item[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tmodule.exports = assignment;\n\n\t}, {}], 7: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\t\tvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\n\t\tvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\n\t\tvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\n\t\tvar rtag = /^</;\n\t\tvar rtagend = /^<\\s*\\//;\n\n\t\tfunction createStack() {\n\t\t\tvar stack = [];\n\t\t\tstack.lastItem = function lastItem() {\n\t\t\t\treturn stack[stack.length - 1];\n\t\t\t};\n\t\t\treturn stack;\n\t\t}\n\n\t\tfunction parser(html, handler) {\n\t\t\tvar stack = createStack();\n\t\t\tvar last = html;\n\t\t\tvar chars;\n\n\t\t\twhile (html) {\n\t\t\t\tparsePart();\n\t\t\t}\n\t\t\tparseEndTag(); // clean up any remaining tags\n\n\t\t\tfunction parsePart() {\n\t\t\t\tchars = true;\n\t\t\t\tparseTag();\n\n\t\t\t\tvar same = html === last;\n\t\t\t\tlast = html;\n\n\t\t\t\tif (same) { // discard, because it's invalid\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTag() {\n\t\t\t\tif (html.substr(0, 4) === '<!--') { // comments\n\t\t\t\t\tparseComment();\n\t\t\t\t} else if (rtagend.test(html)) {\n\t\t\t\t\tparseEdge(rend, parseEndTag);\n\t\t\t\t} else if (rtag.test(html)) {\n\t\t\t\t\tparseEdge(rstart, parseStartTag);\n\t\t\t\t}\n\t\t\t\tparseTagDecode();\n\t\t\t}\n\n\t\t\tfunction parseEdge(regex, parser) {\n\t\t\t\tvar match = html.match(regex);\n\t\t\t\tif (match) {\n\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\tmatch[0].replace(regex, parser);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseComment() {\n\t\t\t\tvar index = html.indexOf('-->');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tif (handler.comment) {\n\t\t\t\t\t\thandler.comment(html.substring(4, index));\n\t\t\t\t\t}\n\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTagDecode() {\n\t\t\t\tif (!chars) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar text;\n\t\t\t\tvar index = html.indexOf('<');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\ttext = html.substring(0, index);\n\t\t\t\t\thtml = html.substring(index);\n\t\t\t\t} else {\n\t\t\t\t\ttext = html;\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t\tif (handler.chars) {\n\t\t\t\t\thandler.chars(text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\t\t\tvar attrs = {};\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tvar u = elements.voids[low] || !!unary;\n\n\t\t\t\trest.replace(rattrs, attrReplacer);\n\n\t\t\t\tif (!u) {\n\t\t\t\t\tstack.push(low);\n\t\t\t\t}\n\t\t\t\tif (handler.start) {\n\t\t\t\t\thandler.start(low, attrs, u);\n\t\t\t\t}\n\n\t\t\t\tfunction attrReplacer(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n\t\t\t\t\tif (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n\t\t\t\t\t\tattrs[name] = void 0; // attribute is like <button disabled></button>\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseEndTag(tag, tagName) {\n\t\t\t\tvar i;\n\t\t\t\tvar pos = 0;\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tif (low) {\n\t\t\t\t\tfor (pos = stack.length - 1; pos >= 0; pos--) {\n\t\t\t\t\t\tif (stack[pos] === low) {\n\t\t\t\t\t\t\tbreak; // find the closest opened tag of the same type\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\tfor (i = stack.length - 1; i >= pos; i--) {\n\t\t\t\t\t\tif (handler.end) { // close all the open elements, up the stack\n\t\t\t\t\t\t\thandler.end(stack[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.length = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = parser;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 8: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\n\t\tfunction sanitizer(buffer, options) {\n\t\t\tvar last;\n\t\t\tvar context;\n\t\t\tvar o = options || {};\n\n\t\t\treset();\n\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tchars: chars\n\t\t\t};\n\n\t\t\tfunction out(value) {\n\t\t\t\tbuffer.push(value);\n\t\t\t}\n\n\t\t\tfunction start(tag, attrs, unary) {\n\t\t\t\tvar low = lowercase(tag);\n\n\t\t\t\tif (context.ignoring) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif ((o.allowedTags || []).indexOf(low) === -1) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\n\t\t\t\tout('<');\n\t\t\t\tout(low);\n\t\t\t\tObject.keys(attrs).forEach(parse);\n\t\t\t\tout(unary ? '/>' : '>');\n\n\t\t\t\tfunction parse(key) {\n\t\t\t\t\tvar value = attrs[key];\n\t\t\t\t\tvar classesOk = (o.allowedClasses || {})[low] || [];\n\t\t\t\t\tvar attrsOk = (o.allowedAttributes || {})[low] || [];\n\t\t\t\t\tattrsOk = attrsOk.concat((o.allowedAttributes || {})['*'] || []);\n\t\t\t\t\tvar valid;\n\t\t\t\t\tvar lkey = lowercase(key);\n\t\t\t\t\tif (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n\t\t\t\t\t\tvalue = value.split(' ').filter(isValidClass).join(' ').trim();\n\t\t\t\t\t\tvalid = value.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n\t\t\t\t\t}\n\t\t\t\t\tif (valid) {\n\t\t\t\t\t\tout(' ');\n\t\t\t\t\t\tout(key);\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tout('=\"');\n\t\t\t\t\t\t\tout(he.encode(value));\n\t\t\t\t\t\t\tout('\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction isValidClass(className) {\n\t\t\t\t\t\treturn classesOk && classesOk.indexOf(className) !== -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction end(tag) {\n\t\t\t\tvar low = lowercase(tag);\n\t\t\t\tvar allowed = (o.allowedTags || []).indexOf(low) !== -1;\n\t\t\t\tif (allowed) {\n\t\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\t\tout('</');\n\t\t\t\t\t\tout(low);\n\t\t\t\t\t\tout('>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunignore(low);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunignore(low);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction testUrl(text) {\n\t\t\t\tvar start = text[0];\n\t\t\t\tif (start === '#' || start === '/') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar colon = text.indexOf(':');\n\t\t\t\tif (colon === -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar questionmark = text.indexOf('?');\n\t\t\t\tif (questionmark !== -1 && colon > questionmark) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar hash = text.indexOf('#');\n\t\t\t\tif (hash !== -1 && colon > hash) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn o.allowedSchemes.some(matches);\n\n\t\t\t\tfunction matches(scheme) {\n\t\t\t\t\treturn text.indexOf(scheme + ':') === 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction chars(text) {\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tout(o.transformText ? o.transformText(text) : text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ignore(tag) {\n\t\t\t\tif (elements.voids[tag]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tcontext = { ignoring: tag, depth: 1 };\n\t\t\t\t} else if (context.ignoring === tag) {\n\t\t\t\t\tcontext.depth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction unignore(tag) {\n\t\t\t\tif (context.ignoring === tag) {\n\t\t\t\t\tif (--context.depth <= 0) {\n\t\t\t\t\t\treset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reset() {\n\t\t\t\tcontext = { ignoring: false, depth: 0 };\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = sanitizer;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 9: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar escapes = {\n\t\t\t'&': '&amp;',\n\t\t\t'<': '&lt;',\n\t\t\t'>': '&gt;',\n\t\t\t'\"': '&quot;',\n\t\t\t\"'\": '&#39;'\n\t\t};\n\t\tvar unescapes = {\n\t\t\t'&amp;': '&',\n\t\t\t'&lt;': '<',\n\t\t\t'&gt;': '>',\n\t\t\t'&quot;': '\"',\n\t\t\t'&#39;': \"'\"\n\t\t};\n\t\tvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\n\t\tvar runescaped = /[&<>\"']/g;\n\n\t\tfunction escapeHtmlChar(match) {\n\t\t\treturn escapes[match];\n\t\t}\n\t\tfunction unescapeHtmlChar(match) {\n\t\t\treturn unescapes[match];\n\t\t}\n\n\t\tfunction escapeHtml(text) {\n\t\t\treturn text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n\t\t}\n\n\t\tfunction unescapeHtml(html) {\n\t\t\treturn html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n\t\t}\n\n\t\tescapeHtml.options = unescapeHtml.options = {};\n\n\t\tmodule.exports = {\n\t\t\tencode: escapeHtml,\n\t\t\tescape: escapeHtml,\n\t\t\tdecode: unescapeHtml,\n\t\t\tunescape: unescapeHtml,\n\t\t\tversion: '1.0.0-browser'\n\t\t};\n\n\t}, {}], 10: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction toMap(list) {\n\t\t\treturn list.reduce(asKey, {});\n\t\t}\n\n\t\tfunction asKey(accumulator, item) {\n\t\t\taccumulator[item] = true;\n\t\t\treturn accumulator;\n\t\t}\n\n\t\tmodule.exports = toMap;\n\n\t}, {}]\n}, {}, [4]);\n\n// ESM-comment-begin\n// define(function() { return { insane: __insane_func }; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var insane = __insane_func;\n// ESM-uncomment-end\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = { exports: {} };\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() { }\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n      target,\n      key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n        curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n      cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n      i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n    splitCells = helpers.splitCells,\n    _escape = helpers.escape,\n    findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*| *)(?:\\\\n[^\\\\n]*)*(?:\\\\n|$))\"); // Get each top-level item\n\n        while (src) {\n          if (this.rules.block.hr.test(src)) {\n            // End list if we encounter an HR (possibly move into itemRegex?)\n            break;\n          }\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          lines = cap[2].split('\\n');\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = lines[0].trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1\n\n            itemContents = lines[0].slice(indent - cap[1].length);\n          }\n\n          blankLine = false;\n          raw = cap[0];\n\n          if (!lines[0] && /^ *$/.test(lines[1])) {\n            // items begin with at most one blank line\n            raw = cap[1] + lines.slice(0, 2).join('\\n') + '\\n';\n            list.loose = true;\n            lines = [];\n          }\n\n          var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\");\n\n          for (i = 1; i < lines.length; i++) {\n            line = lines[i];\n\n            if (this.options.pedantic) {\n              // Re-align to follow commonmark nesting rules\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            } // Until we encounter a blank line, item contents do not need indentation\n\n\n            if (!blankLine) {\n              if (!line.trim()) {\n                // Check if current line is empty\n                blankLine = true;\n              } // Dedent if possible\n\n\n              if (line.search(/[^ ]/) >= indent) {\n                itemContents += '\\n' + line.slice(indent);\n              } else {\n                itemContents += '\\n' + line;\n              }\n\n              continue;\n            } // Dedent this line\n\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n              itemContents += '\\n' + line.slice(indent);\n              continue;\n            } else {\n              // Line was not properly indented; end of this item\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n          src = src.slice(raw.length);\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n          if (list.items[i].tokens.some(function (t) {\n            return t.type === 'space';\n          })) {\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n          rLength,\n          delimTotal = lLength,\n          midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n    edit = helpers.edit,\n    merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n      + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n      + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n      + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n      + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n      + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n      + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n      + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n      + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n      + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n      + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)\\\\|?' // Align\n      + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n      + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n      + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n      + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n      + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n      + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_*]*?\\*[^_*]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^_*]*?\\_[^_*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n    inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n      /**\n       * Static Lex Inline Method\n       */\n      ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n      /**\n       * Preprocessing\n       */\n      ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n      /**\n       * Lexing\n       */\n      ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n      /**\n       * Lexing/Compiling\n       */\n      ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n    escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n      ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() { }\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n        .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n        .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n      /**\n       * Finds the next safe (unique) slug to use\n       */\n      ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n      /**\n       * Convert string to unique id\n       * @param {object} options\n       * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n       */\n      ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n      /**\n       * Static Parse Inline Method\n       */\n      ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n      /**\n       * Parse Loop\n       */\n      ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox,\n        ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n      /**\n       * Parse Inline Tokens\n       */\n      ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token,\n        ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n    checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n    escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n    changeDefaults = defaults$5.exports.changeDefaults,\n    defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport * as DOM from './dom.js';\r\nimport { DomEmitter } from './event.js';\r\nimport { createElement } from './formattedTextRenderer.js';\r\nimport { StandardMouseEvent } from './mouseEvent.js';\r\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\r\nimport { onUnexpectedError } from '../common/errors.js';\r\nimport { Event } from '../common/event.js';\r\nimport { parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\r\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\r\nimport { defaultGenerator } from '../common/idGenerator.js';\r\nimport { insane } from '../common/insane/insane.js';\r\nimport * as marked from '../common/marked/marked.js';\r\nimport { parse } from '../common/marshalling.js';\r\nimport { FileAccess, Schemas } from '../common/network.js';\r\nimport { cloneAndChange } from '../common/objects.js';\r\nimport { resolvePath } from '../common/resources.js';\r\nimport { escape } from '../common/strings.js';\r\nimport { URI } from '../common/uri.js';\r\nconst _ttpInsane = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('insane', {\r\n    createHTML(value, options) {\r\n        return insane(value, options);\r\n    }\r\n});\r\n/**\r\n * Low-level way create a html element from a markdown string.\r\n *\r\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\r\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\r\n */\r\nexport function renderMarkdown(markdown, options = {}, markedOptions = {}) {\r\n    var _a;\r\n    const element = createElement(options);\r\n    const _uriMassage = function (part) {\r\n        let data;\r\n        try {\r\n            data = parse(decodeURIComponent(part));\r\n        }\r\n        catch (e) {\r\n            // ignore\r\n        }\r\n        if (!data) {\r\n            return part;\r\n        }\r\n        data = cloneAndChange(data, value => {\r\n            if (markdown.uris && markdown.uris[value]) {\r\n                return URI.revive(markdown.uris[value]);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n        return encodeURIComponent(JSON.stringify(data));\r\n    };\r\n    const _href = function (href, isDomUri) {\r\n        const data = markdown.uris && markdown.uris[href];\r\n        if (!data) {\r\n            return href; // no uri exists\r\n        }\r\n        let uri = URI.revive(data);\r\n        if (isDomUri) {\r\n            if (href.startsWith(Schemas.data + ':')) {\r\n                return href;\r\n            }\r\n            // this URI will end up as \"src\"-attribute of a dom node\r\n            // and because of that special rewriting needs to be done\r\n            // so that the URI uses a protocol that's understood by\r\n            // browsers (like http or https)\r\n            return FileAccess.asBrowserUri(uri).toString(true);\r\n        }\r\n        if (URI.parse(href).toString() === uri.toString()) {\r\n            return href; // no transformation performed\r\n        }\r\n        if (uri.query) {\r\n            uri = uri.with({ query: _uriMassage(uri.query) });\r\n        }\r\n        return uri.toString();\r\n    };\r\n    // signal to code-block render that the\r\n    // element has been created\r\n    let signalInnerHTML;\r\n    const withInnerHTML = new Promise(c => signalInnerHTML = c);\r\n    const renderer = new marked.Renderer();\r\n    renderer.image = (href, title, text) => {\r\n        let dimensions = [];\r\n        let attributes = [];\r\n        if (href) {\r\n            ({ href, dimensions } = parseHrefAndDimensions(href));\r\n            href = _href(href, true);\r\n            try {\r\n                const hrefAsUri = URI.parse(href);\r\n                if (options.baseUrl && hrefAsUri.scheme === Schemas.file) { // absolute or relative local path, or file: uri\r\n                    href = resolvePath(options.baseUrl, href).toString();\r\n                }\r\n            }\r\n            catch (err) { }\r\n            attributes.push(`src=\"${href}\"`);\r\n        }\r\n        if (text) {\r\n            attributes.push(`alt=\"${text}\"`);\r\n        }\r\n        if (title) {\r\n            attributes.push(`title=\"${title}\"`);\r\n        }\r\n        if (dimensions.length) {\r\n            attributes = attributes.concat(dimensions);\r\n        }\r\n        return '<img ' + attributes.join(' ') + '>';\r\n    };\r\n    renderer.link = (href, title, text) => {\r\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\r\n        if (href === text) { // raw link case\r\n            text = removeMarkdownEscapes(text);\r\n        }\r\n        href = _href(href, false);\r\n        if (options.baseUrl) {\r\n            const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\r\n            if (!hasScheme) {\r\n                href = resolvePath(options.baseUrl, href).toString();\r\n            }\r\n        }\r\n        title = removeMarkdownEscapes(title);\r\n        href = removeMarkdownEscapes(href);\r\n        if (!href\r\n            || href.match(/^data:|javascript:/i)\r\n            || (href.match(/^command:/i) && !markdown.isTrusted)\r\n            || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\r\n            // drop the link\r\n            return text;\r\n        }\r\n        else {\r\n            // HTML Encode href\r\n            href = href.replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;');\r\n            return `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\r\n        }\r\n    };\r\n    renderer.paragraph = (text) => {\r\n        if (markdown.supportThemeIcons) {\r\n            const elements = renderLabelWithIcons(text);\r\n            text = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\r\n        }\r\n        return `<p>${text}</p>`;\r\n    };\r\n    if (options.codeBlockRenderer) {\r\n        renderer.code = (code, lang) => {\r\n            const value = options.codeBlockRenderer(lang, code);\r\n            // when code-block rendering is async we return sync\r\n            // but update the node with the real result later.\r\n            const id = defaultGenerator.nextId();\r\n            const promise = Promise.all([value, withInnerHTML]).then(values => {\r\n                const span = element.querySelector(`div[data-code=\"${id}\"]`);\r\n                if (span) {\r\n                    DOM.reset(span, values[0]);\r\n                }\r\n            }).catch(_err => {\r\n                // ignore\r\n            });\r\n            if (options.asyncRenderCallback) {\r\n                promise.then(options.asyncRenderCallback);\r\n            }\r\n            return `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\r\n        };\r\n    }\r\n    if (options.actionHandler) {\r\n        const onClick = options.actionHandler.disposables.add(new DomEmitter(element, 'click'));\r\n        const onAuxClick = options.actionHandler.disposables.add(new DomEmitter(element, 'auxclick'));\r\n        options.actionHandler.disposables.add(Event.any(onClick.event, onAuxClick.event)(e => {\r\n            const mouseEvent = new StandardMouseEvent(e);\r\n            if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\r\n                return;\r\n            }\r\n            let target = mouseEvent.target;\r\n            if (target.tagName !== 'A') {\r\n                target = target.parentElement;\r\n                if (!target || target.tagName !== 'A') {\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                const href = target.dataset['href'];\r\n                if (href) {\r\n                    options.actionHandler.callback(href, mouseEvent);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                mouseEvent.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    // Use our own sanitizer so that we can let through only spans.\r\n    // Otherwise, we'd be letting all html be rendered.\r\n    // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\r\n    // We always pass the output through insane after this so that we don't rely on\r\n    // marked for sanitization.\r\n    markedOptions.sanitizer = (html) => {\r\n        const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\r\n        return match ? html : '';\r\n    };\r\n    markedOptions.sanitize = true;\r\n    markedOptions.silent = true;\r\n    markedOptions.renderer = renderer;\r\n    // values that are too long will freeze the UI\r\n    let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\r\n    if (value.length > 100000) {\r\n        value = `${value.substr(0, 100000)}…`;\r\n    }\r\n    // escape theme icons\r\n    if (markdown.supportThemeIcons) {\r\n        value = markdownEscapeEscapedIcons(value);\r\n    }\r\n    const renderedMarkdown = marked.parse(value, markedOptions);\r\n    // sanitize with insane\r\n    element.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown);\r\n    // signal that async code blocks can be now be inserted\r\n    signalInnerHTML();\r\n    // signal size changes for image tags\r\n    if (options.asyncRenderCallback) {\r\n        for (const img of element.getElementsByTagName('img')) {\r\n            const listener = DOM.addDisposableListener(img, 'load', () => {\r\n                listener.dispose();\r\n                options.asyncRenderCallback();\r\n            });\r\n        }\r\n    }\r\n    return element;\r\n}\r\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\r\n    var _a;\r\n    const insaneOptions = getInsaneOptions(options);\r\n    return (_a = _ttpInsane === null || _ttpInsane === void 0 ? void 0 : _ttpInsane.createHTML(renderedMarkdown, insaneOptions)) !== null && _a !== void 0 ? _a : insane(renderedMarkdown, insaneOptions);\r\n}\r\nfunction getInsaneOptions(options) {\r\n    const allowedSchemes = [\r\n        Schemas.http,\r\n        Schemas.https,\r\n        Schemas.mailto,\r\n        Schemas.data,\r\n        Schemas.file,\r\n        Schemas.vscodeFileResource,\r\n        Schemas.vscodeRemote,\r\n        Schemas.vscodeRemoteResource,\r\n    ];\r\n    if (options.isTrusted) {\r\n        allowedSchemes.push(Schemas.command);\r\n    }\r\n    return {\r\n        allowedSchemes,\r\n        // allowedTags should included everything that markdown renders to.\r\n        // Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\r\n        // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\r\n        // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\r\n        allowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\r\n        allowedAttributes: {\r\n            'a': ['href', 'name', 'target', 'data-href'],\r\n            'img': ['src', 'title', 'alt', 'width', 'height'],\r\n            'div': ['class', 'data-code'],\r\n            'span': ['class', 'style'],\r\n            // https://github.com/microsoft/vscode/issues/95937\r\n            'th': ['align'],\r\n            'td': ['align']\r\n        },\r\n        filter(token) {\r\n            if (token.tag === 'span' && options.isTrusted) {\r\n                if (token.attrs['style'] && (Object.keys(token.attrs).length === 1)) {\r\n                    return !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\r\n                }\r\n                else if (token.attrs['class']) {\r\n                    // The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\r\n                    return !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a;\r\nimport { renderMarkdown } from '../../../base/browser/markdownRenderer.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { tokenizeToString } from '../../common/modes/textToHtmlTokenizer.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\n/**\r\n * Markdown renderer that can render codeblocks with the editor mechanics. This\r\n * renderer should always be preferred.\r\n */\r\nlet MarkdownRenderer = class MarkdownRenderer {\r\n    constructor(_options, _modeService, _openerService) {\r\n        this._options = _options;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._onDidRenderAsync = new Emitter();\r\n        this.onDidRenderAsync = this._onDidRenderAsync.event;\r\n    }\r\n    dispose() {\r\n        this._onDidRenderAsync.dispose();\r\n    }\r\n    render(markdown, options, markedOptions) {\r\n        const disposables = new DisposableStore();\r\n        let element;\r\n        if (!markdown) {\r\n            element = document.createElement('span');\r\n        }\r\n        else {\r\n            element = renderMarkdown(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions);\r\n        }\r\n        return {\r\n            element,\r\n            dispose: () => disposables.dispose()\r\n        };\r\n    }\r\n    _getRenderOptions(markdown, disposeables) {\r\n        return {\r\n            baseUrl: this._options.baseUrl,\r\n            codeBlockRenderer: (languageAlias, value) => __awaiter(this, void 0, void 0, function* () {\r\n                var _a, _b, _c, _d;\r\n                // In markdown,\r\n                // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\r\n                // it is possible no alias is given in which case we fall back to the current editor lang\r\n                let modeId;\r\n                if (languageAlias) {\r\n                    modeId = this._modeService.getModeIdForLanguageName(languageAlias);\r\n                }\r\n                else if (this._options.editor) {\r\n                    modeId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageIdentifier().language;\r\n                }\r\n                if (!modeId) {\r\n                    modeId = 'plaintext';\r\n                }\r\n                this._modeService.triggerMode(modeId);\r\n                const tokenization = (_b = yield TokenizationRegistry.getPromise(modeId)) !== null && _b !== void 0 ? _b : undefined;\r\n                const element = document.createElement('span');\r\n                element.innerHTML = ((_d = (_c = MarkdownRenderer._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, tokenization)) !== null && _d !== void 0 ? _d : tokenizeToString(value, tokenization));\r\n                // use \"good\" font\r\n                let fontFamily = this._options.codeBlockFontFamily;\r\n                if (this._options.editor) {\r\n                    fontFamily = this._options.editor.getOption(42 /* fontInfo */).fontFamily;\r\n                }\r\n                if (fontFamily) {\r\n                    element.style.fontFamily = fontFamily;\r\n                }\r\n                return element;\r\n            }),\r\n            asyncRenderCallback: () => this._onDidRenderAsync.fire(),\r\n            actionHandler: {\r\n                callback: (content) => this._openerService.open(content, { fromUserGesture: true, allowContributedOpeners: true, allowCommands: markdown.isTrusted }).catch(onUnexpectedError),\r\n                disposables: disposeables\r\n            }\r\n        };\r\n    }\r\n};\r\nMarkdownRenderer._ttpTokenizer = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('tokenizeToString', {\r\n    createHTML(value, tokenizer) {\r\n        return tokenizeToString(value, tokenizer);\r\n    }\r\n});\r\nMarkdownRenderer = __decorate([\r\n    __param(1, IModeService),\r\n    __param(2, IOpenerService)\r\n], MarkdownRenderer);\r\nexport { MarkdownRenderer };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { HoverProviderRegistry } from '../../common/modes.js';\r\nexport function getHover(model, position, token) {\r\n    const supports = HoverProviderRegistry.ordered(model);\r\n    const promises = supports.map(support => {\r\n        return Promise.resolve(support.provideHover(model, position, token)).then(hover => {\r\n            return hover && isValid(hover) ? hover : undefined;\r\n        }, err => {\r\n            onUnexpectedExternalError(err);\r\n            return undefined;\r\n        });\r\n    });\r\n    return Promise.all(promises).then(coalesce);\r\n}\r\nregisterModelAndPositionCommand('_executeHoverProvider', (model, position) => getHover(model, position, CancellationToken.None));\r\nfunction isValid(result) {\r\n    const hasRange = (typeof result.range !== 'undefined');\r\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\r\n    return hasRange && hasHtmlContent;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { MarkdownString, isEmptyMarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { asArray } from '../../../base/common/arrays.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { HoverProviderRegistry } from '../../common/modes.js';\r\nimport { getHover } from './getHover.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst $ = dom.$;\r\nexport class MarkdownHover {\r\n    constructor(owner, range, contents) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.contents = contents;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\r\n    constructor(_editor, _hover, _modeService, _openerService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._configurationService = _configurationService;\r\n    }\r\n    createLoadingMessage(anchor) {\r\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))]);\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const result = [];\r\n        for (const d of lineDecorations) {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            const hoverMessage = d.options.hoverMessage;\r\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\r\n                continue;\r\n            }\r\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\r\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage)));\r\n        }\r\n        const lineLength = this._editor.getModel().getLineLength(lineNumber);\r\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength');\r\n        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\r\n            result.push(new MarkdownHover(this, new Range(lineNumber, 1, lineNumber, lineLength + 1), [{\r\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\r\n                }]));\r\n        }\r\n        return result;\r\n    }\r\n    computeAsync(anchor, lineDecorations, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const model = this._editor.getModel();\r\n            if (!HoverProviderRegistry.has(model)) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const hovers = yield getHover(model, new Position(anchor.range.startLineNumber, anchor.range.startColumn), token);\r\n            const result = [];\r\n            for (const hover of hovers) {\r\n                if (isEmptyMarkdownString(hover.contents)) {\r\n                    continue;\r\n                }\r\n                const rng = hover.range ? Range.lift(hover.range) : anchor.range;\r\n                result.push(new MarkdownHover(this, rng, hover.contents));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        const disposables = new DisposableStore();\r\n        for (const hoverPart of hoverParts) {\r\n            for (const contents of hoverPart.contents) {\r\n                if (isEmptyMarkdownString(contents)) {\r\n                    continue;\r\n                }\r\n                const markdownHoverElement = $('div.hover-row.markdown-hover');\r\n                const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\r\n                const renderer = disposables.add(new MarkdownRenderer({ editor: this._editor }, this._modeService, this._openerService));\r\n                disposables.add(renderer.onDidRenderAsync(() => {\r\n                    hoverContentsElement.className = 'hover-contents code-hover-contents';\r\n                    this._hover.onContentsChanged();\r\n                }));\r\n                const renderedContents = disposables.add(renderer.render(contents));\r\n                hoverContentsElement.appendChild(renderedContents.element);\r\n                fragment.appendChild(markdownHoverElement);\r\n            }\r\n        }\r\n        return disposables;\r\n    }\r\n};\r\nMarkdownHoverParticipant = __decorate([\r\n    __param(2, IModeService),\r\n    __param(3, IOpenerService),\r\n    __param(4, IConfigurationService)\r\n], MarkdownHoverParticipant);\r\nexport { MarkdownHoverParticipant };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class HoverRangeAnchor {\r\n    constructor(priority, range) {\r\n        this.priority = priority;\r\n        this.range = range;\r\n        this.type = 1 /* Range */;\r\n    }\r\n    equals(other) {\r\n        return (other.type === 1 /* Range */ && this.range.equalsRange(other.range));\r\n    }\r\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\r\n        return (lastAnchor.type === 1 /* Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\r\n    }\r\n}\r\nexport class HoverForeignElementAnchor {\r\n    constructor(priority, owner, range) {\r\n        this.priority = priority;\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.type = 2 /* ForeignElement */;\r\n    }\r\n    equals(other) {\r\n        return (other.type === 2 /* ForeignElement */ && this.owner === other.owner);\r\n    }\r\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\r\n        return (lastAnchor.type === 2 /* ForeignElement */ && this.owner === lastAnchor.owner);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './ghostText.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport { Configuration } from '../../browser/config/configuration.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { ghostTextBorder, ghostTextForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { RGBA, Color } from '../../../base/common/color.js';\r\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\r\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\r\n    constructor(editor, model, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.model = model;\r\n        this.instantiationService = instantiationService;\r\n        this.disposed = false;\r\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\r\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor));\r\n        this.viewMoreContentWidget = undefined;\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(28 /* disableMonospaceOptimizations */)\r\n                || e.hasChanged(105 /* stopRenderingLineAfter */)\r\n                || e.hasChanged(88 /* renderWhitespace */)\r\n                || e.hasChanged(82 /* renderControlCharacters */)\r\n                || e.hasChanged(43 /* fontLigatures */)\r\n                || e.hasChanged(42 /* fontInfo */)\r\n                || e.hasChanged(58 /* lineHeight */)) {\r\n                this.update();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            var _a;\r\n            this.disposed = true;\r\n            this.update();\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }));\r\n        this._register(model.onDidChange(() => {\r\n            this.update();\r\n        }));\r\n        this.update();\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\r\n    }\r\n    update() {\r\n        var _a;\r\n        const ghostText = this.model.ghostText;\r\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\r\n            this.partsWidget.clear();\r\n            this.additionalLinesWidget.clear();\r\n            return;\r\n        }\r\n        const inlineTexts = new Array();\r\n        const additionalLines = new Array();\r\n        function addToAdditionalLines(lines, className) {\r\n            if (additionalLines.length > 0) {\r\n                const lastLine = additionalLines[additionalLines.length - 1];\r\n                if (className) {\r\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\r\n                }\r\n                lastLine.content += lines[0];\r\n                lines = lines.slice(1);\r\n            }\r\n            for (const line of lines) {\r\n                additionalLines.push({\r\n                    content: line,\r\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\r\n                });\r\n            }\r\n        }\r\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\r\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\r\n        let hiddenTextStartColumn = undefined;\r\n        let lastIdx = 0;\r\n        for (const part of ghostText.parts) {\r\n            let lines = part.lines;\r\n            if (hiddenTextStartColumn === undefined) {\r\n                inlineTexts.push({\r\n                    column: part.column,\r\n                    text: lines[0],\r\n                    preview: part.preview,\r\n                });\r\n                lines = lines.slice(1);\r\n            }\r\n            else {\r\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\r\n            }\r\n            if (lines.length > 0) {\r\n                addToAdditionalLines(lines, 'ghost-text');\r\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\r\n                    hiddenTextStartColumn = part.column;\r\n                }\r\n            }\r\n            lastIdx = part.column - 1;\r\n        }\r\n        if (hiddenTextStartColumn !== undefined) {\r\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\r\n        }\r\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\r\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\r\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\r\n            // Not supported at the moment, condition is always false.\r\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\r\n        }\r\n        else {\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }\r\n    }\r\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\r\n        const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'suggest-preview-additional-widget';\r\n        Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n        const spacer = document.createElement('span');\r\n        spacer.className = 'content-spacer';\r\n        spacer.append(firstLineText);\r\n        domNode.append(spacer);\r\n        const newline = document.createElement('span');\r\n        newline.className = 'content-newline suggest-preview-text';\r\n        newline.append('⏎  ');\r\n        domNode.append(newline);\r\n        const disposableStore = new DisposableStore();\r\n        const button = document.createElement('div');\r\n        button.className = 'button suggest-preview-text';\r\n        button.append(`+${remainingLinesLength} lines…`);\r\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\r\n            var _a;\r\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\r\n            e.preventDefault();\r\n            this.editor.focus();\r\n        }));\r\n        domNode.append(button);\r\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\r\n    }\r\n};\r\nGhostTextWidget = __decorate([\r\n    __param(2, IInstantiationService)\r\n], GhostTextWidget);\r\nexport { GhostTextWidget };\r\nlet DecorationsWidget = class DecorationsWidget {\r\n    constructor(editor, codeEditorService, themeService, contextKeyService) {\r\n        this.editor = editor;\r\n        this.codeEditorService = codeEditorService;\r\n        this.themeService = themeService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.decorationIds = [];\r\n        this.disposableStore = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this.clear();\r\n        this.disposableStore.dispose();\r\n    }\r\n    clear() {\r\n        this.editor.deltaDecorations(this.decorationIds, []);\r\n        this.disposableStore.clear();\r\n    }\r\n    setParts(lineNumber, parts, hiddenText) {\r\n        this.disposableStore.clear();\r\n        const colorTheme = this.themeService.getColorTheme();\r\n        const foreground = colorTheme.getColor(ghostTextForeground);\r\n        let opacity = undefined;\r\n        let color = undefined;\r\n        if (foreground) {\r\n            opacity = String(foreground.rgba.a);\r\n            color = Color.Format.CSS.format(opaque(foreground));\r\n        }\r\n        const borderColor = colorTheme.getColor(ghostTextBorder);\r\n        let border = undefined;\r\n        if (borderColor) {\r\n            border = `2px dashed ${borderColor}`;\r\n        }\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        const line = textModel.getLineContent(lineNumber) || '';\r\n        let lastIndex = 0;\r\n        let currentLinePrefix = '';\r\n        const hiddenTextDecorations = new Array();\r\n        if (hiddenText) {\r\n            hiddenTextDecorations.push({\r\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\r\n                options: {\r\n                    inlineClassName: 'ghost-text-hidden',\r\n                    description: 'ghost-text-hidden'\r\n                }\r\n            });\r\n        }\r\n        const key = this.contextKeyService.getContextKeyValue('config.editor.useInjectedText');\r\n        const shouldUseInjectedText = key === undefined ? true : !!key;\r\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\r\n            currentLinePrefix += line.substring(lastIndex, p.column - 1);\r\n            lastIndex = p.column - 1;\r\n            // To avoid visual confusion, we don't want to render visible whitespace\r\n            const contentText = shouldUseInjectedText ? p.text : this.renderSingleLineText(p.text, currentLinePrefix, tabSize, false);\r\n            const decorationType = this.disposableStore.add(registerDecorationType(this.codeEditorService, 'ghost-text', '0-ghost-text-', {\r\n                after: {\r\n                    // TODO: escape?\r\n                    contentText,\r\n                    opacity,\r\n                    color,\r\n                    border,\r\n                    fontWeight: p.preview ? 'bold' : 'normal',\r\n                },\r\n            }));\r\n            return ({\r\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\r\n                options: shouldUseInjectedText ? {\r\n                    description: 'ghost-text',\r\n                    after: { content: contentText, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration' }\r\n                } : Object.assign({}, decorationType.resolve())\r\n            });\r\n        }).concat(hiddenTextDecorations));\r\n    }\r\n    renderSingleLineText(text, lineStart, tabSize, renderWhitespace) {\r\n        const newLine = lineStart + text;\r\n        const visibleColumnsByColumns = CursorColumns.visibleColumnsByColumns(newLine, tabSize);\r\n        let contentText = '';\r\n        let curCol = lineStart.length + 1;\r\n        for (const c of text) {\r\n            if (c === '\\t') {\r\n                const width = visibleColumnsByColumns[curCol + 1] - visibleColumnsByColumns[curCol];\r\n                if (renderWhitespace) {\r\n                    contentText += '→';\r\n                    for (let i = 1; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n            }\r\n            else if (c === ' ') {\r\n                if (renderWhitespace) {\r\n                    contentText += '·';\r\n                }\r\n                else {\r\n                    contentText += '\\xa0';\r\n                }\r\n            }\r\n            else {\r\n                contentText += c;\r\n            }\r\n            curCol += 1;\r\n        }\r\n        return contentText;\r\n    }\r\n};\r\nDecorationsWidget = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService),\r\n    __param(3, IContextKeyService)\r\n], DecorationsWidget);\r\nfunction opaque(color) {\r\n    const { r, b, g } = color.rgba;\r\n    return new Color(new RGBA(r, g, b, 255));\r\n}\r\nclass AdditionalLinesWidget {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this._viewZoneId = undefined;\r\n    }\r\n    get viewZoneId() { return this._viewZoneId; }\r\n    dispose() {\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n        });\r\n    }\r\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\r\n            if (heightInLines > 0) {\r\n                const domNode = document.createElement('div');\r\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions());\r\n                this._viewZoneId = changeAccessor.addZone({\r\n                    afterLineNumber: lineNumber,\r\n                    heightInLines: heightInLines,\r\n                    domNode,\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction renderLines(domNode, tabSize, lines, opts) {\r\n    const disableMonospaceOptimizations = opts.get(28 /* disableMonospaceOptimizations */);\r\n    const stopRenderingLineAfter = opts.get(105 /* stopRenderingLineAfter */);\r\n    // To avoid visual confusion, we don't want to render visible whitespace\r\n    const renderWhitespace = 'none';\r\n    const renderControlCharacters = opts.get(82 /* renderControlCharacters */);\r\n    const fontLigatures = opts.get(43 /* fontLigatures */);\r\n    const fontInfo = opts.get(42 /* fontInfo */);\r\n    const lineHeight = opts.get(58 /* lineHeight */);\r\n    const sb = createStringBuilder(10000);\r\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\r\n    for (let i = 0, len = lines.length; i < len; i++) {\r\n        const lineData = lines[i];\r\n        const line = lineData.content;\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(i * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = strings.isBasicASCII(line);\r\n        const containsRTL = strings.containsRTL(line);\r\n        const lineTokens = LineTokens.createEmpty(line);\r\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\r\n        sb.appendASCIIString('</div>');\r\n    }\r\n    sb.appendASCIIString('</div>');\r\n    Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n    const html = sb.build();\r\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n    domNode.innerHTML = trustedhtml;\r\n}\r\nlet keyCounter = 0;\r\nfunction registerDecorationType(service, description, keyPrefix, options) {\r\n    const key = keyPrefix + (keyCounter++);\r\n    service.registerDecorationType(description, key, options);\r\n    return {\r\n        dispose() {\r\n            service.removeDecorationType(key);\r\n        },\r\n        resolve() {\r\n            return service.resolveDecorationOptions(key, true);\r\n        }\r\n    };\r\n}\r\nclass ViewMoreLinesContentWidget extends Disposable {\r\n    constructor(editor, position, domNode, disposableStore) {\r\n        super();\r\n        this.editor = editor;\r\n        this.position = position;\r\n        this.domNode = domNode;\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = false;\r\n        this._register(disposableStore);\r\n        this._register(toDisposable(() => {\r\n            this.editor.removeContentWidget(this);\r\n        }));\r\n        this.editor.addContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'editor.widget.viewMoreLinesWidget';\r\n    }\r\n    getDomNode() {\r\n        return this.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this.position,\r\n            preference: [0 /* EXACT */]\r\n        };\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foreground = theme.getColor(ghostTextForeground);\r\n    if (foreground) {\r\n        const opacity = String(foreground.rgba.a);\r\n        const color = Color.Format.CSS.format(opaque(foreground));\r\n        collector.addRule(`.monaco-editor .ghost-text-decoration { opacity: ${opacity}; color: ${color}; }`);\r\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()}; }`);\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { opacity: ${opacity}; color: ${color}; }`);\r\n    }\r\n    const border = theme.getColor(ghostTextBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 2px dashed ${border}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class GhostText {\r\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\r\n        this.lineNumber = lineNumber;\r\n        this.parts = parts;\r\n        this.additionalReservedLineCount = additionalReservedLineCount;\r\n    }\r\n    renderForScreenReader(lineText) {\r\n        if (this.parts.length === 0) {\r\n            return '';\r\n        }\r\n        const lastPart = this.parts[this.parts.length - 1];\r\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\r\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\r\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\r\n            text: p.lines.join('\\n')\r\n        })));\r\n        return text.substring(this.parts[0].column - 1);\r\n    }\r\n}\r\nclass PositionOffsetTransformer {\r\n    constructor(text) {\r\n        this.lineStartOffsetByLineIdx = [];\r\n        this.lineStartOffsetByLineIdx.push(0);\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text.charAt(i) === '\\n') {\r\n                this.lineStartOffsetByLineIdx.push(i + 1);\r\n            }\r\n        }\r\n    }\r\n    getOffset(position) {\r\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\r\n    }\r\n}\r\nfunction applyEdits(text, edits) {\r\n    const transformer = new PositionOffsetTransformer(text);\r\n    const offsetEdits = edits.map(e => {\r\n        const range = Range.lift(e.range);\r\n        return ({\r\n            startOffset: transformer.getOffset(range.getStartPosition()),\r\n            endOffset: transformer.getOffset(range.getEndPosition()),\r\n            text: e.text\r\n        });\r\n    });\r\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\r\n    for (const edit of offsetEdits) {\r\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\r\n    }\r\n    return text;\r\n}\r\nexport class GhostTextPart {\r\n    constructor(column, lines, \r\n    /**\r\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\r\n    */\r\n    preview) {\r\n        this.column = column;\r\n        this.lines = lines;\r\n        this.preview = preview;\r\n    }\r\n}\r\nexport class BaseGhostTextWidgetModel extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._expanded = undefined;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(106 /* suggest */) && this._expanded === undefined) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n    }\r\n    setExpanded(expanded) {\r\n        this._expanded = true;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport { GhostText, GhostTextPart } from './ghostText.js';\r\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\r\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\r\n        // Only single line replacements are supported.\r\n        return undefined;\r\n    }\r\n    const modifiedLength = inlineCompletion.text.length;\r\n    const previewStartInModified = modifiedLength - previewSuffixLength;\r\n    // This is a single line string\r\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\r\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.text);\r\n    const lineNumber = inlineCompletion.range.startLineNumber;\r\n    const parts = new Array();\r\n    if (mode === 'prefix') {\r\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\r\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\r\n            // Prefixes only have a single change.\r\n            return undefined;\r\n        }\r\n    }\r\n    for (const c of changes) {\r\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\r\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\r\n            // No ghost text before cursor\r\n            return undefined;\r\n        }\r\n        if (c.originalLength > 0) {\r\n            const originalText = valueToBeReplaced.substr(c.originalStart, c.originalLength);\r\n            const firstNonWsCol = textModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n            if (!(/^(\\t| )*$/.test(originalText) && (firstNonWsCol === 0 || insertColumn <= firstNonWsCol))) {\r\n                return undefined;\r\n            }\r\n        }\r\n        if (c.modifiedLength === 0) {\r\n            continue;\r\n        }\r\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\r\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInModified));\r\n        const nonPreviewText = inlineCompletion.text.substring(c.modifiedStart, nonPreviewTextEnd);\r\n        const italicText = inlineCompletion.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\r\n        if (nonPreviewText.length > 0) {\r\n            const lines = strings.splitLines(nonPreviewText);\r\n            parts.push(new GhostTextPart(insertColumn, lines, false));\r\n        }\r\n        if (italicText.length > 0) {\r\n            const lines = strings.splitLines(italicText);\r\n            parts.push(new GhostTextPart(insertColumn, lines, true));\r\n        }\r\n    }\r\n    return new GhostText(lineNumber, parts, 0);\r\n}\r\nlet lastRequest = undefined;\r\nfunction cachingDiff(originalValue, newValue) {\r\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\r\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\r\n    }\r\n    else {\r\n        const changes = smartDiff(originalValue, newValue);\r\n        lastRequest = {\r\n            originalValue,\r\n            newValue,\r\n            changes\r\n        };\r\n        return changes;\r\n    }\r\n}\r\n/**\r\n * When matching `if ()` with `if (f() = 1) { g(); }`,\r\n * align it like this:        `if (       )`\r\n * Not like this:\t\t\t  `if (  )`\r\n * Also not like this:\t\t  `if (             )`.\r\n *\r\n * The parenthesis are preprocessed to ensure that they match correctly.\r\n */\r\nfunction smartDiff(originalValue, newValue) {\r\n    function getMaxCharCode(val) {\r\n        let maxCharCode = 0;\r\n        for (let i = 0, len = val.length; i < len; i++) {\r\n            const charCode = val.charCodeAt(i);\r\n            if (charCode > maxCharCode) {\r\n                maxCharCode = charCode;\r\n            }\r\n        }\r\n        return maxCharCode;\r\n    }\r\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\r\n    function getUniqueCharCode(id) {\r\n        if (id < 0) {\r\n            throw new Error('unexpected');\r\n        }\r\n        return maxCharCode + id + 1;\r\n    }\r\n    function getElements(source) {\r\n        let level = 0;\r\n        let group = 0;\r\n        const characters = new Int32Array(source.length);\r\n        for (let i = 0, len = source.length; i < len; i++) {\r\n            const id = group * 100 + level;\r\n            // TODO support more brackets\r\n            if (source[i] === '(') {\r\n                characters[i] = getUniqueCharCode(2 * id);\r\n                level++;\r\n            }\r\n            else if (source[i] === ')') {\r\n                characters[i] = getUniqueCharCode(2 * id + 1);\r\n                if (level === 1) {\r\n                    group++;\r\n                }\r\n                level = Math.max(level - 1, 0);\r\n            }\r\n            else {\r\n                characters[i] = source.charCodeAt(i);\r\n            }\r\n        }\r\n        return characters;\r\n    }\r\n    const elements1 = getElements(originalValue);\r\n    const elements2 = getElements(newValue);\r\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { InlineCompletionsProviderRegistry, InlineCompletionTriggerKind } from '../../common/modes.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { RedoCommand, UndoCommand } from '../../browser/editorExtensions.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { BaseGhostTextWidgetModel } from './ghostText.js';\r\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\r\nimport { inlineSuggestCommitId } from './consts.js';\r\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\r\n    constructor(editor, cache, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.cache = cache;\r\n        this.commandService = commandService;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.completionSession = this._register(new MutableDisposable());\r\n        this.active = false;\r\n        this.disposed = false;\r\n        this._register(commandService.onDidExecuteCommand(e => {\r\n            // These commands don't trigger onDidType.\r\n            const commands = new Set([\r\n                UndoCommand.id,\r\n                RedoCommand.id,\r\n                CoreEditingCommands.Tab.id,\r\n                CoreEditingCommands.DeleteLeft.id,\r\n                CoreEditingCommands.DeleteRight.id,\r\n                inlineSuggestCommitId,\r\n                'acceptSelectedSuggestion'\r\n            ]);\r\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\r\n                this.handleUserInput();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidType((e) => {\r\n            this.handleUserInput();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.session && !this.session.isValid) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            this.disposed = true;\r\n        }));\r\n    }\r\n    handleUserInput() {\r\n        if (this.session && !this.session.isValid) {\r\n            this.hide();\r\n        }\r\n        setTimeout(() => {\r\n            if (this.disposed) {\r\n                return;\r\n            }\r\n            // Wait for the cursor update that happens in the same iteration loop iteration\r\n            this.startSessionIfTriggered();\r\n        }, 0);\r\n    }\r\n    get session() {\r\n        return this.completionSession.value;\r\n    }\r\n    get ghostText() {\r\n        var _a;\r\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.session ? this.session.minReservedLineCount : 0;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    setActive(active) {\r\n        var _a;\r\n        this.active = active;\r\n        if (active) {\r\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\r\n        }\r\n    }\r\n    startSessionIfTriggered() {\r\n        const suggestOptions = this.editor.getOption(54 /* inlineSuggest */);\r\n        if (!suggestOptions.enabled) {\r\n            return;\r\n        }\r\n        if (this.session && this.session.isValid) {\r\n            return;\r\n        }\r\n        this.trigger(InlineCompletionTriggerKind.Automatic);\r\n    }\r\n    trigger(triggerKind) {\r\n        if (this.completionSession.value) {\r\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\r\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\r\n            }\r\n            return;\r\n        }\r\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind);\r\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n    }\r\n    hide() {\r\n        this.completionSession.clear();\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    commitCurrentSuggestion() {\r\n        var _a;\r\n        // Don't dispose the session, so that after committing, more suggestions are shown.\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\r\n    }\r\n    showNext() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPrevious() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nInlineCompletionsModel = __decorate([\r\n    __param(2, ICommandService)\r\n], InlineCompletionsModel);\r\nexport { InlineCompletionsModel };\r\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\r\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind) {\r\n        super(editor);\r\n        this.triggerPosition = triggerPosition;\r\n        this.shouldUpdate = shouldUpdate;\r\n        this.commandService = commandService;\r\n        this.cache = cache;\r\n        this.initialTriggerKind = initialTriggerKind;\r\n        this.minReservedLineCount = 0;\r\n        this.updateOperation = this._register(new MutableDisposable());\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\r\n            let triggerKind = this.initialTriggerKind;\r\n            // All subsequent triggers are automatic.\r\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\r\n            return this.update(triggerKind);\r\n        }, 50));\r\n        //#region Selection\r\n        // We use a semantic id to track the selection even if the cache changes.\r\n        this.currentlySelectedCompletionId = undefined;\r\n        let lastCompletionItem = undefined;\r\n        this._register(this.onDidChange(() => {\r\n            const currentCompletion = this.currentCompletion;\r\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\r\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\r\n                const provider = currentCompletion.sourceProvider;\r\n                if (provider.handleItemDidShow) {\r\n                    provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);\r\n                }\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            this.cache.clear();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.cache.value) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidChangeModelContent((e) => {\r\n            this.scheduleAutomaticUpdate();\r\n        }));\r\n        this._register(InlineCompletionsProviderRegistry.onDidChange(() => {\r\n            this.updateSoon.schedule();\r\n        }));\r\n        this.scheduleAutomaticUpdate();\r\n    }\r\n    fixAndGetIndexOfCurrentSelection() {\r\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\r\n            return 0;\r\n        }\r\n        if (this.cache.value.completions.length === 0) {\r\n            // don't reset the selection in this case\r\n            return 0;\r\n        }\r\n        const idx = this.cache.value.completions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\r\n        if (idx === -1) {\r\n            // Reset the selection so that the selection does not jump back when it appears again\r\n            this.currentlySelectedCompletionId = undefined;\r\n            return 0;\r\n        }\r\n        return idx;\r\n    }\r\n    get currentCachedCompletion() {\r\n        if (!this.cache.value) {\r\n            return undefined;\r\n        }\r\n        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    ensureUpdateWithExplicitContext() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.updateOperation.value) {\r\n                // Restart or wait for current update operation\r\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\r\n                    yield this.updateOperation.value.promise;\r\n                }\r\n                else {\r\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\r\n                }\r\n            }\r\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\r\n                // Refresh cache\r\n                yield this.update(InlineCompletionTriggerKind.Explicit);\r\n            }\r\n        });\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\r\n        });\r\n    }\r\n    //#endregion\r\n    get ghostText() {\r\n        const currentCompletion = this.currentCompletion;\r\n        const mode = this.editor.getOptions().get(54 /* inlineSuggest */).mode;\r\n        return currentCompletion ? inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, this.editor.getPosition()) : undefined;\r\n    }\r\n    get currentCompletion() {\r\n        const completion = this.currentCachedCompletion;\r\n        if (!completion) {\r\n            return undefined;\r\n        }\r\n        return completion.toLiveInlineCompletion();\r\n    }\r\n    get isValid() {\r\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\r\n    }\r\n    scheduleAutomaticUpdate() {\r\n        // Since updateSoon debounces, starvation can happen.\r\n        // To prevent stale cache, we clear the current update operation.\r\n        this.updateOperation.clear();\r\n        this.updateSoon.schedule();\r\n    }\r\n    update(triggerKind) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.shouldUpdate()) {\r\n                return;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                let result;\r\n                try {\r\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token);\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                    return;\r\n                }\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                this.cache.setValue(this.editor, result, triggerKind);\r\n                this.onDidChangeEmitter.fire();\r\n            }));\r\n            const operation = new UpdateOperation(promise, triggerKind);\r\n            this.updateOperation.value = operation;\r\n            yield promise;\r\n            if (this.updateOperation.value === operation) {\r\n                this.updateOperation.clear();\r\n            }\r\n        });\r\n    }\r\n    takeOwnership(disposable) {\r\n        this._register(disposable);\r\n    }\r\n    commitCurrentCompletion() {\r\n        if (!this.ghostText) {\r\n            // No ghost text was shown for this completion.\r\n            // Thus, we don't want to commit anything.\r\n            return;\r\n        }\r\n        const completion = this.currentCompletion;\r\n        if (completion) {\r\n            this.commit(completion);\r\n        }\r\n    }\r\n    commit(completion) {\r\n        // Mark the cache as stale, but don't dispose it yet,\r\n        // otherwise command args might get disposed.\r\n        const cache = this.cache.clearAndLeak();\r\n        this.editor.executeEdits('inlineSuggestion.accept', [\r\n            EditOperation.replaceMove(completion.range, completion.text)\r\n        ]);\r\n        if (completion.command) {\r\n            this.commandService\r\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\r\n                .finally(() => {\r\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n            })\r\n                .then(undefined, onUnexpectedExternalError);\r\n        }\r\n        else {\r\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n        }\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\nexport class UpdateOperation {\r\n    constructor(promise, triggerKind) {\r\n        this.promise = promise;\r\n        this.triggerKind = triggerKind;\r\n    }\r\n    dispose() {\r\n        this.promise.cancel();\r\n    }\r\n}\r\n/**\r\n * The cache keeps itself in sync with the editor.\r\n * It also owns the completions result and disposes it when the cache is diposed.\r\n*/\r\nexport class SynchronizedInlineCompletionsCache extends Disposable {\r\n    constructor(editor, completionsSource, onChange, triggerKind) {\r\n        super();\r\n        this.triggerKind = triggerKind;\r\n        const decorationIds = editor.deltaDecorations([], completionsSource.items.map(i => ({\r\n            range: i.range,\r\n            options: {\r\n                description: 'inline-completion-tracking-range'\r\n            },\r\n        })));\r\n        this._register(toDisposable(() => {\r\n            editor.deltaDecorations(decorationIds, []);\r\n        }));\r\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            let hasChanged = false;\r\n            const model = editor.getModel();\r\n            for (const c of this.completions) {\r\n                const newRange = model.getDecorationRange(c.decorationId);\r\n                if (!newRange) {\r\n                    onUnexpectedError(new Error('Decoration has no range'));\r\n                    continue;\r\n                }\r\n                if (!c.synchronizedRange.equalsRange(newRange)) {\r\n                    hasChanged = true;\r\n                    c.synchronizedRange = newRange;\r\n                }\r\n            }\r\n            if (hasChanged) {\r\n                onChange();\r\n            }\r\n        }));\r\n        this._register(completionsSource);\r\n    }\r\n}\r\nclass CachedInlineCompletion {\r\n    constructor(inlineCompletion, decorationId) {\r\n        this.inlineCompletion = inlineCompletion;\r\n        this.decorationId = decorationId;\r\n        this.semanticId = JSON.stringify({\r\n            text: this.inlineCompletion.text,\r\n            startLine: this.inlineCompletion.range.startLineNumber,\r\n            startColumn: this.inlineCompletion.range.startColumn,\r\n            command: this.inlineCompletion.command\r\n        });\r\n        this.synchronizedRange = inlineCompletion.range;\r\n    }\r\n    toLiveInlineCompletion() {\r\n        return {\r\n            text: this.inlineCompletion.text,\r\n            range: this.synchronizedRange,\r\n            command: this.inlineCompletion.command,\r\n            sourceProvider: this.inlineCompletion.sourceProvider,\r\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\r\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\r\n        };\r\n    }\r\n}\r\nfunction getDefaultRange(position, model) {\r\n    const word = model.getWordAtPosition(position);\r\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\r\n    // By default, always replace up until the end of the current line.\r\n    // This default might be subject to change!\r\n    return word\r\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\r\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\r\n}\r\nexport function provideInlineCompletions(position, model, context, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const defaultReplaceRange = getDefaultRange(position, model);\r\n        const providers = InlineCompletionsProviderRegistry.all(model);\r\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n            const completions = yield provider.provideInlineCompletions(model, position, context, token);\r\n            return ({\r\n                completions,\r\n                provider,\r\n                dispose: () => {\r\n                    if (completions) {\r\n                        provider.freeInlineCompletions(completions);\r\n                    }\r\n                }\r\n            });\r\n        })));\r\n        const itemsByHash = new Map();\r\n        for (const result of results) {\r\n            const completions = result.completions;\r\n            if (completions) {\r\n                for (const item of completions.items.map(item => ({\r\n                    text: item.text,\r\n                    range: item.range ? Range.lift(item.range) : defaultReplaceRange,\r\n                    command: item.command,\r\n                    sourceProvider: result.provider,\r\n                    sourceInlineCompletions: completions,\r\n                    sourceInlineCompletion: item\r\n                }))) {\r\n                    if (item.range.startLineNumber !== item.range.endLineNumber) {\r\n                        // Ignore invalid ranges.\r\n                        continue;\r\n                    }\r\n                    itemsByHash.set(JSON.stringify({ text: item.text, range: item.range }), item);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            items: [...itemsByHash.values()],\r\n            dispose: () => {\r\n                for (const result of results) {\r\n                    result.dispose();\r\n                }\r\n            },\r\n        };\r\n    });\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Scanner {\r\n    constructor() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    static isDigitCharacter(ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    }\r\n    static isVariableCharacter(ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    }\r\n    text(value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    }\r\n    tokenText(token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    }\r\n    next() {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        let pos = this.pos;\r\n        let len = 0;\r\n        let ch = this.value.charCodeAt(pos);\r\n        let type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type, pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type, pos, len };\r\n    }\r\n}\r\nScanner._table = {\r\n    [36 /* DollarSign */]: 0 /* Dollar */,\r\n    [58 /* Colon */]: 1 /* Colon */,\r\n    [44 /* Comma */]: 2 /* Comma */,\r\n    [123 /* OpenCurlyBrace */]: 3 /* CurlyOpen */,\r\n    [125 /* CloseCurlyBrace */]: 4 /* CurlyClose */,\r\n    [92 /* Backslash */]: 5 /* Backslash */,\r\n    [47 /* Slash */]: 6 /* Forwardslash */,\r\n    [124 /* Pipe */]: 7 /* Pipe */,\r\n    [43 /* Plus */]: 11 /* Plus */,\r\n    [45 /* Dash */]: 12 /* Dash */,\r\n    [63 /* QuestionMark */]: 13 /* QuestionMark */,\r\n};\r\nexport class Marker {\r\n    constructor() {\r\n        this._children = [];\r\n    }\r\n    appendChild(child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    }\r\n    replace(child, others) {\r\n        const { parent } = child;\r\n        const idx = parent.children.indexOf(child);\r\n        const newChildren = parent.children.slice(0);\r\n        newChildren.splice(idx, 1, ...others);\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (const child of children) {\r\n                child.parent = parent;\r\n                _fixParent(child.children, child);\r\n            }\r\n        })(others, parent);\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get snippet() {\r\n        let candidate = this;\r\n        while (true) {\r\n            if (!candidate) {\r\n                return undefined;\r\n            }\r\n            if (candidate instanceof TextmateSnippet) {\r\n                return candidate;\r\n            }\r\n            candidate = candidate.parent;\r\n        }\r\n    }\r\n    toString() {\r\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\r\n    }\r\n    len() {\r\n        return 0;\r\n    }\r\n}\r\nexport class Text extends Marker {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    len() {\r\n        return this.value.length;\r\n    }\r\n    clone() {\r\n        return new Text(this.value);\r\n    }\r\n}\r\nexport class TransformableMarker extends Marker {\r\n}\r\nexport class Placeholder extends TransformableMarker {\r\n    constructor(index) {\r\n        super();\r\n        this.index = index;\r\n    }\r\n    static compareByIndex(a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    get isFinalTabstop() {\r\n        return this.index === 0;\r\n    }\r\n    get choice() {\r\n        return this._children.length === 1 && this._children[0] instanceof Choice\r\n            ? this._children[0]\r\n            : undefined;\r\n    }\r\n    clone() {\r\n        let ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class Choice extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.options = [];\r\n    }\r\n    appendChild(marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    }\r\n    toString() {\r\n        return this.options[0].value;\r\n    }\r\n    len() {\r\n        return this.options[0].len();\r\n    }\r\n    clone() {\r\n        let ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    }\r\n}\r\nexport class Transform extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.regexp = new RegExp('');\r\n    }\r\n    resolve(value) {\r\n        const _this = this;\r\n        let didMatch = false;\r\n        let ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    }\r\n    _replace(groups) {\r\n        let ret = '';\r\n        for (const marker of this._children) {\r\n            if (marker instanceof FormatString) {\r\n                let value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    toString() {\r\n        return '';\r\n    }\r\n    clone() {\r\n        let ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class FormatString extends Marker {\r\n    constructor(index, shorthandName, ifValue, elseValue) {\r\n        super();\r\n        this.index = index;\r\n        this.shorthandName = shorthandName;\r\n        this.ifValue = ifValue;\r\n        this.elseValue = elseValue;\r\n    }\r\n    resolve(value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (this.shorthandName === 'camelcase') {\r\n            return !value ? '' : this._toCamelCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    }\r\n    _toPascalCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(word => {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    }\r\n    _toCamelCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map((word, index) => {\r\n            if (index === 0) {\r\n                return word.toLowerCase();\r\n            }\r\n            else {\r\n                return word.charAt(0).toUpperCase()\r\n                    + word.substr(1).toLowerCase();\r\n            }\r\n        })\r\n            .join('');\r\n    }\r\n    clone() {\r\n        let ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    }\r\n}\r\nexport class Variable extends TransformableMarker {\r\n    constructor(name) {\r\n        super();\r\n        this.name = name;\r\n    }\r\n    resolve(resolver) {\r\n        let value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clone() {\r\n        const ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nfunction walk(marker, visitor) {\r\n    const stack = [...marker];\r\n    while (stack.length > 0) {\r\n        const marker = stack.shift();\r\n        const recurse = visitor(marker);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift(...marker.children);\r\n    }\r\n}\r\nexport class TextmateSnippet extends Marker {\r\n    get placeholderInfo() {\r\n        if (!this._placeholders) {\r\n            // fill in placeholders\r\n            let all = [];\r\n            let last;\r\n            this.walk(function (candidate) {\r\n                if (candidate instanceof Placeholder) {\r\n                    all.push(candidate);\r\n                    last = !last || last.index < candidate.index ? candidate : last;\r\n                }\r\n                return true;\r\n            });\r\n            this._placeholders = { all, last };\r\n        }\r\n        return this._placeholders;\r\n    }\r\n    get placeholders() {\r\n        const { all } = this.placeholderInfo;\r\n        return all;\r\n    }\r\n    offset(marker) {\r\n        let pos = 0;\r\n        let found = false;\r\n        this.walk(candidate => {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    }\r\n    fullLen(marker) {\r\n        let ret = 0;\r\n        walk([marker], marker => {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    }\r\n    enclosingPlaceholders(placeholder) {\r\n        let ret = [];\r\n        let { parent } = placeholder;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    }\r\n    resolveVariables(resolver) {\r\n        this.walk(candidate => {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    this._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    }\r\n    appendChild(child) {\r\n        this._placeholders = undefined;\r\n        return super.appendChild(child);\r\n    }\r\n    replace(child, others) {\r\n        this._placeholders = undefined;\r\n        return super.replace(child, others);\r\n    }\r\n    clone() {\r\n        let ret = new TextmateSnippet();\r\n        this._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n    walk(visitor) {\r\n        walk(this.children, visitor);\r\n    }\r\n}\r\nexport class SnippetParser {\r\n    constructor() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    static escape(value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    }\r\n    static guessNeedsClipboard(template) {\r\n        return /\\${?CLIPBOARD/.test(template);\r\n    }\r\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        const snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        const placeholderDefaultValues = new Map();\r\n        const incompletePlaceholders = [];\r\n        let placeholderCount = 0;\r\n        snippet.walk(marker => {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (const placeholder of incompletePlaceholders) {\r\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                const clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (const child of defaultValues) {\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    }\r\n    _accept(type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            let ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    }\r\n    _backTo(token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    }\r\n    _until(type) {\r\n        const start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                const nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    }\r\n    _parse(marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    }\r\n    // \\$, \\\\, \\} -> just text\r\n    _parseEscaped(marker) {\r\n        let value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // $foo -> variable, $1 -> tabstop\r\n    _parseTabstopOrVariableName(parent) {\r\n        let value;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    }\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    _parseComplexPlaceholder(parent) {\r\n        let index;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            const choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseChoiceElement(parent) {\r\n        const token = this._token;\r\n        const values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            let value;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    }\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    _parseComplexVariable(parent) {\r\n        let name;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseTransform(parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        let transform = new Transform();\r\n        let regexValue = '';\r\n        let regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    }\r\n    _parseFormatString(parent) {\r\n        const token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        let complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        let index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            let shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            let ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            let ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                let elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    }\r\n    _parseAnything(marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { URI } from '../../../base/common/uri.js';\r\nexport const WORKSPACE_EXTENSION = 'code-workspace';\r\nexport function isSingleFolderWorkspaceIdentifier(obj) {\r\n    const singleFolderIdentifier = obj;\r\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\r\n}\r\nexport function toWorkspaceIdentifier(workspace) {\r\n    // Multi root\r\n    if (workspace.configuration) {\r\n        return {\r\n            id: workspace.id,\r\n            configPath: workspace.configuration\r\n        };\r\n    }\r\n    // Single folder\r\n    if (workspace.folders.length === 1) {\r\n        return {\r\n            id: workspace.id,\r\n            uri: workspace.folders[0].uri\r\n        };\r\n    }\r\n    // Empty workspace\r\n    return undefined;\r\n}\r\n//#endregion\r\n","// prep-work\r\nconst _data = new Uint8Array(16);\r\nconst _hex = [];\r\nfor (let i = 0; i < 256; i++) {\r\n    _hex.push(i.toString(16).padStart(2, '0'));\r\n}\r\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\r\nlet _fillRandomValues;\r\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\r\n    // browser\r\n    _fillRandomValues = crypto.getRandomValues.bind(crypto);\r\n}\r\nelse {\r\n    _fillRandomValues = function (bucket) {\r\n        for (let i = 0; i < bucket.length; i++) {\r\n            bucket[i] = Math.floor(Math.random() * 256);\r\n        }\r\n        return bucket;\r\n    };\r\n}\r\nexport function generateUuid() {\r\n    // get data\r\n    _fillRandomValues(_data);\r\n    // set version bits\r\n    _data[6] = (_data[6] & 0x0f) | 0x40;\r\n    _data[8] = (_data[8] & 0x3f) | 0x80;\r\n    // print as string\r\n    let i = 0;\r\n    let result = '';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    return result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport * as path from '../../../base/common/path.js';\r\nimport { dirname } from '../../../base/common/resources.js';\r\nimport { Text } from './snippetParser.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { getLeadingWhitespace, commonPrefixLength, isFalsyOrWhitespace, splitLines } from '../../../base/common/strings.js';\r\nimport { toWorkspaceIdentifier, WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier } from '../../../platform/workspaces/common/workspaces.js';\r\nimport { normalizeDriveLetter } from '../../../base/common/labels.js';\r\nimport { generateUuid } from '../../../base/common/uuid.js';\r\nexport class CompositeSnippetVariableResolver {\r\n    constructor(_delegates) {\r\n        this._delegates = _delegates;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        for (const delegate of this._delegates) {\r\n            let value = delegate.resolve(variable);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class SelectionBasedVariableResolver {\r\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._overtypingCapturer = _overtypingCapturer;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\r\n            let value = this._model.getValueInRange(this._selection) || undefined;\r\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\r\n            // If there was no selected text, try to get last overtyped text\r\n            if (!value && this._overtypingCapturer) {\r\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\r\n                if (info) {\r\n                    value = info.value;\r\n                    isMultiline = info.multiline;\r\n                }\r\n            }\r\n            if (value && isMultiline && variable.snippet) {\r\n                // Selection is a multiline string which we indentation we now\r\n                // need to adjust. We compare the indentation of this variable\r\n                // with the indentation at the editor position and add potential\r\n                // extra indentation to the value\r\n                const line = this._model.getLineContent(this._selection.startLineNumber);\r\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\r\n                let varLeadingWhitespace = lineLeadingWhitespace;\r\n                variable.snippet.walk(marker => {\r\n                    if (marker === variable) {\r\n                        return false;\r\n                    }\r\n                    if (marker instanceof Text) {\r\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\r\n                    }\r\n                    return true;\r\n                });\r\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\r\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\r\n            }\r\n            return value;\r\n        }\r\n        else if (name === 'TM_CURRENT_LINE') {\r\n            return this._model.getLineContent(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'TM_CURRENT_WORD') {\r\n            const info = this._model.getWordAtPosition({\r\n                lineNumber: this._selection.positionLineNumber,\r\n                column: this._selection.positionColumn\r\n            });\r\n            return info && info.word || undefined;\r\n        }\r\n        else if (name === 'TM_LINE_INDEX') {\r\n            return String(this._selection.positionLineNumber - 1);\r\n        }\r\n        else if (name === 'TM_LINE_NUMBER') {\r\n            return String(this._selection.positionLineNumber);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ModelBasedVariableResolver {\r\n    constructor(_labelService, _model) {\r\n        this._labelService = _labelService;\r\n        this._model = _model;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'TM_FILENAME') {\r\n            return path.basename(this._model.uri.fsPath);\r\n        }\r\n        else if (name === 'TM_FILENAME_BASE') {\r\n            const name = path.basename(this._model.uri.fsPath);\r\n            const idx = name.lastIndexOf('.');\r\n            if (idx <= 0) {\r\n                return name;\r\n            }\r\n            else {\r\n                return name.slice(0, idx);\r\n            }\r\n        }\r\n        else if (name === 'TM_DIRECTORY' && this._labelService) {\r\n            if (path.dirname(this._model.uri.fsPath) === '.') {\r\n                return '';\r\n            }\r\n            return this._labelService.getUriLabel(dirname(this._model.uri));\r\n        }\r\n        else if (name === 'TM_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri);\r\n        }\r\n        else if (name === 'RELATIVE_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ClipboardBasedVariableResolver {\r\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\r\n        this._readClipboardText = _readClipboardText;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._selectionCount = _selectionCount;\r\n        this._spread = _spread;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (variable.name !== 'CLIPBOARD') {\r\n            return undefined;\r\n        }\r\n        const clipboardText = this._readClipboardText();\r\n        if (!clipboardText) {\r\n            return undefined;\r\n        }\r\n        // `spread` is assigning each cursor a line of the clipboard\r\n        // text whenever there the line count equals the cursor count\r\n        // and when enabled\r\n        if (this._spread) {\r\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\r\n            if (lines.length === this._selectionCount) {\r\n                return lines[this._selectionIdx];\r\n            }\r\n        }\r\n        return clipboardText;\r\n    }\r\n}\r\nexport class CommentBasedVariableResolver {\r\n    constructor(_model, _selection) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(langId);\r\n        if (!config) {\r\n            return undefined;\r\n        }\r\n        if (name === 'LINE_COMMENT') {\r\n            return config.lineCommentToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_START') {\r\n            return config.blockCommentStartToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_END') {\r\n            return config.blockCommentEndToken || undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class TimeBasedVariableResolver {\r\n    constructor() {\r\n        this._date = new Date();\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'CURRENT_YEAR') {\r\n            return String(this._date.getFullYear());\r\n        }\r\n        else if (name === 'CURRENT_YEAR_SHORT') {\r\n            return String(this._date.getFullYear()).slice(-2);\r\n        }\r\n        else if (name === 'CURRENT_MONTH') {\r\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DATE') {\r\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_HOUR') {\r\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_MINUTE') {\r\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_SECOND') {\r\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME') {\r\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME') {\r\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_SECONDS_UNIX') {\r\n            return String(Math.floor(this._date.getTime() / 1000));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\r\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\r\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\r\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\r\nexport class WorkspaceBasedVariableResolver {\r\n    constructor(_workspaceService) {\r\n        this._workspaceService = _workspaceService;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (!this._workspaceService) {\r\n            return undefined;\r\n        }\r\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\r\n        if (!workspaceIdentifier) {\r\n            return undefined;\r\n        }\r\n        if (variable.name === 'WORKSPACE_NAME') {\r\n            return this._resolveWorkspaceName(workspaceIdentifier);\r\n        }\r\n        else if (variable.name === 'WORKSPACE_FOLDER') {\r\n            return this._resoveWorkspacePath(workspaceIdentifier);\r\n        }\r\n        return undefined;\r\n    }\r\n    _resolveWorkspaceName(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return path.basename(workspaceIdentifier.uri.path);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\r\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\r\n        }\r\n        return filename;\r\n    }\r\n    _resoveWorkspacePath(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        let folderpath = workspaceIdentifier.configPath.fsPath;\r\n        if (folderpath.endsWith(filename)) {\r\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\r\n        }\r\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\r\n    }\r\n}\r\nexport class RandomBasedVariableResolver {\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'RANDOM') {\r\n            return Math.random().toString().slice(-6);\r\n        }\r\n        else if (name === 'RANDOM_HEX') {\r\n            return Math.random().toString(16).slice(-6);\r\n        }\r\n        else if (name === 'UUID') {\r\n            return generateUuid();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { groupBy } from '../../../base/common/arrays.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport './snippetSession.css';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { optional } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Choice, Placeholder, SnippetParser, Text } from './snippetParser.js';\r\nimport { ClipboardBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, CommentBasedVariableResolver, WorkspaceBasedVariableResolver, RandomBasedVariableResolver } from './snippetVariables.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport * as colors from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nregisterThemingParticipant((theme, collector) => {\r\n    function getColorGraceful(name) {\r\n        const color = theme.getColor(name);\r\n        return color ? color.toString() : 'transparent';\r\n    }\r\n    collector.addRule(`.monaco-editor .snippet-placeholder { background-color: ${getColorGraceful(colors.snippetTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetTabstopHighlightBorder)}; }`);\r\n    collector.addRule(`.monaco-editor .finish-snippet-placeholder { background-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBorder)}; }`);\r\n});\r\nexport class OneSnippet {\r\n    constructor(_editor, _snippet, _offset, _snippetLineLeadingWhitespace) {\r\n        this._editor = _editor;\r\n        this._snippet = _snippet;\r\n        this._offset = _offset;\r\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\r\n        this._nestingLevel = 1;\r\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\r\n        this._placeholderGroupsIdx = -1;\r\n    }\r\n    dispose() {\r\n        if (this._placeholderDecorations) {\r\n            this._editor.deltaDecorations([...this._placeholderDecorations.values()], []);\r\n        }\r\n        this._placeholderGroups.length = 0;\r\n    }\r\n    _initDecorations() {\r\n        if (this._placeholderDecorations) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        this._placeholderDecorations = new Map();\r\n        const model = this._editor.getModel();\r\n        this._editor.changeDecorations(accessor => {\r\n            // create a decoration for each placeholder\r\n            for (const placeholder of this._snippet.placeholders) {\r\n                const placeholderOffset = this._snippet.offset(placeholder);\r\n                const placeholderLen = this._snippet.fullLen(placeholder);\r\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\r\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\r\n                const handle = accessor.addDecoration(range, options);\r\n                this._placeholderDecorations.set(placeholder, handle);\r\n            }\r\n        });\r\n    }\r\n    move(fwd) {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this._initDecorations();\r\n        // Transform placeholder text if necessary\r\n        if (this._placeholderGroupsIdx >= 0) {\r\n            let operations = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                // Check if the placeholder has a transformation\r\n                if (placeholder.transform) {\r\n                    const id = this._placeholderDecorations.get(placeholder);\r\n                    const range = this._editor.getModel().getDecorationRange(id);\r\n                    const currentValue = this._editor.getModel().getValueInRange(range);\r\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\r\n                    // fix indentation for transformed lines\r\n                    for (let i = 1; i < transformedValueLines.length; i++) {\r\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\r\n                    }\r\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\r\n                }\r\n            }\r\n            if (operations.length > 0) {\r\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\r\n            }\r\n        }\r\n        let couldSkipThisPlaceholder = false;\r\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\r\n            this._placeholderGroupsIdx += 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\r\n            this._placeholderGroupsIdx -= 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else {\r\n            // the selection of the current placeholder might\r\n            // not acurate any more -> simply restore it\r\n        }\r\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\r\n            const activePlaceholders = new Set();\r\n            // change stickiness to always grow when typing at its edges\r\n            // because these decorations represent the currently active\r\n            // tabstop.\r\n            // Special case #1: reaching the final tabstop\r\n            // Special case #2: placeholders enclosing active placeholders\r\n            const selections = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\r\n                // consider to skip this placeholder index when the decoration\r\n                // range is empty but when the placeholder wasn't. that's a strong\r\n                // hint that the placeholder has been deleted. (all placeholder must match this)\r\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\r\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                activePlaceholders.add(placeholder);\r\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\r\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\r\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                    activePlaceholders.add(enclosingPlaceholder);\r\n                }\r\n            }\r\n            // change stickness to never grow when typing at its edges\r\n            // so that in-active tabstops never grow\r\n            for (const [placeholder, id] of this._placeholderDecorations) {\r\n                if (!activePlaceholders.has(placeholder)) {\r\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\r\n                }\r\n            }\r\n            return selections;\r\n        });\r\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\r\n    }\r\n    _hasPlaceholderBeenCollapsed(placeholder) {\r\n        // A placeholder is empty when it wasn't empty when authored but\r\n        // when its tracking decoration is empty. This also applies to all\r\n        // potential parent placeholders\r\n        let marker = placeholder;\r\n        while (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                const id = this._placeholderDecorations.get(marker);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (range.isEmpty() && marker.toString().length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            marker = marker.parent;\r\n        }\r\n        return false;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippet.placeholders.length > 0;\r\n    }\r\n    computePossibleSelections() {\r\n        const result = new Map();\r\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\r\n            let ranges;\r\n            for (const placeholder of placeholdersWithEqualIndex) {\r\n                if (placeholder.isFinalTabstop) {\r\n                    // ignore those\r\n                    break;\r\n                }\r\n                if (!ranges) {\r\n                    ranges = [];\r\n                    result.set(placeholder.index, ranges);\r\n                }\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (!range) {\r\n                    // one of the placeholder lost its decoration and\r\n                    // therefore we bail out and pretend the placeholder\r\n                    // (with its mirrors) doesn't exist anymore.\r\n                    result.delete(placeholder.index);\r\n                    break;\r\n                }\r\n                ranges.push(range);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get choice() {\r\n        return this._placeholderGroups[this._placeholderGroupsIdx][0].choice;\r\n    }\r\n    merge(others) {\r\n        const model = this._editor.getModel();\r\n        this._nestingLevel *= 10;\r\n        this._editor.changeDecorations(accessor => {\r\n            // For each active placeholder take one snippet and merge it\r\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\r\n            // everything is sorted by editor selection we can simply remove\r\n            // elements from the beginning of the array\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const nested = others.shift();\r\n                console.assert(!nested._placeholderDecorations);\r\n                // Massage placeholder-indicies of the nested snippet to be\r\n                // sorted right after the insertion point. This ensures we move\r\n                // through the placeholders in the correct order\r\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\r\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\r\n                    if (nestedPlaceholder.isFinalTabstop) {\r\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\r\n                    }\r\n                    else {\r\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\r\n                    }\r\n                }\r\n                this._snippet.replace(placeholder, nested._snippet.children);\r\n                // Remove the placeholder at which position are inserting\r\n                // the snippet and also remove its decoration.\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                accessor.removeDecoration(id);\r\n                this._placeholderDecorations.delete(placeholder);\r\n                // For each *new* placeholder we create decoration to monitor\r\n                // how and if it grows/shrinks.\r\n                for (const placeholder of nested._snippet.placeholders) {\r\n                    const placeholderOffset = nested._snippet.offset(placeholder);\r\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\r\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\r\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\r\n                    this._placeholderDecorations.set(placeholder, handle);\r\n                }\r\n            }\r\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\r\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\r\n        });\r\n    }\r\n}\r\nOneSnippet._decor = {\r\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n};\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nexport class SnippetSession {\r\n    constructor(editor, template, options = _defaultOptions) {\r\n        this._templateMerges = [];\r\n        this._snippets = [];\r\n        this._editor = editor;\r\n        this._template = template;\r\n        this._options = options;\r\n    }\r\n    static adjustWhitespace(model, position, snippet, adjustIndentation, adjustNewlines) {\r\n        const line = model.getLineContent(position.lineNumber);\r\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\r\n        // the snippet as inserted\r\n        let snippetTextString;\r\n        snippet.walk(marker => {\r\n            // all text elements that are not inside choice\r\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\r\n                return true;\r\n            }\r\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\r\n            if (adjustIndentation) {\r\n                // adjust indentation of snippet test\r\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\r\n                // -all N+1 lines get extra-indented and normalized\r\n                // -the text start get extra-indented and normalized when following a linebreak\r\n                const offset = snippet.offset(marker);\r\n                if (offset === 0) {\r\n                    // snippet start\r\n                    lines[0] = model.normalizeIndentation(lines[0]);\r\n                }\r\n                else {\r\n                    // check if text start is after a linebreak\r\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\r\n                    let prevChar = snippetTextString.charCodeAt(offset - 1);\r\n                    if (prevChar === 10 /* LineFeed */ || prevChar === 13 /* CarriageReturn */) {\r\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\r\n                    }\r\n                }\r\n                for (let i = 1; i < lines.length; i++) {\r\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\r\n                }\r\n            }\r\n            const newValue = lines.join(model.getEOL());\r\n            if (newValue !== marker.value) {\r\n                marker.parent.replace(marker, [new Text(newValue)]);\r\n                snippetTextString = undefined;\r\n            }\r\n            return true;\r\n        });\r\n        return lineLeadingWhitespace;\r\n    }\r\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\r\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\r\n            // overwrite[Before|After] is compute using the position, not the whole\r\n            // selection. therefore we adjust the selection around that position\r\n            const { positionLineNumber, positionColumn } = selection;\r\n            const positionColumnBefore = positionColumn - overwriteBefore;\r\n            const positionColumnAfter = positionColumn + overwriteAfter;\r\n            const range = model.validateRange({\r\n                startLineNumber: positionLineNumber,\r\n                startColumn: positionColumnBefore,\r\n                endLineNumber: positionLineNumber,\r\n                endColumn: positionColumnAfter\r\n            });\r\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\r\n        }\r\n        return selection;\r\n    }\r\n    static createEditsAndSnippets(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer) {\r\n        const edits = [];\r\n        const snippets = [];\r\n        if (!editor.hasModel()) {\r\n            return { edits, snippets };\r\n        }\r\n        const model = editor.getModel();\r\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService, optional));\r\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService, optional), model));\r\n        const readClipboardText = () => clipboardText;\r\n        let delta = 0;\r\n        // know what text the overwrite[Before|After] extensions\r\n        // of the primary curser have selected because only when\r\n        // secondary selections extend to the same text we can grow them\r\n        let firstBeforeText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\r\n        let firstAfterText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\r\n        // remember the first non-whitespace column to decide if\r\n        // `keepWhitespace` should be overruled for secondary selections\r\n        let firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\r\n        // sort selections by their start position but remeber\r\n        // the original index. that allows you to create correct\r\n        // offset-based selection logic without changing the\r\n        // primary selection\r\n        const indexedSelections = editor.getSelections()\r\n            .map((selection, idx) => ({ selection, idx }))\r\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        for (const { selection, idx } of indexedSelections) {\r\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\r\n            // compare if this matches the extensions of the primary selection\r\n            let extensionBefore = SnippetSession.adjustSelection(model, selection, overwriteBefore, 0);\r\n            let extensionAfter = SnippetSession.adjustSelection(model, selection, 0, overwriteAfter);\r\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\r\n                extensionBefore = selection;\r\n            }\r\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\r\n                extensionAfter = selection;\r\n            }\r\n            // merge the before and after selection into one\r\n            const snippetSelection = selection\r\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\r\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\r\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\r\n            // adjust the template string to match the indentation and\r\n            // whitespace rules of this insert location (can be different for each cursor)\r\n            // happens when being asked for (default) or when this is a secondary\r\n            // cursor and the leading whitespace is different\r\n            const start = snippetSelection.getStartPosition();\r\n            const snippetLineLeadingWhitespace = SnippetSession.adjustWhitespace(model, start, snippet, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), true);\r\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\r\n                modelBasedVariableResolver,\r\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(70 /* multiCursorPaste */) === 'spread'),\r\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\r\n                new CommentBasedVariableResolver(model, selection),\r\n                new TimeBasedVariableResolver,\r\n                new WorkspaceBasedVariableResolver(workspaceService),\r\n                new RandomBasedVariableResolver,\r\n            ]));\r\n            const offset = model.getOffsetAt(start) + delta;\r\n            delta += snippet.toString().length - model.getValueLengthInRange(snippetSelection);\r\n            // store snippets with the index of their originating selection.\r\n            // that ensures the primiary cursor stays primary despite not being\r\n            // the one with lowest start position\r\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\r\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\r\n            snippets[idx] = new OneSnippet(editor, snippet, offset, snippetLineLeadingWhitespace);\r\n        }\r\n        return { edits, snippets };\r\n    }\r\n    dispose() {\r\n        dispose(this._snippets);\r\n    }\r\n    _logInfo() {\r\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\r\n    }\r\n    insert() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // make insert edit and start with first selections\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer);\r\n        this._snippets = snippets;\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(true);\r\n            }\r\n            else {\r\n                return undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\r\n            }\r\n        });\r\n        this._editor.revealRange(this._editor.getSelections()[0]);\r\n    }\r\n    merge(template, options = _defaultOptions) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer);\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            for (const snippet of this._snippets) {\r\n                snippet.merge(snippets);\r\n            }\r\n            console.assert(snippets.length === 0);\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(undefined);\r\n            }\r\n            else {\r\n                return (undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition())));\r\n            }\r\n        });\r\n    }\r\n    next() {\r\n        const newSelections = this._move(true);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    prev() {\r\n        const newSelections = this._move(false);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    _move(fwd) {\r\n        const selections = [];\r\n        for (const snippet of this._snippets) {\r\n            const oneSelection = snippet.move(fwd);\r\n            selections.push(...oneSelection);\r\n        }\r\n        return selections;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._snippets[0].isAtFirstPlaceholder;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._snippets[0].isAtLastPlaceholder;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippets[0].hasPlaceholder;\r\n    }\r\n    get choice() {\r\n        return this._snippets[0].choice;\r\n    }\r\n    isSelectionWithinPlaceholders() {\r\n        if (!this.hasPlaceholder) {\r\n            return false;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length < this._snippets.length) {\r\n            // this means we started snippet mode with N\r\n            // selections and have M (N > M) selections.\r\n            // So one snippet is without selection -> cancel\r\n            return false;\r\n        }\r\n        let allPossibleSelections = new Map();\r\n        for (const snippet of this._snippets) {\r\n            const possibleSelections = snippet.computePossibleSelections();\r\n            // for the first snippet find the placeholder (and its ranges)\r\n            // that contain at least one selection. for all remaining snippets\r\n            // the same placeholder (and their ranges) must be used.\r\n            if (allPossibleSelections.size === 0) {\r\n                for (const [index, ranges] of possibleSelections) {\r\n                    ranges.sort(Range.compareRangesUsingStarts);\r\n                    for (const selection of selections) {\r\n                        if (ranges[0].containsRange(selection)) {\r\n                            allPossibleSelections.set(index, []);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (allPossibleSelections.size === 0) {\r\n                // return false if we couldn't associate a selection to\r\n                // this (the first) snippet\r\n                return false;\r\n            }\r\n            // add selections from 'this' snippet so that we know all\r\n            // selections for this placeholder\r\n            allPossibleSelections.forEach((array, index) => {\r\n                array.push(...possibleSelections.get(index));\r\n            });\r\n        }\r\n        // sort selections (and later placeholder-ranges). then walk both\r\n        // arrays and make sure the placeholder-ranges contain the corresponding\r\n        // selection\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        for (let [index, ranges] of allPossibleSelections) {\r\n            if (ranges.length !== selections.length) {\r\n                allPossibleSelections.delete(index);\r\n                continue;\r\n            }\r\n            ranges.sort(Range.compareRangesUsingStarts);\r\n            for (let i = 0; i < ranges.length; i++) {\r\n                if (!ranges[i].containsRange(selections[i])) {\r\n                    allPossibleSelections.delete(index);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // from all possible selections we have deleted those\r\n        // that don't match with the current selection. if we don't\r\n        // have any left, we don't have a selection anymore\r\n        return allPossibleSelections.size > 0;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError, canceled, isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { FuzzyScore } from '../../../base/common/filters.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { localize } from '../../../nls.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\r\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\r\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\r\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\r\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\r\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\r\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\r\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\r\n};\r\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\r\nexport class CompletionItem {\r\n    constructor(position, completion, container, provider) {\r\n        this.position = position;\r\n        this.completion = completion;\r\n        this.container = container;\r\n        this.provider = provider;\r\n        // validation\r\n        this.isInvalid = false;\r\n        // sorting, filtering\r\n        this.score = FuzzyScore.Default;\r\n        this.distance = 0;\r\n        this.textLabel = typeof completion.label === 'string'\r\n            ? completion.label\r\n            : completion.label.label;\r\n        // ensure lower-variants (perf)\r\n        this.labelLow = this.textLabel.toLowerCase();\r\n        // validate label\r\n        this.isInvalid = !this.textLabel;\r\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\r\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\r\n        // normalize ranges\r\n        if (Range.isIRange(completion.range)) {\r\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            // validate range\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\r\n        }\r\n        else {\r\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\r\n            // validate ranges\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\r\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\r\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\r\n        }\r\n        // create the suggestion resolver\r\n        if (typeof provider.resolveCompletionItem !== 'function') {\r\n            this._resolveCache = Promise.resolve();\r\n            this._isResolved = true;\r\n        }\r\n    }\r\n    // ---- resolving\r\n    get isResolved() {\r\n        return !!this._isResolved;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._resolveCache) {\r\n                const sub = token.onCancellationRequested(() => {\r\n                    this._resolveCache = undefined;\r\n                    this._isResolved = false;\r\n                });\r\n                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\r\n                    Object.assign(this.completion, value);\r\n                    this._isResolved = true;\r\n                    sub.dispose();\r\n                }, err => {\r\n                    if (isPromiseCanceledError(err)) {\r\n                        // the IPC queue will reject the request with the\r\n                        // cancellation error -> reset cached\r\n                        this._resolveCache = undefined;\r\n                        this._isResolved = false;\r\n                    }\r\n                });\r\n            }\r\n            return this._resolveCache;\r\n        });\r\n    }\r\n}\r\nexport class CompletionOptions {\r\n    constructor(snippetSortOrder = 2 /* Bottom */, kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true) {\r\n        this.snippetSortOrder = snippetSortOrder;\r\n        this.kindFilter = kindFilter;\r\n        this.providerFilter = providerFilter;\r\n        this.showDeprecated = showDeprecated;\r\n    }\r\n}\r\nCompletionOptions.default = new CompletionOptions();\r\nlet _snippetSuggestSupport;\r\nexport function getSnippetSuggestSupport() {\r\n    return _snippetSuggestSupport;\r\n}\r\nexport class CompletionItemModel {\r\n    constructor(items, needsClipboard, durations, disposable) {\r\n        this.items = items;\r\n        this.needsClipboard = needsClipboard;\r\n        this.durations = durations;\r\n        this.disposable = disposable;\r\n    }\r\n}\r\nexport function provideSuggestionItems(model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* Invoke */ }, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const sw = new StopWatch(true);\r\n        position = position.clone();\r\n        const word = model.getWordAtPosition(position);\r\n        const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\r\n        const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\r\n        const result = [];\r\n        const disposables = new DisposableStore();\r\n        const durations = [];\r\n        let needsClipboard = false;\r\n        const onCompletionList = (provider, container, sw) => {\r\n            var _a, _b, _c;\r\n            if (!container) {\r\n                return;\r\n            }\r\n            for (let suggestion of container.suggestions) {\r\n                if (!options.kindFilter.has(suggestion.kind)) {\r\n                    // skip if not showing deprecated suggestions\r\n                    if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* Deprecated */))) {\r\n                        continue;\r\n                    }\r\n                    // fill in default range when missing\r\n                    if (!suggestion.range) {\r\n                        suggestion.range = defaultRange;\r\n                    }\r\n                    // fill in default sortText when missing\r\n                    if (!suggestion.sortText) {\r\n                        suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\r\n                    }\r\n                    if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n                        needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\r\n                    }\r\n                    result.push(new CompletionItem(position, suggestion, container, provider));\r\n                }\r\n            }\r\n            if (isDisposable(container)) {\r\n                disposables.add(container);\r\n            }\r\n            durations.push({\r\n                providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\r\n            });\r\n        };\r\n        // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\r\n        // do so - no snippet filter, no special-providers-only request\r\n        const snippetCompletions = (() => __awaiter(this, void 0, void 0, function* () {\r\n            if (!_snippetSuggestSupport || options.kindFilter.has(27 /* Snippet */)) {\r\n                return;\r\n            }\r\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\r\n                return;\r\n            }\r\n            const sw = new StopWatch(true);\r\n            const list = yield _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\r\n            onCompletionList(_snippetSuggestSupport, list, sw);\r\n        }))();\r\n        // add suggestions from contributed providers - providers are ordered in groups of\r\n        // equal score and once a group produces a result the process stops\r\n        // get provider groups, always add snippet suggestion provider\r\n        for (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\r\n            // for each support in the group ask for suggestions\r\n            let lenBefore = result.length;\r\n            yield Promise.all(providerGroup.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n                if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\r\n                    return;\r\n                }\r\n                try {\r\n                    const sw = new StopWatch(true);\r\n                    const list = yield provider.provideCompletionItems(model, position, context, token);\r\n                    onCompletionList(provider, list, sw);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n            })));\r\n            if (lenBefore !== result.length || token.isCancellationRequested) {\r\n                break;\r\n            }\r\n        }\r\n        yield snippetCompletions;\r\n        if (token.isCancellationRequested) {\r\n            disposables.dispose();\r\n            return Promise.reject(canceled());\r\n        }\r\n        return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\r\n    });\r\n}\r\nfunction defaultComparator(a, b) {\r\n    // check with 'sortText'\r\n    if (a.sortTextLow && b.sortTextLow) {\r\n        if (a.sortTextLow < b.sortTextLow) {\r\n            return -1;\r\n        }\r\n        else if (a.sortTextLow > b.sortTextLow) {\r\n            return 1;\r\n        }\r\n    }\r\n    // check with 'label'\r\n    if (a.completion.label < b.completion.label) {\r\n        return -1;\r\n    }\r\n    else if (a.completion.label > b.completion.label) {\r\n        return 1;\r\n    }\r\n    // check with 'type'\r\n    return a.completion.kind - b.completion.kind;\r\n}\r\nfunction snippetUpComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nfunction snippetDownComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nconst _snippetComparators = new Map();\r\n_snippetComparators.set(0 /* Top */, snippetUpComparator);\r\n_snippetComparators.set(2 /* Bottom */, snippetDownComparator);\r\n_snippetComparators.set(1 /* Inline */, defaultComparator);\r\nexport function getSuggestionComparator(snippetConfig) {\r\n    return _snippetComparators.get(snippetConfig);\r\n}\r\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = {\r\n            incomplete: false,\r\n            suggestions: []\r\n        };\r\n        const resolving = [];\r\n        const completions = yield provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, { triggerCharacter, triggerKind: triggerCharacter ? 1 /* TriggerCharacter */ : 0 /* Invoke */ });\r\n        for (const item of completions.items) {\r\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\r\n                resolving.push(item.resolve(CancellationToken.None));\r\n            }\r\n            result.incomplete = result.incomplete || item.container.incomplete;\r\n            result.suggestions.push(item.completion);\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return result;\r\n        }\r\n        finally {\r\n            setTimeout(() => completions.disposable.dispose(), 100);\r\n        }\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\nconst _provider = new class {\r\n    constructor() {\r\n        this.onlyOnceSuggestions = [];\r\n    }\r\n    provideCompletionItems() {\r\n        let suggestions = this.onlyOnceSuggestions.slice(0);\r\n        let result = { suggestions };\r\n        this.onlyOnceSuggestions.length = 0;\r\n        return result;\r\n    }\r\n};\r\nmodes.CompletionProviderRegistry.register('*', _provider);\r\nexport function showSimpleSuggestions(editor, suggestions) {\r\n    setTimeout(() => {\r\n        _provider.onlyOnceSuggestions.push(...suggestions);\r\n        editor.getContribution('editor.contrib.suggestController').triggerSuggest(new Set().add(_provider));\r\n    }, 0);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nimport { localize } from '../../../nls.js';\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetController2 = class SnippetController2 {\r\n    constructor(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._snippetListener.dispose();\r\n    }\r\n    insert(template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    }\r\n    _doInsert(template, opts) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\r\n    }\r\n    _updateState() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    }\r\n    _handleChoice() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        const { choice } = this._session;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(s => Selection.fromPositions(s.getStartPosition())));\r\n            const [first] = choice.options;\r\n            showSimpleSuggestions(this._editor, choice.options.map((option, i) => {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: 'a'.repeat(i + 1),\r\n                    range: Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))\r\n                };\r\n            }));\r\n        }\r\n    }\r\n    finish() {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    }\r\n    cancel(resetSelection = false) {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    }\r\n    prev() {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    }\r\n    next() {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    }\r\n    isInSnippet() {\r\n        return Boolean(this._inSnippet.get());\r\n    }\r\n};\r\nSnippetController2.ID = 'snippetController2';\r\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\r\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\r\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\r\nSnippetController2 = __decorate([\r\n    __param(1, ILogService),\r\n    __param(2, IContextKeyService)\r\n], SnippetController2);\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: ctrl => ctrl.next(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: ctrl => ctrl.prev(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.cancel(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.finish(),\r\n    // kbOpts: {\r\n    // \tweight: KeybindingWeight.EditorContrib + 30,\r\n    // \tkbExpr: EditorContextKeys.textFocus,\r\n    // \tprimary: KeyCode.Enter,\r\n    // }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { LRUCache, TernarySearchTree } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { completionKindFromString } from '../../common/modes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nexport class Memory {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        let topScore = items[0].score[0];\r\n        for (let i = 0; i < items.length; i++) {\r\n            const { score, completion: suggestion } = items[i];\r\n            if (score[0] !== topScore) {\r\n                // stop when leaving the group of top matches\r\n                break;\r\n            }\r\n            if (suggestion.preselect) {\r\n                // stop when seeing an auto-select-item\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport class NoMemory extends Memory {\r\n    constructor() {\r\n        super('first');\r\n    }\r\n    memorize(model, pos, item) {\r\n        // no-op\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    fromJSON() {\r\n        //\r\n    }\r\n}\r\nexport class LRUMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsed');\r\n        this._cache = new LRUCache(300, 0.66);\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const key = `${model.getLanguageIdentifier().language}/${item.textLabel}`;\r\n        this._cache.set(key, {\r\n            touch: this._seq++,\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\r\n        if (/\\s$/.test(lineSuffix)) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let topScore = items[0].score[0];\r\n        let indexPreselect = -1;\r\n        let indexRecency = -1;\r\n        let seq = -1;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].score[0] !== topScore) {\r\n                // consider only top items\r\n                break;\r\n            }\r\n            const key = `${model.getLanguageIdentifier().language}/${items[i].textLabel}`;\r\n            const item = this._cache.peek(key);\r\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\r\n                seq = item.touch;\r\n                indexRecency = i;\r\n            }\r\n            if (items[i].completion.preselect && indexPreselect === -1) {\r\n                // stop when seeing an auto-select-item\r\n                return indexPreselect = i;\r\n            }\r\n        }\r\n        if (indexRecency !== -1) {\r\n            return indexRecency;\r\n        }\r\n        else if (indexPreselect !== -1) {\r\n            return indexPreselect;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return this._cache.toJSON();\r\n    }\r\n    fromJSON(data) {\r\n        this._cache.clear();\r\n        let seq = 0;\r\n        for (const [key, value] of data) {\r\n            value.touch = seq;\r\n            value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n            this._cache.set(key, value);\r\n        }\r\n        this._seq = this._cache.size;\r\n    }\r\n}\r\nexport class PrefixMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsedByPrefix');\r\n        this._trie = TernarySearchTree.forStrings();\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const { word } = model.getWordUntilPosition(pos);\r\n        const key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        this._trie.set(key, {\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText,\r\n            touch: this._seq++\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        let { word } = model.getWordUntilPosition(pos);\r\n        if (!word) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        let item = this._trie.get(key);\r\n        if (!item) {\r\n            item = this._trie.findSubstr(key);\r\n        }\r\n        if (item) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                let { kind, insertText } = items[i].completion;\r\n                if (kind === item.type && insertText === item.insertText) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return super.select(model, pos, items);\r\n    }\r\n    toJSON() {\r\n        let entries = [];\r\n        this._trie.forEach((value, key) => entries.push([key, value]));\r\n        // sort by last recently used (touch), then\r\n        // take the top 200 item and normalize their\r\n        // touch\r\n        entries\r\n            .sort((a, b) => -(a[1].touch - b[1].touch))\r\n            .forEach((value, i) => value[1].touch = i);\r\n        return entries.slice(0, 200);\r\n    }\r\n    fromJSON(data) {\r\n        this._trie.clear();\r\n        if (data.length > 0) {\r\n            this._seq = data[0][1].touch + 1;\r\n            for (const [key, value] of data) {\r\n                value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n                this._trie.set(key, value);\r\n            }\r\n        }\r\n    }\r\n}\r\nlet SuggestMemoryService = class SuggestMemoryService {\r\n    constructor(_storageService, _modeService, _configService) {\r\n        this._storageService = _storageService;\r\n        this._modeService = _modeService;\r\n        this._configService = _configService;\r\n        this._disposables = new DisposableStore();\r\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\r\n        this._disposables.add(_storageService.onWillSaveState(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                this._saveState();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._persistSoon.dispose();\r\n    }\r\n    memorize(model, pos, item) {\r\n        this._withStrategy(model, pos).memorize(model, pos, item);\r\n        this._persistSoon.schedule();\r\n    }\r\n    select(model, pos, items) {\r\n        return this._withStrategy(model, pos).select(model, pos, items);\r\n    }\r\n    _withStrategy(model, pos) {\r\n        var _a, _b;\r\n        const mode = this._configService.getValue('editor.suggestSelection', {\r\n            overrideIdentifier: (_a = this._modeService.getLanguageIdentifier(model.getLanguageIdAtPosition(pos.lineNumber, pos.column))) === null || _a === void 0 ? void 0 : _a.language,\r\n            resource: model.uri\r\n        });\r\n        if (((_b = this._strategy) === null || _b === void 0 ? void 0 : _b.name) !== mode) {\r\n            this._saveState();\r\n            const ctor = SuggestMemoryService._strategyCtors.get(mode) || NoMemory;\r\n            this._strategy = new ctor();\r\n            try {\r\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n                const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n                const raw = this._storageService.get(`${SuggestMemoryService._storagePrefix}/${mode}`, scope);\r\n                if (raw) {\r\n                    this._strategy.fromJSON(JSON.parse(raw));\r\n                }\r\n            }\r\n            catch (e) {\r\n                // things can go wrong with JSON...\r\n            }\r\n        }\r\n        return this._strategy;\r\n    }\r\n    _saveState() {\r\n        if (this._strategy) {\r\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n            const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n            const raw = JSON.stringify(this._strategy);\r\n            this._storageService.store(`${SuggestMemoryService._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* MACHINE */);\r\n        }\r\n    }\r\n};\r\nSuggestMemoryService._strategyCtors = new Map([\r\n    ['recentlyUsedByPrefix', PrefixMemory],\r\n    ['recentlyUsed', LRUMemory],\r\n    ['first', NoMemory]\r\n]);\r\nSuggestMemoryService._storagePrefix = 'suggest/memories';\r\nSuggestMemoryService = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IModeService),\r\n    __param(2, IConfigurationService)\r\n], SuggestMemoryService);\r\nexport { SuggestMemoryService };\r\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\r\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, true);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nlet SuggestAlternatives = class SuggestAlternatives {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._index = 0;\r\n        this._ckOtherSuggestions = SuggestAlternatives.OtherSuggestions.bindTo(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        var _a;\r\n        this._ckOtherSuggestions.reset();\r\n        (_a = this._listener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._model = undefined;\r\n        this._acceptNext = undefined;\r\n        this._ignore = false;\r\n    }\r\n    set({ model, index }, acceptNext) {\r\n        // no suggestions -> nothing to do\r\n        if (model.items.length === 0) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        // no alternative suggestions -> nothing to do\r\n        let nextIndex = SuggestAlternatives._moveIndex(true, model, index);\r\n        if (nextIndex === index) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._acceptNext = acceptNext;\r\n        this._model = model;\r\n        this._index = index;\r\n        this._listener = this._editor.onDidChangeCursorPosition(() => {\r\n            if (!this._ignore) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._ckOtherSuggestions.set(true);\r\n    }\r\n    static _moveIndex(fwd, model, index) {\r\n        let newIndex = index;\r\n        while (true) {\r\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\r\n            if (newIndex === index) {\r\n                break;\r\n            }\r\n            if (!model.items[newIndex].completion.additionalTextEdits) {\r\n                break;\r\n            }\r\n        }\r\n        return newIndex;\r\n    }\r\n    next() {\r\n        this._move(true);\r\n    }\r\n    prev() {\r\n        this._move(false);\r\n    }\r\n    _move(fwd) {\r\n        if (!this._model) {\r\n            // nothing to reason about\r\n            return;\r\n        }\r\n        try {\r\n            this._ignore = true;\r\n            this._index = SuggestAlternatives._moveIndex(fwd, this._model, this._index);\r\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\r\n        }\r\n        finally {\r\n            this._ignore = false;\r\n        }\r\n    }\r\n};\r\nSuggestAlternatives.OtherSuggestions = new RawContextKey('hasOtherSuggestions', false);\r\nSuggestAlternatives = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SuggestAlternatives);\r\nexport { SuggestAlternatives };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nimport { quickSelect } from '../../../base/common/arrays.js';\r\nexport class LineContext {\r\n    constructor(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n}\r\n/**\r\n * Sorted, filtered completion view model\r\n * */\r\nexport class CompletionModel {\r\n    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, clipboardText) {\r\n        this.clipboardText = clipboardText;\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    get lineContext() {\r\n        return this._lineContext;\r\n    }\r\n    set lineContext(value) {\r\n        if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n            || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n            this._lineContext = value;\r\n        }\r\n    }\r\n    get items() {\r\n        this._ensureCachedState();\r\n        return this._filteredItems;\r\n    }\r\n    get allProvider() {\r\n        this._ensureCachedState();\r\n        return this._providerInfo.keys();\r\n    }\r\n    get incomplete() {\r\n        this._ensureCachedState();\r\n        const result = new Set();\r\n        for (let [provider, incomplete] of this._providerInfo) {\r\n            if (incomplete) {\r\n                result.add(provider);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    adopt(except) {\r\n        let res = [];\r\n        for (let i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    }\r\n    get stats() {\r\n        this._ensureCachedState();\r\n        return this._stats;\r\n    }\r\n    _ensureCachedState() {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    }\r\n    _createCachedState() {\r\n        this._providerInfo = new Map();\r\n        const labelLengths = [];\r\n        const { leadingLineContent, characterCountDelta } = this._lineContext;\r\n        let word = '';\r\n        let wordLow = '';\r\n        // incrementally filter less\r\n        const source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        const target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        const scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (let i = 0; i < source.length; i++) {\r\n            const item = source[i];\r\n            if (item.isInvalid) {\r\n                continue; // SKIP invalid items\r\n            }\r\n            // collect all support, know if their result is incomplete\r\n            this._providerInfo.set(item.provider, Boolean(item.container.incomplete));\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            const overwriteBefore = item.position.column - item.editStart.column;\r\n            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                let wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    const ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    let match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    let match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            labelLengths.push(item.textLabel.length);\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n        this._stats = {\r\n            pLabelLen: labelLengths.length ?\r\n                quickSelect(labelLengths.length - .85, labelLengths, (a, b) => a - b)\r\n                : 0\r\n        };\r\n    }\r\n    static _compareCompletionItems(a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    static _compareCompletionItemsSnippetsDown(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n    static _compareCompletionItemsSnippetsUp(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class BracketSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = [];\r\n            for (const position of positions) {\r\n                const bucket = [];\r\n                result.push(bucket);\r\n                const ranges = new Map();\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findNextBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (bracket.isOpen) {\r\n                // wait for closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // process closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (!list) {\r\n                        list = new LinkedList();\r\n                        ranges.set(key, list);\r\n                    }\r\n                    list.push(bracket.range);\r\n                }\r\n            }\r\n            pos = bracket.range.getEndPosition();\r\n        }\r\n    }\r\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findPrevBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (!bracket.isOpen) {\r\n                // wait for opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (list) {\r\n                        let closing = list.shift();\r\n                        if (list.size === 0) {\r\n                            ranges.delete(key);\r\n                        }\r\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\r\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\r\n                        bucket.push({ range: innerBracket });\r\n                        bucket.push({ range: outerBracket });\r\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\r\n                    }\r\n                }\r\n            }\r\n            pos = bracket.range.getStartPosition();\r\n        }\r\n    }\r\n    static _addBracketLeading(model, bracket, bucket) {\r\n        if (bracket.startLineNumber === bracket.endLineNumber) {\r\n            return;\r\n        }\r\n        // xxxxxxxx {\r\n        //\r\n        // }\r\n        const startLine = bracket.startLineNumber;\r\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\r\n        if (column !== 0 && column !== bracket.startColumn) {\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\r\n        }\r\n        // xxxxxxxx\r\n        // {\r\n        //\r\n        // }\r\n        const aboveLine = startLine - 1;\r\n        if (aboveLine > 0) {\r\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\r\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\r\n            }\r\n        }\r\n    }\r\n}\r\nBracketSelectionRangeProvider._maxDuration = 30;\r\nBracketSelectionRangeProvider._maxRounds = 2;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { binarySearch, isFalsyOrEmpty } from '../../../base/common/arrays.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { BracketSelectionRangeProvider } from '../smartSelect/bracketSelections.js';\r\nexport class WordDistance {\r\n    static create(service, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.getOption(106 /* suggest */).localityBonus) {\r\n                return WordDistance.None;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return WordDistance.None;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!service.canComputeWordRanges(model.uri)) {\r\n                return WordDistance.None;\r\n            }\r\n            const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\r\n            if (ranges.length === 0) {\r\n                return WordDistance.None;\r\n            }\r\n            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\r\n            if (!wordRanges) {\r\n                return WordDistance.None;\r\n            }\r\n            // remove current word\r\n            const wordUntilPos = model.getWordUntilPosition(position);\r\n            delete wordRanges[wordUntilPos.word];\r\n            return new class extends WordDistance {\r\n                distance(anchor, item) {\r\n                    if (!position.equals(editor.getPosition())) {\r\n                        return 0;\r\n                    }\r\n                    if (item.kind === 17 /* Keyword */) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let word = typeof item.label === 'string' ? item.label : item.label.label;\r\n                    let wordLines = wordRanges[word];\r\n                    if (isFalsyOrEmpty(wordLines)) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\r\n                    let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\r\n                    let blockDistance = ranges.length;\r\n                    for (const range of ranges) {\r\n                        if (!Range.containsRange(range.range, bestWordRange)) {\r\n                            break;\r\n                        }\r\n                        blockDistance -= 1;\r\n                    }\r\n                    return blockDistance;\r\n                }\r\n            };\r\n        });\r\n    }\r\n}\r\nWordDistance.None = new class extends WordDistance {\r\n    distance() { return 0; }\r\n};\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { CompletionProviderRegistry } from '../../common/modes.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { isLowSurrogate, isHighSurrogate, getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nexport class LineContext {\r\n    constructor(model, position, auto, shy) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.auto = auto;\r\n        this.shy = shy;\r\n    }\r\n    static shouldAutoTrigger(editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        model.tokenizeIfCheap(pos.lineNumber);\r\n        const word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction shouldPreventQuickSuggest(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowQuickSuggestions')));\r\n}\r\nfunction shouldPreventSuggestOnTriggerCharacters(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowSuggestOnTriggerCharacters')));\r\n}\r\nlet SuggestModel = class SuggestModel {\r\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._editorWorkerService = _editorWorkerService;\r\n        this._clipboardService = _clipboardService;\r\n        this._telemetryService = _telemetryService;\r\n        this._logService = _logService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._toDispose = new DisposableStore();\r\n        this._quickSuggestDelay = 10;\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._state = 0 /* Idle */;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._telemetryGate = 0;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateQuickSuggest();\r\n        }));\r\n        this._toDispose.add(CompletionProviderRegistry.onDidChange(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateActiveSuggestSession();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\r\n            this._onCursorChange(e);\r\n        }));\r\n        let editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\r\n            // refilter when composition ends\r\n            editorIsComposing = false;\r\n            this._refilterCompletionItems();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            // only filter completions when the editor isn't\r\n            // composing a character, e.g. ¨ + u makes ü but just\r\n            // ¨ cannot be used for filtering\r\n            if (!editorIsComposing) {\r\n                this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n        this._updateQuickSuggest();\r\n    }\r\n    dispose() {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    }\r\n    // --- handle configuration & precondition changes\r\n    _updateQuickSuggest() {\r\n        this._quickSuggestDelay = this._editor.getOption(79 /* quickSuggestionsDelay */);\r\n        if (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\r\n            this._quickSuggestDelay = 10;\r\n        }\r\n    }\r\n    _updateTriggerCharacters() {\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(80 /* readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(109 /* suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        const supportsByTriggerCharacter = new Map();\r\n        for (const support of CompletionProviderRegistry.all(this._editor.getModel())) {\r\n            for (const ch of support.triggerCharacters || []) {\r\n                let set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        const checkTriggerCharacter = (text) => {\r\n            if (shouldPreventSuggestOnTriggerCharacters(this._contextKeyService, this._configurationService)) {\r\n                return;\r\n            }\r\n            if (LineContext.shouldAutoTrigger(this._editor)) {\r\n                // don't trigger by trigger characters when this is a case for quick suggest\r\n                return;\r\n            }\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                const position = this._editor.getPosition();\r\n                const model = this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            let lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            const supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                const existing = this._completionModel\r\n                    ? { items: this._completionModel.adopt(supports), clipboardText: this._completionModel.clipboardText }\r\n                    : undefined;\r\n                this.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(this._completionModel), supports, existing);\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\r\n    }\r\n    // --- trigger/retrigger/cancel suggest\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    cancel(retrigger = false) {\r\n        var _a;\r\n        if (this._state !== 0 /* Idle */) {\r\n            this._triggerQuickSuggest.cancel();\r\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._requestToken = undefined;\r\n            this._state = 0 /* Idle */;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger });\r\n        }\r\n    }\r\n    clear() {\r\n        this._completionDisposables.clear();\r\n    }\r\n    _updateActiveSuggestSession() {\r\n        if (this._state !== 0 /* Idle */) {\r\n            if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true);\r\n            }\r\n        }\r\n    }\r\n    _onCursorChange(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || (e.reason !== 0 /* NotSet */ && e.reason !== 3 /* Explicit */)\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (!CompletionProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        if (this._state === 0 /* Idle */ && e.reason === 0 /* NotSet */) {\r\n            if (this._editor.getOption(78 /* quickSuggestions */) === false) {\r\n                // not enabled\r\n                return;\r\n            }\r\n            if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor didn't move RIGHT\r\n                return;\r\n            }\r\n            if (this._editor.getOption(106 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\r\n                // no quick suggestion when in snippet mode\r\n                return;\r\n            }\r\n            this.cancel();\r\n            this._triggerQuickSuggest.cancelAndSet(() => {\r\n                if (this._state !== 0 /* Idle */) {\r\n                    return;\r\n                }\r\n                if (!LineContext.shouldAutoTrigger(this._editor)) {\r\n                    return;\r\n                }\r\n                if (!this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const pos = this._editor.getPosition();\r\n                // validate enabled now\r\n                const quickSuggestions = this._editor.getOption(78 /* quickSuggestions */);\r\n                if (quickSuggestions === false) {\r\n                    return;\r\n                }\r\n                else if (quickSuggestions === true) {\r\n                    // all good\r\n                }\r\n                else {\r\n                    // Check the type of the token that triggered this\r\n                    model.tokenizeIfCheap(pos.lineNumber);\r\n                    const lineTokens = model.getLineTokens(pos.lineNumber);\r\n                    const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                    const inValidScope = quickSuggestions.other && tokenType === 0 /* Other */\r\n                        || quickSuggestions.comments && tokenType === 1 /* Comment */\r\n                        || quickSuggestions.strings && tokenType === 2 /* String */;\r\n                    if (!inValidScope) {\r\n                        return;\r\n                    }\r\n                }\r\n                if (shouldPreventQuickSuggest(this._contextKeyService, this._configurationService)) {\r\n                    // do not trigger quick suggestions if inline suggestions are shown\r\n                    return;\r\n                }\r\n                // we made it till here -> trigger now\r\n                this.trigger({ auto: true, shy: false });\r\n            }, this._quickSuggestDelay);\r\n        }\r\n        else if (this._state !== 0 /* Idle */ && e.reason === 3 /* Explicit */) {\r\n            // suggest is active and something like cursor keys are used to move\r\n            // the cursor. this means we can refilter at the new position\r\n            this._refilterCompletionItems();\r\n        }\r\n    }\r\n    _refilterCompletionItems() {\r\n        // Re-filter suggestions. This MUST run async because filtering/scoring\r\n        // uses the model content AND the cursor position. The latter is NOT\r\n        // updated when the document has changed (the event which drives this method)\r\n        // and therefore a little pause (next mirco task) is needed. See:\r\n        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\r\n        Promise.resolve().then(() => {\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const position = this._editor.getPosition();\r\n            const ctx = new LineContext(model, position, this._state === 2 /* Auto */, false);\r\n            this._onNewContext(ctx);\r\n        });\r\n    }\r\n    trigger(context, retrigger = false, onlyFrom, existing) {\r\n        var _a;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const auto = context.auto;\r\n        const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(retrigger);\r\n        this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\r\n        this._onDidTrigger.fire({ auto, shy: context.shy, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        let suggestCtx = { triggerKind: (_a = context.triggerKind) !== null && _a !== void 0 ? _a : 0 /* Invoke */ };\r\n        if (context.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* TriggerCharacter */,\r\n                triggerCharacter: context.triggerCharacter\r\n            };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        const snippetSuggestions = this._editor.getOption(101 /* snippetSuggestions */);\r\n        let snippetSortOrder = 1 /* Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* Top */;\r\n                break;\r\n            // \t↓ that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* Bottom */;\r\n                break;\r\n        }\r\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel._createSuggestFilter(this._editor);\r\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\r\n        const completions = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom, showDeprecated), suggestCtx, this._requestToken.token);\r\n        Promise.all([completions, wordDistance]).then(([completions, wordDistance]) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b;\r\n            (_b = this._requestToken) === null || _b === void 0 ? void 0 : _b.dispose();\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            let clipboardText = existing === null || existing === void 0 ? void 0 : existing.clipboardText;\r\n            if (!clipboardText && completions.needsClipboard) {\r\n                clipboardText = yield this._clipboardService.readText();\r\n            }\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            let items = completions.items;\r\n            if (existing) {\r\n                const cmpFn = getSuggestionComparator(snippetSortOrder);\r\n                items = items.concat(existing.items).sort(cmpFn);\r\n            }\r\n            const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n            this._completionModel = new CompletionModel(items, this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            }, wordDistance, this._editor.getOption(106 /* suggest */), this._editor.getOption(101 /* snippetSuggestions */), clipboardText);\r\n            // store containers so that they can be disposed later\r\n            this._completionDisposables.add(completions.disposable);\r\n            this._onNewContext(ctx);\r\n            // finally report telemetry about durations\r\n            this._reportDurationsTelemetry(completions.durations);\r\n        })).catch(onUnexpectedError);\r\n    }\r\n    _reportDurationsTelemetry(durations) {\r\n        if (this._telemetryGate++ % 230 !== 0) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\r\n            this._logService.debug('suggest.durations.json', durations);\r\n        });\r\n    }\r\n    static _createSuggestFilter(editor) {\r\n        // kind filter and snippet sort rules\r\n        const result = new Set();\r\n        // snippet setting\r\n        const snippetSuggestions = editor.getOption(101 /* snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        // type setting\r\n        const suggestOptions = editor.getOption(106 /* suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        if (!suggestOptions.showUsers) {\r\n            result.add(25 /* User */);\r\n        }\r\n        if (!suggestOptions.showIssues) {\r\n            result.add(26 /* Issue */);\r\n        }\r\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\r\n    }\r\n    _onNewContext(ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\r\n            // cancel IntelliSense when line start changes\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.auto, shy: false }, true);\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\r\n            // started a new word while IntelliSense shows -> retrigger\r\n            // Select those providers have not contributed to this completion model and re-trigger completions for\r\n            // them. Also adopt the existing items and merge them into the new completion model\r\n            const inactiveProvider = new Set(CompletionProviderRegistry.all(this._editor.getModel()));\r\n            for (let provider of this._completionModel.allProvider) {\r\n                inactiveProvider.delete(provider);\r\n            }\r\n            const items = this._completionModel.adopt(new Set());\r\n            this.trigger({ auto: this._context.auto, shy: false }, true, inactiveProvider, { items, clipboardText: this._completionModel.clipboardText });\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            const { incomplete } = this._completionModel;\r\n            const items = this._completionModel.adopt(incomplete);\r\n            this.trigger({ auto: this._state === 2 /* Auto */, shy: false, triggerKind: 2 /* TriggerForIncompleteCompletions */ }, true, incomplete, { items, clipboardText: this._completionModel.clipboardText });\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            let oldLineContext = this._completionModel.lineContext;\r\n            let isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.auto, shy: false }, true);\r\n                    return;\r\n                }\r\n                if (!this._context.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                auto: this._context.auto,\r\n                shy: this._context.shy,\r\n                isFrozen,\r\n            });\r\n        }\r\n    }\r\n};\r\nSuggestModel = __decorate([\r\n    __param(1, IEditorWorkerService),\r\n    __param(2, IClipboardService),\r\n    __param(3, ITelemetryService),\r\n    __param(4, ILogService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IConfigurationService)\r\n], SuggestModel);\r\nexport { SuggestModel };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, foreground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport const SYMBOL_ICON_ARRAY_FOREGROUND = registerColor('symbolIcon.arrayForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.arrayForeground', 'The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_BOOLEAN_FOREGROUND = registerColor('symbolIcon.booleanForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.booleanForeground', 'The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CLASS_FOREGROUND = registerColor('symbolIcon.classForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.classForeground', 'The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_COLOR_FOREGROUND = registerColor('symbolIcon.colorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.colorForeground', 'The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTANT_FOREGROUND = registerColor('symbolIcon.constantForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.constantForeground', 'The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTRUCTOR_FOREGROUND = registerColor('symbolIcon.constructorForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.constructorForeground', 'The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_FOREGROUND = registerColor('symbolIcon.enumeratorForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.enumeratorForeground', 'The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND = registerColor('symbolIcon.enumeratorMemberForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.enumeratorMemberForeground', 'The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_EVENT_FOREGROUND = registerColor('symbolIcon.eventForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.eventForeground', 'The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FIELD_FOREGROUND = registerColor('symbolIcon.fieldForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.fieldForeground', 'The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FILE_FOREGROUND = registerColor('symbolIcon.fileForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.fileForeground', 'The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FOLDER_FOREGROUND = registerColor('symbolIcon.folderForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.folderForeground', 'The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FUNCTION_FOREGROUND = registerColor('symbolIcon.functionForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.functionForeground', 'The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_INTERFACE_FOREGROUND = registerColor('symbolIcon.interfaceForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.interfaceForeground', 'The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEY_FOREGROUND = registerColor('symbolIcon.keyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keyForeground', 'The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEYWORD_FOREGROUND = registerColor('symbolIcon.keywordForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keywordForeground', 'The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_METHOD_FOREGROUND = registerColor('symbolIcon.methodForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.methodForeground', 'The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_MODULE_FOREGROUND = registerColor('symbolIcon.moduleForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.moduleForeground', 'The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NAMESPACE_FOREGROUND = registerColor('symbolIcon.namespaceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.namespaceForeground', 'The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NULL_FOREGROUND = registerColor('symbolIcon.nullForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.nullForeground', 'The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NUMBER_FOREGROUND = registerColor('symbolIcon.numberForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.numberForeground', 'The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OBJECT_FOREGROUND = registerColor('symbolIcon.objectForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.objectForeground', 'The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OPERATOR_FOREGROUND = registerColor('symbolIcon.operatorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.operatorForeground', 'The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PACKAGE_FOREGROUND = registerColor('symbolIcon.packageForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.packageForeground', 'The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PROPERTY_FOREGROUND = registerColor('symbolIcon.propertyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.propertyForeground', 'The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_REFERENCE_FOREGROUND = registerColor('symbolIcon.referenceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.referenceForeground', 'The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_SNIPPET_FOREGROUND = registerColor('symbolIcon.snippetForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.snippetForeground', 'The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRING_FOREGROUND = registerColor('symbolIcon.stringForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.stringForeground', 'The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRUCT_FOREGROUND = registerColor('symbolIcon.structForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.structForeground', 'The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TEXT_FOREGROUND = registerColor('symbolIcon.textForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.textForeground', 'The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TYPEPARAMETER_FOREGROUND = registerColor('symbolIcon.typeParameterForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.typeParameterForeground', 'The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_UNIT_FOREGROUND = registerColor('symbolIcon.unitForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.unitForeground', 'The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_VARIABLE_FOREGROUND = registerColor('symbolIcon.variableForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.variableForeground', 'The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const symbolIconArrayColor = theme.getColor(SYMBOL_ICON_ARRAY_FOREGROUND);\r\n    if (symbolIconArrayColor) {\r\n        collector.addRule(`${Codicon.symbolArray.cssSelector} { color: ${symbolIconArrayColor}; }`);\r\n    }\r\n    const symbolIconBooleanColor = theme.getColor(SYMBOL_ICON_BOOLEAN_FOREGROUND);\r\n    if (symbolIconBooleanColor) {\r\n        collector.addRule(`${Codicon.symbolBoolean.cssSelector} { color: ${symbolIconBooleanColor}; }`);\r\n    }\r\n    const symbolIconClassColor = theme.getColor(SYMBOL_ICON_CLASS_FOREGROUND);\r\n    if (symbolIconClassColor) {\r\n        collector.addRule(`${Codicon.symbolClass.cssSelector} { color: ${symbolIconClassColor}; }`);\r\n    }\r\n    const symbolIconMethodColor = theme.getColor(SYMBOL_ICON_METHOD_FOREGROUND);\r\n    if (symbolIconMethodColor) {\r\n        collector.addRule(`${Codicon.symbolMethod.cssSelector} { color: ${symbolIconMethodColor}; }`);\r\n    }\r\n    const symbolIconColorColor = theme.getColor(SYMBOL_ICON_COLOR_FOREGROUND);\r\n    if (symbolIconColorColor) {\r\n        collector.addRule(`${Codicon.symbolColor.cssSelector} { color: ${symbolIconColorColor}; }`);\r\n    }\r\n    const symbolIconConstantColor = theme.getColor(SYMBOL_ICON_CONSTANT_FOREGROUND);\r\n    if (symbolIconConstantColor) {\r\n        collector.addRule(`${Codicon.symbolConstant.cssSelector} { color: ${symbolIconConstantColor}; }`);\r\n    }\r\n    const symbolIconConstructorColor = theme.getColor(SYMBOL_ICON_CONSTRUCTOR_FOREGROUND);\r\n    if (symbolIconConstructorColor) {\r\n        collector.addRule(`${Codicon.symbolConstructor.cssSelector} { color: ${symbolIconConstructorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_FOREGROUND);\r\n    if (symbolIconEnumeratorColor) {\r\n        collector.addRule(`\n\t\t\t${Codicon.symbolValue.cssSelector},${Codicon.symbolEnum.cssSelector} { color: ${symbolIconEnumeratorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorMemberColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND);\r\n    if (symbolIconEnumeratorMemberColor) {\r\n        collector.addRule(`${Codicon.symbolEnumMember.cssSelector} { color: ${symbolIconEnumeratorMemberColor}; }`);\r\n    }\r\n    const symbolIconEventColor = theme.getColor(SYMBOL_ICON_EVENT_FOREGROUND);\r\n    if (symbolIconEventColor) {\r\n        collector.addRule(`${Codicon.symbolEvent.cssSelector} { color: ${symbolIconEventColor}; }`);\r\n    }\r\n    const symbolIconFieldColor = theme.getColor(SYMBOL_ICON_FIELD_FOREGROUND);\r\n    if (symbolIconFieldColor) {\r\n        collector.addRule(`${Codicon.symbolField.cssSelector} { color: ${symbolIconFieldColor}; }`);\r\n    }\r\n    const symbolIconFileColor = theme.getColor(SYMBOL_ICON_FILE_FOREGROUND);\r\n    if (symbolIconFileColor) {\r\n        collector.addRule(`${Codicon.symbolFile.cssSelector} { color: ${symbolIconFileColor}; }`);\r\n    }\r\n    const symbolIconFolderColor = theme.getColor(SYMBOL_ICON_FOLDER_FOREGROUND);\r\n    if (symbolIconFolderColor) {\r\n        collector.addRule(`${Codicon.symbolFolder.cssSelector} { color: ${symbolIconFolderColor}; }`);\r\n    }\r\n    const symbolIconFunctionColor = theme.getColor(SYMBOL_ICON_FUNCTION_FOREGROUND);\r\n    if (symbolIconFunctionColor) {\r\n        collector.addRule(`${Codicon.symbolFunction.cssSelector} { color: ${symbolIconFunctionColor}; }`);\r\n    }\r\n    const symbolIconInterfaceColor = theme.getColor(SYMBOL_ICON_INTERFACE_FOREGROUND);\r\n    if (symbolIconInterfaceColor) {\r\n        collector.addRule(`${Codicon.symbolInterface.cssSelector} { color: ${symbolIconInterfaceColor}; }`);\r\n    }\r\n    const symbolIconKeyColor = theme.getColor(SYMBOL_ICON_KEY_FOREGROUND);\r\n    if (symbolIconKeyColor) {\r\n        collector.addRule(`${Codicon.symbolKey.cssSelector} { color: ${symbolIconKeyColor}; }`);\r\n    }\r\n    const symbolIconKeywordColor = theme.getColor(SYMBOL_ICON_KEYWORD_FOREGROUND);\r\n    if (symbolIconKeywordColor) {\r\n        collector.addRule(`${Codicon.symbolKeyword.cssSelector} { color: ${symbolIconKeywordColor}; }`);\r\n    }\r\n    const symbolIconModuleColor = theme.getColor(SYMBOL_ICON_MODULE_FOREGROUND);\r\n    if (symbolIconModuleColor) {\r\n        collector.addRule(`${Codicon.symbolModule.cssSelector} { color: ${symbolIconModuleColor}; }`);\r\n    }\r\n    const outlineNamespaceColor = theme.getColor(SYMBOL_ICON_NAMESPACE_FOREGROUND);\r\n    if (outlineNamespaceColor) {\r\n        collector.addRule(`${Codicon.symbolNamespace.cssSelector} { color: ${outlineNamespaceColor}; }`);\r\n    }\r\n    const symbolIconNullColor = theme.getColor(SYMBOL_ICON_NULL_FOREGROUND);\r\n    if (symbolIconNullColor) {\r\n        collector.addRule(`${Codicon.symbolNull.cssSelector} { color: ${symbolIconNullColor}; }`);\r\n    }\r\n    const symbolIconNumberColor = theme.getColor(SYMBOL_ICON_NUMBER_FOREGROUND);\r\n    if (symbolIconNumberColor) {\r\n        collector.addRule(`${Codicon.symbolNumber.cssSelector} { color: ${symbolIconNumberColor}; }`);\r\n    }\r\n    const symbolIconObjectColor = theme.getColor(SYMBOL_ICON_OBJECT_FOREGROUND);\r\n    if (symbolIconObjectColor) {\r\n        collector.addRule(`${Codicon.symbolObject.cssSelector} { color: ${symbolIconObjectColor}; }`);\r\n    }\r\n    const symbolIconOperatorColor = theme.getColor(SYMBOL_ICON_OPERATOR_FOREGROUND);\r\n    if (symbolIconOperatorColor) {\r\n        collector.addRule(`${Codicon.symbolOperator.cssSelector} { color: ${symbolIconOperatorColor}; }`);\r\n    }\r\n    const symbolIconPackageColor = theme.getColor(SYMBOL_ICON_PACKAGE_FOREGROUND);\r\n    if (symbolIconPackageColor) {\r\n        collector.addRule(`${Codicon.symbolPackage.cssSelector} { color: ${symbolIconPackageColor}; }`);\r\n    }\r\n    const symbolIconPropertyColor = theme.getColor(SYMBOL_ICON_PROPERTY_FOREGROUND);\r\n    if (symbolIconPropertyColor) {\r\n        collector.addRule(`${Codicon.symbolProperty.cssSelector} { color: ${symbolIconPropertyColor}; }`);\r\n    }\r\n    const symbolIconReferenceColor = theme.getColor(SYMBOL_ICON_REFERENCE_FOREGROUND);\r\n    if (symbolIconReferenceColor) {\r\n        collector.addRule(`${Codicon.symbolReference.cssSelector} { color: ${symbolIconReferenceColor}; }`);\r\n    }\r\n    const symbolIconSnippetColor = theme.getColor(SYMBOL_ICON_SNIPPET_FOREGROUND);\r\n    if (symbolIconSnippetColor) {\r\n        collector.addRule(`${Codicon.symbolSnippet.cssSelector} { color: ${symbolIconSnippetColor}; }`);\r\n    }\r\n    const symbolIconStringColor = theme.getColor(SYMBOL_ICON_STRING_FOREGROUND);\r\n    if (symbolIconStringColor) {\r\n        collector.addRule(`${Codicon.symbolString.cssSelector} { color: ${symbolIconStringColor}; }`);\r\n    }\r\n    const symbolIconStructColor = theme.getColor(SYMBOL_ICON_STRUCT_FOREGROUND);\r\n    if (symbolIconStructColor) {\r\n        collector.addRule(`${Codicon.symbolStruct.cssSelector} { color: ${symbolIconStructColor}; }`);\r\n    }\r\n    const symbolIconTextColor = theme.getColor(SYMBOL_ICON_TEXT_FOREGROUND);\r\n    if (symbolIconTextColor) {\r\n        collector.addRule(`${Codicon.symbolText.cssSelector} { color: ${symbolIconTextColor}; }`);\r\n    }\r\n    const symbolIconTypeParameterColor = theme.getColor(SYMBOL_ICON_TYPEPARAMETER_FOREGROUND);\r\n    if (symbolIconTypeParameterColor) {\r\n        collector.addRule(`${Codicon.symbolTypeParameter.cssSelector} { color: ${symbolIconTypeParameterColor}; }`);\r\n    }\r\n    const symbolIconUnitColor = theme.getColor(SYMBOL_ICON_UNIT_FOREGROUND);\r\n    if (symbolIconUnitColor) {\r\n        collector.addRule(`${Codicon.symbolUnit.cssSelector} { color: ${symbolIconUnitColor}; }`);\r\n    }\r\n    const symbolIconVariableColor = theme.getColor(SYMBOL_ICON_VARIABLE_FOREGROUND);\r\n    if (symbolIconVariableColor) {\r\n        collector.addRule(`${Codicon.symbolVariable.cssSelector} { color: ${symbolIconVariableColor}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event, Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Dimension } from '../../../base/browser/dom.js';\r\nimport { OrthogonalEdge, Sash } from '../../../base/browser/ui/sash/sash.js';\r\nexport class ResizableHTMLElement {\r\n    constructor() {\r\n        this._onDidWillResize = new Emitter();\r\n        this.onDidWillResize = this._onDidWillResize.event;\r\n        this._onDidResize = new Emitter();\r\n        this.onDidResize = this._onDidResize.event;\r\n        this._sashListener = new DisposableStore();\r\n        this._size = new Dimension(0, 0);\r\n        this._minSize = new Dimension(0, 0);\r\n        this._maxSize = new Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.domNode = document.createElement('div');\r\n        this._eastSash = new Sash(this.domNode, { getVerticalSashLeft: () => this._size.width }, { orientation: 0 /* VERTICAL */ });\r\n        this._westSash = new Sash(this.domNode, { getVerticalSashLeft: () => 0 }, { orientation: 0 /* VERTICAL */ });\r\n        this._northSash = new Sash(this.domNode, { getHorizontalSashTop: () => 0 }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.North });\r\n        this._southSash = new Sash(this.domNode, { getHorizontalSashTop: () => this._size.height }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.South });\r\n        this._northSash.orthogonalStartSash = this._westSash;\r\n        this._northSash.orthogonalEndSash = this._eastSash;\r\n        this._southSash.orthogonalStartSash = this._westSash;\r\n        this._southSash.orthogonalEndSash = this._eastSash;\r\n        let currentSize;\r\n        let deltaY = 0;\r\n        let deltaX = 0;\r\n        this._sashListener.add(Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(() => {\r\n            if (currentSize === undefined) {\r\n                this._onDidWillResize.fire();\r\n                currentSize = this._size;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(() => {\r\n            if (currentSize !== undefined) {\r\n                currentSize = undefined;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._eastSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = e.currentX - e.startX;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, east: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._westSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = -(e.currentX - e.startX);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, west: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._northSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = -(e.currentY - e.startY);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, north: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._southSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = e.currentY - e.startY;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, south: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._size.height, this._preferredSize.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidReset, this._southSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._preferredSize.height, this._size.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._northSash.dispose();\r\n        this._southSash.dispose();\r\n        this._eastSash.dispose();\r\n        this._westSash.dispose();\r\n        this._sashListener.dispose();\r\n        this._onDidResize.dispose();\r\n        this._onDidWillResize.dispose();\r\n        this.domNode.remove();\r\n    }\r\n    enableSashes(north, east, south, west) {\r\n        this._northSash.state = north ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._eastSash.state = east ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._southSash.state = south ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._westSash.state = west ? 3 /* Enabled */ : 0 /* Disabled */;\r\n    }\r\n    layout(height = this.size.height, width = this.size.width) {\r\n        const { height: minHeight, width: minWidth } = this._minSize;\r\n        const { height: maxHeight, width: maxWidth } = this._maxSize;\r\n        height = Math.max(minHeight, Math.min(maxHeight, height));\r\n        width = Math.max(minWidth, Math.min(maxWidth, width));\r\n        const newSize = new Dimension(width, height);\r\n        if (!Dimension.equals(newSize, this._size)) {\r\n            this.domNode.style.height = height + 'px';\r\n            this.domNode.style.width = width + 'px';\r\n            this._size = newSize;\r\n            this._northSash.layout();\r\n            this._eastSash.layout();\r\n            this._southSash.layout();\r\n            this._westSash.layout();\r\n        }\r\n    }\r\n    clearSashHoverState() {\r\n        this._eastSash.clearSashHoverState();\r\n        this._westSash.clearSashHoverState();\r\n        this._northSash.clearSashHoverState();\r\n        this._southSash.clearSashHoverState();\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    set maxSize(value) {\r\n        this._maxSize = value;\r\n    }\r\n    get maxSize() {\r\n        return this._maxSize;\r\n    }\r\n    set minSize(value) {\r\n        this._minSize = value;\r\n    }\r\n    get minSize() {\r\n        return this._minSize;\r\n    }\r\n    set preferredSize(value) {\r\n        this._preferredSize = value;\r\n    }\r\n    get preferredSize() {\r\n        return this._preferredSize;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nexport function canExpandCompletionItem(item) {\r\n    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);\r\n}\r\nlet SuggestDetailsWidget = class SuggestDetailsWidget {\r\n    constructor(_editor, instaService) {\r\n        this._editor = _editor;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        this._onDidChangeContents = new Emitter();\r\n        this.onDidChangeContents = this._onDidChangeContents.event;\r\n        this._disposables = new DisposableStore();\r\n        this._renderDisposeable = new DisposableStore();\r\n        this._borderWidth = 1;\r\n        this._size = new dom.Dimension(330, 0);\r\n        this.domNode = dom.$('.suggest-details');\r\n        this.domNode.classList.add('no-docs');\r\n        this._markdownRenderer = instaService.createInstance(MarkdownRenderer, { editor: _editor });\r\n        this._body = dom.$('.body');\r\n        this._scrollbar = new DomScrollableElement(this._body, {});\r\n        dom.append(this.domNode, this._scrollbar.getDomNode());\r\n        this._disposables.add(this._scrollbar);\r\n        this._header = dom.append(this._body, dom.$('.header'));\r\n        this._close = dom.append(this._header, dom.$('span' + Codicon.close.cssSelector));\r\n        this._close.title = nls.localize('details.close', \"Close\");\r\n        this._type = dom.append(this._header, dom.$('p.type'));\r\n        this._docs = dom.append(this._body, dom.$('p.docs'));\r\n        this._configureFont();\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this._configureFont();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._renderDisposeable.dispose();\r\n    }\r\n    _configureFont() {\r\n        const options = this._editor.getOptions();\r\n        const fontInfo = options.get(42 /* fontInfo */);\r\n        const fontFamily = fontInfo.fontFamily;\r\n        const fontSize = options.get(107 /* suggestFontSize */) || fontInfo.fontSize;\r\n        const lineHeight = options.get(108 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n        const fontWeight = fontInfo.fontWeight;\r\n        const fontSizePx = `${fontSize}px`;\r\n        const lineHeightPx = `${lineHeight}px`;\r\n        this.domNode.style.fontSize = fontSizePx;\r\n        this.domNode.style.lineHeight = lineHeightPx;\r\n        this.domNode.style.fontWeight = fontWeight;\r\n        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n        this._type.style.fontFamily = fontFamily;\r\n        this._close.style.height = lineHeightPx;\r\n        this._close.style.width = lineHeightPx;\r\n    }\r\n    getLayoutInfo() {\r\n        const lineHeight = this._editor.getOption(108 /* suggestLineHeight */) || this._editor.getOption(42 /* fontInfo */).lineHeight;\r\n        const borderWidth = this._borderWidth;\r\n        const borderHeight = borderWidth * 2;\r\n        return {\r\n            lineHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14\r\n        };\r\n    }\r\n    renderLoading() {\r\n        this._type.textContent = nls.localize('loading', \"Loading...\");\r\n        this._docs.textContent = '';\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    renderItem(item, explainMode) {\r\n        var _a, _b;\r\n        this._renderDisposeable.clear();\r\n        let { detail, documentation } = item.completion;\r\n        if (explainMode) {\r\n            let md = '';\r\n            md += `score: ${item.score[0]}\\n`;\r\n            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\\n`;\r\n            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\\n`;\r\n            md += `distance: ${item.distance} (localityBonus-setting)\\n`;\r\n            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: \"${item.completion.sortText}\"` || 'label'}\\n`;\r\n            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\\n`;\r\n            documentation = new MarkdownString().appendCodeblock('empty', md);\r\n            detail = `Provider: ${item.provider._debugDisplayName}`;\r\n        }\r\n        if (!explainMode && !canExpandCompletionItem(item)) {\r\n            this.clearContents();\r\n            return;\r\n        }\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        // --- details\r\n        if (detail) {\r\n            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}…` : detail;\r\n            this._type.textContent = cappedDetail;\r\n            this._type.title = cappedDetail;\r\n            dom.show(this._type);\r\n            this._type.classList.toggle('auto-wrap', !/\\r?\\n^\\s+/gmi.test(cappedDetail));\r\n        }\r\n        else {\r\n            dom.clearNode(this._type);\r\n            this._type.title = '';\r\n            dom.hide(this._type);\r\n            this.domNode.classList.add('no-type');\r\n        }\r\n        // --- documentation\r\n        dom.clearNode(this._docs);\r\n        if (typeof documentation === 'string') {\r\n            this._docs.classList.remove('markdown-docs');\r\n            this._docs.textContent = documentation;\r\n        }\r\n        else if (documentation) {\r\n            this._docs.classList.add('markdown-docs');\r\n            dom.clearNode(this._docs);\r\n            const renderedContents = this._markdownRenderer.render(documentation);\r\n            this._docs.appendChild(renderedContents.element);\r\n            this._renderDisposeable.add(renderedContents);\r\n            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(() => {\r\n                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n                this._onDidChangeContents.fire(this);\r\n            }));\r\n        }\r\n        this.domNode.style.userSelect = 'text';\r\n        this.domNode.tabIndex = -1;\r\n        this._close.onmousedown = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        this._close.onclick = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._onDidClose.fire();\r\n        };\r\n        this._body.scrollTop = 0;\r\n        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    clearContents() {\r\n        this.domNode.classList.add('no-docs');\r\n        this._type.textContent = '';\r\n        this._docs.textContent = '';\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    layout(width, height) {\r\n        const newSize = new dom.Dimension(width, height);\r\n        if (!dom.Dimension.equals(newSize, this._size)) {\r\n            this._size = newSize;\r\n            dom.size(this.domNode, width, height);\r\n        }\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n    scrollDown(much = 8) {\r\n        this._body.scrollTop += much;\r\n    }\r\n    scrollUp(much = 8) {\r\n        this._body.scrollTop -= much;\r\n    }\r\n    scrollTop() {\r\n        this._body.scrollTop = 0;\r\n    }\r\n    scrollBottom() {\r\n        this._body.scrollTop = this._body.scrollHeight;\r\n    }\r\n    pageDown() {\r\n        this.scrollDown(80);\r\n    }\r\n    pageUp() {\r\n        this.scrollUp(80);\r\n    }\r\n    set borderWidth(width) {\r\n        this._borderWidth = width;\r\n    }\r\n    get borderWidth() {\r\n        return this._borderWidth;\r\n    }\r\n};\r\nSuggestDetailsWidget = __decorate([\r\n    __param(1, IInstantiationService)\r\n], SuggestDetailsWidget);\r\nexport { SuggestDetailsWidget };\r\nexport class SuggestDetailsOverlay {\r\n    constructor(widget, _editor) {\r\n        this.widget = widget;\r\n        this._editor = _editor;\r\n        this._disposables = new DisposableStore();\r\n        this._added = false;\r\n        this._resizable = new ResizableHTMLElement();\r\n        this._resizable.domNode.classList.add('suggest-details-container');\r\n        this._resizable.domNode.appendChild(widget.domNode);\r\n        this._resizable.enableSashes(false, true, true, false);\r\n        let topLeftNow;\r\n        let sizeNow;\r\n        let deltaTop = 0;\r\n        let deltaLeft = 0;\r\n        this._disposables.add(this._resizable.onDidWillResize(() => {\r\n            topLeftNow = this._topLeft;\r\n            sizeNow = this._resizable.size;\r\n        }));\r\n        this._disposables.add(this._resizable.onDidResize(e => {\r\n            if (topLeftNow && sizeNow) {\r\n                this.widget.layout(e.dimension.width, e.dimension.height);\r\n                let updateTopLeft = false;\r\n                if (e.west) {\r\n                    deltaLeft = sizeNow.width - e.dimension.width;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (e.north) {\r\n                    deltaTop = sizeNow.height - e.dimension.height;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (updateTopLeft) {\r\n                    this._applyTopLeft({\r\n                        top: topLeftNow.top + deltaTop,\r\n                        left: topLeftNow.left + deltaLeft,\r\n                    });\r\n                }\r\n            }\r\n            if (e.done) {\r\n                topLeftNow = undefined;\r\n                sizeNow = undefined;\r\n                deltaTop = 0;\r\n                deltaLeft = 0;\r\n                this._userSize = e.dimension;\r\n            }\r\n        }));\r\n        this._disposables.add(this.widget.onDidChangeContents(() => {\r\n            var _a;\r\n            if (this._anchorBox) {\r\n                this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._resizable.dispose();\r\n        this._disposables.dispose();\r\n        this.hide();\r\n    }\r\n    getId() {\r\n        return 'suggest.details';\r\n    }\r\n    getDomNode() {\r\n        return this._resizable.domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    show() {\r\n        if (!this._added) {\r\n            this._editor.addOverlayWidget(this);\r\n            this.getDomNode().style.position = 'fixed';\r\n            this._added = true;\r\n        }\r\n    }\r\n    hide(sessionEnded = false) {\r\n        this._resizable.clearSashHoverState();\r\n        if (this._added) {\r\n            this._editor.removeOverlayWidget(this);\r\n            this._added = false;\r\n            this._anchorBox = undefined;\r\n            this._topLeft = undefined;\r\n        }\r\n        if (sessionEnded) {\r\n            this._userSize = undefined;\r\n            this.widget.clearContents();\r\n        }\r\n    }\r\n    placeAtAnchor(anchor) {\r\n        var _a;\r\n        const anchorBox = dom.getDomNodePagePosition(anchor);\r\n        this._anchorBox = anchorBox;\r\n        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n    }\r\n    _placeAtAnchor(anchorBox, size) {\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.widget.getLayoutInfo();\r\n        let maxSizeTop;\r\n        let maxSizeBottom;\r\n        let minSize = new dom.Dimension(220, 2 * info.lineHeight);\r\n        let left = 0;\r\n        let top = anchorBox.top;\r\n        let bottom = anchorBox.top + anchorBox.height - info.borderHeight;\r\n        let alignAtTop;\r\n        let alignEast;\r\n        // position: EAST, west, south\r\n        let width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);\r\n        left = -info.borderWidth + anchorBox.left + anchorBox.width;\r\n        alignEast = true;\r\n        maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\r\n        maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\r\n        // find a better place if the widget is wider than there is space available\r\n        if (size.width > width) {\r\n            // position: east, WEST, south\r\n            if (anchorBox.left > width) {\r\n                // pos = SuggestDetailsPosition.West;\r\n                width = anchorBox.left - info.borderWidth - info.horizontalPadding;\r\n                alignEast = false;\r\n                left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);\r\n                maxSizeTop = maxSizeTop.with(width);\r\n                maxSizeBottom = maxSizeTop.with(undefined, maxSizeBottom.height);\r\n            }\r\n            // position: east, west, SOUTH\r\n            if (anchorBox.width > width * 1.3 && bodyBox.height - (anchorBox.top + anchorBox.height) > anchorBox.height) {\r\n                width = anchorBox.width;\r\n                left = anchorBox.left;\r\n                top = -info.borderWidth + anchorBox.top + anchorBox.height;\r\n                maxSizeTop = new dom.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);\r\n                maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top - info.verticalPadding);\r\n                minSize = minSize.with(maxSizeTop.width);\r\n            }\r\n        }\r\n        // top/bottom placement\r\n        let height = size.height;\r\n        let maxHeight = Math.max(maxSizeTop.height, maxSizeBottom.height);\r\n        if (height > maxHeight) {\r\n            height = maxHeight;\r\n        }\r\n        let maxSize;\r\n        if (height <= maxSizeTop.height) {\r\n            alignAtTop = true;\r\n            maxSize = maxSizeTop;\r\n        }\r\n        else {\r\n            alignAtTop = false;\r\n            maxSize = maxSizeBottom;\r\n        }\r\n        this._applyTopLeft({ left, top: alignAtTop ? top : bottom - height });\r\n        this.getDomNode().style.position = 'fixed';\r\n        this._resizable.enableSashes(!alignAtTop, alignEast, alignAtTop, !alignEast);\r\n        this._resizable.minSize = minSize;\r\n        this._resizable.maxSize = maxSize;\r\n        this._resizable.layout(height, Math.min(maxSize.width, size.width));\r\n        this.widget.layout(this._resizable.size.width, this._resizable.size.height);\r\n    }\r\n    _applyTopLeft(topLeft) {\r\n        this._topLeft = topLeft;\r\n        this.getDomNode().style.left = `${this._topLeft.left}px`;\r\n        this.getDomNode().style.top = `${this._topLeft.top}px`;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuEntryActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IMenuService, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nclass StatusBarViewItem extends MenuEntryActionViewItem {\r\n    updateLabel() {\r\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\r\n        if (!kb) {\r\n            return super.updateLabel();\r\n        }\r\n        if (this.label) {\r\n            this.label.textContent = localize('ddd', '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\r\n        }\r\n    }\r\n    static symbolPrintEnter(kb) {\r\n        var _a;\r\n        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\\benter\\b/gi, '\\u23CE');\r\n    }\r\n}\r\nlet SuggestWidgetStatus = class SuggestWidgetStatus {\r\n    constructor(container, instantiationService, _menuService, _contextKeyService) {\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuDisposables = new DisposableStore();\r\n        this.element = dom.append(container, dom.$('.suggest-status-bar'));\r\n        const actionViewItemProvider = (action => {\r\n            return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\r\n        });\r\n        this._leftActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._rightActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._leftActions.domNode.classList.add('left');\r\n        this._rightActions.domNode.classList.add('right');\r\n    }\r\n    dispose() {\r\n        this._menuDisposables.dispose();\r\n        this.element.remove();\r\n    }\r\n    show() {\r\n        const menu = this._menuService.createMenu(suggestWidgetStatusbarMenu, this._contextKeyService);\r\n        const renderMenu = () => {\r\n            const left = [];\r\n            const right = [];\r\n            for (let [group, actions] of menu.getActions()) {\r\n                if (group === 'left') {\r\n                    left.push(...actions);\r\n                }\r\n                else {\r\n                    right.push(...actions);\r\n                }\r\n            }\r\n            this._leftActions.clear();\r\n            this._leftActions.push(left);\r\n            this._rightActions.clear();\r\n            this._rightActions.push(right);\r\n        };\r\n        this._menuDisposables.add(menu.onDidChange(() => renderMenu()));\r\n        this._menuDisposables.add(menu);\r\n    }\r\n    hide() {\r\n        this._menuDisposables.clear();\r\n    }\r\n};\r\nSuggestWidgetStatus = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IMenuService),\r\n    __param(3, IContextKeyService)\r\n], SuggestWidgetStatus);\r\nexport { SuggestWidgetStatus };\r\n","//#endregion\r\n//#region Utilities\r\nexport var FileKind;\r\n(function (FileKind) {\r\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\r\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\r\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\r\n})(FileKind || (FileKind = {}));\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { DataUri, basenameOrAuthority } from '../../../base/common/resources.js';\r\nimport { PLAINTEXT_MODE_ID } from '../modes/modesRegistry.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nexport function getIconClasses(modelService, modeService, resource, fileKind) {\r\n    // we always set these base classes even if we do not have a path\r\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\r\n    if (resource) {\r\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\r\n        let name;\r\n        if (resource.scheme === Schemas.data) {\r\n            const metadata = DataUri.parseMetaData(resource);\r\n            name = metadata.get(DataUri.META_DATA_LABEL);\r\n        }\r\n        else {\r\n            name = cssEscape(basenameOrAuthority(resource).toLowerCase());\r\n        }\r\n        // Folders\r\n        if (fileKind === FileKind.FOLDER) {\r\n            classes.push(`${name}-name-folder-icon`);\r\n        }\r\n        // Files\r\n        else {\r\n            // Name & Extension(s)\r\n            if (name) {\r\n                classes.push(`${name}-name-file-icon`);\r\n                // Avoid doing an explosive combination of extensions for very long filenames\r\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\r\n                // https://github.com/microsoft/vscode/issues/116199\r\n                if (name.length <= 255) {\r\n                    const dotSegments = name.split('.');\r\n                    for (let i = 1; i < dotSegments.length; i++) {\r\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\r\n                    }\r\n                }\r\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\r\n            }\r\n            // Detected Mode\r\n            const detectedModeId = detectModeId(modelService, modeService, resource);\r\n            if (detectedModeId) {\r\n                classes.push(`${cssEscape(detectedModeId)}-lang-file-icon`);\r\n            }\r\n        }\r\n    }\r\n    return classes;\r\n}\r\nexport function detectModeId(modelService, modeService, resource) {\r\n    if (!resource) {\r\n        return null; // we need a resource at least\r\n    }\r\n    let modeId = null;\r\n    // Data URI: check for encoded metadata\r\n    if (resource.scheme === Schemas.data) {\r\n        const metadata = DataUri.parseMetaData(resource);\r\n        const mime = metadata.get(DataUri.META_DATA_MIME);\r\n        if (mime) {\r\n            modeId = modeService.getModeId(mime);\r\n        }\r\n    }\r\n    // Any other URI: check for model if existing\r\n    else {\r\n        const model = modelService.getModel(resource);\r\n        if (model) {\r\n            modeId = model.getModeId();\r\n        }\r\n    }\r\n    // only take if the mode is specific (aka no just plain text)\r\n    if (modeId && modeId !== PLAINTEXT_MODE_ID) {\r\n        return modeId;\r\n    }\r\n    // otherwise fallback to path based detection\r\n    return modeService.getModeIdByFilepathOrFirstLine(resource);\r\n}\r\nexport function cssEscape(str) {\r\n    return str.replace(/[\\11\\12\\14\\15\\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport * as nls from '../../../nls.js';\r\nimport { createMatches } from '../../../base/common/filters.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { append, $, hide, show } from '../../../base/browser/dom.js';\r\nimport { IThemeService, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { completionKindToCssClass } from '../../common/modes.js';\r\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { getIconClasses } from '../../common/services/getIconClasses.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nexport function getAriaId(index) {\r\n    return `suggest-aria-id:${index}`;\r\n}\r\nexport const suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\r\nconst _completionItemColor = new (_a = class ColorExtractor {\r\n        extract(item, out) {\r\n            if (item.textLabel.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.textLabel;\r\n                return true;\r\n            }\r\n            if (item.completion.detail && item.completion.detail.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.completion.detail;\r\n                return true;\r\n            }\r\n            if (typeof item.completion.documentation === 'string') {\r\n                const match = ColorExtractor._regexRelaxed.exec(item.completion.documentation);\r\n                if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {\r\n                    out[0] = match[0];\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\r\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\r\n    _a);\r\nlet ItemRenderer = class ItemRenderer {\r\n    constructor(_editor, _modelService, _modeService, _themeService) {\r\n        this._editor = _editor;\r\n        this._modelService = _modelService;\r\n        this._modeService = _modeService;\r\n        this._themeService = _themeService;\r\n        this._onDidToggleDetails = new Emitter();\r\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\r\n        this.templateId = 'suggestion';\r\n    }\r\n    dispose() {\r\n        this._onDidToggleDetails.dispose();\r\n    }\r\n    renderTemplate(container) {\r\n        const data = Object.create(null);\r\n        data.disposables = new DisposableStore();\r\n        data.root = container;\r\n        data.root.classList.add('show-file-icons');\r\n        data.icon = append(container, $('.icon'));\r\n        data.colorspan = append(data.icon, $('span.colorspan'));\r\n        const text = append(container, $('.contents'));\r\n        const main = append(text, $('.main'));\r\n        data.iconContainer = append(main, $('.icon-label.codicon'));\r\n        data.left = append(main, $('span.left'));\r\n        data.right = append(main, $('span.right'));\r\n        data.iconLabel = new IconLabel(data.left, { supportHighlights: true, supportIcons: true });\r\n        data.disposables.add(data.iconLabel);\r\n        data.parametersLabel = append(data.left, $('span.signature-label'));\r\n        data.qualifierLabel = append(data.left, $('span.qualifier-label'));\r\n        data.detailsLabel = append(data.right, $('span.details-label'));\r\n        data.readMore = append(data.right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\r\n        data.readMore.title = nls.localize('readMore', \"Read More\");\r\n        const configureFont = () => {\r\n            const options = this._editor.getOptions();\r\n            const fontInfo = options.get(42 /* fontInfo */);\r\n            const fontFamily = fontInfo.fontFamily;\r\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n            const fontSize = options.get(107 /* suggestFontSize */) || fontInfo.fontSize;\r\n            const lineHeight = options.get(108 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n            const fontWeight = fontInfo.fontWeight;\r\n            const fontSizePx = `${fontSize}px`;\r\n            const lineHeightPx = `${lineHeight}px`;\r\n            data.root.style.fontSize = fontSizePx;\r\n            data.root.style.fontWeight = fontWeight;\r\n            main.style.fontFamily = fontFamily;\r\n            main.style.fontFeatureSettings = fontFeatureSettings;\r\n            main.style.lineHeight = lineHeightPx;\r\n            data.icon.style.height = lineHeightPx;\r\n            data.icon.style.width = lineHeightPx;\r\n            data.readMore.style.height = lineHeightPx;\r\n            data.readMore.style.width = lineHeightPx;\r\n        };\r\n        configureFont();\r\n        data.disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(42 /* fontInfo */) || e.hasChanged(107 /* suggestFontSize */) || e.hasChanged(108 /* suggestLineHeight */)) {\r\n                configureFont();\r\n            }\r\n        }));\r\n        return data;\r\n    }\r\n    renderElement(element, index, data) {\r\n        const { completion } = element;\r\n        data.root.id = getAriaId(index);\r\n        data.colorspan.style.backgroundColor = '';\r\n        const labelOptions = {\r\n            labelEscapeNewLines: true,\r\n            matches: createMatches(element.score)\r\n        };\r\n        let color = [];\r\n        if (completion.kind === 19 /* Color */ && _completionItemColor.extract(element, color)) {\r\n            // special logic for 'color' completion items\r\n            data.icon.className = 'icon customcolor';\r\n            data.iconContainer.className = 'icon hide';\r\n            data.colorspan.style.backgroundColor = color[0];\r\n        }\r\n        else if (completion.kind === 20 /* File */ && this._themeService.getFileIconTheme().hasFileIcons) {\r\n            // special logic for 'file' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            const labelClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\r\n            const detailClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\r\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\r\n        }\r\n        else if (completion.kind === 23 /* Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\r\n            // special logic for 'folder' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            labelOptions.extraClasses = flatten([\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\r\n            ]);\r\n        }\r\n        else {\r\n            // normal icon\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = '';\r\n            data.iconContainer.classList.add('suggest-icon', ...completionKindToCssClass(completion.kind).split(' '));\r\n        }\r\n        if (completion.tags && completion.tags.indexOf(1 /* Deprecated */) >= 0) {\r\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\r\n            labelOptions.matches = [];\r\n        }\r\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\r\n        if (typeof completion.label === 'string') {\r\n            data.parametersLabel.textContent = '';\r\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\r\n            data.root.classList.add('string-label');\r\n        }\r\n        else {\r\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\r\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\r\n            data.root.classList.remove('string-label');\r\n        }\r\n        if (this._editor.getOption(106 /* suggest */).showInlineDetails) {\r\n            show(data.detailsLabel);\r\n        }\r\n        else {\r\n            hide(data.detailsLabel);\r\n        }\r\n        if (canExpandCompletionItem(element)) {\r\n            data.right.classList.add('can-expand-details');\r\n            show(data.readMore);\r\n            data.readMore.onmousedown = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            };\r\n            data.readMore.onclick = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                this._onDidToggleDetails.fire();\r\n            };\r\n        }\r\n        else {\r\n            data.right.classList.remove('can-expand-details');\r\n            hide(data.readMore);\r\n            data.readMore.onmousedown = null;\r\n            data.readMore.onclick = null;\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.disposables.dispose();\r\n    }\r\n};\r\nItemRenderer = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IModeService),\r\n    __param(3, IThemeService)\r\n], ItemRenderer);\r\nexport { ItemRenderer };\r\nfunction stripNewLines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/suggest.css';\r\nimport '../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport * as nls from '../../../nls.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Context as SuggestContext } from './suggest.js';\r\nimport { attachListStyler } from '../../../platform/theme/common/styler.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorWidgetBackground, quickInputListFocusBackground, activeContrastBorder, listHighlightForeground, editorForeground, editorWidgetBorder, focusBorder, textLinkForeground, textCodeBlockBackground, quickInputListFocusForeground, listFocusHighlightForeground, quickInputListFocusIconForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { TimeoutTimer, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { SuggestDetailsWidget, canExpandCompletionItem, SuggestDetailsOverlay } from './suggestWidgetDetails.js';\r\nimport { SuggestWidgetStatus } from './suggestWidgetStatus.js';\r\nimport { getAriaId, ItemRenderer } from './suggestWidgetRenderer.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { clamp } from '../../../base/common/numbers.js';\r\n/**\r\n * Suggest widget colors\r\n */\r\nexport const editorSuggestWidgetBackground = registerColor('editorSuggestWidget.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\r\nexport const editorSuggestWidgetBorder = registerColor('editorSuggestWidget.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\r\nexport const editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', { dark: editorForeground, light: editorForeground, hc: editorForeground }, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedForeground = registerColor('editorSuggestWidget.selectedForeground', { dark: quickInputListFocusForeground, light: quickInputListFocusForeground, hc: quickInputListFocusForeground }, nls.localize('editorSuggestWidgetSelectedForeground', 'Foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedIconForeground = registerColor('editorSuggestWidget.selectedIconForeground', { dark: quickInputListFocusIconForeground, light: quickInputListFocusIconForeground, hc: quickInputListFocusIconForeground }, nls.localize('editorSuggestWidgetSelectedIconForeground', 'Icon foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', { dark: quickInputListFocusBackground, light: quickInputListFocusBackground, hc: quickInputListFocusBackground }, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightForeground = registerColor('editorSuggestWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hc: listHighlightForeground }, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightFocusForeground = registerColor('editorSuggestWidget.focusHighlightForeground', { dark: listFocusHighlightForeground, light: listFocusHighlightForeground, hc: listFocusHighlightForeground }, nls.localize('editorSuggestWidgetFocusHighlightForeground', 'Color of the match highlights in the suggest widget when an item is focused.'));\r\nclass PersistedWidgetSize {\r\n    constructor(_service, editor) {\r\n        this._service = _service;\r\n        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof EmbeddedCodeEditorWidget}`;\r\n    }\r\n    restore() {\r\n        var _a;\r\n        const raw = (_a = this._service.get(this._key, 0 /* GLOBAL */)) !== null && _a !== void 0 ? _a : '';\r\n        try {\r\n            const obj = JSON.parse(raw);\r\n            if (dom.Dimension.is(obj)) {\r\n                return dom.Dimension.lift(obj);\r\n            }\r\n        }\r\n        catch (_b) {\r\n            // ignore\r\n        }\r\n        return undefined;\r\n    }\r\n    store(size) {\r\n        this._service.store(this._key, JSON.stringify(size), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n    }\r\n    reset() {\r\n        this._service.remove(this._key, 0 /* GLOBAL */);\r\n    }\r\n}\r\nlet SuggestWidget = class SuggestWidget {\r\n    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService) {\r\n        this.editor = editor;\r\n        this._storageService = _storageService;\r\n        this._state = 0 /* Hidden */;\r\n        this._isAuto = false;\r\n        this._ignoreFocusEvents = false;\r\n        this._forceRenderingAbove = false;\r\n        this._explainMode = false;\r\n        this._showTimeout = new TimeoutTimer();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidSelect = new Emitter();\r\n        this._onDidFocus = new Emitter();\r\n        this._onDidHide = new Emitter();\r\n        this._onDidShow = new Emitter();\r\n        this.onDidSelect = this._onDidSelect.event;\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this.onDidHide = this._onDidHide.event;\r\n        this.onDidShow = this._onDidShow.event;\r\n        this._onDetailsKeydown = new Emitter();\r\n        this.onDetailsKeyDown = this._onDetailsKeydown.event;\r\n        this.element = new ResizableHTMLElement();\r\n        this.element.domNode.classList.add('editor-widget', 'suggest-widget');\r\n        this._contentWidget = new SuggestContentWidget(this, editor);\r\n        this._persistedSize = new PersistedWidgetSize(_storageService, editor);\r\n        class ResizeState {\r\n            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false) {\r\n                this.persistedSize = persistedSize;\r\n                this.currentSize = currentSize;\r\n                this.persistHeight = persistHeight;\r\n                this.persistWidth = persistWidth;\r\n            }\r\n        }\r\n        let state;\r\n        this._disposables.add(this.element.onDidWillResize(() => {\r\n            this._contentWidget.lockPreference();\r\n            state = new ResizeState(this._persistedSize.restore(), this.element.size);\r\n        }));\r\n        this._disposables.add(this.element.onDidResize(e => {\r\n            var _a, _b, _c, _d;\r\n            this._resize(e.dimension.width, e.dimension.height);\r\n            if (state) {\r\n                state.persistHeight = state.persistHeight || !!e.north || !!e.south;\r\n                state.persistWidth = state.persistWidth || !!e.east || !!e.west;\r\n            }\r\n            if (!e.done) {\r\n                return;\r\n            }\r\n            if (state) {\r\n                // only store width or height value that have changed and also\r\n                // only store changes that are above a certain threshold\r\n                const { itemHeight, defaultSize } = this.getLayoutInfo();\r\n                const threshold = Math.round(itemHeight / 2);\r\n                let { width, height } = this.element.size;\r\n                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\r\n                    height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;\r\n                }\r\n                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\r\n                    width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;\r\n                }\r\n                this._persistedSize.store(new dom.Dimension(width, height));\r\n            }\r\n            // reset working state\r\n            this._contentWidget.unlockPreference();\r\n            state = undefined;\r\n        }));\r\n        this._messageElement = dom.append(this.element.domNode, dom.$('.message'));\r\n        this._listElement = dom.append(this.element.domNode, dom.$('.tree'));\r\n        const details = instantiationService.createInstance(SuggestDetailsWidget, this.editor);\r\n        details.onDidClose(this.toggleDetails, this, this._disposables);\r\n        this._details = new SuggestDetailsOverlay(details, this.editor);\r\n        const applyIconStyle = () => this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(106 /* suggest */).showIcons);\r\n        applyIconStyle();\r\n        const renderer = instantiationService.createInstance(ItemRenderer, this.editor);\r\n        this._disposables.add(renderer);\r\n        this._disposables.add(renderer.onDidToggleDetails(() => this.toggleDetails()));\r\n        this._list = new List('SuggestWidget', this._listElement, {\r\n            getHeight: (_element) => this.getLayoutInfo().itemHeight,\r\n            getTemplateId: (_element) => 'suggestion'\r\n        }, [renderer], {\r\n            alwaysConsumeMouseWheel: true,\r\n            useShadows: false,\r\n            mouseSupport: false,\r\n            accessibilityProvider: {\r\n                getRole: () => 'option',\r\n                getAriaLabel: (item) => {\r\n                    if (item.isResolved && this._isDetailsVisible()) {\r\n                        const { documentation, detail } = item.completion;\r\n                        const docs = strings.format('{0}{1}', detail || '', documentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\r\n                        return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", item.textLabel, docs);\r\n                    }\r\n                    else {\r\n                        return item.textLabel;\r\n                    }\r\n                },\r\n                getWidgetAriaLabel: () => nls.localize('suggest', \"Suggest\"),\r\n                getWidgetRole: () => 'listbox'\r\n            }\r\n        });\r\n        this._status = instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode);\r\n        const applyStatusBarStyle = () => this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(106 /* suggest */).showStatusBar);\r\n        applyStatusBarStyle();\r\n        this._disposables.add(attachListStyler(this._list, _themeService, {\r\n            listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\r\n            listInactiveFocusOutline: activeContrastBorder\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(t => this._onThemeChange(t)));\r\n        this._onThemeChange(_themeService.getColorTheme());\r\n        this._disposables.add(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onTap(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onDidChangeSelection(e => this._onListSelection(e)));\r\n        this._disposables.add(this._list.onDidChangeFocus(e => this._onListFocus(e)));\r\n        this._disposables.add(this.editor.onDidChangeCursorSelection(() => this._onCursorSelectionChanged()));\r\n        this._disposables.add(this.editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(106 /* suggest */)) {\r\n                applyStatusBarStyle();\r\n                applyIconStyle();\r\n            }\r\n        }));\r\n        this._ctxSuggestWidgetVisible = SuggestContext.Visible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetDetailsVisible = SuggestContext.DetailsVisible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(_contextKeyService);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._details.widget.domNode, 'keydown', e => {\r\n            this._onDetailsKeydown.fire(e);\r\n        }));\r\n        this._disposables.add(this.editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._details.widget.dispose();\r\n        this._details.dispose();\r\n        this._list.dispose();\r\n        this._status.dispose();\r\n        this._disposables.dispose();\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._showTimeout.dispose();\r\n        this._contentWidget.dispose();\r\n        this.element.dispose();\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        if (this._details.widget.domNode.contains(mouseEvent.target.element)) {\r\n            // Clicking inside details\r\n            this._details.widget.domNode.focus();\r\n        }\r\n        else {\r\n            // Clicking outside details and inside suggest\r\n            if (this.element.domNode.contains(mouseEvent.target.element)) {\r\n                this.editor.focus();\r\n            }\r\n        }\r\n    }\r\n    _onCursorSelectionChanged() {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            this._contentWidget.layout();\r\n        }\r\n    }\r\n    _onListMouseDownOrTap(e) {\r\n        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\r\n            return;\r\n        }\r\n        // prevent stealing browser focus from the editor\r\n        e.browserEvent.preventDefault();\r\n        e.browserEvent.stopPropagation();\r\n        this._select(e.element, e.index);\r\n    }\r\n    _onListSelection(e) {\r\n        if (e.elements.length) {\r\n            this._select(e.elements[0], e.indexes[0]);\r\n        }\r\n    }\r\n    _select(item, index) {\r\n        const completionModel = this._completionModel;\r\n        if (completionModel) {\r\n            this._onDidSelect.fire({ item, index, model: completionModel });\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    _onThemeChange(theme) {\r\n        const backgroundColor = theme.getColor(editorSuggestWidgetBackground);\r\n        if (backgroundColor) {\r\n            this.element.domNode.style.backgroundColor = backgroundColor.toString();\r\n            this._messageElement.style.backgroundColor = backgroundColor.toString();\r\n            this._details.widget.domNode.style.backgroundColor = backgroundColor.toString();\r\n        }\r\n        const borderColor = theme.getColor(editorSuggestWidgetBorder);\r\n        if (borderColor) {\r\n            this.element.domNode.style.borderColor = borderColor.toString();\r\n            this._messageElement.style.borderColor = borderColor.toString();\r\n            this._status.element.style.borderTopColor = borderColor.toString();\r\n            this._details.widget.domNode.style.borderColor = borderColor.toString();\r\n            this._detailsBorderColor = borderColor.toString();\r\n        }\r\n        const focusBorderColor = theme.getColor(focusBorder);\r\n        if (focusBorderColor) {\r\n            this._detailsFocusBorderColor = focusBorderColor.toString();\r\n        }\r\n        this._details.widget.borderWidth = theme.type === 'hc' ? 2 : 1;\r\n    }\r\n    _onListFocus(e) {\r\n        var _a;\r\n        if (this._ignoreFocusEvents) {\r\n            return;\r\n        }\r\n        if (!e.elements.length) {\r\n            if (this._currentSuggestionDetails) {\r\n                this._currentSuggestionDetails.cancel();\r\n                this._currentSuggestionDetails = undefined;\r\n                this._focusedItem = undefined;\r\n            }\r\n            this.editor.setAriaOptions({ activeDescendant: undefined });\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            return;\r\n        }\r\n        const item = e.elements[0];\r\n        const index = e.indexes[0];\r\n        if (item !== this._focusedItem) {\r\n            (_a = this._currentSuggestionDetails) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._currentSuggestionDetails = undefined;\r\n            this._focusedItem = item;\r\n            this._list.reveal(index);\r\n            this._currentSuggestionDetails = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                const loading = disposableTimeout(() => {\r\n                    if (this._isDetailsVisible()) {\r\n                        this.showDetails(true);\r\n                    }\r\n                }, 250);\r\n                token.onCancellationRequested(() => loading.dispose());\r\n                const result = yield item.resolve(token);\r\n                loading.dispose();\r\n                return result;\r\n            }));\r\n            this._currentSuggestionDetails.then(() => {\r\n                if (index >= this._list.length || item !== this._list.element(index)) {\r\n                    return;\r\n                }\r\n                // item can have extra information, so re-render\r\n                this._ignoreFocusEvents = true;\r\n                this._list.splice(index, 1, [item]);\r\n                this._list.setFocus([index]);\r\n                this._ignoreFocusEvents = false;\r\n                if (this._isDetailsVisible()) {\r\n                    this.showDetails(false);\r\n                }\r\n                else {\r\n                    this.element.domNode.classList.remove('docs-side');\r\n                }\r\n                this.editor.setAriaOptions({ activeDescendant: getAriaId(index) });\r\n            }).catch(onUnexpectedError);\r\n        }\r\n        // emit an event\r\n        this._onDidFocus.fire({ item, index, model: this._completionModel });\r\n    }\r\n    _setState(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        this._state = state;\r\n        this.element.domNode.classList.toggle('frozen', state === 4 /* Frozen */);\r\n        this.element.domNode.classList.remove('message');\r\n        switch (state) {\r\n            case 0 /* Hidden */:\r\n                dom.hide(this._messageElement, this._listElement, this._status.element);\r\n                this._details.hide(true);\r\n                this._status.hide();\r\n                this._contentWidget.hide();\r\n                this._ctxSuggestWidgetVisible.reset();\r\n                this._ctxSuggestWidgetMultipleSuggestions.reset();\r\n                this._showTimeout.cancel();\r\n                this.element.domNode.classList.remove('visible');\r\n                this._list.splice(0, this._list.length);\r\n                this._focusedItem = undefined;\r\n                this._cappedHeight = undefined;\r\n                this._explainMode = false;\r\n                break;\r\n            case 1 /* Loading */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.LOADING_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 2 /* Empty */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.NO_SUGGESTIONS_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 3 /* Open */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 4 /* Frozen */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 5 /* Details */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._details.show();\r\n                this._show();\r\n                break;\r\n        }\r\n    }\r\n    _show() {\r\n        this._status.show();\r\n        this._contentWidget.show();\r\n        this._layout(this._persistedSize.restore());\r\n        this._ctxSuggestWidgetVisible.set(true);\r\n        this._showTimeout.cancelAndSet(() => {\r\n            this.element.domNode.classList.add('visible');\r\n            this._onDidShow.fire(this);\r\n        }, 100);\r\n    }\r\n    showTriggered(auto, delay) {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            return;\r\n        }\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        this._isAuto = !!auto;\r\n        if (!this._isAuto) {\r\n            this._loadingTimeout = disposableTimeout(() => this._setState(1 /* Loading */), delay);\r\n        }\r\n    }\r\n    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto) {\r\n        var _a, _b;\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentSuggestionDetails) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._currentSuggestionDetails = undefined;\r\n        if (this._completionModel !== completionModel) {\r\n            this._completionModel = completionModel;\r\n        }\r\n        if (isFrozen && this._state !== 2 /* Empty */ && this._state !== 0 /* Hidden */) {\r\n            this._setState(4 /* Frozen */);\r\n            return;\r\n        }\r\n        const visibleCount = this._completionModel.items.length;\r\n        const isEmpty = visibleCount === 0;\r\n        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\r\n        if (isEmpty) {\r\n            this._setState(isAuto ? 0 /* Hidden */ : 2 /* Empty */);\r\n            this._completionModel = undefined;\r\n            return;\r\n        }\r\n        this._focusedItem = undefined;\r\n        this._list.splice(0, this._list.length, this._completionModel.items);\r\n        this._setState(isFrozen ? 4 /* Frozen */ : 3 /* Open */);\r\n        this._list.reveal(selectionIndex, 0);\r\n        this._list.setFocus([selectionIndex]);\r\n        this._layout(this.element.size);\r\n        // Reset focus border\r\n        if (this._detailsBorderColor) {\r\n            this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n        }\r\n    }\r\n    selectNextPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageDown();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNextPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectNext() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNext(1, true);\r\n                return true;\r\n        }\r\n    }\r\n    selectLast() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollBottom();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusLast();\r\n                return true;\r\n        }\r\n    }\r\n    selectPreviousPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageUp();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPreviousPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectPrevious() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPrevious(1, true);\r\n                return false;\r\n        }\r\n    }\r\n    selectFirst() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollTop();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusFirst();\r\n                return true;\r\n        }\r\n    }\r\n    getFocusedItem() {\r\n        if (this._state !== 0 /* Hidden */\r\n            && this._state !== 2 /* Empty */\r\n            && this._state !== 1 /* Loading */\r\n            && this._completionModel) {\r\n            return {\r\n                item: this._list.getFocusedElements()[0],\r\n                index: this._list.getFocus()[0],\r\n                model: this._completionModel\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    toggleDetailsFocus() {\r\n        if (this._state === 5 /* Details */) {\r\n            this._setState(3 /* Open */);\r\n            if (this._detailsBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n            }\r\n        }\r\n        else if (this._state === 3 /* Open */ && this._isDetailsVisible()) {\r\n            this._setState(5 /* Details */);\r\n            if (this._detailsFocusBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsFocusBorderColor;\r\n            }\r\n        }\r\n    }\r\n    toggleDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            // hide details widget\r\n            this._ctxSuggestWidgetDetailsVisible.set(false);\r\n            this._setDetailsVisible(false);\r\n            this._details.hide();\r\n            this.element.domNode.classList.remove('shows-details');\r\n        }\r\n        else if ((canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* Open */ || this._state === 5 /* Details */ || this._state === 4 /* Frozen */)) {\r\n            // show details widget (iff possible)\r\n            this._ctxSuggestWidgetDetailsVisible.set(true);\r\n            this._setDetailsVisible(true);\r\n            this.showDetails(false);\r\n        }\r\n    }\r\n    showDetails(loading) {\r\n        this._details.show();\r\n        if (loading) {\r\n            this._details.widget.renderLoading();\r\n        }\r\n        else {\r\n            this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);\r\n        }\r\n        this._positionDetails();\r\n        this.editor.focus();\r\n        this.element.domNode.classList.add('shows-details');\r\n    }\r\n    toggleExplainMode() {\r\n        if (this._list.getFocusedElements()[0]) {\r\n            this._explainMode = !this._explainMode;\r\n            if (!this._isDetailsVisible()) {\r\n                this.toggleDetails();\r\n            }\r\n            else {\r\n                this.showDetails(false);\r\n            }\r\n        }\r\n    }\r\n    resetPersistedSize() {\r\n        this._persistedSize.reset();\r\n    }\r\n    hideWidget() {\r\n        var _a;\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._setState(0 /* Hidden */);\r\n        this._onDidHide.fire(this);\r\n        this.element.clearSashHoverState();\r\n        // ensure that a reasonable widget height is persisted so that\r\n        // accidential \"resize-to-single-items\" cases aren't happening\r\n        const dim = this._persistedSize.restore();\r\n        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);\r\n        if (dim && dim.height < minPersistedHeight) {\r\n            this._persistedSize.store(dim.with(undefined, minPersistedHeight));\r\n        }\r\n    }\r\n    isFrozen() {\r\n        return this._state === 4 /* Frozen */;\r\n    }\r\n    _afterRender(position) {\r\n        if (position === null) {\r\n            if (this._isDetailsVisible()) {\r\n                this._details.hide(); //todo@jrieken soft-hide\r\n            }\r\n            return;\r\n        }\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // no special positioning when widget isn't showing list\r\n            return;\r\n        }\r\n        if (this._isDetailsVisible()) {\r\n            this._details.show();\r\n        }\r\n        this._positionDetails();\r\n    }\r\n    _layout(size) {\r\n        var _a, _b, _c;\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this.editor.getDomNode()) {\r\n            // happens when running tests\r\n            return;\r\n        }\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.getLayoutInfo();\r\n        if (!size) {\r\n            size = info.defaultSize;\r\n        }\r\n        let height = size.height;\r\n        let width = size.width;\r\n        // status bar\r\n        this._status.element.style.lineHeight = `${info.itemHeight}px`;\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // showing a message only\r\n            height = info.itemHeight + info.borderHeight;\r\n            width = info.defaultSize.width / 2;\r\n            this.element.enableSashes(false, false, false, false);\r\n            this.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\r\n            this._contentWidget.setPreference(2 /* BELOW */);\r\n        }\r\n        else {\r\n            // showing items\r\n            // width math\r\n            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\r\n            if (width > maxWidth) {\r\n                width = maxWidth;\r\n            }\r\n            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\r\n            // height math\r\n            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\r\n            const minHeight = info.itemHeight + info.statusBarHeight;\r\n            const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\r\n            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\r\n            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\r\n            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\r\n            const availableSpaceAbove = editorBox.top + cursorBox.top - info.verticalPadding;\r\n            const maxHeightAbove = Math.min(availableSpaceAbove, fullHeight);\r\n            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\r\n            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) {\r\n                // Restore the old (wanted) height when the current\r\n                // height is capped to fit\r\n                height = this._cappedHeight.wanted;\r\n            }\r\n            if (height < minHeight) {\r\n                height = minHeight;\r\n            }\r\n            if (height > maxHeight) {\r\n                height = maxHeight;\r\n            }\r\n            const forceRenderingAboveRequiredSpace = 150;\r\n            if (height > maxHeightBelow || (this._forceRenderingAbove && availableSpaceAbove > forceRenderingAboveRequiredSpace)) {\r\n                this._contentWidget.setPreference(1 /* ABOVE */);\r\n                this.element.enableSashes(true, true, false, false);\r\n                maxHeight = maxHeightAbove;\r\n            }\r\n            else {\r\n                this._contentWidget.setPreference(2 /* BELOW */);\r\n                this.element.enableSashes(false, true, true, false);\r\n                maxHeight = maxHeightBelow;\r\n            }\r\n            this.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\r\n            this.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\r\n            this.element.minSize = new dom.Dimension(220, minHeight);\r\n            // Know when the height was capped to fit and remember\r\n            // the wanted height for later. This is required when going\r\n            // left to widen suggestions.\r\n            this._cappedHeight = height === fullHeight\r\n                ? { wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height, capped: height }\r\n                : undefined;\r\n        }\r\n        this._resize(width, height);\r\n    }\r\n    _resize(width, height) {\r\n        const { width: maxWidth, height: maxHeight } = this.element.maxSize;\r\n        width = Math.min(maxWidth, width);\r\n        height = Math.min(maxHeight, height);\r\n        const { statusBarHeight } = this.getLayoutInfo();\r\n        this._list.layout(height - statusBarHeight, width);\r\n        this._listElement.style.height = `${height - statusBarHeight}px`;\r\n        this.element.layout(height, width);\r\n        this._contentWidget.layout();\r\n        this._positionDetails();\r\n    }\r\n    _positionDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            this._details.placeAtAnchor(this.element.domNode);\r\n        }\r\n    }\r\n    getLayoutInfo() {\r\n        const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n        const itemHeight = clamp(this.editor.getOption(108 /* suggestLineHeight */) || fontInfo.lineHeight, 8, 1000);\r\n        const statusBarHeight = !this.editor.getOption(106 /* suggest */).showStatusBar || this._state === 2 /* Empty */ || this._state === 1 /* Loading */ ? 0 : itemHeight;\r\n        const borderWidth = this._details.widget.borderWidth;\r\n        const borderHeight = 2 * borderWidth;\r\n        return {\r\n            itemHeight,\r\n            statusBarHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14,\r\n            defaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\r\n        };\r\n    }\r\n    _isDetailsVisible() {\r\n        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* GLOBAL */, false);\r\n    }\r\n    _setDetailsVisible(value) {\r\n        this._storageService.store('expandSuggestionDocs', value, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    forceRenderingAbove() {\r\n        if (!this._forceRenderingAbove) {\r\n            this._forceRenderingAbove = true;\r\n            this._layout(this._persistedSize.restore());\r\n        }\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this._forceRenderingAbove = false;\r\n    }\r\n};\r\nSuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\r\nSuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\r\nSuggestWidget = __decorate([\r\n    __param(1, IStorageService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IThemeService),\r\n    __param(4, IInstantiationService)\r\n], SuggestWidget);\r\nexport { SuggestWidget };\r\nexport class SuggestContentWidget {\r\n    constructor(_widget, _editor) {\r\n        this._widget = _widget;\r\n        this._editor = _editor;\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._preferenceLocked = false;\r\n        this._added = false;\r\n        this._hidden = false;\r\n    }\r\n    dispose() {\r\n        if (this._added) {\r\n            this._added = false;\r\n            this._editor.removeContentWidget(this);\r\n        }\r\n    }\r\n    getId() {\r\n        return 'editor.widget.suggestWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._widget.element.domNode;\r\n    }\r\n    show() {\r\n        this._hidden = false;\r\n        if (!this._added) {\r\n            this._added = true;\r\n            this._editor.addContentWidget(this);\r\n        }\r\n    }\r\n    hide() {\r\n        if (!this._hidden) {\r\n            this._hidden = true;\r\n            this.layout();\r\n        }\r\n    }\r\n    layout() {\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this._hidden || !this._position || !this._preference) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [this._preference]\r\n        };\r\n    }\r\n    beforeRender() {\r\n        const { height, width } = this._widget.element.size;\r\n        const { borderWidth, horizontalPadding } = this._widget.getLayoutInfo();\r\n        return new dom.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);\r\n    }\r\n    afterRender(position) {\r\n        this._widget._afterRender(position);\r\n    }\r\n    setPreference(preference) {\r\n        if (!this._preferenceLocked) {\r\n            this._preference = preference;\r\n        }\r\n    }\r\n    lockPreference() {\r\n        this._preferenceLocked = true;\r\n    }\r\n    unlockPreference() {\r\n        this._preferenceLocked = false;\r\n    }\r\n    setPosition(position) {\r\n        this._position = position;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const matchHighlight = theme.getColor(editorSuggestWidgetHighlightForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label .highlight { color: ${matchHighlight}; }`);\r\n    }\r\n    const matchHighlightFocus = theme.getColor(editorSuggestWidgetHighlightFocusForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .monaco-highlighted-label .highlight { color: ${matchHighlightFocus}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorSuggestWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget, .monaco-editor .suggest-details { color: ${foreground}; }`);\r\n    }\r\n    const selectedForeground = theme.getColor(editorSuggestWidgetSelectedForeground);\r\n    if (selectedForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused { color: ${selectedForeground}; }`);\r\n    }\r\n    const selectedIconForeground = theme.getColor(editorSuggestWidgetSelectedIconForeground);\r\n    if (selectedIconForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .codicon { color: ${selectedIconForeground}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .suggest-details a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .suggest-details a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .suggest-details code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nlet WordContextKey = class WordContextKey {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._enabled = false;\r\n        this._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\r\n        this._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(111 /* tabCompletion */) && this._update());\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._configListener.dispose();\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._ckAtEnd.reset();\r\n    }\r\n    _update() {\r\n        // only update this when tab completions are enabled\r\n        const enabled = this._editor.getOption(111 /* tabCompletion */) === 'on';\r\n        if (this._enabled === enabled) {\r\n            return;\r\n        }\r\n        this._enabled = enabled;\r\n        if (this._enabled) {\r\n            const checkForWordEnd = () => {\r\n                if (!this._editor.hasModel()) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const selection = this._editor.getSelection();\r\n                const word = model.getWordAtPosition(selection.getStartPosition());\r\n                if (!word) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\r\n            };\r\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\r\n            checkForWordEnd();\r\n        }\r\n        else if (this._selectionListener) {\r\n            this._ckAtEnd.reset();\r\n            this._selectionListener.dispose();\r\n            this._selectionListener = undefined;\r\n        }\r\n    }\r\n};\r\nWordContextKey.AtEnd = new RawContextKey('atEndOfWord', false);\r\nWordContextKey = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordContextKey);\r\nexport { WordContextKey };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nexport class CommitCharacterController {\r\n    constructor(editor, widget, accept) {\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(text => {\r\n            if (this._active && !widget.isFrozen()) {\r\n                const ch = text.charCodeAt(text.length - 1);\r\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    _onItem(selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        const acceptCharacters = new CharacterSet();\r\n        for (const ch of selected.item.completion.commitCharacters) {\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters, item: selected };\r\n    }\r\n    reset() {\r\n        this._active = undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nexport class OvertypingCapturer {\r\n    constructor(editor, suggestModel) {\r\n        this._disposables = new DisposableStore();\r\n        this._lastOvertyped = [];\r\n        this._empty = true;\r\n        this._disposables.add(editor.onWillType(() => {\r\n            if (!this._empty) {\r\n                return;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = editor.getSelections();\r\n            const selectionsLength = selections.length;\r\n            // Check if it will overtype any selections\r\n            let willOvertype = false;\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                if (!selections[i].isEmpty()) {\r\n                    willOvertype = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!willOvertype) {\r\n                return;\r\n            }\r\n            this._lastOvertyped = [];\r\n            const model = editor.getModel();\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                const selection = selections[i];\r\n                // Check for overtyping capturer restrictions\r\n                if (model.getValueLengthInRange(selection) > OvertypingCapturer._maxSelectionLength) {\r\n                    return;\r\n                }\r\n                this._lastOvertyped[i] = { value: model.getValueInRange(selection), multiline: selection.startLineNumber !== selection.endLineNumber };\r\n            }\r\n            this._empty = false;\r\n        }));\r\n        this._disposables.add(suggestModel.onDidCancel(e => {\r\n            if (!this._empty && !e.retrigger) {\r\n                this._empty = true;\r\n            }\r\n        }));\r\n    }\r\n    getLastOvertypedInfo(idx) {\r\n        if (!this._empty && idx >= 0 && idx < this._lastOvertyped.length) {\r\n            return this._lastOvertyped[idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\nOvertypingCapturer._maxSelectionLength = 51200;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { SimpleKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { dispose, DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { ISuggestMemoryService } from './suggestMemory.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService, CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { SuggestAlternatives } from './suggestAlternatives.js';\r\nimport { SuggestModel } from './suggestModel.js';\r\nimport { SuggestWidget } from './suggestWidget.js';\r\nimport { WordContextKey } from './wordContextKey.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { IdleValue } from '../../../base/common/async.js';\r\nimport { isObject, assertType } from '../../../base/common/types.js';\r\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\r\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n// sticky suggest widget which doesn't disappear on focus out and such\r\nlet _sticky = false;\r\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\r\nclass LineSuffix {\r\n    constructor(_model, _position) {\r\n        this._model = _model;\r\n        this._position = _position;\r\n        // spy on what's happening right of the cursor. two cases:\r\n        // 1. end of line -> check that it's still end of line\r\n        // 2. mid of line -> add a marker and compute the delta\r\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\r\n        if (maxColumn !== _position.column) {\r\n            const offset = _model.getOffsetAt(_position);\r\n            const end = _model.getPositionAt(offset + 1);\r\n            this._marker = _model.deltaDecorations([], [{\r\n                    range: Range.fromPositions(_position, end),\r\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }\r\n                }]);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._marker && !this._model.isDisposed()) {\r\n            this._model.deltaDecorations(this._marker, []);\r\n        }\r\n    }\r\n    delta(position) {\r\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\r\n            // bail out early if things seems fishy\r\n            return 0;\r\n        }\r\n        // read the marker (in case suggest was triggered at line end) or compare\r\n        // the cursor to the line end.\r\n        if (this._marker) {\r\n            const range = this._model.getDecorationRange(this._marker[0]);\r\n            const end = this._model.getOffsetAt(range.getStartPosition());\r\n            return end - this._model.getOffsetAt(position);\r\n        }\r\n        else {\r\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\r\n        }\r\n    }\r\n}\r\nlet SuggestController = class SuggestController {\r\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService) {\r\n        this._memoryService = _memoryService;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._instantiationService = _instantiationService;\r\n        this._logService = _logService;\r\n        this._lineSuffix = new MutableDisposable();\r\n        this._toDispose = new DisposableStore();\r\n        this.editor = editor;\r\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\r\n        // context key: update insert/replace mode\r\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\r\n        ctxInsertMode.set(editor.getOption(106 /* suggest */).insertMode);\r\n        this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(106 /* suggest */).insertMode));\r\n        this.widget = this._toDispose.add(new IdleValue(() => {\r\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\r\n            this._toDispose.add(widget);\r\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\r\n            // Wire up logic to accept a suggestion on certain characters\r\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\r\n            this._toDispose.add(commitCharacterController);\r\n            this._toDispose.add(this.model.onDidSuggest(e => {\r\n                if (e.completionModel.items.length === 0) {\r\n                    commitCharacterController.reset();\r\n                }\r\n            }));\r\n            // Wire up makes text edit context key\r\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\r\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\r\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\r\n            this._toDispose.add(toDisposable(() => {\r\n                ctxMakesTextEdit.reset();\r\n                ctxHasInsertAndReplace.reset();\r\n                ctxCanResolve.reset();\r\n            }));\r\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\r\n                // (ctx: makesTextEdit)\r\n                const position = this.editor.getPosition();\r\n                const startColumn = item.editStart.column;\r\n                const endColumn = position.column;\r\n                let value = true;\r\n                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart'\r\n                    && this.model.state === 2 /* Auto */\r\n                    && !item.completion.command\r\n                    && !item.completion.additionalTextEdits\r\n                    && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */)\r\n                    && endColumn - startColumn === item.completion.insertText.length) {\r\n                    const oldText = this.editor.getModel().getValueInRange({\r\n                        startLineNumber: position.lineNumber,\r\n                        startColumn,\r\n                        endLineNumber: position.lineNumber,\r\n                        endColumn\r\n                    });\r\n                    value = oldText !== item.completion.insertText;\r\n                }\r\n                ctxMakesTextEdit.set(value);\r\n                // (ctx: hasInsertAndReplaceRange)\r\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\r\n                // (ctx: canResolve)\r\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\r\n            }));\r\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\r\n                // cmd + c on macOS, ctrl + c on Win / Linux\r\n                if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KEY_C */)) ||\r\n                    (platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KEY_C */)))) {\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                if (!e.toKeybinding().isModifierKey()) {\r\n                    this.editor.focus();\r\n                }\r\n            }));\r\n            return widget;\r\n        }));\r\n        // Wire up text overtyping capture\r\n        this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\r\n        }));\r\n        this._alternatives = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\r\n        }));\r\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\r\n        this._toDispose.add(this.model.onDidTrigger(e => {\r\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\r\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\r\n        }));\r\n        this._toDispose.add(this.model.onDidSuggest(e => {\r\n            if (!e.shy) {\r\n                let index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\r\n                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\r\n            }\r\n        }));\r\n        this._toDispose.add(this.model.onDidCancel(e => {\r\n            if (!e.retrigger) {\r\n                this.widget.value.hideWidget();\r\n            }\r\n        }));\r\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\r\n            if (!_sticky) {\r\n                this.model.cancel();\r\n                this.model.clear();\r\n            }\r\n        }));\r\n        // Manage the acceptSuggestionsOnEnter context key\r\n        let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\r\n        let updateFromConfig = () => {\r\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\r\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\r\n        };\r\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\r\n        updateFromConfig();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SuggestController.ID);\r\n    }\r\n    dispose() {\r\n        this._alternatives.dispose();\r\n        this._toDispose.dispose();\r\n        this.widget.dispose();\r\n        this.model.dispose();\r\n        this._lineSuffix.dispose();\r\n    }\r\n    _insertSuggestion(event, flags) {\r\n        if (!event || !event.item) {\r\n            this._alternatives.value.reset();\r\n            this.model.cancel();\r\n            this.model.clear();\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        const modelVersionNow = model.getAlternativeVersionId();\r\n        const { item } = event;\r\n        //\r\n        const tasks = [];\r\n        const cts = new CancellationTokenSource();\r\n        // pushing undo stops *before* additional text edits and\r\n        // *after* the main edit\r\n        if (!(flags & 1 /* NoBeforeUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\r\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\r\n        // keep item in memory\r\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\r\n        if (Array.isArray(item.completion.additionalTextEdits)) {\r\n            // sync additional edits\r\n            const scrollState = StableEditorScrollState.capture(this.editor);\r\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n        }\r\n        else if (!item.isResolved) {\r\n            // async additional edits\r\n            const sw = new StopWatch(true);\r\n            let position;\r\n            const docListener = model.onDidChangeContent(e => {\r\n                if (e.isFlush) {\r\n                    cts.cancel();\r\n                    docListener.dispose();\r\n                    return;\r\n                }\r\n                for (let change of e.changes) {\r\n                    const thisPosition = Range.getEndPosition(change.range);\r\n                    if (!position || Position.isBefore(thisPosition, position)) {\r\n                        position = thisPosition;\r\n                    }\r\n                }\r\n            });\r\n            let oldFlags = flags;\r\n            flags |= 2 /* NoAfterUndoStop */;\r\n            let didType = false;\r\n            let typeListener = this.editor.onWillType(() => {\r\n                typeListener.dispose();\r\n                didType = true;\r\n                if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n            });\r\n            tasks.push(item.resolve(cts.token).then(() => {\r\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\r\n                    return false;\r\n                }\r\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\r\n                    return false;\r\n                }\r\n                if (didType) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                const scrollState = StableEditorScrollState.capture(this.editor);\r\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                return true;\r\n            }).then(applied => {\r\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\r\n                docListener.dispose();\r\n                typeListener.dispose();\r\n            }));\r\n        }\r\n        let { insertText } = item.completion;\r\n        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\r\n            insertText = SnippetParser.escape(insertText);\r\n        }\r\n        SnippetController2.get(this.editor).insert(insertText, {\r\n            overwriteBefore: info.overwriteBefore,\r\n            overwriteAfter: info.overwriteAfter,\r\n            undoStopBefore: false,\r\n            undoStopAfter: false,\r\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\r\n            clipboardText: event.model.clipboardText,\r\n            overtypingCapturer: this._overtypingCapturer.value\r\n        });\r\n        if (!(flags & 2 /* NoAfterUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        if (!item.completion.command) {\r\n            // done\r\n            this.model.cancel();\r\n        }\r\n        else if (item.completion.command.id === TriggerSuggestAction.id) {\r\n            // retigger\r\n            this.model.trigger({ auto: true, shy: false }, true);\r\n        }\r\n        else {\r\n            // exec command, done\r\n            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\r\n            this.model.cancel();\r\n        }\r\n        if (flags & 4 /* KeepAlternativeSuggestions */) {\r\n            this._alternatives.value.set(event, next => {\r\n                // cancel resolving of additional edits\r\n                cts.cancel();\r\n                // this is not so pretty. when inserting the 'next'\r\n                // suggestion we undo until we are at the state at\r\n                // which we were before inserting the previous suggestion...\r\n                while (model.canUndo()) {\r\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\r\n                        model.undo();\r\n                    }\r\n                    this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\r\n                    break;\r\n                }\r\n            });\r\n        }\r\n        this._alertCompletionItem(item);\r\n        // clear only now - after all tasks are done\r\n        Promise.all(tasks).finally(() => {\r\n            this.model.clear();\r\n            cts.dispose();\r\n        });\r\n    }\r\n    getOverwriteInfo(item, toggleMode) {\r\n        assertType(this.editor.hasModel());\r\n        let replace = this.editor.getOption(106 /* suggest */).insertMode === 'replace';\r\n        if (toggleMode) {\r\n            replace = !replace;\r\n        }\r\n        const overwriteBefore = item.position.column - item.editStart.column;\r\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\r\n        const columnDelta = this.editor.getPosition().column - item.position.column;\r\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\r\n        return {\r\n            overwriteBefore: overwriteBefore + columnDelta,\r\n            overwriteAfter: overwriteAfter + suffixDelta\r\n        };\r\n    }\r\n    _alertCompletionItem(item) {\r\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\r\n            let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\r\n            alert(msg);\r\n        }\r\n    }\r\n    triggerSuggest(onlyFrom) {\r\n        if (this.editor.hasModel()) {\r\n            this.model.trigger({ auto: false, shy: false }, false, onlyFrom);\r\n            this.editor.revealLine(this.editor.getPosition().lineNumber, 0 /* Smooth */);\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    triggerSuggestAndAcceptBest(arg) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const positionNow = this.editor.getPosition();\r\n        const fallback = () => {\r\n            if (positionNow.equals(this.editor.getPosition())) {\r\n                this._commandService.executeCommand(arg.fallback);\r\n            }\r\n        };\r\n        const makesTextEdit = (item) => {\r\n            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\r\n                // snippet, other editor -> makes edit\r\n                return true;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const startColumn = item.editStart.column;\r\n            const endColumn = position.column;\r\n            if (endColumn - startColumn !== item.completion.insertText.length) {\r\n                // unequal lengths -> makes edit\r\n                return true;\r\n            }\r\n            const textNow = this.editor.getModel().getValueInRange({\r\n                startLineNumber: position.lineNumber,\r\n                startColumn,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn\r\n            });\r\n            // unequal text -> makes edit\r\n            return textNow !== item.completion.insertText;\r\n        };\r\n        Event.once(this.model.onDidTrigger)(_ => {\r\n            // wait for trigger because only then the cancel-event is trustworthy\r\n            let listener = [];\r\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\r\n                // retrigger or cancel -> try to type default text\r\n                dispose(listener);\r\n                fallback();\r\n            }, undefined, listener);\r\n            this.model.onDidSuggest(({ completionModel }) => {\r\n                dispose(listener);\r\n                if (completionModel.items.length === 0) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\r\n                const item = completionModel.items[index];\r\n                if (!makesTextEdit(item)) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                this.editor.pushUndoStop();\r\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\r\n            }, undefined, listener);\r\n        });\r\n        this.model.trigger({ auto: false, shy: true });\r\n        this.editor.revealLine(positionNow.lineNumber, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\r\n        const item = this.widget.value.getFocusedItem();\r\n        let flags = 0;\r\n        if (keepAlternativeSuggestions) {\r\n            flags |= 4 /* KeepAlternativeSuggestions */;\r\n        }\r\n        if (alternativeOverwriteConfig) {\r\n            flags |= 8 /* AlternativeOverwriteConfig */;\r\n        }\r\n        this._insertSuggestion(item, flags);\r\n    }\r\n    acceptNextSuggestion() {\r\n        this._alternatives.value.next();\r\n    }\r\n    acceptPrevSuggestion() {\r\n        this._alternatives.value.prev();\r\n    }\r\n    cancelSuggestWidget() {\r\n        this.model.cancel();\r\n        this.model.clear();\r\n        this.widget.value.hideWidget();\r\n    }\r\n    selectNextSuggestion() {\r\n        this.widget.value.selectNext();\r\n    }\r\n    selectNextPageSuggestion() {\r\n        this.widget.value.selectNextPage();\r\n    }\r\n    selectLastSuggestion() {\r\n        this.widget.value.selectLast();\r\n    }\r\n    selectPrevSuggestion() {\r\n        this.widget.value.selectPrevious();\r\n    }\r\n    selectPrevPageSuggestion() {\r\n        this.widget.value.selectPreviousPage();\r\n    }\r\n    selectFirstSuggestion() {\r\n        this.widget.value.selectFirst();\r\n    }\r\n    toggleSuggestionDetails() {\r\n        this.widget.value.toggleDetails();\r\n    }\r\n    toggleExplainMode() {\r\n        this.widget.value.toggleExplainMode();\r\n    }\r\n    toggleSuggestionFocus() {\r\n        this.widget.value.toggleDetailsFocus();\r\n    }\r\n    resetWidgetSize() {\r\n        this.widget.value.resetPersistedSize();\r\n    }\r\n    forceRenderingAbove() {\r\n        this.widget.value.forceRenderingAbove();\r\n    }\r\n    stopForceRenderingAbove() {\r\n        if (!this.widget.isInitialized) {\r\n            // This method has no effect if the widget is not initialized yet.\r\n            return;\r\n        }\r\n        this.widget.value.stopForceRenderingAbove();\r\n    }\r\n};\r\nSuggestController.ID = 'editor.contrib.suggestController';\r\nSuggestController = __decorate([\r\n    __param(1, ISuggestMemoryService),\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ILogService)\r\n], SuggestController);\r\nexport { SuggestController };\r\nexport class TriggerSuggestAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TriggerSuggestAction.id,\r\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\r\n            alias: 'Trigger Suggest',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n                secondary: [2048 /* CtrlCmd */ | 39 /* KEY_I */],\r\n                mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KEY_I */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = SuggestController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.triggerSuggest();\r\n    }\r\n}\r\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\r\nregisterEditorContribution(SuggestController.ID, SuggestController);\r\nregisterEditorAction(TriggerSuggestAction);\r\nconst weight = 100 /* EditorContrib */ + 90;\r\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptSelectedSuggestion',\r\n    precondition: SuggestContext.Visible,\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(true, false);\r\n    }\r\n}));\r\n// normal tab\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    primary: 2 /* Tab */,\r\n    weight\r\n});\r\n// accept on enter has special rules\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\r\n    primary: 3 /* Enter */,\r\n    weight,\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.replace', \"Replace\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\r\n});\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptAlternativeSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 3 /* Enter */,\r\n        secondary: [1024 /* Shift */ | 2 /* Tab */],\r\n    },\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(false, true);\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\r\n            title: nls.localize('accept.replace', \"Replace\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\r\n            title: nls.localize('accept.insert', \"Insert\")\r\n        }]\r\n}));\r\n// continue to support the old command\r\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'hideSuggestWidget',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.cancelSuggestWidget(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 12 /* PageDown */,\r\n        secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectLastSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectLastSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 11 /* PageUp */,\r\n        secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectFirstSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectFirstSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionDetails',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionDetails(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 10 /* Space */ }\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\r\n            title: nls.localize('detail.more', \"show less\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\r\n            title: nls.localize('detail.less', \"show more\")\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleExplainMode',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleExplainMode(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */,\r\n        primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionFocus',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionFocus(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */ }\r\n    }\r\n}));\r\n//#region tab completions\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertBestCompletion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: (x, arg) => {\r\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\r\n    },\r\n    kbOpts: {\r\n        weight,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertNextSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorAction(class extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.resetSuggestSize',\r\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\r\n            alias: 'Reset Suggest Widget Size',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        SuggestController.get(editor).resetWidgetSize();\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Emitter, Event } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { SnippetSession } from '../snippet/snippetSession.js';\r\nimport { SuggestController } from '../suggest/suggestController.js';\r\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this.isSuggestWidgetVisible = false;\r\n        this.isShiftKeyPressed = false;\r\n        this._isActive = false;\r\n        this._currentInlineCompletion = undefined;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\r\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\r\n            if (!this.isSuggestWidgetVisible) {\r\n                if (this._isActive) {\r\n                    this._isActive = false;\r\n                    this.onDidChangeEmitter.fire();\r\n                }\r\n            }\r\n        }, 100));\r\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\r\n        this._register(editor.onKeyDown(e => {\r\n            if (e.shiftKey && !this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = true;\r\n                this.update(this._isActive);\r\n            }\r\n        }));\r\n        this._register(editor.onKeyUp(e => {\r\n            if (e.shiftKey && this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = false;\r\n                this.update(this._isActive);\r\n            }\r\n        }));\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            let isBoundToSuggestWidget = false;\r\n            const bindToSuggestWidget = () => {\r\n                if (isBoundToSuggestWidget) {\r\n                    return;\r\n                }\r\n                isBoundToSuggestWidget = true;\r\n                this._register(suggestController.widget.value.onDidShow(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this.update(true);\r\n                }));\r\n                this._register(suggestController.widget.value.onDidHide(() => {\r\n                    this.isSuggestWidgetVisible = false;\r\n                    this.setInactiveDelayed.schedule();\r\n                    this.update(this._isActive);\r\n                }));\r\n                this._register(suggestController.widget.value.onDidFocus(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this.update(true);\r\n                }));\r\n            };\r\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\r\n                bindToSuggestWidget();\r\n            }));\r\n        }\r\n        this.update(this._isActive);\r\n    }\r\n    /**\r\n     * Returns undefined if the suggest widget is not active.\r\n    */\r\n    get state() {\r\n        if (!this._isActive) {\r\n            return undefined;\r\n        }\r\n        return { selectedItemAsInlineCompletion: this._currentInlineCompletion };\r\n    }\r\n    update(newActive) {\r\n        const newInlineCompletion = this.getInlineCompletion();\r\n        let shouldFire = false;\r\n        if (this._currentInlineCompletion !== newInlineCompletion) {\r\n            this._currentInlineCompletion = newInlineCompletion;\r\n            shouldFire = true;\r\n        }\r\n        if (this._isActive !== newActive) {\r\n            this._isActive = newActive;\r\n            shouldFire = true;\r\n        }\r\n        if (shouldFire) {\r\n            this.onDidChangeEmitter.fire();\r\n        }\r\n    }\r\n    getInlineCompletion() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (!suggestController) {\r\n            return undefined;\r\n        }\r\n        if (!this.isSuggestWidgetVisible) {\r\n            return undefined;\r\n        }\r\n        const focusedItem = suggestController.widget.value.getFocusedItem();\r\n        if (!focusedItem) {\r\n            return undefined;\r\n        }\r\n        // TODO: item.isResolved\r\n        return suggestionToInlineCompletion(suggestController, this.editor.getPosition(), focusedItem, this.isShiftKeyPressed);\r\n    }\r\n    stopForceRenderingAbove() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            suggestController.stopForceRenderingAbove();\r\n        }\r\n    }\r\n    forceRenderingAbove() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            suggestController.forceRenderingAbove();\r\n        }\r\n    }\r\n}\r\nfunction suggestionToInlineCompletion(suggestController, position, suggestion, toggleMode) {\r\n    const item = suggestion.item;\r\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\r\n        // cannot represent additional text edits\r\n        return {\r\n            text: '',\r\n            range: Range.fromPositions(position, position),\r\n        };\r\n    }\r\n    let { insertText } = item.completion;\r\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n        const snippet = new SnippetParser().parse(insertText);\r\n        const model = suggestController.editor.getModel();\r\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\r\n        insertText = snippet.toString();\r\n    }\r\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\r\n    return {\r\n        text: insertText,\r\n        range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { InlineCompletionTriggerKind } from '../../common/modes.js';\r\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\r\nimport { provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\r\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\r\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\r\nexport class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\r\n    constructor(editor, cache) {\r\n        super(editor);\r\n        this.cache = cache;\r\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor));\r\n        this.updateOperation = this._register(new MutableDisposable());\r\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\r\n        this.minReservedLineCount = 0;\r\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\r\n            this.updateCacheSoon.schedule();\r\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\r\n            if (!suggestWidgetState) {\r\n                this.minReservedLineCount = 0;\r\n            }\r\n            const newGhostText = this.ghostText;\r\n            if (newGhostText) {\r\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\r\n            }\r\n            if (this.minReservedLineCount >= 1 && this.isSuggestionPreviewEnabled()) {\r\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\r\n            }\r\n            else {\r\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n        this._register(this.cache.onDidChange(() => {\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.isSuggestionPreviewEnabled()) {\r\n                this.minReservedLineCount = 0;\r\n                this.updateCacheSoon.schedule();\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\r\n    }\r\n    get isActive() {\r\n        return this.suggestionInlineCompletionSource.state !== undefined;\r\n    }\r\n    isSuggestionPreviewEnabled() {\r\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\r\n        return suggestOptions.preview;\r\n    }\r\n    updateCache() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const state = this.suggestionInlineCompletionSource.state;\r\n            if (!state || !state.selectedItemAsInlineCompletion) {\r\n                return;\r\n            }\r\n            const info = {\r\n                text: state.selectedItemAsInlineCompletion.text,\r\n                range: state.selectedItemAsInlineCompletion.range,\r\n            };\r\n            const position = this.editor.getPosition();\r\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                let result;\r\n                try {\r\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                    return;\r\n                }\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\r\n                this.onDidChangeEmitter.fire();\r\n            }));\r\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\r\n            this.updateOperation.value = operation;\r\n            yield promise;\r\n            if (this.updateOperation.value === operation) {\r\n                this.updateOperation.clear();\r\n            }\r\n        });\r\n    }\r\n    get ghostText() {\r\n        var _a, _b;\r\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\r\n        const originalInlineCompletion = minimizeInlineCompletion(this.editor.getModel(), suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItemAsInlineCompletion);\r\n        const augmentedCompletion = minimizeInlineCompletion(this.editor.getModel(), (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\r\n        const finalCompletion = augmentedCompletion\r\n            && originalInlineCompletion\r\n            && augmentedCompletion.text.startsWith(originalInlineCompletion.text)\r\n            && augmentedCompletion.range.equalsRange(originalInlineCompletion.range)\r\n            ? augmentedCompletion : (originalInlineCompletion || augmentedCompletion);\r\n        const inlineCompletionPreviewLength = originalInlineCompletion ? ((finalCompletion === null || finalCompletion === void 0 ? void 0 : finalCompletion.text.length) || 0) - (originalInlineCompletion.text.length) : 0;\r\n        const toGhostText = (completion) => {\r\n            const mode = this.editor.getOptions().get(106 /* suggest */).previewMode;\r\n            return completion\r\n                ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\r\n                    // Show an invisible ghost text to reserve space\r\n                    new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\r\n                : undefined;\r\n        };\r\n        const newGhostText = toGhostText(finalCompletion);\r\n        return this.isSuggestionPreviewEnabled()\r\n            ? newGhostText\r\n            : undefined;\r\n    }\r\n}\r\nfunction sum(arr) {\r\n    return arr.reduce((a, b) => a + b, 0);\r\n}\r\nfunction lengthOfLongestCommonPrefix(str1, str2) {\r\n    let i = 0;\r\n    while (i < str1.length && i < str2.length && str1[i] === str2[i]) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\nfunction lengthOfLongestCommonSuffix(str1, str2) {\r\n    let i = 0;\r\n    while (i < str1.length && i < str2.length && str1[str1.length - i - 1] === str2[str2.length - i - 1]) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\nexport function minimizeInlineCompletion(model, inlineCompletion) {\r\n    if (!inlineCompletion) {\r\n        return inlineCompletion;\r\n    }\r\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\r\n    const commonPrefixLength = lengthOfLongestCommonPrefix(valueToReplace, inlineCompletion.text);\r\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLength;\r\n    const start = model.getPositionAt(startOffset);\r\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLength);\r\n    const commonSuffixLength = lengthOfLongestCommonSuffix(remainingValueToReplace, inlineCompletion.text);\r\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLength));\r\n    return {\r\n        range: Range.fromPositions(start, end),\r\n        text: inlineCompletion.text.substr(commonPrefixLength, inlineCompletion.text.length - commonPrefixLength - commonSuffixLength),\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function createDisposableRef(object, disposable) {\r\n    return {\r\n        object,\r\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\r\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { createDisposableRef } from './utils.js';\r\nimport { InlineCompletionTriggerKind } from '../../common/modes.js';\r\nexport class DelegatingModel extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.hasCachedGhostText = false;\r\n        this.currentModelRef = this._register(new MutableDisposable());\r\n    }\r\n    get targetModel() {\r\n        var _a;\r\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\r\n    }\r\n    setTargetModel(model) {\r\n        var _a;\r\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\r\n            return;\r\n        }\r\n        this.currentModelRef.clear();\r\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\r\n            this.hasCachedGhostText = false;\r\n            this.onDidChangeEmitter.fire();\r\n        })) : undefined;\r\n        this.hasCachedGhostText = false;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    get ghostText() {\r\n        var _a, _b;\r\n        if (!this.hasCachedGhostText) {\r\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\r\n            this.hasCachedGhostText = true;\r\n        }\r\n        return this.cachedGhostText;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\r\n    }\r\n}\r\n/**\r\n * A ghost text model that is both driven by inline completions and the suggest widget.\r\n*/\r\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\r\n    constructor(editor, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.commandService = commandService;\r\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\r\n        this.suggestWidgetAdapterModel = this._register(new SuggestWidgetPreviewModel(this.editor, this.sharedCache));\r\n        this.inlineCompletionsModel = this._register(new InlineCompletionsModel(this.editor, this.sharedCache, this.commandService));\r\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\r\n            this.updateModel();\r\n        }));\r\n        this.updateModel();\r\n    }\r\n    get activeInlineCompletionsModel() {\r\n        if (this.targetModel === this.inlineCompletionsModel) {\r\n            return this.inlineCompletionsModel;\r\n        }\r\n        return undefined;\r\n    }\r\n    updateModel() {\r\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\r\n            ? this.suggestWidgetAdapterModel\r\n            : this.inlineCompletionsModel);\r\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n        if (ghostText) {\r\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\r\n        }\r\n        return false;\r\n    }\r\n    triggerInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\r\n    }\r\n    commitInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\r\n    }\r\n    hideInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextModel = __decorate([\r\n    __param(1, ICommandService)\r\n], GhostTextModel);\r\nexport { GhostTextModel };\r\nexport class SharedInlineCompletionCache extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.cache = this._register(new MutableDisposable());\r\n    }\r\n    get value() {\r\n        return this.cache.value;\r\n    }\r\n    setValue(editor, completionsSource, triggerKind) {\r\n        this.cache.value = new SynchronizedInlineCompletionsCache(editor, completionsSource, () => this.onDidChangeEmitter.fire(), triggerKind);\r\n    }\r\n    clearAndLeak() {\r\n        return this.cache.clearAndLeak();\r\n    }\r\n    clear() {\r\n        this.cache.clear();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { GhostTextWidget } from './ghostTextWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { GhostTextModel } from './ghostTextModel.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { inlineSuggestCommitId } from './consts.js';\r\nlet GhostTextController = class GhostTextController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.triggeredExplicitly = false;\r\n        this.activeController = this._register(new MutableDisposable());\r\n        this._register(this.editor.onDidChangeModel(() => {\r\n            this.updateModelController();\r\n        }));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(106 /* suggest */)) {\r\n                this.updateModelController();\r\n            }\r\n            if (e.hasChanged(54 /* inlineSuggest */)) {\r\n                this.updateModelController();\r\n            }\r\n        }));\r\n        this.updateModelController();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GhostTextController.ID);\r\n    }\r\n    get activeModel() {\r\n        var _a;\r\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\r\n    }\r\n    // Don't call this method when not neccessary. It will recreate the activeController.\r\n    updateModelController() {\r\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\r\n        const inlineSuggestOptions = this.editor.getOption(54 /* inlineSuggest */);\r\n        this.activeController.value = undefined;\r\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\r\n        this.activeController.value =\r\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\r\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\r\n                : undefined;\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        var _a, _b;\r\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\r\n    }\r\n    trigger() {\r\n        var _a;\r\n        this.triggeredExplicitly = true;\r\n        if (!this.activeController.value) {\r\n            this.updateModelController();\r\n        }\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\r\n    }\r\n    commit() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\r\n    }\r\n    hide() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\r\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\r\nGhostTextController.ID = 'editor.contrib.ghostTextController';\r\nGhostTextController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], GhostTextController);\r\nexport { GhostTextController };\r\nclass GhostTextContextKeys {\r\n    constructor(contextKeyService) {\r\n        this.contextKeyService = contextKeyService;\r\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\r\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\r\n    }\r\n}\r\n/**\r\n * The controller for a text editor with an initialized text model.\r\n * Must be disposed as soon as the model detaches from the editor.\r\n*/\r\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\r\n    constructor(editor, instantiationService, contextKeyService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\r\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\r\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\r\n        this._register(toDisposable(() => {\r\n            this.contextKeys.inlineCompletionVisible.set(false);\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }));\r\n        this._register(this.model.onDidChange(() => {\r\n            this.updateContextKeys();\r\n        }));\r\n        this.updateContextKeys();\r\n    }\r\n    updateContextKeys() {\r\n        var _a;\r\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\r\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\r\n        if (ghostText && ghostText.parts.length > 0) {\r\n            const { column, lines } = ghostText.parts[0];\r\n            const suggestionStartsWithWs = lines[0].startsWith(' ') || lines[0].startsWith('\\t');\r\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\r\n            const inIndentation = column <= indentationEndColumn;\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(!!this.model.activeInlineCompletionsModel\r\n                && suggestionStartsWithWs && inIndentation);\r\n        }\r\n        else {\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }\r\n    }\r\n};\r\nActiveGhostTextController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IContextKeyService)\r\n], ActiveGhostTextController);\r\nexport { ActiveGhostTextController };\r\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\r\nexport const commitInlineSuggestionAction = new GhostTextCommand({\r\n    id: inlineSuggestCommitId,\r\n    precondition: GhostTextController.inlineSuggestionVisible,\r\n    handler(x) {\r\n        x.commit();\r\n        x.editor.focus();\r\n    }\r\n});\r\nregisterEditorCommand(commitInlineSuggestionAction);\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    primary: 2 /* Tab */,\r\n    weight: 200,\r\n    id: commitInlineSuggestionAction.id,\r\n    when: ContextKeyExpr.and(commitInlineSuggestionAction.precondition, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentation.toNegated()),\r\n});\r\nregisterEditorCommand(new GhostTextCommand({\r\n    id: 'editor.action.inlineSuggest.hide',\r\n    precondition: GhostTextController.inlineSuggestionVisible,\r\n    kbOpts: {\r\n        weight: 100,\r\n        primary: 9 /* Escape */,\r\n    },\r\n    handler(x) {\r\n        x.hide();\r\n    }\r\n}));\r\nexport class ShowNextInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowNextInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\r\n            alias: 'Show Next Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showNextInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\r\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowPreviousInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\r\n            alias: 'Show Previous Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showPreviousInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\r\nexport class TriggerInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.trigger',\r\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\r\n            alias: 'Trigger Inline Suggestion',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.trigger();\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\r\nregisterEditorAction(TriggerInlineSuggestionAction);\r\nregisterEditorAction(ShowNextInlineSuggestionAction);\r\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { HoverForeignElementAnchor } from '../hover/hoverTypes.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IMenuService, MenuId, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nexport class InlineCompletionsHover {\r\n    constructor(owner, range, controller) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.controller = controller;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n    hasMultipleSuggestions() {\r\n        return this.controller.hasMultipleInlineCompletions();\r\n    }\r\n}\r\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\r\n    constructor(_editor, _hover, _commandService, _menuService, _contextKeyService, _modeService, _openerService, accessibilityService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._commandService = _commandService;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this.accessibilityService = accessibilityService;\r\n    }\r\n    suggestHoverAnchor(mouseEvent) {\r\n        const controller = GhostTextController.get(this._editor);\r\n        if (!controller) {\r\n            return null;\r\n        }\r\n        if (mouseEvent.target.type === 8 /* CONTENT_VIEW_ZONE */) {\r\n            // handle the case where the mouse is over the view zone\r\n            const viewZoneData = mouseEvent.target.detail;\r\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\r\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\r\n            }\r\n        }\r\n        if (mouseEvent.target.type === 7 /* CONTENT_EMPTY */ && mouseEvent.target.range) {\r\n            // handle the case where the mouse is over the empty portion of a line following ghost text\r\n            if (controller.shouldShowHoverAt(mouseEvent.target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, mouseEvent.target.range);\r\n            }\r\n        }\r\n        if (mouseEvent.target.type === 6 /* CONTENT_TEXT */ && mouseEvent.target.range && mouseEvent.target.detail) {\r\n            // handle the case where the mouse is directly over ghost text\r\n            const mightBeForeignElement = mouseEvent.target.detail.mightBeForeignElement;\r\n            if (mightBeForeignElement && controller.shouldShowHoverAt(mouseEvent.target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, mouseEvent.target.range);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        const controller = GhostTextController.get(this._editor);\r\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\r\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\r\n        }\r\n        return [];\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        const disposableStore = new DisposableStore();\r\n        const part = hoverParts[0];\r\n        if (this.accessibilityService.isScreenReaderOptimized()) {\r\n            this.renderScreenReaderText(part, fragment, disposableStore);\r\n        }\r\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\r\n        const previousAction = statusBar.addAction({\r\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\r\n            commandId: ShowNextInlineSuggestionAction.ID,\r\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\r\n        });\r\n        const nextAction = statusBar.addAction({\r\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\r\n            commandId: ShowPreviousInlineSuggestionAction.ID,\r\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\r\n        });\r\n        statusBar.addAction({\r\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\r\n            commandId: commitInlineSuggestionAction.id,\r\n            run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\r\n        });\r\n        const actions = [previousAction, nextAction];\r\n        for (const action of actions) {\r\n            action.setEnabled(false);\r\n        }\r\n        part.hasMultipleSuggestions().then(hasMore => {\r\n            for (const action of actions) {\r\n                action.setEnabled(hasMore);\r\n            }\r\n        });\r\n        for (const [_, group] of menu.getActions()) {\r\n            for (const action of group) {\r\n                if (action instanceof MenuItemAction) {\r\n                    statusBar.addAction({\r\n                        label: action.label,\r\n                        commandId: action.item.id,\r\n                        run: () => this._commandService.executeCommand(action.item.id)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return disposableStore;\r\n    }\r\n    renderScreenReaderText(part, fragment, disposableStore) {\r\n        var _a, _b;\r\n        const $ = dom.$;\r\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\r\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\r\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._modeService, this._openerService));\r\n        const render = (code) => {\r\n            disposableStore.add(renderer.onDidRenderAsync(() => {\r\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\r\n                this._hover.onContentsChanged();\r\n            }));\r\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\r\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\r\n            hoverContentsElement.replaceChildren(renderedContents.element);\r\n        };\r\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\r\n        if (ghostText) {\r\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\r\n            render(ghostText.renderForScreenReader(lineText));\r\n        }\r\n        fragment.appendChild(markdownHoverElement);\r\n    }\r\n};\r\nInlineCompletionsHoverParticipant = __decorate([\r\n    __param(2, ICommandService),\r\n    __param(3, IMenuService),\r\n    __param(4, IContextKeyService),\r\n    __param(5, IModeService),\r\n    __param(6, IOpenerService),\r\n    __param(7, IAccessibilityService)\r\n], InlineCompletionsHoverParticipant);\r\nexport { InlineCompletionsHoverParticipant };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport class ColorPickerModel {\r\n    constructor(color, availableColorPresentations, presentationIndex) {\r\n        this.presentationIndex = presentationIndex;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this._onDidChangeColor = new Emitter();\r\n        this.onDidChangeColor = this._onDidChangeColor.event;\r\n        this._onDidChangePresentation = new Emitter();\r\n        this.onDidChangePresentation = this._onDidChangePresentation.event;\r\n        this.originalColor = color;\r\n        this._color = color;\r\n        this._colorPresentations = availableColorPresentations;\r\n    }\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(color) {\r\n        if (this._color.equals(color)) {\r\n            return;\r\n        }\r\n        this._color = color;\r\n        this._onDidChangeColor.fire(color);\r\n    }\r\n    get presentation() { return this.colorPresentations[this.presentationIndex]; }\r\n    get colorPresentations() {\r\n        return this._colorPresentations;\r\n    }\r\n    set colorPresentations(colorPresentations) {\r\n        this._colorPresentations = colorPresentations;\r\n        if (this.presentationIndex > colorPresentations.length - 1) {\r\n            this.presentationIndex = 0;\r\n        }\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    selectNextColorPresentation() {\r\n        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\r\n        this.flushColor();\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    guessColorPresentation(color, originalText) {\r\n        for (let i = 0; i < this.colorPresentations.length; i++) {\r\n            if (originalText.toLowerCase() === this.colorPresentations[i].label) {\r\n                this.presentationIndex = i;\r\n                this._onDidChangePresentation.fire(this.presentation);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    flushColor() {\r\n        this._onColorFlushed.fire(this._color);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './colorPicker.css';\r\nimport { onDidChangeZoomLevel } from '../../../base/browser/browser.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../base/browser/globalMouseMoveMonitor.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Color, HSVA, RGBA } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { editorHoverBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nconst $ = dom.$;\r\nexport class ColorPickerHeader extends Disposable {\r\n    constructor(container, model, themeService) {\r\n        super();\r\n        this.model = model;\r\n        this.domNode = $('.colorpicker-header');\r\n        dom.append(container, this.domNode);\r\n        this.pickedColorNode = dom.append(this.domNode, $('.picked-color'));\r\n        const colorBox = dom.append(this.domNode, $('.original-color'));\r\n        colorBox.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\r\n        this.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\r\n        this._register(registerThemingParticipant((theme, collector) => {\r\n            this.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\r\n        }));\r\n        this._register(dom.addDisposableListener(this.pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\r\n        this._register(dom.addDisposableListener(colorBox, dom.EventType.CLICK, () => {\r\n            this.model.color = this.model.originalColor;\r\n            this.model.flushColor();\r\n        }));\r\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\r\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\r\n        this.pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\r\n    }\r\n    onDidChangeColor(color) {\r\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\r\n        this.pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\r\n        this.onDidChangePresentation();\r\n    }\r\n    onDidChangePresentation() {\r\n        this.pickedColorNode.textContent = this.model.presentation ? this.model.presentation.label : '';\r\n    }\r\n}\r\nexport class ColorPickerBody extends Disposable {\r\n    constructor(container, model, pixelRatio) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this.domNode = $('.colorpicker-body');\r\n        dom.append(container, this.domNode);\r\n        this.saturationBox = new SaturationBox(this.domNode, this.model, this.pixelRatio);\r\n        this._register(this.saturationBox);\r\n        this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange, this));\r\n        this._register(this.saturationBox.onColorFlushed(this.flushColor, this));\r\n        this.opacityStrip = new OpacityStrip(this.domNode, this.model);\r\n        this._register(this.opacityStrip);\r\n        this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange, this));\r\n        this._register(this.opacityStrip.onColorFlushed(this.flushColor, this));\r\n        this.hueStrip = new HueStrip(this.domNode, this.model);\r\n        this._register(this.hueStrip);\r\n        this._register(this.hueStrip.onDidChange(this.onDidHueChange, this));\r\n        this._register(this.hueStrip.onColorFlushed(this.flushColor, this));\r\n    }\r\n    flushColor() {\r\n        this.model.flushColor();\r\n    }\r\n    onDidSaturationValueChange({ s, v }) {\r\n        const hsva = this.model.color.hsva;\r\n        this.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\r\n    }\r\n    onDidOpacityChange(a) {\r\n        const hsva = this.model.color.hsva;\r\n        this.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\r\n    }\r\n    onDidHueChange(value) {\r\n        const hsva = this.model.color.hsva;\r\n        const h = (1 - value) * 360;\r\n        this.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\r\n    }\r\n    layout() {\r\n        this.saturationBox.layout();\r\n        this.opacityStrip.layout();\r\n        this.hueStrip.layout();\r\n    }\r\n}\r\nclass SaturationBox extends Disposable {\r\n    constructor(container, model, pixelRatio) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this.domNode = $('.saturation-wrap');\r\n        dom.append(container, this.domNode);\r\n        // Create canvas, draw selected color\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.className = 'saturation-box';\r\n        dom.append(this.domNode, this.canvas);\r\n        // Add selection circle\r\n        this.selection = $('.saturation-selection');\r\n        dom.append(this.domNode, this.selection);\r\n        this.layout();\r\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\r\n        this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this.monitor = null;\r\n    }\r\n    onMouseDown(e) {\r\n        this.monitor = this._register(new GlobalMouseMoveMonitor());\r\n        const origin = dom.getDomNodePagePosition(this.domNode);\r\n        if (e.target !== this.selection) {\r\n            this.onDidChangePosition(e.offsetX, e.offsetY);\r\n        }\r\n        this.monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangePosition(event.posx - origin.left, event.posy - origin.top), () => null);\r\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\r\n            this._onColorFlushed.fire();\r\n            mouseUpListener.dispose();\r\n            if (this.monitor) {\r\n                this.monitor.stopMonitoring(true);\r\n                this.monitor = null;\r\n            }\r\n        }, true);\r\n    }\r\n    onDidChangePosition(left, top) {\r\n        const s = Math.max(0, Math.min(1, left / this.width));\r\n        const v = Math.max(0, Math.min(1, 1 - (top / this.height)));\r\n        this.paintSelection(s, v);\r\n        this._onDidChange.fire({ s, v });\r\n    }\r\n    layout() {\r\n        this.width = this.domNode.offsetWidth;\r\n        this.height = this.domNode.offsetHeight;\r\n        this.canvas.width = this.width * this.pixelRatio;\r\n        this.canvas.height = this.height * this.pixelRatio;\r\n        this.paint();\r\n        const hsva = this.model.color.hsva;\r\n        this.paintSelection(hsva.s, hsva.v);\r\n    }\r\n    paint() {\r\n        const hsva = this.model.color.hsva;\r\n        const saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\r\n        const ctx = this.canvas.getContext('2d');\r\n        const whiteGradient = ctx.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\r\n        whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\r\n        whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n        const blackGradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\r\n        blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\r\n        blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\r\n        ctx.rect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.fillStyle = Color.Format.CSS.format(saturatedColor);\r\n        ctx.fill();\r\n        ctx.fillStyle = whiteGradient;\r\n        ctx.fill();\r\n        ctx.fillStyle = blackGradient;\r\n        ctx.fill();\r\n    }\r\n    paintSelection(s, v) {\r\n        this.selection.style.left = `${s * this.width}px`;\r\n        this.selection.style.top = `${this.height - v * this.height}px`;\r\n    }\r\n    onDidChangeColor() {\r\n        if (this.monitor && this.monitor.isMonitoring()) {\r\n            return;\r\n        }\r\n        this.paint();\r\n    }\r\n}\r\nclass Strip extends Disposable {\r\n    constructor(container, model) {\r\n        super();\r\n        this.model = model;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this.domNode = dom.append(container, $('.strip'));\r\n        this.overlay = dom.append(this.domNode, $('.overlay'));\r\n        this.slider = dom.append(this.domNode, $('.slider'));\r\n        this.slider.style.top = `0px`;\r\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\r\n        this.layout();\r\n    }\r\n    layout() {\r\n        this.height = this.domNode.offsetHeight - this.slider.offsetHeight;\r\n        const value = this.getValue(this.model.color);\r\n        this.updateSliderPosition(value);\r\n    }\r\n    onMouseDown(e) {\r\n        const monitor = this._register(new GlobalMouseMoveMonitor());\r\n        const origin = dom.getDomNodePagePosition(this.domNode);\r\n        this.domNode.classList.add('grabbing');\r\n        if (e.target !== this.slider) {\r\n            this.onDidChangeTop(e.offsetY);\r\n        }\r\n        monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangeTop(event.posy - origin.top), () => null);\r\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\r\n            this._onColorFlushed.fire();\r\n            mouseUpListener.dispose();\r\n            monitor.stopMonitoring(true);\r\n            this.domNode.classList.remove('grabbing');\r\n        }, true);\r\n    }\r\n    onDidChangeTop(top) {\r\n        const value = Math.max(0, Math.min(1, 1 - (top / this.height)));\r\n        this.updateSliderPosition(value);\r\n        this._onDidChange.fire(value);\r\n    }\r\n    updateSliderPosition(value) {\r\n        this.slider.style.top = `${(1 - value) * this.height}px`;\r\n    }\r\n}\r\nclass OpacityStrip extends Strip {\r\n    constructor(container, model) {\r\n        super(container, model);\r\n        this.domNode.classList.add('opacity-strip');\r\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this.onDidChangeColor(this.model.color);\r\n    }\r\n    onDidChangeColor(color) {\r\n        const { r, g, b } = color.rgba;\r\n        const opaque = new Color(new RGBA(r, g, b, 1));\r\n        const transparent = new Color(new RGBA(r, g, b, 0));\r\n        this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\r\n    }\r\n    getValue(color) {\r\n        return color.hsva.a;\r\n    }\r\n}\r\nclass HueStrip extends Strip {\r\n    constructor(container, model) {\r\n        super(container, model);\r\n        this.domNode.classList.add('hue-strip');\r\n    }\r\n    getValue(color) {\r\n        return 1 - (color.hsva.h / 360);\r\n    }\r\n}\r\nexport class ColorPickerWidget extends Widget {\r\n    constructor(container, model, pixelRatio, themeService) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this._register(onDidChangeZoomLevel(() => this.layout()));\r\n        const element = $('.colorpicker-widget');\r\n        container.appendChild(element);\r\n        const header = new ColorPickerHeader(element, this.model, themeService);\r\n        this.body = new ColorPickerBody(element, this.model, this.pixelRatio);\r\n        this._register(header);\r\n        this._register(this.body);\r\n    }\r\n    layout() {\r\n        this.body.layout();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { getColorPresentations } from '../colorPicker/color.js';\r\nimport { ColorDetector } from '../colorPicker/colorDetector.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { ColorPickerModel } from '../colorPicker/colorPickerModel.js';\r\nimport { ColorPickerWidget } from '../colorPicker/colorPickerWidget.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nexport class ColorHover {\r\n    constructor(owner, range, model, provider) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.model = model;\r\n        this.provider = provider;\r\n        /**\r\n         * Force the hover to always be rendered at this specific range,\r\n         * even in the case of multiple hover parts.\r\n         */\r\n        this.forceShowAtRange = true;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet ColorHoverParticipant = class ColorHoverParticipant {\r\n    constructor(_editor, _hover, _themeService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._themeService = _themeService;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        return [];\r\n    }\r\n    computeAsync(anchor, lineDecorations, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return [];\r\n            }\r\n            const colorDetector = ColorDetector.get(this._editor);\r\n            for (const d of lineDecorations) {\r\n                const colorData = colorDetector.getColorData(d.range.getStartPosition());\r\n                if (colorData) {\r\n                    const colorHover = yield this._createColorHover(this._editor.getModel(), colorData.colorInfo, colorData.provider);\r\n                    return [colorHover];\r\n                }\r\n            }\r\n            return [];\r\n        });\r\n    }\r\n    _createColorHover(editorModel, colorInfo, provider) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const originalText = editorModel.getValueInRange(colorInfo.range);\r\n            const { red, green, blue, alpha } = colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            const color = new Color(rgba);\r\n            const colorPresentations = yield getColorPresentations(editorModel, colorInfo, provider, CancellationToken.None);\r\n            const model = new ColorPickerModel(color, [], 0);\r\n            model.colorPresentations = colorPresentations || [];\r\n            model.guessColorPresentation(color, originalText);\r\n            return new ColorHover(this, Range.lift(colorInfo.range), model, provider);\r\n        });\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        if (hoverParts.length === 0 || !this._editor.hasModel()) {\r\n            return Disposable.None;\r\n        }\r\n        const disposables = new DisposableStore();\r\n        const colorHover = hoverParts[0];\r\n        const editorModel = this._editor.getModel();\r\n        const model = colorHover.model;\r\n        const widget = disposables.add(new ColorPickerWidget(fragment, model, this._editor.getOption(128 /* pixelRatio */), this._themeService));\r\n        let range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\r\n        const updateEditorModel = () => {\r\n            let textEdits;\r\n            let newRange;\r\n            if (model.presentation.textEdit) {\r\n                textEdits = [model.presentation.textEdit];\r\n                newRange = new Range(model.presentation.textEdit.range.startLineNumber, model.presentation.textEdit.range.startColumn, model.presentation.textEdit.range.endLineNumber, model.presentation.textEdit.range.endColumn);\r\n                const trackedRange = this._editor.getModel()._setTrackedRange(null, newRange, 3 /* GrowsOnlyWhenTypingAfter */);\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n                newRange = this._editor.getModel()._getTrackedRange(trackedRange) || newRange;\r\n            }\r\n            else {\r\n                textEdits = [{ identifier: null, range, text: model.presentation.label, forceMoveMarkers: false }];\r\n                newRange = range.setEndPosition(range.endLineNumber, range.startColumn + model.presentation.label.length);\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n            }\r\n            if (model.presentation.additionalTextEdits) {\r\n                textEdits = [...model.presentation.additionalTextEdits];\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n                this._hover.hide();\r\n            }\r\n            this._editor.pushUndoStop();\r\n            range = newRange;\r\n        };\r\n        const updateColorPresentations = (color) => {\r\n            return getColorPresentations(editorModel, {\r\n                range: range,\r\n                color: {\r\n                    red: color.rgba.r / 255,\r\n                    green: color.rgba.g / 255,\r\n                    blue: color.rgba.b / 255,\r\n                    alpha: color.rgba.a\r\n                }\r\n            }, colorHover.provider, CancellationToken.None).then((colorPresentations) => {\r\n                model.colorPresentations = colorPresentations || [];\r\n            });\r\n        };\r\n        disposables.add(model.onColorFlushed((color) => {\r\n            updateColorPresentations(color).then(updateEditorModel);\r\n        }));\r\n        disposables.add(model.onDidChangeColor(updateColorPresentations));\r\n        this._hover.setColorPicker(widget);\r\n        return disposables;\r\n    }\r\n};\r\nColorHoverParticipant = __decorate([\r\n    __param(2, IThemeService)\r\n], ColorHoverParticipant);\r\nexport { ColorHoverParticipant };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { coalesce, flatten } from '../../../base/common/arrays.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { HoverWidget, HoverAction } from '../../../base/browser/ui/hover/hoverWidget.js';\r\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\r\nimport { InlineCompletionsHoverParticipant } from '../inlineCompletions/inlineCompletionsHoverParticipant.js';\r\nimport { ColorHoverParticipant } from './colorHoverParticipant.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { HoverRangeAnchor } from './hoverTypes.js';\r\nconst $ = dom.$;\r\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\r\n    constructor(_keybindingService) {\r\n        super();\r\n        this._keybindingService = _keybindingService;\r\n        this._hasContent = false;\r\n        this.hoverElement = $('div.hover-row.status-bar');\r\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\r\n    }\r\n    get hasContent() {\r\n        return this._hasContent;\r\n    }\r\n    addAction(actionOptions) {\r\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\r\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\r\n        this._hasContent = true;\r\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\r\n    }\r\n    append(element) {\r\n        const result = dom.append(this.actionsElement, element);\r\n        this._hasContent = true;\r\n        return result;\r\n    }\r\n};\r\nEditorHoverStatusBar = __decorate([\r\n    __param(0, IKeybindingService)\r\n], EditorHoverStatusBar);\r\nclass ModesContentComputer {\r\n    constructor(editor, _participants) {\r\n        this._participants = _participants;\r\n        this._editor = editor;\r\n        this._result = [];\r\n        this._anchor = null;\r\n    }\r\n    setAnchor(anchor) {\r\n        this._anchor = anchor;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    static _getLineDecorations(editor, anchor) {\r\n        if (anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        return editor.getLineDecorations(lineNumber).filter((d) => {\r\n            if (d.options.isWholeLine) {\r\n                return true;\r\n            }\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    computeAsync(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const anchor = this._anchor;\r\n            if (!this._editor.hasModel() || !anchor) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, anchor);\r\n            const allResults = yield Promise.all(this._participants.map(p => this._computeAsync(p, lineDecorations, anchor, token)));\r\n            return flatten(allResults);\r\n        });\r\n    }\r\n    _computeAsync(participant, lineDecorations, anchor, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!participant.computeAsync) {\r\n                return [];\r\n            }\r\n            return participant.computeAsync(anchor, lineDecorations, token);\r\n        });\r\n    }\r\n    computeSync() {\r\n        if (!this._editor.hasModel() || !this._anchor) {\r\n            return [];\r\n        }\r\n        const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, this._anchor);\r\n        let result = [];\r\n        for (const participant of this._participants) {\r\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\r\n        }\r\n        return coalesce(result);\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        // Always put synchronous messages before asynchronous ones\r\n        if (isFromSynchronousComputation) {\r\n            this._result = result.concat(this._result);\r\n        }\r\n        else {\r\n            this._result = this._result.concat(result);\r\n        }\r\n    }\r\n    getResult() {\r\n        return this._result.slice(0);\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        if (this._anchor) {\r\n            for (const participant of this._participants) {\r\n                if (participant.createLoadingMessage) {\r\n                    const loadingMessage = participant.createLoadingMessage(this._anchor);\r\n                    if (loadingMessage) {\r\n                        return this._result.slice(0).concat([loadingMessage]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._result.slice(0);\r\n    }\r\n}\r\nlet ModesContentHoverWidget = class ModesContentHoverWidget extends Widget {\r\n    constructor(editor, _hoverVisibleKey, instantiationService, _keybindingService) {\r\n        super();\r\n        this._hoverVisibleKey = _hoverVisibleKey;\r\n        this._keybindingService = _keybindingService;\r\n        // IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._participants = [\r\n            instantiationService.createInstance(ColorHoverParticipant, editor, this),\r\n            instantiationService.createInstance(MarkdownHoverParticipant, editor, this),\r\n            instantiationService.createInstance(InlineCompletionsHoverParticipant, editor, this),\r\n            instantiationService.createInstance(MarkerHoverParticipant, editor, this),\r\n        ];\r\n        this._hover = this._register(new HoverWidget());\r\n        this._id = ModesContentHoverWidget.ID;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._stoleFocus = false;\r\n        this._renderDisposable = null;\r\n        this.onkeydown(this._hover.containerDomNode, (e) => {\r\n            if (e.equals(9 /* Escape */)) {\r\n                this.hide();\r\n            }\r\n        });\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._editor.onDidLayoutChange(() => this.layout());\r\n        this.layout();\r\n        this._editor.addContentWidget(this);\r\n        this._showAtPosition = null;\r\n        this._showAtRange = null;\r\n        this._stoleFocus = false;\r\n        this._messages = [];\r\n        this._lastAnchor = null;\r\n        this._computer = new ModesContentComputer(this._editor, this._participants);\r\n        this._highlightDecorations = [];\r\n        this._isChangingDecorations = false;\r\n        this._shouldFocus = false;\r\n        this._colorPicker = null;\r\n        this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(52 /* hover */).delay);\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\r\n            if (this._colorPicker) {\r\n                this.getDomNode().classList.add('colorpicker-hover');\r\n            }\r\n        }));\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\r\n            this.getDomNode().classList.remove('colorpicker-hover');\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration(() => {\r\n            this._hoverOperation.setHoverTime(this._editor.getOption(52 /* hover */).delay);\r\n        }));\r\n        this._register(TokenizationRegistry.onDidChange(() => {\r\n            if (this._isVisible && this._lastAnchor && this._messages.length > 0) {\r\n                this._hover.contentsDomNode.textContent = '';\r\n                this._renderMessages(this._lastAnchor, this._messages);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._hover.containerDomNode;\r\n    }\r\n    _shouldShowAt(mouseEvent) {\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType === 6 /* CONTENT_TEXT */) {\r\n            return true;\r\n        }\r\n        if (targetType === 7 /* CONTENT_EMPTY */) {\r\n            const epsilon = this._editor.getOption(42 /* fontInfo */).typicalHalfwidthCharacterWidth / 2;\r\n            const data = mouseEvent.target.detail;\r\n            if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\r\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    maybeShowAt(mouseEvent) {\r\n        var _a;\r\n        const anchorCandidates = [];\r\n        for (const participant of this._participants) {\r\n            if (typeof participant.suggestHoverAnchor === 'function') {\r\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\r\n                if (anchor) {\r\n                    anchorCandidates.push(anchor);\r\n                }\r\n            }\r\n        }\r\n        if (this._shouldShowAt(mouseEvent) && mouseEvent.target.range) {\r\n            // TODO@rebornix. This should be removed if we move Color Picker out of Hover component.\r\n            // Check if mouse is hovering on color decorator\r\n            const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'))\r\n                && mouseEvent.target.range.endColumn - mouseEvent.target.range.startColumn === 1;\r\n            const showAtRange = (hoverOnColorDecorator // shift the mouse focus by one as color decorator is a `before` decoration of next character.\r\n                ? new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1)\r\n                : mouseEvent.target.range);\r\n            anchorCandidates.push(new HoverRangeAnchor(0, showAtRange));\r\n        }\r\n        if (anchorCandidates.length === 0) {\r\n            return false;\r\n        }\r\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\r\n        this._startShowingAt(anchorCandidates[0], 0 /* Delayed */, false);\r\n        return true;\r\n    }\r\n    _showAt(position, range, focus) {\r\n        // Position has changed\r\n        this._showAtPosition = position;\r\n        this._showAtRange = range;\r\n        this._hoverVisibleKey.set(true);\r\n        this._isVisible = true;\r\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n        this._editor.layoutContentWidget(this);\r\n        // Simply force a synchronous render on the editor\r\n        // such that the widget does not really render with left = '0px'\r\n        this._editor.render();\r\n        this._stoleFocus = focus;\r\n        if (focus) {\r\n            this._hover.containerDomNode.focus();\r\n        }\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                position: this._showAtPosition,\r\n                range: this._showAtRange,\r\n                preference: [\r\n                    1 /* ABOVE */,\r\n                    2 /* BELOW */\r\n                ]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _updateFont() {\r\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\r\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    _updateContents(node) {\r\n        this._hover.contentsDomNode.textContent = '';\r\n        this._hover.contentsDomNode.appendChild(node);\r\n        this._updateFont();\r\n        this._editor.layoutContentWidget(this);\r\n        this._hover.onContentsChanged();\r\n    }\r\n    layout() {\r\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\r\n        const { fontSize, lineHeight } = this._editor.getOption(42 /* fontInfo */);\r\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\r\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight}px`;\r\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\r\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this._isChangingDecorations) {\r\n            return;\r\n        }\r\n        if (this._isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            if (!this._colorPicker) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\r\n                this._hoverOperation.start(0 /* Delayed */);\r\n            }\r\n        }\r\n    }\r\n    startShowingAtRange(range, mode, focus) {\r\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\r\n    }\r\n    _startShowingAt(anchor, mode, focus) {\r\n        if (this._lastAnchor && this._lastAnchor.equals(anchor)) {\r\n            // We have to show the widget at the exact same range as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            // The range might have changed, but the hover is visible\r\n            // Instead of hiding it completely, filter out messages that are still in the new range and\r\n            // kick off a new computation\r\n            if (!this._showAtPosition || !this._lastAnchor || !anchor.canAdoptVisibleHover(this._lastAnchor, this._showAtPosition)) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\r\n                if (filteredMessages.length === 0) {\r\n                    this.hide();\r\n                }\r\n                else if (filteredMessages.length === this._messages.length) {\r\n                    // no change\r\n                    return;\r\n                }\r\n                else {\r\n                    this._renderMessages(anchor, filteredMessages);\r\n                }\r\n            }\r\n        }\r\n        this._lastAnchor = anchor;\r\n        this._computer.setAnchor(anchor);\r\n        this._shouldFocus = focus;\r\n        this._hoverOperation.start(mode);\r\n    }\r\n    hide() {\r\n        this._lastAnchor = null;\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            setTimeout(() => {\r\n                // Give commands a chance to see the key\r\n                if (!this._isVisible) {\r\n                    this._hoverVisibleKey.set(false);\r\n                }\r\n            }, 0);\r\n            this._isVisible = false;\r\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n            this._editor.layoutContentWidget(this);\r\n            if (this._stoleFocus) {\r\n                this._editor.focus();\r\n            }\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\r\n        this._isChangingDecorations = false;\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null;\r\n    }\r\n    isColorPickerVisible() {\r\n        return !!this._colorPicker;\r\n    }\r\n    setColorPicker(widget) {\r\n        this._colorPicker = widget;\r\n    }\r\n    onContentsChanged() {\r\n        this._hover.onContentsChanged();\r\n    }\r\n    _withResult(result, complete) {\r\n        this._messages = result;\r\n        if (this._lastAnchor && this._messages.length > 0) {\r\n            this._renderMessages(this._lastAnchor, this._messages);\r\n        }\r\n        else if (complete) {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(anchor, messages) {\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null; // TODO: TypeScript thinks this is always null\r\n        // update column from which to show\r\n        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let highlightRange = messages[0].range;\r\n        let forceShowAtRange = null;\r\n        let fragment = document.createDocumentFragment();\r\n        const disposables = new DisposableStore();\r\n        const hoverParts = new Map();\r\n        for (const msg of messages) {\r\n            renderColumn = Math.min(renderColumn, msg.range.startColumn);\r\n            highlightRange = Range.plusRange(highlightRange, msg.range);\r\n            if (msg.forceShowAtRange) {\r\n                forceShowAtRange = msg.range;\r\n            }\r\n            if (!hoverParts.has(msg.owner)) {\r\n                hoverParts.set(msg.owner, []);\r\n            }\r\n            const dest = hoverParts.get(msg.owner);\r\n            dest.push(msg);\r\n        }\r\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\r\n        for (const [participant, participantHoverParts] of hoverParts) {\r\n            disposables.add(participant.renderHoverParts(participantHoverParts, fragment, statusBar));\r\n        }\r\n        if (statusBar.hasContent) {\r\n            fragment.appendChild(statusBar.hoverElement);\r\n        }\r\n        this._renderDisposable = disposables;\r\n        // show\r\n        if (fragment.hasChildNodes()) {\r\n            if (forceShowAtRange) {\r\n                this._showAt(forceShowAtRange.getStartPosition(), forceShowAtRange, this._shouldFocus);\r\n            }\r\n            else {\r\n                this._showAt(new Position(anchor.range.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\r\n            }\r\n            this._updateContents(fragment);\r\n        }\r\n        if (this._colorPicker) {\r\n            this._colorPicker.layout();\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\r\n                range: highlightRange,\r\n                options: ModesContentHoverWidget._DECORATION_OPTIONS\r\n            }] : []);\r\n        this._isChangingDecorations = false;\r\n    }\r\n};\r\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\r\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'content-hover-highlight',\r\n    className: 'hoverHighlight'\r\n});\r\nModesContentHoverWidget = __decorate([\r\n    __param(2, IInstantiationService),\r\n    __param(3, IKeybindingService)\r\n], ModesContentHoverWidget);\r\nexport { ModesContentHoverWidget };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nexport class GlyphHoverWidget extends Widget {\r\n    constructor(id, editor) {\r\n        super();\r\n        this._id = id;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'monaco-hover hidden';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._domNode.setAttribute('role', 'tooltip');\r\n        this._showAtLineNumber = -1;\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this.updateFont();\r\n            }\r\n        }));\r\n        this._editor.addOverlayWidget(this);\r\n    }\r\n    get isVisible() {\r\n        return this._isVisible;\r\n    }\r\n    set isVisible(value) {\r\n        this._isVisible = value;\r\n        this._domNode.classList.toggle('hidden', !this._isVisible);\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    showAt(lineNumber) {\r\n        this._showAtLineNumber = lineNumber;\r\n        if (!this.isVisible) {\r\n            this.isVisible = true;\r\n        }\r\n        const editorLayout = this._editor.getLayoutInfo();\r\n        const topForLineNumber = this._editor.getTopForLineNumber(this._showAtLineNumber);\r\n        const editorScrollTop = this._editor.getScrollTop();\r\n        const lineHeight = this._editor.getOption(58 /* lineHeight */);\r\n        const nodeHeight = this._domNode.clientHeight;\r\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\r\n        this._domNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\r\n        this._domNode.style.top = `${Math.max(Math.round(top), 0)}px`;\r\n    }\r\n    hide() {\r\n        if (!this.isVisible) {\r\n            return;\r\n        }\r\n        this.isVisible = false;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    updateFont() {\r\n        const codeTags = Array.prototype.slice.call(this._domNode.getElementsByTagName('code'));\r\n        const codeClasses = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\r\n        [...codeTags, ...codeClasses].forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    updateContents(node) {\r\n        this._domNode.textContent = '';\r\n        this._domNode.appendChild(node);\r\n        this.updateFont();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $ } from '../../../base/browser/dom.js';\r\nimport { isEmptyMarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { GlyphHoverWidget } from './hoverWidgets.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { NullOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { asArray } from '../../../base/common/arrays.js';\r\nclass MarginComputer {\r\n    constructor(editor) {\r\n        this._editor = editor;\r\n        this._lineNumber = -1;\r\n        this._result = [];\r\n    }\r\n    setLineNumber(lineNumber) {\r\n        this._lineNumber = lineNumber;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    computeSync() {\r\n        const toHoverMessage = (contents) => {\r\n            return {\r\n                value: contents\r\n            };\r\n        };\r\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\r\n        const result = [];\r\n        if (!lineDecorations) {\r\n            return result;\r\n        }\r\n        for (const d of lineDecorations) {\r\n            if (!d.options.glyphMarginClassName) {\r\n                continue;\r\n            }\r\n            const hoverMessage = d.options.glyphMarginHoverMessage;\r\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\r\n                continue;\r\n            }\r\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\r\n        }\r\n        return result;\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        this._result = this._result.concat(result);\r\n    }\r\n    getResult() {\r\n        return this._result;\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        return this.getResult();\r\n    }\r\n}\r\nexport class ModesGlyphHoverWidget extends GlyphHoverWidget {\r\n    constructor(editor, modeService, openerService = NullOpenerService) {\r\n        super(ModesGlyphHoverWidget.ID, editor);\r\n        this._renderDisposeables = this._register(new DisposableStore());\r\n        this._messages = [];\r\n        this._lastLineNumber = -1;\r\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, modeService, openerService));\r\n        this._computer = new MarginComputer(this._editor);\r\n        this._hoverOperation = new HoverOperation(this._computer, (result) => this._withResult(result), undefined, (result) => this._withResult(result), 300);\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        super.dispose();\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this.isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            this._hoverOperation.start(0 /* Delayed */);\r\n        }\r\n    }\r\n    startShowingAt(lineNumber) {\r\n        if (this._lastLineNumber === lineNumber) {\r\n            // We have to show the widget at the exact same line number as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        this.hide();\r\n        this._lastLineNumber = lineNumber;\r\n        this._computer.setLineNumber(lineNumber);\r\n        this._hoverOperation.start(0 /* Delayed */);\r\n    }\r\n    hide() {\r\n        this._lastLineNumber = -1;\r\n        this._hoverOperation.cancel();\r\n        super.hide();\r\n    }\r\n    _withResult(result) {\r\n        this._messages = result;\r\n        if (this._messages.length > 0) {\r\n            this._renderMessages(this._lastLineNumber, this._messages);\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(lineNumber, messages) {\r\n        this._renderDisposeables.clear();\r\n        const fragment = document.createDocumentFragment();\r\n        for (const msg of messages) {\r\n            const renderedContents = this._markdownRenderer.render(msg.value);\r\n            this._renderDisposeables.add(renderedContents);\r\n            fragment.appendChild($('div.hover-row', undefined, renderedContents.element));\r\n        }\r\n        this.updateContents(fragment);\r\n        this.showAt(lineNumber);\r\n    }\r\n}\r\nModesGlyphHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { basename, extUri } from '../../../base/common/resources.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { defaultGenerator } from '../../../base/common/idGenerator.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nexport class OneReference {\r\n    constructor(isProviderFirst, parent, link, _rangeCallback) {\r\n        this.isProviderFirst = isProviderFirst;\r\n        this.parent = parent;\r\n        this.link = link;\r\n        this._rangeCallback = _rangeCallback;\r\n        this.id = defaultGenerator.nextId();\r\n    }\r\n    get uri() {\r\n        return this.link.uri;\r\n    }\r\n    get range() {\r\n        var _a, _b;\r\n        return (_b = (_a = this._range) !== null && _a !== void 0 ? _a : this.link.targetSelectionRange) !== null && _b !== void 0 ? _b : this.link.range;\r\n    }\r\n    set range(value) {\r\n        this._range = value;\r\n        this._rangeCallback(this);\r\n    }\r\n    get ariaMessage() {\r\n        var _a;\r\n        const preview = (_a = this.parent.getPreview(this)) === null || _a === void 0 ? void 0 : _a.preview(this.range);\r\n        if (!preview) {\r\n            return localize('aria.oneReference', \"symbol in {0} on line {1} at column {2}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn);\r\n        }\r\n        else {\r\n            return localize({ key: 'aria.oneReference.preview', comment: ['Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code'] }, \"symbol in {0} on line {1} at column {2}, {3}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn, preview.value);\r\n        }\r\n    }\r\n}\r\nexport class FilePreview {\r\n    constructor(_modelReference) {\r\n        this._modelReference = _modelReference;\r\n    }\r\n    dispose() {\r\n        this._modelReference.dispose();\r\n    }\r\n    preview(range, n = 8) {\r\n        const model = this._modelReference.object.textEditorModel;\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\r\n        const word = model.getWordUntilPosition({ lineNumber: startLineNumber, column: startColumn - n });\r\n        const beforeRange = new Range(startLineNumber, word.startColumn, startLineNumber, startColumn);\r\n        const afterRange = new Range(endLineNumber, endColumn, endLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        const before = model.getValueInRange(beforeRange).replace(/^\\s+/, '');\r\n        const inside = model.getValueInRange(range);\r\n        const after = model.getValueInRange(afterRange).replace(/\\s+$/, '');\r\n        return {\r\n            value: before + inside + after,\r\n            highlight: { start: before.length, end: before.length + inside.length }\r\n        };\r\n    }\r\n}\r\nexport class FileReferences {\r\n    constructor(parent, uri) {\r\n        this.parent = parent;\r\n        this.uri = uri;\r\n        this.children = [];\r\n        this._previews = new ResourceMap();\r\n    }\r\n    dispose() {\r\n        dispose(this._previews.values());\r\n        this._previews.clear();\r\n    }\r\n    getPreview(child) {\r\n        return this._previews.get(child.uri);\r\n    }\r\n    get ariaMessage() {\r\n        const len = this.children.length;\r\n        if (len === 1) {\r\n            return localize('aria.fileReferences.1', \"1 symbol in {0}, full path {1}\", basename(this.uri), this.uri.fsPath);\r\n        }\r\n        else {\r\n            return localize('aria.fileReferences.N', \"{0} symbols in {1}, full path {2}\", len, basename(this.uri), this.uri.fsPath);\r\n        }\r\n    }\r\n    resolve(textModelResolverService) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._previews.size !== 0) {\r\n                return this;\r\n            }\r\n            for (let child of this.children) {\r\n                if (this._previews.has(child.uri)) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    const ref = yield textModelResolverService.createModelReference(child.uri);\r\n                    this._previews.set(child.uri, new FilePreview(ref));\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedError(err);\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nexport class ReferencesModel {\r\n    constructor(links, title) {\r\n        this.groups = [];\r\n        this.references = [];\r\n        this._onDidChangeReferenceRange = new Emitter();\r\n        this.onDidChangeReferenceRange = this._onDidChangeReferenceRange.event;\r\n        this._links = links;\r\n        this._title = title;\r\n        // grouping and sorting\r\n        const [providersFirst] = links;\r\n        links.sort(ReferencesModel._compareReferences);\r\n        let current;\r\n        for (let link of links) {\r\n            if (!current || !extUri.isEqual(current.uri, link.uri, true)) {\r\n                // new group\r\n                current = new FileReferences(this, link.uri);\r\n                this.groups.push(current);\r\n            }\r\n            // append, check for equality first!\r\n            if (current.children.length === 0 || ReferencesModel._compareReferences(link, current.children[current.children.length - 1]) !== 0) {\r\n                const oneRef = new OneReference(providersFirst === link, current, link, ref => this._onDidChangeReferenceRange.fire(ref));\r\n                this.references.push(oneRef);\r\n                current.children.push(oneRef);\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        dispose(this.groups);\r\n        this._onDidChangeReferenceRange.dispose();\r\n        this.groups.length = 0;\r\n    }\r\n    clone() {\r\n        return new ReferencesModel(this._links, this._title);\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    get isEmpty() {\r\n        return this.groups.length === 0;\r\n    }\r\n    get ariaMessage() {\r\n        if (this.isEmpty) {\r\n            return localize('aria.result.0', \"No results found\");\r\n        }\r\n        else if (this.references.length === 1) {\r\n            return localize('aria.result.1', \"Found 1 symbol in {0}\", this.references[0].uri.fsPath);\r\n        }\r\n        else if (this.groups.length === 1) {\r\n            return localize('aria.result.n1', \"Found {0} symbols in {1}\", this.references.length, this.groups[0].uri.fsPath);\r\n        }\r\n        else {\r\n            return localize('aria.result.nm', \"Found {0} symbols in {1} files\", this.references.length, this.groups.length);\r\n        }\r\n    }\r\n    nextOrPreviousReference(reference, next) {\r\n        let { parent } = reference;\r\n        let idx = parent.children.indexOf(reference);\r\n        let childCount = parent.children.length;\r\n        let groupCount = parent.parent.groups.length;\r\n        if (groupCount === 1 || next && idx + 1 < childCount || !next && idx > 0) {\r\n            // cycling within one file\r\n            if (next) {\r\n                idx = (idx + 1) % childCount;\r\n            }\r\n            else {\r\n                idx = (idx + childCount - 1) % childCount;\r\n            }\r\n            return parent.children[idx];\r\n        }\r\n        idx = parent.parent.groups.indexOf(parent);\r\n        if (next) {\r\n            idx = (idx + 1) % groupCount;\r\n            return parent.parent.groups[idx].children[0];\r\n        }\r\n        else {\r\n            idx = (idx + groupCount - 1) % groupCount;\r\n            return parent.parent.groups[idx].children[parent.parent.groups[idx].children.length - 1];\r\n        }\r\n    }\r\n    nearestReference(resource, position) {\r\n        const nearest = this.references.map((ref, idx) => {\r\n            return {\r\n                idx,\r\n                prefixLen: strings.commonPrefixLength(ref.uri.toString(), resource.toString()),\r\n                offsetDist: Math.abs(ref.range.startLineNumber - position.lineNumber) * 100 + Math.abs(ref.range.startColumn - position.column)\r\n            };\r\n        }).sort((a, b) => {\r\n            if (a.prefixLen > b.prefixLen) {\r\n                return -1;\r\n            }\r\n            else if (a.prefixLen < b.prefixLen) {\r\n                return 1;\r\n            }\r\n            else if (a.offsetDist < b.offsetDist) {\r\n                return -1;\r\n            }\r\n            else if (a.offsetDist > b.offsetDist) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        })[0];\r\n        if (nearest) {\r\n            return this.references[nearest.idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    referenceAt(resource, position) {\r\n        for (const ref of this.references) {\r\n            if (ref.uri.toString() === resource.toString()) {\r\n                if (Range.containsPosition(ref.range, position)) {\r\n                    return ref;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    firstReference() {\r\n        for (const ref of this.references) {\r\n            if (ref.isProviderFirst) {\r\n                return ref;\r\n            }\r\n        }\r\n        return this.references[0];\r\n    }\r\n    static _compareReferences(a, b) {\r\n        return extUri.compare(a.uri, b.uri) || Range.compareRangesUsingStarts(a.range, b.range);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { DefinitionProviderRegistry, ImplementationProviderRegistry, TypeDefinitionProviderRegistry, DeclarationProviderRegistry, ReferenceProviderRegistry } from '../../common/modes.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nfunction getLocationLinks(model, position, registry, provide) {\r\n    const provider = registry.ordered(model);\r\n    // get results\r\n    const promises = provider.map((provider) => {\r\n        return Promise.resolve(provide(provider, model, position)).then(undefined, err => {\r\n            onUnexpectedExternalError(err);\r\n            return undefined;\r\n        });\r\n    });\r\n    return Promise.all(promises).then(values => {\r\n        const result = [];\r\n        for (let value of values) {\r\n            if (Array.isArray(value)) {\r\n                result.push(...value);\r\n            }\r\n            else if (value) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n}\r\nexport function getDefinitionsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, DefinitionProviderRegistry, (provider, model, position) => {\r\n        return provider.provideDefinition(model, position, token);\r\n    });\r\n}\r\nexport function getDeclarationsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, DeclarationProviderRegistry, (provider, model, position) => {\r\n        return provider.provideDeclaration(model, position, token);\r\n    });\r\n}\r\nexport function getImplementationsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, ImplementationProviderRegistry, (provider, model, position) => {\r\n        return provider.provideImplementation(model, position, token);\r\n    });\r\n}\r\nexport function getTypeDefinitionsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, TypeDefinitionProviderRegistry, (provider, model, position) => {\r\n        return provider.provideTypeDefinition(model, position, token);\r\n    });\r\n}\r\nexport function getReferencesAtPosition(model, position, compact, token) {\r\n    return getLocationLinks(model, position, ReferenceProviderRegistry, (provider, model, position) => __awaiter(this, void 0, void 0, function* () {\r\n        const result = yield provider.provideReferences(model, position, { includeDeclaration: true }, token);\r\n        if (!compact || !result || result.length !== 2) {\r\n            return result;\r\n        }\r\n        const resultWithoutDeclaration = yield provider.provideReferences(model, position, { includeDeclaration: false }, token);\r\n        if (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\r\n            return resultWithoutDeclaration;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\n// -- API commands ----\r\nfunction _sortedAndDeduped(callback) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const rawLinks = yield callback();\r\n        const model = new ReferencesModel(rawLinks, '');\r\n        const modelLinks = model.references.map(ref => ref.link);\r\n        model.dispose();\r\n        return modelLinks;\r\n    });\r\n}\r\nregisterModelAndPositionCommand('_executeDefinitionProvider', (model, position) => _sortedAndDeduped(() => getDefinitionsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeDeclarationProvider', (model, position) => _sortedAndDeduped(() => getDeclarationsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeImplementationProvider', (model, position) => _sortedAndDeduped(() => getImplementationsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (model, position) => _sortedAndDeduped(() => getTypeDefinitionsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeReferenceProvider', (model, position) => _sortedAndDeduped(() => getReferencesAtPosition(model, position, false, CancellationToken.None)));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { ReferencesModel, FileReferences, OneReference } from '../referencesModel.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { CountBadge } from '../../../../base/browser/ui/countBadge/countBadge.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\r\nimport { attachBadgeStyler } from '../../../../platform/theme/common/styler.js';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { getBaseLabel } from '../../../../base/common/labels.js';\r\nimport { dirname, basename } from '../../../../base/common/resources.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { FuzzyScore, createMatches } from '../../../../base/common/filters.js';\r\nimport { HighlightedLabel } from '../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\r\nlet DataSource = class DataSource {\r\n    constructor(_resolverService) {\r\n        this._resolverService = _resolverService;\r\n    }\r\n    hasChildren(element) {\r\n        if (element instanceof ReferencesModel) {\r\n            return true;\r\n        }\r\n        if (element instanceof FileReferences) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getChildren(element) {\r\n        if (element instanceof ReferencesModel) {\r\n            return element.groups;\r\n        }\r\n        if (element instanceof FileReferences) {\r\n            return element.resolve(this._resolverService).then(val => {\r\n                // if (element.failure) {\r\n                // \t// refresh the element on failure so that\r\n                // \t// we can update its rendering\r\n                // \treturn tree.refresh(element).then(() => val.children);\r\n                // }\r\n                return val.children;\r\n            });\r\n        }\r\n        throw new Error('bad tree');\r\n    }\r\n};\r\nDataSource = __decorate([\r\n    __param(0, ITextModelService)\r\n], DataSource);\r\nexport { DataSource };\r\n//#endregion\r\nexport class Delegate {\r\n    getHeight() {\r\n        return 23;\r\n    }\r\n    getTemplateId(element) {\r\n        if (element instanceof FileReferences) {\r\n            return FileReferencesRenderer.id;\r\n        }\r\n        else {\r\n            return OneReferenceRenderer.id;\r\n        }\r\n    }\r\n}\r\nlet StringRepresentationProvider = class StringRepresentationProvider {\r\n    constructor(_keybindingService) {\r\n        this._keybindingService = _keybindingService;\r\n    }\r\n    getKeyboardNavigationLabel(element) {\r\n        var _a;\r\n        if (element instanceof OneReference) {\r\n            const parts = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\r\n            if (parts) {\r\n                return parts.value;\r\n            }\r\n        }\r\n        // FileReferences or unresolved OneReference\r\n        return basename(element.uri);\r\n    }\r\n};\r\nStringRepresentationProvider = __decorate([\r\n    __param(0, IKeybindingService)\r\n], StringRepresentationProvider);\r\nexport { StringRepresentationProvider };\r\nexport class IdentityProvider {\r\n    getId(element) {\r\n        return element instanceof OneReference ? element.id : element.uri;\r\n    }\r\n}\r\n//#region render: File\r\nlet FileReferencesTemplate = class FileReferencesTemplate extends Disposable {\r\n    constructor(container, _uriLabel, themeService) {\r\n        super();\r\n        this._uriLabel = _uriLabel;\r\n        const parent = document.createElement('div');\r\n        parent.classList.add('reference-file');\r\n        this.file = this._register(new IconLabel(parent, { supportHighlights: true }));\r\n        this.badge = new CountBadge(dom.append(parent, dom.$('.count')));\r\n        this._register(attachBadgeStyler(this.badge, themeService));\r\n        container.appendChild(parent);\r\n    }\r\n    set(element, matches) {\r\n        let parent = dirname(element.uri);\r\n        this.file.setLabel(getBaseLabel(element.uri), this._uriLabel.getUriLabel(parent, { relative: true }), { title: this._uriLabel.getUriLabel(element.uri), matches });\r\n        const len = element.children.length;\r\n        this.badge.setCount(len);\r\n        if (len > 1) {\r\n            this.badge.setTitleFormat(localize('referencesCount', \"{0} references\", len));\r\n        }\r\n        else {\r\n            this.badge.setTitleFormat(localize('referenceCount', \"{0} reference\", len));\r\n        }\r\n    }\r\n};\r\nFileReferencesTemplate = __decorate([\r\n    __param(1, ILabelService),\r\n    __param(2, IThemeService)\r\n], FileReferencesTemplate);\r\nlet FileReferencesRenderer = class FileReferencesRenderer {\r\n    constructor(_instantiationService) {\r\n        this._instantiationService = _instantiationService;\r\n        this.templateId = FileReferencesRenderer.id;\r\n    }\r\n    renderTemplate(container) {\r\n        return this._instantiationService.createInstance(FileReferencesTemplate, container);\r\n    }\r\n    renderElement(node, index, template) {\r\n        template.set(node.element, createMatches(node.filterData));\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.dispose();\r\n    }\r\n};\r\nFileReferencesRenderer.id = 'FileReferencesRenderer';\r\nFileReferencesRenderer = __decorate([\r\n    __param(0, IInstantiationService)\r\n], FileReferencesRenderer);\r\nexport { FileReferencesRenderer };\r\n//#endregion\r\n//#region render: Reference\r\nclass OneReferenceTemplate {\r\n    constructor(container) {\r\n        this.label = new HighlightedLabel(container, false);\r\n    }\r\n    set(element, score) {\r\n        var _a;\r\n        const preview = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\r\n        if (!preview || !preview.value) {\r\n            // this means we FAILED to resolve the document or the value is the empty string\r\n            this.label.set(`${basename(element.uri)}:${element.range.startLineNumber + 1}:${element.range.startColumn + 1}`);\r\n        }\r\n        else {\r\n            // render search match as highlight unless\r\n            // we have score, then render the score\r\n            const { value, highlight } = preview;\r\n            if (score && !FuzzyScore.isDefault(score)) {\r\n                this.label.element.classList.toggle('referenceMatch', false);\r\n                this.label.set(value, createMatches(score));\r\n            }\r\n            else {\r\n                this.label.element.classList.toggle('referenceMatch', true);\r\n                this.label.set(value, [highlight]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class OneReferenceRenderer {\r\n    constructor() {\r\n        this.templateId = OneReferenceRenderer.id;\r\n    }\r\n    renderTemplate(container) {\r\n        return new OneReferenceTemplate(container);\r\n    }\r\n    renderElement(node, index, templateData) {\r\n        templateData.set(node.element, node.filterData);\r\n    }\r\n    disposeTemplate() {\r\n    }\r\n}\r\nOneReferenceRenderer.id = 'OneReferenceRenderer';\r\n//#endregion\r\nexport class AccessibilityProvider {\r\n    getWidgetAriaLabel() {\r\n        return localize('treeAriaLabel', \"References\");\r\n    }\r\n    getAriaLabel(element) {\r\n        return element.ariaMessage;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './referencesWidget.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { Emitter, Event } from '../../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { Schemas } from '../../../../base/common/network.js';\r\nimport { basenameOrAuthority, dirname } from '../../../../base/common/resources.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { ModelDecorationOptions, TextModel } from '../../../common/model/textModel.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { AccessibilityProvider, DataSource, Delegate, FileReferencesRenderer, OneReferenceRenderer, StringRepresentationProvider, IdentityProvider } from './referencesTree.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { WorkbenchAsyncDataTree } from '../../../../platform/list/browser/listService.js';\r\nimport { activeContrastBorder } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport * as peekView from '../../peekView/peekView.js';\r\nimport { FileReferences, OneReference } from '../referencesModel.js';\r\nimport { SplitView, Sizing } from '../../../../base/browser/ui/splitview/splitview.js';\r\nimport { IUndoRedoService } from '../../../../platform/undoRedo/common/undoRedo.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nclass DecorationsManager {\r\n    constructor(_editor, _model) {\r\n        this._editor = _editor;\r\n        this._model = _model;\r\n        this._decorations = new Map();\r\n        this._decorationIgnoreSet = new Set();\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModelChange = new DisposableStore();\r\n        this._callOnDispose.add(this._editor.onDidChangeModel(() => this._onModelChanged()));\r\n        this._onModelChanged();\r\n    }\r\n    dispose() {\r\n        this._callOnModelChange.dispose();\r\n        this._callOnDispose.dispose();\r\n        this.removeDecorations();\r\n    }\r\n    _onModelChanged() {\r\n        this._callOnModelChange.clear();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (let ref of this._model.references) {\r\n            if (ref.uri.toString() === model.uri.toString()) {\r\n                this._addDecorations(ref.parent);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _addDecorations(reference) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(() => this._onDecorationChanged()));\r\n        const newDecorations = [];\r\n        const newDecorationsActualIndex = [];\r\n        for (let i = 0, len = reference.children.length; i < len; i++) {\r\n            let oneReference = reference.children[i];\r\n            if (this._decorationIgnoreSet.has(oneReference.id)) {\r\n                continue;\r\n            }\r\n            if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) {\r\n                continue;\r\n            }\r\n            newDecorations.push({\r\n                range: oneReference.range,\r\n                options: DecorationsManager.DecorationOptions\r\n            });\r\n            newDecorationsActualIndex.push(i);\r\n        }\r\n        const decorations = this._editor.deltaDecorations([], newDecorations);\r\n        for (let i = 0; i < decorations.length; i++) {\r\n            this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\r\n        }\r\n    }\r\n    _onDecorationChanged() {\r\n        const toRemove = [];\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (let [decorationId, reference] of this._decorations) {\r\n            const newRange = model.getDecorationRange(decorationId);\r\n            if (!newRange) {\r\n                continue;\r\n            }\r\n            let ignore = false;\r\n            if (Range.equalsRange(newRange, reference.range)) {\r\n                continue;\r\n            }\r\n            if (Range.spansMultipleLines(newRange)) {\r\n                ignore = true;\r\n            }\r\n            else {\r\n                const lineLength = reference.range.endColumn - reference.range.startColumn;\r\n                const newLineLength = newRange.endColumn - newRange.startColumn;\r\n                if (lineLength !== newLineLength) {\r\n                    ignore = true;\r\n                }\r\n            }\r\n            if (ignore) {\r\n                this._decorationIgnoreSet.add(reference.id);\r\n                toRemove.push(decorationId);\r\n            }\r\n            else {\r\n                reference.range = newRange;\r\n            }\r\n        }\r\n        for (let i = 0, len = toRemove.length; i < len; i++) {\r\n            this._decorations.delete(toRemove[i]);\r\n        }\r\n        this._editor.deltaDecorations(toRemove, []);\r\n    }\r\n    removeDecorations() {\r\n        this._editor.deltaDecorations([...this._decorations.keys()], []);\r\n        this._decorations.clear();\r\n    }\r\n}\r\nDecorationsManager.DecorationOptions = ModelDecorationOptions.register({\r\n    description: 'reference-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'reference-decoration'\r\n});\r\nexport class LayoutData {\r\n    constructor() {\r\n        this.ratio = 0.7;\r\n        this.heightInLines = 18;\r\n    }\r\n    static fromJSON(raw) {\r\n        let ratio;\r\n        let heightInLines;\r\n        try {\r\n            const data = JSON.parse(raw);\r\n            ratio = data.ratio;\r\n            heightInLines = data.heightInLines;\r\n        }\r\n        catch (_a) {\r\n            //\r\n        }\r\n        return {\r\n            ratio: ratio || 0.7,\r\n            heightInLines: heightInLines || 18\r\n        };\r\n    }\r\n}\r\nclass ReferencesTree extends WorkbenchAsyncDataTree {\r\n}\r\n/**\r\n * ZoneWidget that is shown inside the editor\r\n */\r\nlet ReferenceWidget = class ReferenceWidget extends peekView.PeekViewWidget {\r\n    constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService) {\r\n        super(editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true, supportOnTitleClick: true }, _instantiationService);\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this.layoutData = layoutData;\r\n        this._textModelResolverService = _textModelResolverService;\r\n        this._instantiationService = _instantiationService;\r\n        this._peekViewService = _peekViewService;\r\n        this._uriLabel = _uriLabel;\r\n        this._undoRedoService = _undoRedoService;\r\n        this._keybindingService = _keybindingService;\r\n        this._disposeOnNewModel = new DisposableStore();\r\n        this._callOnDispose = new DisposableStore();\r\n        this._onDidSelectReference = new Emitter();\r\n        this.onDidSelectReference = this._onDidSelectReference.event;\r\n        this._dim = new dom.Dimension(0, 0);\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._peekViewService.addExclusiveWidget(editor, this);\r\n        this.create();\r\n    }\r\n    dispose() {\r\n        this.setModel(undefined);\r\n        this._callOnDispose.dispose();\r\n        this._disposeOnNewModel.dispose();\r\n        dispose(this._preview);\r\n        dispose(this._previewNotAvailableMessage);\r\n        dispose(this._tree);\r\n        dispose(this._previewModelReference);\r\n        this._splitView.dispose();\r\n        super.dispose();\r\n    }\r\n    _applyTheme(theme) {\r\n        const borderColor = theme.getColor(peekView.peekViewBorder) || Color.transparent;\r\n        this.style({\r\n            arrowColor: borderColor,\r\n            frameColor: borderColor,\r\n            headerBackgroundColor: theme.getColor(peekView.peekViewTitleBackground) || Color.transparent,\r\n            primaryHeadingColor: theme.getColor(peekView.peekViewTitleForeground),\r\n            secondaryHeadingColor: theme.getColor(peekView.peekViewTitleInfoForeground)\r\n        });\r\n    }\r\n    show(where) {\r\n        this.editor.revealRangeInCenterIfOutsideViewport(where, 0 /* Smooth */);\r\n        super.show(where, this.layoutData.heightInLines || 18);\r\n    }\r\n    focusOnReferenceTree() {\r\n        this._tree.domFocus();\r\n    }\r\n    focusOnPreviewEditor() {\r\n        this._preview.focus();\r\n    }\r\n    isPreviewEditorFocused() {\r\n        return this._preview.hasTextFocus();\r\n    }\r\n    _onTitleClick(e) {\r\n        if (this._preview && this._preview.getModel()) {\r\n            this._onDidSelectReference.fire({\r\n                element: this._getFocusedReference(),\r\n                kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\r\n                source: 'title'\r\n            });\r\n        }\r\n    }\r\n    _fillBody(containerElement) {\r\n        this.setCssClass('reference-zone-widget');\r\n        // message pane\r\n        this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\r\n        dom.hide(this._messageContainer);\r\n        this._splitView = new SplitView(containerElement, { orientation: 1 /* HORIZONTAL */ });\r\n        // editor\r\n        this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\r\n        let options = {\r\n            scrollBeyondLastLine: false,\r\n            scrollbar: {\r\n                verticalScrollbarSize: 14,\r\n                horizontal: 'auto',\r\n                useShadows: true,\r\n                verticalHasArrows: false,\r\n                horizontalHasArrows: false,\r\n                alwaysConsumeMouseWheel: false\r\n            },\r\n            overviewRulerLanes: 2,\r\n            fixedOverflowWidgets: true,\r\n            minimap: {\r\n                enabled: false\r\n            }\r\n        };\r\n        this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);\r\n        dom.hide(this._previewContainer);\r\n        this._previewNotAvailableMessage = new TextModel(nls.localize('missingPreviewMessage', \"no preview available\"), TextModel.DEFAULT_CREATION_OPTIONS, null, null, this._undoRedoService);\r\n        // tree\r\n        this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\r\n        const treeOptions = {\r\n            keyboardSupport: this._defaultTreeKeyboardSupport,\r\n            accessibilityProvider: new AccessibilityProvider(),\r\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\r\n            identityProvider: new IdentityProvider(),\r\n            openOnSingleClick: true,\r\n            selectionNavigation: true,\r\n            overrideStyles: {\r\n                listBackground: peekView.peekViewResultsBackground\r\n            }\r\n        };\r\n        if (this._defaultTreeKeyboardSupport) {\r\n            // the tree will consume `Escape` and prevent the widget from closing\r\n            this._callOnDispose.add(dom.addStandardDisposableListener(this._treeContainer, 'keydown', (e) => {\r\n                if (e.equals(9 /* Escape */)) {\r\n                    this._keybindingService.dispatchEvent(e, e.target);\r\n                    e.stopPropagation();\r\n                }\r\n            }, true));\r\n        }\r\n        this._tree = this._instantiationService.createInstance(ReferencesTree, 'ReferencesWidget', this._treeContainer, new Delegate(), [\r\n            this._instantiationService.createInstance(FileReferencesRenderer),\r\n            this._instantiationService.createInstance(OneReferenceRenderer),\r\n        ], this._instantiationService.createInstance(DataSource), treeOptions);\r\n        // split stuff\r\n        this._splitView.addView({\r\n            onDidChange: Event.None,\r\n            element: this._previewContainer,\r\n            minimumSize: 200,\r\n            maximumSize: Number.MAX_VALUE,\r\n            layout: (width) => {\r\n                this._preview.layout({ height: this._dim.height, width });\r\n            }\r\n        }, Sizing.Distribute);\r\n        this._splitView.addView({\r\n            onDidChange: Event.None,\r\n            element: this._treeContainer,\r\n            minimumSize: 100,\r\n            maximumSize: Number.MAX_VALUE,\r\n            layout: (width) => {\r\n                this._treeContainer.style.height = `${this._dim.height}px`;\r\n                this._treeContainer.style.width = `${width}px`;\r\n                this._tree.layout(this._dim.height, width);\r\n            }\r\n        }, Sizing.Distribute);\r\n        this._disposables.add(this._splitView.onDidSashChange(() => {\r\n            if (this._dim.width) {\r\n                this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\r\n            }\r\n        }, undefined));\r\n        // listen on selection and focus\r\n        let onEvent = (element, kind) => {\r\n            if (element instanceof OneReference) {\r\n                if (kind === 'show') {\r\n                    this._revealReference(element, false);\r\n                }\r\n                this._onDidSelectReference.fire({ element, kind, source: 'tree' });\r\n            }\r\n        };\r\n        this._tree.onDidOpen(e => {\r\n            if (e.sideBySide) {\r\n                onEvent(e.element, 'side');\r\n            }\r\n            else if (e.editorOptions.pinned) {\r\n                onEvent(e.element, 'goto');\r\n            }\r\n            else {\r\n                onEvent(e.element, 'show');\r\n            }\r\n        });\r\n        dom.hide(this._treeContainer);\r\n    }\r\n    _onWidth(width) {\r\n        if (this._dim) {\r\n            this._doLayoutBody(this._dim.height, width);\r\n        }\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        super._doLayoutBody(heightInPixel, widthInPixel);\r\n        this._dim = new dom.Dimension(widthInPixel, heightInPixel);\r\n        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\r\n        this._splitView.layout(widthInPixel);\r\n        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\r\n    }\r\n    setSelection(selection) {\r\n        return this._revealReference(selection, true).then(() => {\r\n            if (!this._model) {\r\n                // disposed\r\n                return;\r\n            }\r\n            // show in tree\r\n            this._tree.setSelection([selection]);\r\n            this._tree.setFocus([selection]);\r\n        });\r\n    }\r\n    setModel(newModel) {\r\n        // clean up\r\n        this._disposeOnNewModel.clear();\r\n        this._model = newModel;\r\n        if (this._model) {\r\n            return this._onNewModel();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _onNewModel() {\r\n        if (!this._model) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        if (this._model.isEmpty) {\r\n            this.setTitle('');\r\n            this._messageContainer.innerText = nls.localize('noResults', \"No results\");\r\n            dom.show(this._messageContainer);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        dom.hide(this._messageContainer);\r\n        this._decorationsManager = new DecorationsManager(this._preview, this._model);\r\n        this._disposeOnNewModel.add(this._decorationsManager);\r\n        // listen on model changes\r\n        this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\r\n        // listen on editor\r\n        this._disposeOnNewModel.add(this._preview.onMouseDown(e => {\r\n            const { event, target } = e;\r\n            if (event.detail !== 2) {\r\n                return;\r\n            }\r\n            const element = this._getFocusedReference();\r\n            if (!element) {\r\n                return;\r\n            }\r\n            this._onDidSelectReference.fire({\r\n                element: { uri: element.uri, range: target.range },\r\n                kind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\r\n                source: 'editor'\r\n            });\r\n        }));\r\n        // make sure things are rendered\r\n        this.container.classList.add('results-loaded');\r\n        dom.show(this._treeContainer);\r\n        dom.show(this._previewContainer);\r\n        this._splitView.layout(this._dim.width);\r\n        this.focusOnReferenceTree();\r\n        // pick input and a reference to begin with\r\n        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\r\n    }\r\n    _getFocusedReference() {\r\n        const [element] = this._tree.getFocus();\r\n        if (element instanceof OneReference) {\r\n            return element;\r\n        }\r\n        else if (element instanceof FileReferences) {\r\n            if (element.children.length > 0) {\r\n                return element.children[0];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._revealReference(reference, false);\r\n            this._onDidSelectReference.fire({ element: reference, kind: 'goto', source: 'tree' });\r\n        });\r\n    }\r\n    _revealReference(reference, revealParent) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // check if there is anything to do...\r\n            if (this._revealedReference === reference) {\r\n                return;\r\n            }\r\n            this._revealedReference = reference;\r\n            // Update widget header\r\n            if (reference.uri.scheme !== Schemas.inMemory) {\r\n                this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\r\n            }\r\n            else {\r\n                this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\r\n            }\r\n            const promise = this._textModelResolverService.createModelReference(reference.uri);\r\n            if (this._tree.getInput() === reference.parent) {\r\n                this._tree.reveal(reference);\r\n            }\r\n            else {\r\n                if (revealParent) {\r\n                    this._tree.reveal(reference.parent);\r\n                }\r\n                yield this._tree.expand(reference.parent);\r\n                this._tree.reveal(reference);\r\n            }\r\n            const ref = yield promise;\r\n            if (!this._model) {\r\n                // disposed\r\n                ref.dispose();\r\n                return;\r\n            }\r\n            dispose(this._previewModelReference);\r\n            // show in editor\r\n            const model = ref.object;\r\n            if (model) {\r\n                const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* Smooth */ : 1 /* Immediate */;\r\n                const sel = Range.lift(reference.range).collapseToStart();\r\n                this._previewModelReference = ref;\r\n                this._preview.setModel(model.textEditorModel);\r\n                this._preview.setSelection(sel);\r\n                this._preview.revealRangeInCenter(sel, scrollType);\r\n            }\r\n            else {\r\n                this._preview.setModel(this._previewNotAvailableMessage);\r\n                ref.dispose();\r\n            }\r\n        });\r\n    }\r\n};\r\nReferenceWidget = __decorate([\r\n    __param(3, IThemeService),\r\n    __param(4, ITextModelService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, peekView.IPeekViewService),\r\n    __param(7, ILabelService),\r\n    __param(8, IUndoRedoService),\r\n    __param(9, IKeybindingService)\r\n], ReferenceWidget);\r\nexport { ReferenceWidget };\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const findMatchHighlightColor = theme.getColor(peekView.peekViewResultsMatchHighlight);\r\n    if (findMatchHighlightColor) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { background-color: ${findMatchHighlightColor}; }`);\r\n    }\r\n    const referenceHighlightColor = theme.getColor(peekView.peekViewEditorMatchHighlight);\r\n    if (referenceHighlightColor) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: ${referenceHighlightColor}; }`);\r\n    }\r\n    const referenceHighlightBorder = theme.getColor(peekView.peekViewEditorMatchHighlightBorder);\r\n    if (referenceHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid ${referenceHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const hcOutline = theme.getColor(activeContrastBorder);\r\n    if (hcOutline) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { border: 1px dotted ${hcOutline}; box-sizing: border-box; }`);\r\n    }\r\n    const resultsBackground = theme.getColor(peekView.peekViewResultsBackground);\r\n    if (resultsBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { background-color: ${resultsBackground}; }`);\r\n    }\r\n    const resultsMatchForeground = theme.getColor(peekView.peekViewResultsMatchForeground);\r\n    if (resultsMatchForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { color: ${resultsMatchForeground}; }`);\r\n    }\r\n    const resultsFileForeground = theme.getColor(peekView.peekViewResultsFileForeground);\r\n    if (resultsFileForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .reference-file { color: ${resultsFileForeground}; }`);\r\n    }\r\n    const resultsSelectedBackground = theme.getColor(peekView.peekViewResultsSelectionBackground);\r\n    if (resultsSelectedBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: ${resultsSelectedBackground}; }`);\r\n    }\r\n    const resultsSelectedForeground = theme.getColor(peekView.peekViewResultsSelectionForeground);\r\n    if (resultsSelectedForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: ${resultsSelectedForeground} !important; }`);\r\n    }\r\n    const editorBackground = theme.getColor(peekView.peekViewEditorBackground);\r\n    if (editorBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,` +\r\n            `.monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {` +\r\n            `\tbackground-color: ${editorBackground};` +\r\n            `}`);\r\n    }\r\n    const editorGutterBackground = theme.getColor(peekView.peekViewEditorGutterBackground);\r\n    if (editorGutterBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .margin {` +\r\n            `\tbackground-color: ${editorGutterBackground};` +\r\n            `}`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../../nls.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IContextKeyService, RawContextKey, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nimport { OneReference } from '../referencesModel.js';\r\nimport { ReferenceWidget, LayoutData } from './referencesWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { getOuterEditor, PeekContext } from '../../peekView/peekView.js';\r\nimport { IListService, WorkbenchListFocusContextKey } from '../../../../platform/list/browser/listService.js';\r\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\r\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\r\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\r\nlet ReferencesController = class ReferencesController {\r\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this._editor = _editor;\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._instantiationService = _instantiationService;\r\n        this._storageService = _storageService;\r\n        this._configurationService = _configurationService;\r\n        this._disposables = new DisposableStore();\r\n        this._requestIdPool = 0;\r\n        this._ignoreModelChangeEvent = false;\r\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ReferencesController.ID);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.dispose();\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    toggleWidget(range, modelPromise, peekMode) {\r\n        // close current widget and return early is position didn't change\r\n        let widgetPosition;\r\n        if (this._widget) {\r\n            widgetPosition = this._widget.position;\r\n        }\r\n        this.closeWidget();\r\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\r\n            return;\r\n        }\r\n        this._peekMode = peekMode;\r\n        this._referenceSearchVisible.set(true);\r\n        // close the widget on model/mode changes\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\r\n        this._disposables.add(this._editor.onDidChangeModel(() => {\r\n            if (!this._ignoreModelChangeEvent) {\r\n                this.closeWidget();\r\n            }\r\n        }));\r\n        const storageKey = 'peekViewLayout';\r\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */, '{}'));\r\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\r\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\r\n        this._widget.show(range);\r\n        this._disposables.add(this._widget.onDidClose(() => {\r\n            modelPromise.cancel();\r\n            if (this._widget) {\r\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n                this._widget = undefined;\r\n            }\r\n            this.closeWidget();\r\n        }));\r\n        this._disposables.add(this._widget.onDidSelectReference(event => {\r\n            let { element, kind } = event;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            switch (kind) {\r\n                case 'open':\r\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\r\n                        // when stable peek is configured we don't close\r\n                        // the peek window on selecting the editor\r\n                        this.openReference(element, false, false);\r\n                    }\r\n                    break;\r\n                case 'side':\r\n                    this.openReference(element, true, false);\r\n                    break;\r\n                case 'goto':\r\n                    if (peekMode) {\r\n                        this._gotoReference(element);\r\n                    }\r\n                    else {\r\n                        this.openReference(element, false, true);\r\n                    }\r\n                    break;\r\n            }\r\n        }));\r\n        const requestId = ++this._requestIdPool;\r\n        modelPromise.then(model => {\r\n            var _a;\r\n            // still current request? widget still open?\r\n            if (requestId !== this._requestIdPool || !this._widget) {\r\n                model.dispose();\r\n                return undefined;\r\n            }\r\n            (_a = this._model) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this._model = model;\r\n            // show widget\r\n            return this._widget.setModel(this._model).then(() => {\r\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\r\n                    // set title\r\n                    if (!this._model.isEmpty) {\r\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\r\n                    }\r\n                    else {\r\n                        this._widget.setMetaTitle('');\r\n                    }\r\n                    // set 'best' selection\r\n                    let uri = this._editor.getModel().uri;\r\n                    let pos = new Position(range.startLineNumber, range.startColumn);\r\n                    let selection = this._model.nearestReference(uri, pos);\r\n                    if (selection) {\r\n                        return this._widget.setSelection(selection).then(() => {\r\n                            if (this._widget && this._editor.getOption(76 /* peekWidgetDefaultFocus */) === 'editor') {\r\n                                this._widget.focusOnPreviewEditor();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                return undefined;\r\n            });\r\n        }, error => {\r\n            this._notificationService.error(error);\r\n        });\r\n    }\r\n    changeFocusBetweenPreviewAndReferences() {\r\n        if (!this._widget) {\r\n            // can be called while still resolving...\r\n            return;\r\n        }\r\n        if (this._widget.isPreviewEditorFocused()) {\r\n            this._widget.focusOnReferenceTree();\r\n        }\r\n        else {\r\n            this._widget.focusOnPreviewEditor();\r\n        }\r\n    }\r\n    goToNextOrPreviousReference(fwd) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            const currentPosition = this._widget.position;\r\n            if (!currentPosition) {\r\n                return;\r\n            }\r\n            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\r\n            if (!source) {\r\n                return;\r\n            }\r\n            const target = this._model.nextOrPreviousReference(source, fwd);\r\n            const editorFocus = this._editor.hasTextFocus();\r\n            const previewEditorFocus = this._widget.isPreviewEditorFocused();\r\n            yield this._widget.setSelection(target);\r\n            yield this._gotoReference(target);\r\n            if (editorFocus) {\r\n                this._editor.focus();\r\n            }\r\n            else if (this._widget && previewEditorFocus) {\r\n                this._widget.focusOnPreviewEditor();\r\n            }\r\n        });\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            yield this._widget.revealReference(reference);\r\n        });\r\n    }\r\n    closeWidget(focusEditor = true) {\r\n        var _a, _b;\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n        this._requestIdPool += 1; // Cancel pending requests\r\n    }\r\n    _gotoReference(ref) {\r\n        if (this._widget) {\r\n            this._widget.hide();\r\n        }\r\n        this._ignoreModelChangeEvent = true;\r\n        const range = Range.lift(ref.range).collapseToStart();\r\n        return this._editorService.openCodeEditor({\r\n            resource: ref.uri,\r\n            options: { selection: range }\r\n        }, this._editor).then(openedEditor => {\r\n            var _a;\r\n            this._ignoreModelChangeEvent = false;\r\n            if (!openedEditor || !this._widget) {\r\n                // something went wrong...\r\n                this.closeWidget();\r\n                return;\r\n            }\r\n            if (this._editor === openedEditor) {\r\n                //\r\n                this._widget.show(range);\r\n                this._widget.focusOnReferenceTree();\r\n            }\r\n            else {\r\n                // we opened a different editor instance which means a different controller instance.\r\n                // therefore we stop with this controller and continue with the other\r\n                const other = ReferencesController.get(openedEditor);\r\n                const model = this._model.clone();\r\n                this.closeWidget();\r\n                openedEditor.focus();\r\n                other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\r\n            }\r\n        }, (err) => {\r\n            this._ignoreModelChangeEvent = false;\r\n            onUnexpectedError(err);\r\n        });\r\n    }\r\n    openReference(ref, sideBySide, pinned) {\r\n        // clear stage\r\n        if (!sideBySide) {\r\n            this.closeWidget();\r\n        }\r\n        const { uri, range } = ref;\r\n        this._editorService.openCodeEditor({\r\n            resource: uri,\r\n            options: { selection: range, pinned }\r\n        }, this._editor, sideBySide);\r\n    }\r\n};\r\nReferencesController.ID = 'editor.contrib.referencesController';\r\nReferencesController = __decorate([\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, INotificationService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IConfigurationService)\r\n], ReferencesController);\r\nexport { ReferencesController };\r\nfunction withController(accessor, fn) {\r\n    const outerEditor = getOuterEditor(accessor);\r\n    if (!outerEditor) {\r\n        return;\r\n    }\r\n    let controller = ReferencesController.get(outerEditor);\r\n    if (controller) {\r\n        fn(controller);\r\n    }\r\n}\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'togglePeekWidgetFocus',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 60 /* F2 */),\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.changeFocusBetweenPreviewAndReferences();\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToNextReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 62 /* F4 */,\r\n    secondary: [70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(true);\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToPreviousReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 1024 /* Shift */ | 62 /* F4 */,\r\n    secondary: [1024 /* Shift */ | 70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(false);\r\n        });\r\n    }\r\n});\r\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\r\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\r\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\r\n// close\r\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\r\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 100 /* EditorContrib */ - 101,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 200 /* WorkbenchContrib */ + 50,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'revealReference',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    primary: 3 /* Enter */,\r\n    mac: {\r\n        primary: 3 /* Enter */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */]\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.revealReference(focus[0]));\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'openReferenceToSide',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n    mac: {\r\n        primary: 256 /* WinCtrl */ | 3 /* Enter */\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\r\n        }\r\n    }\r\n});\r\nCommandsRegistry.registerCommand('openReference', (accessor) => {\r\n    var _a;\r\n    const listService = accessor.get(IListService);\r\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { registerEditorCommand, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { dispose, combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { isEqual } from '../../../base/common/resources.js';\r\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\r\nexport const ISymbolNavigationService = createDecorator('ISymbolNavigationService');\r\nlet SymbolNavigationService = class SymbolNavigationService {\r\n    constructor(contextKeyService, _editorService, _notificationService, _keybindingService) {\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._keybindingService = _keybindingService;\r\n        this._currentModel = undefined;\r\n        this._currentIdx = -1;\r\n        this._ignoreEditorChange = false;\r\n        this._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\r\n    }\r\n    reset() {\r\n        var _a, _b;\r\n        this._ctxHasSymbols.reset();\r\n        (_a = this._currentState) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentMessage) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._currentModel = undefined;\r\n        this._currentIdx = -1;\r\n    }\r\n    put(anchor) {\r\n        const refModel = anchor.parent.parent;\r\n        if (refModel.references.length <= 1) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._currentModel = refModel;\r\n        this._currentIdx = refModel.references.indexOf(anchor);\r\n        this._ctxHasSymbols.set(true);\r\n        this._showMessage();\r\n        const editorState = new EditorState(this._editorService);\r\n        const listener = editorState.onDidChange(_ => {\r\n            if (this._ignoreEditorChange) {\r\n                return;\r\n            }\r\n            const editor = this._editorService.getActiveCodeEditor();\r\n            if (!editor) {\r\n                return;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!model || !position) {\r\n                return;\r\n            }\r\n            let seenUri = false;\r\n            let seenPosition = false;\r\n            for (const reference of refModel.references) {\r\n                if (isEqual(reference.uri, model.uri)) {\r\n                    seenUri = true;\r\n                    seenPosition = seenPosition || Range.containsPosition(reference.range, position);\r\n                }\r\n                else if (seenUri) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!seenUri || !seenPosition) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._currentState = combinedDisposable(editorState, listener);\r\n    }\r\n    revealNext(source) {\r\n        if (!this._currentModel) {\r\n            return Promise.resolve();\r\n        }\r\n        // get next result and advance\r\n        this._currentIdx += 1;\r\n        this._currentIdx %= this._currentModel.references.length;\r\n        const reference = this._currentModel.references[this._currentIdx];\r\n        // status\r\n        this._showMessage();\r\n        // open editor, ignore events while that happens\r\n        this._ignoreEditorChange = true;\r\n        return this._editorService.openCodeEditor({\r\n            resource: reference.uri,\r\n            options: {\r\n                selection: Range.collapseToStart(reference.range),\r\n                selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n            }\r\n        }, source).finally(() => {\r\n            this._ignoreEditorChange = false;\r\n        });\r\n    }\r\n    _showMessage() {\r\n        var _a;\r\n        (_a = this._currentMessage) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\r\n        const message = kb\r\n            ? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel())\r\n            : localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel.references.length);\r\n        this._currentMessage = this._notificationService.status(message);\r\n    }\r\n};\r\nSymbolNavigationService = __decorate([\r\n    __param(0, IContextKeyService),\r\n    __param(1, ICodeEditorService),\r\n    __param(2, INotificationService),\r\n    __param(3, IKeybindingService)\r\n], SymbolNavigationService);\r\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, true);\r\nregisterEditorCommand(new class extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoNextSymbolFromResult',\r\n            precondition: ctxHasSymbols,\r\n            kbOpts: {\r\n                weight: 100 /* EditorContrib */,\r\n                primary: 70 /* F12 */\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(accessor, editor) {\r\n        return accessor.get(ISymbolNavigationService).revealNext(editor);\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'editor.gotoNextSymbolFromResult.cancel',\r\n    weight: 100 /* EditorContrib */,\r\n    when: ctxHasSymbols,\r\n    primary: 9 /* Escape */,\r\n    handler(accessor) {\r\n        accessor.get(ISymbolNavigationService).reset();\r\n    }\r\n});\r\n//\r\nlet EditorState = class EditorState {\r\n    constructor(editorService) {\r\n        this._listener = new Map();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\r\n        this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\r\n        editorService.listCodeEditors().forEach(this._onDidAddEditor, this);\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._onDidChange.dispose();\r\n        dispose(this._listener.values());\r\n    }\r\n    _onDidAddEditor(editor) {\r\n        this._listener.set(editor, combinedDisposable(editor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })), editor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor }))));\r\n    }\r\n    _onDidRemoveEditor(editor) {\r\n        var _a;\r\n        (_a = this._listener.get(editor)) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._listener.delete(editor);\r\n    }\r\n};\r\nEditorState = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], EditorState);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { createCancelablePromise, raceCancellation } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { isWeb } from '../../../base/common/platform.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as corePosition from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { isLocationLink } from '../../common/modes.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { PeekContext } from '../peekView/peekView.js';\r\nimport { ReferencesController } from './peek/referencesController.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition, getReferencesAtPosition } from './goToSymbol.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { ISymbolNavigationService } from './symbolNavigation.js';\r\nimport { isStandalone } from '../../../base/browser/browser.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\r\n    submenu: MenuId.EditorContextPeek,\r\n    title: nls.localize('peek.submenu', \"Peek\"),\r\n    group: 'navigation',\r\n    order: 100\r\n});\r\nconst _goToActionIds = new Set();\r\nfunction registerGoToAction(ctor) {\r\n    const result = new ctor();\r\n    registerInstantiatedEditorAction(result);\r\n    _goToActionIds.add(result.id);\r\n    return result;\r\n}\r\nclass SymbolNavigationAction extends EditorAction {\r\n    constructor(configuration, opts) {\r\n        super(opts);\r\n        this._configuration = configuration;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        const notificationService = accessor.get(INotificationService);\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const progressService = accessor.get(IEditorProgressService);\r\n        const symbolNavService = accessor.get(ISymbolNavigationService);\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* Value */ | 4 /* Position */);\r\n        const promise = raceCancellation(this._getLocationModel(model, pos, cts.token), cts.token).then((references) => __awaiter(this, void 0, void 0, function* () {\r\n            if (!references || cts.token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            alert(references.ariaMessage);\r\n            let altAction;\r\n            if (references.referenceAt(model.uri, pos)) {\r\n                const altActionId = this._getAlternativeCommand(editor);\r\n                if (altActionId !== this.id && _goToActionIds.has(altActionId)) {\r\n                    altAction = editor.getAction(altActionId);\r\n                }\r\n            }\r\n            const referenceCount = references.references.length;\r\n            if (referenceCount === 0) {\r\n                // no result -> show message\r\n                if (!this._configuration.muteMessage) {\r\n                    const info = model.getWordAtPosition(pos);\r\n                    MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);\r\n                }\r\n            }\r\n            else if (referenceCount === 1 && altAction) {\r\n                // already at the only result, run alternative\r\n                altAction.run();\r\n            }\r\n            else {\r\n                // normal results handling\r\n                return this._onResult(editorService, symbolNavService, editor, references);\r\n            }\r\n        }), (err) => {\r\n            // report an error\r\n            notificationService.error(err);\r\n        }).finally(() => {\r\n            cts.dispose();\r\n        });\r\n        progressService.showWhile(promise, 250);\r\n        return promise;\r\n    }\r\n    _onResult(editorService, symbolNavService, editor, model) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const gotoLocation = this._getGoToPreference(editor);\r\n            if (!(editor instanceof EmbeddedCodeEditorWidget) && (this._configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\r\n                this._openInPeek(editor, model);\r\n            }\r\n            else {\r\n                const next = model.firstReference();\r\n                const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\r\n                const targetEditor = yield this._openReference(editor, editorService, next, this._configuration.openToSide, !peek);\r\n                if (peek && targetEditor) {\r\n                    this._openInPeek(targetEditor, model);\r\n                }\r\n                else {\r\n                    model.dispose();\r\n                }\r\n                // keep remaining locations around when using\r\n                // 'goto'-mode\r\n                if (gotoLocation === 'goto') {\r\n                    symbolNavService.put(next);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _openReference(editor, editorService, reference, sideBySide, highlight) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // range is the target-selection-range when we have one\r\n            // and the fallback is the 'full' range\r\n            let range = undefined;\r\n            if (isLocationLink(reference)) {\r\n                range = reference.targetSelectionRange;\r\n            }\r\n            if (!range) {\r\n                range = reference.range;\r\n            }\r\n            if (!range) {\r\n                return undefined;\r\n            }\r\n            const targetEditor = yield editorService.openCodeEditor({\r\n                resource: reference.uri,\r\n                options: {\r\n                    selection: Range.collapseToStart(range),\r\n                    selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n                }\r\n            }, editor, sideBySide);\r\n            if (!targetEditor) {\r\n                return undefined;\r\n            }\r\n            if (highlight) {\r\n                const modelNow = targetEditor.getModel();\r\n                const ids = targetEditor.deltaDecorations([], [{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\r\n                setTimeout(() => {\r\n                    if (targetEditor.getModel() === modelNow) {\r\n                        targetEditor.deltaDecorations(ids, []);\r\n                    }\r\n                }, 350);\r\n            }\r\n            return targetEditor;\r\n        });\r\n    }\r\n    _openInPeek(target, model) {\r\n        let controller = ReferencesController.get(target);\r\n        if (controller && target.hasModel()) {\r\n            controller.toggleWidget(target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this._configuration.openInPeek);\r\n        }\r\n        else {\r\n            model.dispose();\r\n        }\r\n    }\r\n}\r\n//#region --- DEFINITION\r\nexport class DefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDefinitionsAtPosition(model, position, token), nls.localize('def.title', 'Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\r\n            : nls.localize('generic.noResults', \"No definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleDefinitions;\r\n    }\r\n}\r\nconst goToDefinitionKb = isWeb && !isStandalone\r\n    ? 2048 /* CtrlCmd */ | 70 /* F12 */\r\n    : 70 /* F12 */;\r\nregisterGoToAction((_a = class GoToDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDefinitionAction.id,\r\n                label: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\r\n                alias: 'Go to Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: goToDefinitionKb,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.1\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\r\n        }\r\n    },\r\n    _a.id = 'editor.action.revealDefinition',\r\n    _a));\r\nregisterGoToAction((_b = class OpenDefinitionToSideAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: true,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: OpenDefinitionToSideAction.id,\r\n                label: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\r\n                alias: 'Open Definition to the Side',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, goToDefinitionKb),\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\r\n        }\r\n    },\r\n    _b.id = 'editor.action.revealDefinitionAside',\r\n    _b));\r\nregisterGoToAction((_c = class PeekDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekDefinitionAction.id,\r\n                label: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\r\n                alias: 'Peek Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 512 /* Alt */ | 70 /* F12 */,\r\n                    linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 68 /* F10 */ },\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 2\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\r\n        }\r\n    },\r\n    _c.id = 'editor.action.peekDefinition',\r\n    _c));\r\n//#endregion\r\n//#region --- DECLARATION\r\nclass DeclarationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDeclarationsAtPosition(model, position, token), nls.localize('decl.title', 'Declarations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeDeclarationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleDeclarations;\r\n    }\r\n}\r\nregisterGoToAction((_d = class GoToDeclarationAction extends DeclarationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDeclarationAction.id,\r\n                label: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\r\n                alias: 'Go to Declaration',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.3\r\n                },\r\n            });\r\n        }\r\n        _getNoResultFoundMessage(info) {\r\n            return info && info.word\r\n                ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n                : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n        }\r\n    },\r\n    _d.id = 'editor.action.revealDeclaration',\r\n    _d));\r\nregisterGoToAction(class PeekDeclarationAction extends DeclarationAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.peekDeclaration',\r\n            label: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\r\n            alias: 'Peek Declaration',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- TYPE DEFINITION\r\nclass TypeDefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getTypeDefinitionsAtPosition(model, position, token), nls.localize('typedef.title', 'Type Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\r\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeTypeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleTypeDefinitions;\r\n    }\r\n}\r\nregisterGoToAction((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\r\n                alias: 'Go to Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 0,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.4\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _e.ID = 'editor.action.goToTypeDefinition',\r\n    _e));\r\nregisterGoToAction((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\r\n                alias: 'Peek Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 4\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _f.ID = 'editor.action.peekTypeDefinition',\r\n    _f));\r\n//#endregion\r\n//#region --- IMPLEMENTATION\r\nclass ImplementationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getImplementationsAtPosition(model, position, token), nls.localize('impl.title', 'Implementations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\r\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeImplementationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleImplementations;\r\n    }\r\n}\r\nregisterGoToAction((_g = class GoToImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToImplementationAction.ID,\r\n                label: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\r\n                alias: 'Go to Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.45\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _g.ID = 'editor.action.goToImplementation',\r\n    _g));\r\nregisterGoToAction((_h = class PeekImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekImplementationAction.ID,\r\n                label: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\r\n                alias: 'Peek Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 5\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _h.ID = 'editor.action.peekImplementation',\r\n    _h));\r\n//#endregion\r\n//#region --- REFERENCES\r\nclass ReferencesAction extends SymbolNavigationAction {\r\n    _getNoResultFoundMessage(info) {\r\n        return info\r\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\r\n            : nls.localize('references.noGeneric', \"No references found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).alternativeReferenceCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(49 /* gotoLocation */).multipleReferences;\r\n    }\r\n}\r\nregisterGoToAction(class GoToReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: false,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.goToReferences',\r\n            label: nls.localize('goToReferences.label', \"Go to References\"),\r\n            alias: 'Go to References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 70 /* F12 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 1.45\r\n            }\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, true, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\nregisterGoToAction(class PeekReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.referenceSearch.trigger',\r\n            label: nls.localize('references.action.label', \"Peek References\"),\r\n            alias: 'Peek References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, false, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- GENERIC goto symbols command\r\nclass GenericGoToLocationAction extends SymbolNavigationAction {\r\n    constructor(config, _references, _gotoMultipleBehaviour) {\r\n        super(config, {\r\n            id: 'editor.action.goToLocation',\r\n            label: nls.localize('label.generic', \"Go To Any Symbol\"),\r\n            alias: 'Go To Any Symbol',\r\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n        });\r\n        this._references = _references;\r\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\r\n    }\r\n    _getLocationModel(_model, _position, _token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\r\n    }\r\n    _getGoToPreference(editor) {\r\n        var _a;\r\n        return (_a = this._gotoMultipleBehaviour) !== null && _a !== void 0 ? _a : editor.getOption(49 /* gotoLocation */).multipleReferences;\r\n    }\r\n    _getAlternativeCommand() { return ''; }\r\n}\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.goToLocations',\r\n    description: {\r\n        description: 'Go to locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => __awaiter(void 0, void 0, void 0, function* () {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        assertType(Array.isArray(references));\r\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\r\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const editor = yield editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\r\n        if (isCodeEditor(editor)) {\r\n            editor.setPosition(position);\r\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n            return editor.invokeWithinContext(accessor => {\r\n                const command = new class extends GenericGoToLocationAction {\r\n                    _getNoResultFoundMessage(info) {\r\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\r\n                    }\r\n                }({\r\n                    muteMessage: !Boolean(noResultsMessage),\r\n                    openInPeek: Boolean(openInPeek),\r\n                    openToSide: false\r\n                }, references, multiple);\r\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\r\n            });\r\n        }\r\n    })\r\n});\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.peekLocations',\r\n    description: {\r\n        description: 'Peek locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple) => __awaiter(void 0, void 0, void 0, function* () {\r\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\r\n    })\r\n});\r\n//#endregion\r\n//#region --- REFERENCE search special commands\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.findReferences',\r\n    handler: (accessor, resource, position) => {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\r\n            if (!isCodeEditor(control) || !control.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const controller = ReferencesController.get(control);\r\n            if (!controller) {\r\n                return undefined;\r\n            }\r\n            const references = createCancelablePromise(token => getReferencesAtPosition(control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\r\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n            return Promise.resolve(controller.toggleWidget(range, references, false));\r\n        });\r\n    }\r\n});\r\n// use NEW command\r\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\r\n//#endregion\r\n// -- unconditionally register goto-action\r\nMenuRegistry.appendMenuItems([\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.revealDefinition',\r\n                title: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 2,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.revealDeclaration',\r\n                title: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 3,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.goToTypeDefinition',\r\n                title: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 3,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.goToImplementation',\r\n                title: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 4,\r\n        },\r\n    },\r\n    {\r\n        id: MenuId.MenubarGoMenu,\r\n        item: {\r\n            command: {\r\n                id: 'editor.action.goToReferences',\r\n                title: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\")\r\n            },\r\n            group: '4_symbol_nav',\r\n            order: 5,\r\n        },\r\n    },\r\n]);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../../base/common/event.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nfunction hasModifier(e, modifier) {\r\n    return !!e[modifier];\r\n}\r\n/**\r\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\r\n */\r\nexport class ClickLinkMouseEvent {\r\n    constructor(source, opts) {\r\n        this.target = source.target;\r\n        this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\r\n        this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\r\n        this.isNoneOrSingleMouseDown = (source.event.detail <= 1);\r\n    }\r\n}\r\n/**\r\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\r\n */\r\nexport class ClickLinkKeyboardEvent {\r\n    constructor(source, opts) {\r\n        this.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\r\n        this.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\r\n        this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\r\n    }\r\n}\r\nexport class ClickLinkOptions {\r\n    constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\r\n        this.triggerKey = triggerKey;\r\n        this.triggerModifier = triggerModifier;\r\n        this.triggerSideBySideKey = triggerSideBySideKey;\r\n        this.triggerSideBySideModifier = triggerSideBySideModifier;\r\n    }\r\n    equals(other) {\r\n        return (this.triggerKey === other.triggerKey\r\n            && this.triggerModifier === other.triggerModifier\r\n            && this.triggerSideBySideKey === other.triggerSideBySideKey\r\n            && this.triggerSideBySideModifier === other.triggerSideBySideModifier);\r\n    }\r\n}\r\nfunction createOptions(multiCursorModifier) {\r\n    if (multiCursorModifier === 'altKey') {\r\n        if (platform.isMacintosh) {\r\n            return new ClickLinkOptions(57 /* Meta */, 'metaKey', 6 /* Alt */, 'altKey');\r\n        }\r\n        return new ClickLinkOptions(5 /* Ctrl */, 'ctrlKey', 6 /* Alt */, 'altKey');\r\n    }\r\n    if (platform.isMacintosh) {\r\n        return new ClickLinkOptions(6 /* Alt */, 'altKey', 57 /* Meta */, 'metaKey');\r\n    }\r\n    return new ClickLinkOptions(6 /* Alt */, 'altKey', 5 /* Ctrl */, 'ctrlKey');\r\n}\r\nexport class ClickLinkGesture extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._onMouseMoveOrRelevantKeyDown = this._register(new Emitter());\r\n        this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;\r\n        this._onExecute = this._register(new Emitter());\r\n        this.onExecute = this._onExecute.event;\r\n        this._onCancel = this._register(new Emitter());\r\n        this.onCancel = this._onCancel.event;\r\n        this._editor = editor;\r\n        this._opts = createOptions(this._editor.getOption(69 /* multiCursorModifier */));\r\n        this._lastMouseMoveEvent = null;\r\n        this._hasTriggerKeyOnMouseDown = false;\r\n        this._lineNumberOnMouseDown = 0;\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(69 /* multiCursorModifier */)) {\r\n                const newOpts = createOptions(this._editor.getOption(69 /* multiCursorModifier */));\r\n                if (this._opts.equals(newOpts)) {\r\n                    return;\r\n                }\r\n                this._opts = newOpts;\r\n                this._lastMouseMoveEvent = null;\r\n                this._hasTriggerKeyOnMouseDown = false;\r\n                this._lineNumberOnMouseDown = 0;\r\n                this._onCancel.fire();\r\n            }\r\n        }));\r\n        this._register(this._editor.onMouseMove((e) => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onKeyDown((e) => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\r\n        this._register(this._editor.onKeyUp((e) => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseDrag(() => this._resetHandler()));\r\n        this._register(this._editor.onDidChangeCursorSelection((e) => this._onDidChangeCursorSelection(e)));\r\n        this._register(this._editor.onDidChangeModel((e) => this._resetHandler()));\r\n        this._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\r\n        this._register(this._editor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged || e.scrollLeftChanged) {\r\n                this._resetHandler();\r\n            }\r\n        }));\r\n    }\r\n    _onDidChangeCursorSelection(e) {\r\n        if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\r\n            this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\r\n        }\r\n    }\r\n    _onEditorMouseMove(mouseEvent) {\r\n        this._lastMouseMoveEvent = mouseEvent;\r\n        this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        // We need to record if we had the trigger key on mouse down because someone might select something in the editor\r\n        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\r\n        // release the mouse button without wanting to do the navigation.\r\n        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\r\n        this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\r\n        this._lineNumberOnMouseDown = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        const currentLineNumber = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\r\n        if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\r\n            this._onExecute.fire(mouseEvent);\r\n        }\r\n    }\r\n    _onEditorKeyDown(e) {\r\n        if (this._lastMouseMoveEvent\r\n            && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\r\n                || (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\r\n            )) {\r\n            this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\r\n        }\r\n        else if (e.hasTriggerModifier) {\r\n            this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\r\n        }\r\n    }\r\n    _onEditorKeyUp(e) {\r\n        if (e.keyCodeIsTriggerKey) {\r\n            this._onCancel.fire();\r\n        }\r\n    }\r\n    _resetHandler() {\r\n        this._lastMouseMoveEvent = null;\r\n        this._hasTriggerKeyOnMouseDown = false;\r\n        this._onCancel.fire();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './goToDefinitionAtPosition.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { DefinitionProviderRegistry } from '../../../common/modes.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { EditorState } from '../../../browser/core/editorState.js';\r\nimport { DefinitionAction } from '../goToCommands.js';\r\nimport { ClickLinkGesture } from './clickLinkGesture.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { PeekContext } from '../../peekView/peekView.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\r\n    constructor(editor, textModelResolverService, modeService) {\r\n        this.textModelResolverService = textModelResolverService;\r\n        this.modeService = modeService;\r\n        this.toUnhook = new DisposableStore();\r\n        this.toUnhookForKeyboard = new DisposableStore();\r\n        this.linkDecorations = [];\r\n        this.currentWordAtPosition = null;\r\n        this.previousPromise = null;\r\n        this.editor = editor;\r\n        let linkGesture = new ClickLinkGesture(editor);\r\n        this.toUnhook.add(linkGesture);\r\n        this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\r\n        }));\r\n        this.toUnhook.add(linkGesture.onExecute((mouseEvent) => {\r\n            if (this.isEnabled(mouseEvent)) {\r\n                this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\r\n                    this.removeLinkDecorations();\r\n                }, (error) => {\r\n                    this.removeLinkDecorations();\r\n                    onUnexpectedError(error);\r\n                });\r\n            }\r\n        }));\r\n        this.toUnhook.add(linkGesture.onCancel(() => {\r\n            this.removeLinkDecorations();\r\n            this.currentWordAtPosition = null;\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\r\n    }\r\n    startFindDefinitionFromCursor(position) {\r\n        // For issue: https://github.com/microsoft/vscode/issues/46257\r\n        // equivalent to mouse move with meta/ctrl key\r\n        // First find the definition and add decorations\r\n        // to the editor to be shown with the content hover widget\r\n        return this.startFindDefinition(position).then(() => {\r\n            // Add listeners for editor cursor move and key down events\r\n            // Dismiss the \"extended\" editor decorations when the user hides\r\n            // the hover widget. There is no event for the widget itself so these\r\n            // serve as a best effort. After removing the link decorations, the hover\r\n            // widget is clean and will only show declarations per next request.\r\n            this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\r\n                this.currentWordAtPosition = null;\r\n                this.removeLinkDecorations();\r\n                this.toUnhookForKeyboard.clear();\r\n            }));\r\n            this.toUnhookForKeyboard.add(this.editor.onKeyDown((e) => {\r\n                if (e) {\r\n                    this.currentWordAtPosition = null;\r\n                    this.removeLinkDecorations();\r\n                    this.toUnhookForKeyboard.clear();\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    startFindDefinitionFromMouse(mouseEvent, withKey) {\r\n        // check if we are active and on a content widget\r\n        if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */ && this.linkDecorations.length > 0) {\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return;\r\n        }\r\n        const position = mouseEvent.target.position;\r\n        this.startFindDefinition(position);\r\n    }\r\n    startFindDefinition(position) {\r\n        var _a;\r\n        // Dispose listeners for updating decorations when using keyboard to show definition hover\r\n        this.toUnhookForKeyboard.clear();\r\n        // Find word at mouse position\r\n        const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\r\n        if (!word) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return Promise.resolve(0);\r\n        }\r\n        // Return early if word at position is still the same\r\n        if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\r\n            return Promise.resolve(0);\r\n        }\r\n        this.currentWordAtPosition = word;\r\n        // Find definition and decorate word if found\r\n        let state = new EditorState(this.editor, 4 /* Position */ | 1 /* Value */ | 2 /* Selection */ | 8 /* Scroll */);\r\n        if (this.previousPromise) {\r\n            this.previousPromise.cancel();\r\n            this.previousPromise = null;\r\n        }\r\n        this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\r\n        return this.previousPromise.then(results => {\r\n            if (!results || !results.length || !state.validate(this.editor)) {\r\n                this.removeLinkDecorations();\r\n                return;\r\n            }\r\n            // Multiple results\r\n            if (results.length > 1) {\r\n                this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\r\n            }\r\n            // Single result\r\n            else {\r\n                let result = results[0];\r\n                if (!result.uri) {\r\n                    return;\r\n                }\r\n                this.textModelResolverService.createModelReference(result.uri).then(ref => {\r\n                    if (!ref.object || !ref.object.textEditorModel) {\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const { object: { textEditorModel } } = ref;\r\n                    const { startLineNumber } = result.range;\r\n                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\r\n                        // invalid range\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\r\n                    let wordRange;\r\n                    if (result.originSelectionRange) {\r\n                        wordRange = Range.lift(result.originSelectionRange);\r\n                    }\r\n                    else {\r\n                        wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n                    }\r\n                    const modeId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri);\r\n                    this.addDecoration(wordRange, new MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue));\r\n                    ref.dispose();\r\n                });\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    getPreviewValue(textEditorModel, startLineNumber, result) {\r\n        let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\r\n        const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\r\n        if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\r\n            rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\r\n        }\r\n        const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\r\n        return previewValue;\r\n    }\r\n    stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        let minIndent = startIndent;\r\n        for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\r\n            const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            minIndent = Math.min(minIndent, endIndent);\r\n        }\r\n        const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\r\n        return previewValue;\r\n    }\r\n    getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        let endLineNumber = startLineNumber + 1;\r\n        for (; endLineNumber < maxLineNumber; endLineNumber++) {\r\n            let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            if (startIndent === endIndent) {\r\n                break;\r\n            }\r\n        }\r\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\r\n    }\r\n    getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        const brackets = [];\r\n        let ignoreFirstEmpty = true;\r\n        let currentBracket = textEditorModel.findNextBracket(new Position(startLineNumber, 1));\r\n        while (currentBracket !== null) {\r\n            if (brackets.length === 0) {\r\n                brackets.push(currentBracket);\r\n            }\r\n            else {\r\n                const lastBracket = brackets[brackets.length - 1];\r\n                if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\r\n                    brackets.pop();\r\n                }\r\n                else {\r\n                    brackets.push(currentBracket);\r\n                }\r\n                if (brackets.length === 0) {\r\n                    if (ignoreFirstEmpty) {\r\n                        ignoreFirstEmpty = false;\r\n                    }\r\n                    else {\r\n                        return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\r\n                    }\r\n                }\r\n            }\r\n            const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\r\n            let nextLineNumber = currentBracket.range.endLineNumber;\r\n            let nextColumn = currentBracket.range.endColumn;\r\n            if (maxColumn === currentBracket.range.endColumn) {\r\n                nextLineNumber++;\r\n                nextColumn = 1;\r\n            }\r\n            if (nextLineNumber > maxLineNumber) {\r\n                return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n            }\r\n            currentBracket = textEditorModel.findNextBracket(new Position(nextLineNumber, nextColumn));\r\n        }\r\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n    }\r\n    addDecoration(range, hoverMessage) {\r\n        const newDecorations = {\r\n            range: range,\r\n            options: {\r\n                description: 'goto-definition-link',\r\n                inlineClassName: 'goto-definition-link',\r\n                hoverMessage\r\n            }\r\n        };\r\n        this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\r\n    }\r\n    removeLinkDecorations() {\r\n        if (this.linkDecorations.length > 0) {\r\n            this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\r\n        }\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return this.editor.hasModel() &&\r\n            mouseEvent.isNoneOrSingleMouseDown &&\r\n            (mouseEvent.target.type === 6 /* CONTENT_TEXT */) &&\r\n            (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\r\n            DefinitionProviderRegistry.has(this.editor.getModel());\r\n    }\r\n    findDefinition(position, token) {\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return getDefinitionsAtPosition(model, position, token);\r\n    }\r\n    gotoDefinition(position, openToSide) {\r\n        this.editor.setPosition(position);\r\n        return this.editor.invokeWithinContext((accessor) => {\r\n            const canPeek = !openToSide && this.editor.getOption(77 /* definitionLinkOpensInPeek */) && !this.isInPeekEditor(accessor);\r\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\r\n            return action.run(accessor, this.editor);\r\n        });\r\n    }\r\n    isInPeekEditor(accessor) {\r\n        const contextKeyService = accessor.get(IContextKeyService);\r\n        return PeekContext.inPeekEditor.getValue(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.toUnhook.dispose();\r\n    }\r\n};\r\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\r\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\r\nGotoDefinitionAtPositionEditorContribution = __decorate([\r\n    __param(1, ITextModelService),\r\n    __param(2, IModeService)\r\n], GotoDefinitionAtPositionEditorContribution);\r\nexport { GotoDefinitionAtPositionEditorContribution };\r\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { ModesContentHoverWidget } from './modesContentHover.js';\r\nimport { ModesGlyphHoverWidget } from './modesGlyphHover.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorHoverBackground, editorHoverBorder, editorHoverHighlight, textCodeBlockBackground, textLinkForeground, editorHoverStatusBarBackground, editorHoverForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { GotoDefinitionAtPositionEditorContribution } from '../gotoSymbol/link/goToDefinitionAtPosition.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nlet ModesHoverController = class ModesHoverController {\r\n    constructor(_editor, _instantiationService, _openerService, _modeService, _contextKeyService) {\r\n        this._editor = _editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._openerService = _openerService;\r\n        this._modeService = _modeService;\r\n        this._toUnhook = new DisposableStore();\r\n        this._isMouseDown = false;\r\n        this._hoverClicked = false;\r\n        this._contentWidget = null;\r\n        this._glyphWidget = null;\r\n        this._hookEvents();\r\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(52 /* hover */)) {\r\n                this._unhookEvents();\r\n                this._hookEvents();\r\n            }\r\n        });\r\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(_contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ModesHoverController.ID);\r\n    }\r\n    _hookEvents() {\r\n        const hideWidgetsEventHandler = () => this._hideWidgets();\r\n        const hoverOpts = this._editor.getOption(52 /* hover */);\r\n        this._isHoverEnabled = hoverOpts.enabled;\r\n        this._isHoverSticky = hoverOpts.sticky;\r\n        if (this._isHoverEnabled) {\r\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\r\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\r\n            this._toUnhook.add(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\r\n        }\r\n        else {\r\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\r\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\r\n        }\r\n        this._toUnhook.add(this._editor.onMouseLeave(hideWidgetsEventHandler));\r\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\r\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\r\n    }\r\n    _unhookEvents() {\r\n        this._toUnhook.clear();\r\n    }\r\n    _onModelDecorationsChanged() {\r\n        var _a, _b;\r\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.onModelDecorationsChanged();\r\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.onModelDecorationsChanged();\r\n    }\r\n    _onEditorScrollChanged(e) {\r\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\r\n            this._hideWidgets();\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._isMouseDown = true;\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\r\n            this._hoverClicked = true;\r\n            // mouse down on top of content hover widget\r\n            return;\r\n        }\r\n        if (targetType === 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\r\n            // mouse down on top of overlay hover widget\r\n            return;\r\n        }\r\n        if (targetType !== 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail !== ModesGlyphHoverWidget.ID) {\r\n            this._hoverClicked = false;\r\n        }\r\n        this._hideWidgets();\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._isMouseDown = false;\r\n    }\r\n    _onEditorMouseMove(mouseEvent) {\r\n        var _a, _b, _c, _d, _e;\r\n        let targetType = mouseEvent.target.type;\r\n        if (this._isMouseDown && this._hoverClicked) {\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\r\n            // mouse moved on top of content hover widget\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\r\n            // selected text within content hover widget\r\n            return;\r\n        }\r\n        if (!this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID\r\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\r\n            // though the hover is not sticky, the color picker needs to.\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && targetType === 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\r\n            // mouse moved on top of overlay hover widget\r\n            return;\r\n        }\r\n        if (!this._isHoverEnabled) {\r\n            this._hideWidgets();\r\n            return;\r\n        }\r\n        const contentWidget = this._getOrCreateContentWidget();\r\n        if (contentWidget.maybeShowAt(mouseEvent)) {\r\n            (_d = this._glyphWidget) === null || _d === void 0 ? void 0 : _d.hide();\r\n            return;\r\n        }\r\n        if (targetType === 2 /* GUTTER_GLYPH_MARGIN */ && mouseEvent.target.position) {\r\n            (_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.hide();\r\n            if (!this._glyphWidget) {\r\n                this._glyphWidget = new ModesGlyphHoverWidget(this._editor, this._modeService, this._openerService);\r\n            }\r\n            this._glyphWidget.startShowingAt(mouseEvent.target.position.lineNumber);\r\n            return;\r\n        }\r\n        this._hideWidgets();\r\n    }\r\n    _onKeyDown(e) {\r\n        if (e.keyCode !== 5 /* Ctrl */ && e.keyCode !== 6 /* Alt */ && e.keyCode !== 57 /* Meta */ && e.keyCode !== 4 /* Shift */) {\r\n            // Do not hide hover when a modifier key is pressed\r\n            this._hideWidgets();\r\n        }\r\n    }\r\n    _hideWidgets() {\r\n        var _a, _b, _c;\r\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()))) {\r\n            return;\r\n        }\r\n        this._hoverClicked = false;\r\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\r\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\r\n    }\r\n    _getOrCreateContentWidget() {\r\n        if (!this._contentWidget) {\r\n            this._contentWidget = this._instantiationService.createInstance(ModesContentHoverWidget, this._editor, this._hoverVisibleKey);\r\n        }\r\n        return this._contentWidget;\r\n    }\r\n    isColorPickerVisible() {\r\n        var _a;\r\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\r\n    }\r\n    showContentHover(range, mode, focus) {\r\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._unhookEvents();\r\n        this._toUnhook.dispose();\r\n        this._didChangeConfigurationHandler.dispose();\r\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\r\n    }\r\n};\r\nModesHoverController.ID = 'editor.contrib.hover';\r\nModesHoverController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IModeService),\r\n    __param(4, IContextKeyService)\r\n], ModesHoverController);\r\nexport { ModesHoverController };\r\nclass ShowHoverAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showHover',\r\n            label: nls.localize({\r\n                key: 'showHover',\r\n                comment: [\r\n                    'Label for action that will trigger the showing of a hover in the editor.',\r\n                    'This allows for users to show the hover without using the mouse.'\r\n                ]\r\n            }, \"Show Hover\"),\r\n            alias: 'Show Hover',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 39 /* KEY_I */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let controller = ModesHoverController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        const position = editor.getPosition();\r\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        const focus = editor.getOption(2 /* accessibilitySupport */) === 2 /* Enabled */;\r\n        controller.showContentHover(range, 1 /* Immediate */, focus);\r\n    }\r\n}\r\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showDefinitionPreviewHover',\r\n            label: nls.localize({\r\n                key: 'showDefinitionPreviewHover',\r\n                comment: [\r\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\r\n                    'This allows for users to show the definition preview hover without using the mouse.'\r\n                ]\r\n            }, \"Show Definition Preview Hover\"),\r\n            alias: 'Show Definition Preview Hover',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = ModesHoverController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        const position = editor.getPosition();\r\n        if (!position) {\r\n            return;\r\n        }\r\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\r\n        const promise = goto.startFindDefinitionFromCursor(position);\r\n        promise.then(() => {\r\n            controller.showContentHover(range, 1 /* Immediate */, true);\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController);\r\nregisterEditorAction(ShowHoverAction);\r\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\r\n    if (editorHoverHighlightColor) {\r\n        collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\r\n    }\r\n    const hoverBackground = theme.getColor(editorHoverBackground);\r\n    if (hoverBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);\r\n    }\r\n    const hoverBorder = theme.getColor(editorHoverBorder);\r\n    if (hoverBorder) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const hoverForeground = theme.getColor(editorHoverForeground);\r\n    if (hoverForeground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);\r\n    }\r\n    const actionsBackground = theme.getColor(editorHoverStatusBarBackground);\r\n    if (actionsBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// import color detector contribution\r\nimport './colorDetector.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ModesHoverController } from '../hover/hover.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class ColorContribution extends Disposable {\r\n    constructor(_editor) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    onMouseDown(mouseEvent) {\r\n        var _a;\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType !== 6 /* CONTENT_TEXT */) {\r\n            return;\r\n        }\r\n        const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'));\r\n        if (!hoverOnColorDecorator) {\r\n            return;\r\n        }\r\n        if (!mouseEvent.target.range) {\r\n            return;\r\n        }\r\n        const hoverController = this._editor.getContribution(ModesHoverController.ID);\r\n        if (!hoverController.isColorPickerVisible()) {\r\n            const range = new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1);\r\n            hoverController.showContentHover(range, 0 /* Delayed */, false);\r\n        }\r\n    }\r\n}\r\nColorContribution.ID = 'editor.contrib.colorContribution'; // ms\r\nregisterEditorContribution(ColorContribution.ID, ColorContribution);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nexport class BlockCommentCommand {\r\n    constructor(selection, insertSpace) {\r\n        this._selection = selection;\r\n        this._insertSpace = insertSpace;\r\n        this._usedEndToken = null;\r\n    }\r\n    static _haystackHasNeedleAtOffset(haystack, needle, offset) {\r\n        if (offset < 0) {\r\n            return false;\r\n        }\r\n        const needleLength = needle.length;\r\n        const haystackLength = haystack.length;\r\n        if (offset + needleLength > haystackLength) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < needleLength; i++) {\r\n            const codeA = haystack.charCodeAt(offset + i);\r\n            const codeB = needle.charCodeAt(i);\r\n            if (codeA === codeB) {\r\n                continue;\r\n            }\r\n            if (codeA >= 65 /* A */ && codeA <= 90 /* Z */ && codeA + 32 === codeB) {\r\n                // codeA is upper-case variant of codeB\r\n                continue;\r\n            }\r\n            if (codeB >= 65 /* A */ && codeB <= 90 /* Z */ && codeB + 32 === codeA) {\r\n                // codeB is upper-case variant of codeA\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    _createOperationsForBlockComment(selection, startToken, endToken, insertSpace, model, builder) {\r\n        const startLineNumber = selection.startLineNumber;\r\n        const startColumn = selection.startColumn;\r\n        const endLineNumber = selection.endLineNumber;\r\n        const endColumn = selection.endColumn;\r\n        const startLineText = model.getLineContent(startLineNumber);\r\n        const endLineText = model.getLineContent(endLineNumber);\r\n        let startTokenIndex = startLineText.lastIndexOf(startToken, startColumn - 1 + startToken.length);\r\n        let endTokenIndex = endLineText.indexOf(endToken, endColumn - 1 - endToken.length);\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            if (startLineNumber === endLineNumber) {\r\n                const lineBetweenTokens = startLineText.substring(startTokenIndex + startToken.length, endTokenIndex);\r\n                if (lineBetweenTokens.indexOf(endToken) >= 0) {\r\n                    // force to add a block comment\r\n                    startTokenIndex = -1;\r\n                    endTokenIndex = -1;\r\n                }\r\n            }\r\n            else {\r\n                const startLineAfterStartToken = startLineText.substring(startTokenIndex + startToken.length);\r\n                const endLineBeforeEndToken = endLineText.substring(0, endTokenIndex);\r\n                if (startLineAfterStartToken.indexOf(endToken) >= 0 || endLineBeforeEndToken.indexOf(endToken) >= 0) {\r\n                    // force to add a block comment\r\n                    startTokenIndex = -1;\r\n                    endTokenIndex = -1;\r\n                }\r\n            }\r\n        }\r\n        let ops;\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            // Consider spaces as part of the comment tokens\r\n            if (insertSpace && startTokenIndex + startToken.length < startLineText.length && startLineText.charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */) {\r\n                // Pretend the start token contains a trailing space\r\n                startToken = startToken + ' ';\r\n            }\r\n            if (insertSpace && endTokenIndex > 0 && endLineText.charCodeAt(endTokenIndex - 1) === 32 /* Space */) {\r\n                // Pretend the end token contains a leading space\r\n                endToken = ' ' + endToken;\r\n                endTokenIndex -= 1;\r\n            }\r\n            ops = BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\r\n        }\r\n        else {\r\n            ops = BlockCommentCommand._createAddBlockCommentOperations(selection, startToken, endToken, this._insertSpace);\r\n            this._usedEndToken = ops.length === 1 ? endToken : null;\r\n        }\r\n        for (const op of ops) {\r\n            builder.addTrackedEditOperation(op.range, op.text);\r\n        }\r\n    }\r\n    static _createRemoveBlockCommentOperations(r, startToken, endToken) {\r\n        let res = [];\r\n        if (!Range.isEmpty(r)) {\r\n            // Remove block comment start\r\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.startLineNumber, r.startColumn)));\r\n            // Remove block comment end\r\n            res.push(EditOperation.delete(new Range(r.endLineNumber, r.endColumn, r.endLineNumber, r.endColumn + endToken.length)));\r\n        }\r\n        else {\r\n            // Remove both continuously\r\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.endLineNumber, r.endColumn + endToken.length)));\r\n        }\r\n        return res;\r\n    }\r\n    static _createAddBlockCommentOperations(r, startToken, endToken, insertSpace) {\r\n        let res = [];\r\n        if (!Range.isEmpty(r)) {\r\n            // Insert block comment start\r\n            res.push(EditOperation.insert(new Position(r.startLineNumber, r.startColumn), startToken + (insertSpace ? ' ' : '')));\r\n            // Insert block comment end\r\n            res.push(EditOperation.insert(new Position(r.endLineNumber, r.endColumn), (insertSpace ? ' ' : '') + endToken));\r\n        }\r\n        else {\r\n            // Insert both continuously\r\n            res.push(EditOperation.replace(new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn), startToken + '  ' + endToken));\r\n        }\r\n        return res;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        const startLineNumber = this._selection.startLineNumber;\r\n        const startColumn = this._selection.startColumn;\r\n        model.tokenizeIfCheap(startLineNumber);\r\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, startColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(languageId);\r\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\r\n            // Mode does not support block comments\r\n            return;\r\n        }\r\n        this._createOperationsForBlockComment(this._selection, config.blockCommentStartToken, config.blockCommentEndToken, this._insertSpace, model, builder);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        if (inverseEditOperations.length === 2) {\r\n            const startTokenEditOperation = inverseEditOperations[0];\r\n            const endTokenEditOperation = inverseEditOperations[1];\r\n            return new Selection(startTokenEditOperation.range.endLineNumber, startTokenEditOperation.range.endColumn, endTokenEditOperation.range.startLineNumber, endTokenEditOperation.range.startColumn);\r\n        }\r\n        else {\r\n            const srcRange = inverseEditOperations[0].range;\r\n            const deltaColumn = this._usedEndToken ? -this._usedEndToken.length - 1 : 0; // minus 1 space before endToken\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn + deltaColumn, srcRange.endLineNumber, srcRange.endColumn + deltaColumn);\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { BlockCommentCommand } from './blockCommentCommand.js';\r\nexport class LineCommentCommand {\r\n    constructor(selection, tabSize, type, insertSpace, ignoreEmptyLines, ignoreFirstLine) {\r\n        this._selection = selection;\r\n        this._tabSize = tabSize;\r\n        this._type = type;\r\n        this._insertSpace = insertSpace;\r\n        this._selectionId = null;\r\n        this._deltaColumn = 0;\r\n        this._moveEndPositionDown = false;\r\n        this._ignoreEmptyLines = ignoreEmptyLines;\r\n        this._ignoreFirstLine = ignoreFirstLine || false;\r\n    }\r\n    /**\r\n     * Do an initial pass over the lines and gather info about the line comment string.\r\n     * Returns null if any of the lines doesn't support a line comment string.\r\n     */\r\n    static _gatherPreflightCommentStrings(model, startLineNumber, endLineNumber) {\r\n        model.tokenizeIfCheap(startLineNumber);\r\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, 1);\r\n        const config = LanguageConfigurationRegistry.getComments(languageId);\r\n        const commentStr = (config ? config.lineCommentToken : null);\r\n        if (!commentStr) {\r\n            // Mode does not support line comments\r\n            return null;\r\n        }\r\n        let lines = [];\r\n        for (let i = 0, lineCount = endLineNumber - startLineNumber + 1; i < lineCount; i++) {\r\n            lines[i] = {\r\n                ignore: false,\r\n                commentStr: commentStr,\r\n                commentStrOffset: 0,\r\n                commentStrLength: commentStr.length\r\n            };\r\n        }\r\n        return lines;\r\n    }\r\n    /**\r\n     * Analyze lines and decide which lines are relevant and what the toggle should do.\r\n     * Also, build up several offsets and lengths useful in the generation of editor operations.\r\n     */\r\n    static _analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine) {\r\n        let onlyWhitespaceLines = true;\r\n        let shouldRemoveComments;\r\n        if (type === 0 /* Toggle */) {\r\n            shouldRemoveComments = true;\r\n        }\r\n        else if (type === 1 /* ForceAdd */) {\r\n            shouldRemoveComments = false;\r\n        }\r\n        else {\r\n            shouldRemoveComments = true;\r\n        }\r\n        for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\r\n            const lineData = lines[i];\r\n            const lineNumber = startLineNumber + i;\r\n            if (lineNumber === startLineNumber && ignoreFirstLine) {\r\n                // first line ignored\r\n                lineData.ignore = true;\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(lineNumber);\r\n            const lineContentStartOffset = strings.firstNonWhitespaceIndex(lineContent);\r\n            if (lineContentStartOffset === -1) {\r\n                // Empty or whitespace only line\r\n                lineData.ignore = ignoreEmptyLines;\r\n                lineData.commentStrOffset = lineContent.length;\r\n                continue;\r\n            }\r\n            onlyWhitespaceLines = false;\r\n            lineData.ignore = false;\r\n            lineData.commentStrOffset = lineContentStartOffset;\r\n            if (shouldRemoveComments && !BlockCommentCommand._haystackHasNeedleAtOffset(lineContent, lineData.commentStr, lineContentStartOffset)) {\r\n                if (type === 0 /* Toggle */) {\r\n                    // Every line so far has been a line comment, but this one is not\r\n                    shouldRemoveComments = false;\r\n                }\r\n                else if (type === 1 /* ForceAdd */) {\r\n                    // Will not happen\r\n                }\r\n                else {\r\n                    lineData.ignore = true;\r\n                }\r\n            }\r\n            if (shouldRemoveComments && insertSpace) {\r\n                // Remove a following space if present\r\n                const commentStrEndOffset = lineContentStartOffset + lineData.commentStrLength;\r\n                if (commentStrEndOffset < lineContent.length && lineContent.charCodeAt(commentStrEndOffset) === 32 /* Space */) {\r\n                    lineData.commentStrLength += 1;\r\n                }\r\n            }\r\n        }\r\n        if (type === 0 /* Toggle */ && onlyWhitespaceLines) {\r\n            // For only whitespace lines, we insert comments\r\n            shouldRemoveComments = false;\r\n            // Also, no longer ignore them\r\n            for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\r\n                lines[i].ignore = false;\r\n            }\r\n        }\r\n        return {\r\n            supported: true,\r\n            shouldRemoveComments: shouldRemoveComments,\r\n            lines: lines\r\n        };\r\n    }\r\n    /**\r\n     * Analyze all lines and decide exactly what to do => not supported | insert line comments | remove line comments\r\n     */\r\n    static _gatherPreflightData(type, insertSpace, model, startLineNumber, endLineNumber, ignoreEmptyLines, ignoreFirstLine) {\r\n        const lines = LineCommentCommand._gatherPreflightCommentStrings(model, startLineNumber, endLineNumber);\r\n        if (lines === null) {\r\n            return {\r\n                supported: false\r\n            };\r\n        }\r\n        return LineCommentCommand._analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine);\r\n    }\r\n    /**\r\n     * Given a successful analysis, execute either insert line comments, either remove line comments\r\n     */\r\n    _executeLineComments(model, builder, data, s) {\r\n        let ops;\r\n        if (data.shouldRemoveComments) {\r\n            ops = LineCommentCommand._createRemoveLineCommentsOperations(data.lines, s.startLineNumber);\r\n        }\r\n        else {\r\n            LineCommentCommand._normalizeInsertionPoint(model, data.lines, s.startLineNumber, this._tabSize);\r\n            ops = this._createAddLineCommentsOperations(data.lines, s.startLineNumber);\r\n        }\r\n        const cursorPosition = new Position(s.positionLineNumber, s.positionColumn);\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            builder.addEditOperation(ops[i].range, ops[i].text);\r\n            if (Range.isEmpty(ops[i].range) && Range.getStartPosition(ops[i].range).equals(cursorPosition)) {\r\n                const lineContent = model.getLineContent(cursorPosition.lineNumber);\r\n                if (lineContent.length + 1 === cursorPosition.column) {\r\n                    this._deltaColumn = (ops[i].text || '').length;\r\n                }\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n    }\r\n    _attemptRemoveBlockComment(model, s, startToken, endToken) {\r\n        let startLineNumber = s.startLineNumber;\r\n        let endLineNumber = s.endLineNumber;\r\n        let startTokenAllowedBeforeColumn = endToken.length + Math.max(model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.startColumn);\r\n        let startTokenIndex = model.getLineContent(startLineNumber).lastIndexOf(startToken, startTokenAllowedBeforeColumn - 1);\r\n        let endTokenIndex = model.getLineContent(endLineNumber).indexOf(endToken, s.endColumn - 1 - startToken.length);\r\n        if (startTokenIndex !== -1 && endTokenIndex === -1) {\r\n            endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\r\n            endLineNumber = startLineNumber;\r\n        }\r\n        if (startTokenIndex === -1 && endTokenIndex !== -1) {\r\n            startTokenIndex = model.getLineContent(endLineNumber).lastIndexOf(startToken, endTokenIndex);\r\n            startLineNumber = endLineNumber;\r\n        }\r\n        if (s.isEmpty() && (startTokenIndex === -1 || endTokenIndex === -1)) {\r\n            startTokenIndex = model.getLineContent(startLineNumber).indexOf(startToken);\r\n            if (startTokenIndex !== -1) {\r\n                endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\r\n            }\r\n        }\r\n        // We have to adjust to possible inner white space.\r\n        // For Space after startToken, add Space to startToken - range math will work out.\r\n        if (startTokenIndex !== -1 && model.getLineContent(startLineNumber).charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */) {\r\n            startToken += ' ';\r\n        }\r\n        // For Space before endToken, add Space before endToken and shift index one left.\r\n        if (endTokenIndex !== -1 && model.getLineContent(endLineNumber).charCodeAt(endTokenIndex - 1) === 32 /* Space */) {\r\n            endToken = ' ' + endToken;\r\n            endTokenIndex -= 1;\r\n        }\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            return BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Given an unsuccessful analysis, delegate to the block comment command\r\n     */\r\n    _executeBlockComment(model, builder, s) {\r\n        model.tokenizeIfCheap(s.startLineNumber);\r\n        let languageId = model.getLanguageIdAtPosition(s.startLineNumber, 1);\r\n        let config = LanguageConfigurationRegistry.getComments(languageId);\r\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\r\n            // Mode does not support block comments\r\n            return;\r\n        }\r\n        const startToken = config.blockCommentStartToken;\r\n        const endToken = config.blockCommentEndToken;\r\n        let ops = this._attemptRemoveBlockComment(model, s, startToken, endToken);\r\n        if (!ops) {\r\n            if (s.isEmpty()) {\r\n                const lineContent = model.getLineContent(s.startLineNumber);\r\n                let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\r\n                if (firstNonWhitespaceIndex === -1) {\r\n                    // Line is empty or contains only whitespace\r\n                    firstNonWhitespaceIndex = lineContent.length;\r\n                }\r\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, firstNonWhitespaceIndex + 1, s.startLineNumber, lineContent.length + 1), startToken, endToken, this._insertSpace);\r\n            }\r\n            else {\r\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), startToken, endToken, this._insertSpace);\r\n            }\r\n            if (ops.length === 1) {\r\n                // Leave cursor after token and Space\r\n                this._deltaColumn = startToken.length + 1;\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        for (const op of ops) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let s = this._selection;\r\n        this._moveEndPositionDown = false;\r\n        if (s.startLineNumber === s.endLineNumber && this._ignoreFirstLine) {\r\n            builder.addEditOperation(new Range(s.startLineNumber, model.getLineMaxColumn(s.startLineNumber), s.startLineNumber + 1, 1), s.startLineNumber === model.getLineCount() ? '' : '\\n');\r\n            this._selectionId = builder.trackSelection(s);\r\n            return;\r\n        }\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._moveEndPositionDown = true;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        const data = LineCommentCommand._gatherPreflightData(this._type, this._insertSpace, model, s.startLineNumber, s.endLineNumber, this._ignoreEmptyLines, this._ignoreFirstLine);\r\n        if (data.supported) {\r\n            return this._executeLineComments(model, builder, data, s);\r\n        }\r\n        return this._executeBlockComment(model, builder, s);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._moveEndPositionDown) {\r\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\r\n        }\r\n        return new Selection(result.selectionStartLineNumber, result.selectionStartColumn + this._deltaColumn, result.positionLineNumber, result.positionColumn + this._deltaColumn);\r\n    }\r\n    /**\r\n     * Generate edit operations in the remove line comment case\r\n     */\r\n    static _createRemoveLineCommentsOperations(lines, startLineNumber) {\r\n        let res = [];\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            const lineData = lines[i];\r\n            if (lineData.ignore) {\r\n                continue;\r\n            }\r\n            res.push(EditOperation.delete(new Range(startLineNumber + i, lineData.commentStrOffset + 1, startLineNumber + i, lineData.commentStrOffset + lineData.commentStrLength + 1)));\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Generate edit operations in the add line comment case\r\n     */\r\n    _createAddLineCommentsOperations(lines, startLineNumber) {\r\n        let res = [];\r\n        const afterCommentStr = this._insertSpace ? ' ' : '';\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            const lineData = lines[i];\r\n            if (lineData.ignore) {\r\n                continue;\r\n            }\r\n            res.push(EditOperation.insert(new Position(startLineNumber + i, lineData.commentStrOffset + 1), lineData.commentStr + afterCommentStr));\r\n        }\r\n        return res;\r\n    }\r\n    static nextVisibleColumn(currentVisibleColumn, tabSize, isTab, columnSize) {\r\n        if (isTab) {\r\n            return currentVisibleColumn + (tabSize - (currentVisibleColumn % tabSize));\r\n        }\r\n        return currentVisibleColumn + columnSize;\r\n    }\r\n    /**\r\n     * Adjust insertion points to have them vertically aligned in the add line comment case\r\n     */\r\n    static _normalizeInsertionPoint(model, lines, startLineNumber, tabSize) {\r\n        let minVisibleColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let j;\r\n        let lenJ;\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].ignore) {\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(startLineNumber + i);\r\n            let currentVisibleColumn = 0;\r\n            for (let j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\r\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */, 1);\r\n            }\r\n            if (currentVisibleColumn < minVisibleColumn) {\r\n                minVisibleColumn = currentVisibleColumn;\r\n            }\r\n        }\r\n        minVisibleColumn = Math.floor(minVisibleColumn / tabSize) * tabSize;\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].ignore) {\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(startLineNumber + i);\r\n            let currentVisibleColumn = 0;\r\n            for (j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\r\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */, 1);\r\n            }\r\n            if (currentVisibleColumn > minVisibleColumn) {\r\n                lines[i].commentStrOffset = j - 1;\r\n            }\r\n            else {\r\n                lines[i].commentStrOffset = j;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { BlockCommentCommand } from './blockCommentCommand.js';\r\nimport { LineCommentCommand } from './lineCommentCommand.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nclass CommentLineAction extends EditorAction {\r\n    constructor(type, opts) {\r\n        super(opts);\r\n        this._type = type;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        const commands = [];\r\n        const modelOptions = model.getOptions();\r\n        const commentsOptions = editor.getOption(18 /* comments */);\r\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignoreFirstLine: false }));\r\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        // Remove selections that would result in copying the same line\r\n        let prev = selections[0];\r\n        for (let i = 1; i < selections.length; i++) {\r\n            const curr = selections[i];\r\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\r\n                // these two selections would copy the same line\r\n                if (prev.index < curr.index) {\r\n                    // prev wins\r\n                    curr.ignoreFirstLine = true;\r\n                }\r\n                else {\r\n                    // curr wins\r\n                    prev.ignoreFirstLine = true;\r\n                    prev = curr;\r\n                }\r\n            }\r\n        }\r\n        for (const selection of selections) {\r\n            commands.push(new LineCommentCommand(selection.selection, modelOptions.tabSize, this._type, commentsOptions.insertSpace, commentsOptions.ignoreEmptyLines, selection.ignoreFirstLine));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass ToggleCommentLineAction extends CommentLineAction {\r\n    constructor() {\r\n        super(0 /* Toggle */, {\r\n            id: 'editor.action.commentLine',\r\n            label: nls.localize('comment.line', \"Toggle Line Comment\"),\r\n            alias: 'Toggle Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '5_insert',\r\n                title: nls.localize({ key: 'miToggleLineComment', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Line Comment\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass AddLineCommentAction extends CommentLineAction {\r\n    constructor() {\r\n        super(1 /* ForceAdd */, {\r\n            id: 'editor.action.addCommentLine',\r\n            label: nls.localize('comment.line.add', \"Add Line Comment\"),\r\n            alias: 'Add Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 33 /* KEY_C */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass RemoveLineCommentAction extends CommentLineAction {\r\n    constructor() {\r\n        super(2 /* ForceRemove */, {\r\n            id: 'editor.action.removeCommentLine',\r\n            label: nls.localize('comment.line.remove', \"Remove Line Comment\"),\r\n            alias: 'Remove Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 51 /* KEY_U */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass BlockCommentAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.blockComment',\r\n            label: nls.localize('comment.block', \"Toggle Block Comment\"),\r\n            alias: 'Toggle Block Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 31 /* KEY_A */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 31 /* KEY_A */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '5_insert',\r\n                title: nls.localize({ key: 'miToggleBlockComment', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Block Comment\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const commentsOptions = editor.getOption(18 /* comments */);\r\n        const commands = [];\r\n        const selections = editor.getSelections();\r\n        for (const selection of selections) {\r\n            commands.push(new BlockCommentCommand(selection, commentsOptions.insertSpace));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nregisterEditorAction(ToggleCommentLineAction);\r\nregisterEditorAction(AddLineCommentAction);\r\nregisterEditorAction(RemoveLineCommentAction);\r\nregisterEditorAction(BlockCommentAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { IMenuService, MenuId, SubmenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { isIOS } from '../../../base/common/platform.js';\r\nlet ContextMenuController = class ContextMenuController {\r\n    constructor(editor, _contextMenuService, _contextViewService, _contextKeyService, _keybindingService, _menuService) {\r\n        this._contextMenuService = _contextMenuService;\r\n        this._contextViewService = _contextViewService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._keybindingService = _keybindingService;\r\n        this._menuService = _menuService;\r\n        this._toDispose = new DisposableStore();\r\n        this._contextMenuIsBeingShownCount = 0;\r\n        this._editor = editor;\r\n        this._toDispose.add(this._editor.onContextMenu((e) => this._onContextMenu(e)));\r\n        this._toDispose.add(this._editor.onMouseWheel((e) => {\r\n            if (this._contextMenuIsBeingShownCount > 0) {\r\n                const view = this._contextViewService.getContextViewElement();\r\n                const target = e.srcElement;\r\n                // Event triggers on shadow root host first\r\n                // Check if the context view is under this host before hiding it #103169\r\n                if (!(target.shadowRoot && dom.getShadowRoot(view) === target.shadowRoot)) {\r\n                    this._contextViewService.hideContextView();\r\n                }\r\n            }\r\n        }));\r\n        this._toDispose.add(this._editor.onKeyDown((e) => {\r\n            if (e.keyCode === 58 /* ContextMenu */) {\r\n                // Chrome is funny like that\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.showContextMenu();\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ContextMenuController.ID);\r\n    }\r\n    _onContextMenu(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(19 /* contextmenu */)) {\r\n            this._editor.focus();\r\n            // Ensure the cursor is at the position of the mouse click\r\n            if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\r\n                this._editor.setPosition(e.target.position);\r\n            }\r\n            return; // Context menu is turned off through configuration\r\n        }\r\n        if (e.target.type === 12 /* OVERLAY_WIDGET */) {\r\n            return; // allow native menu on widgets to support right click on input field for example in find\r\n        }\r\n        e.event.preventDefault();\r\n        e.event.stopPropagation();\r\n        if (e.target.type !== 6 /* CONTENT_TEXT */ && e.target.type !== 7 /* CONTENT_EMPTY */ && e.target.type !== 1 /* TEXTAREA */) {\r\n            return; // only support mouse click into text or native context menu key for now\r\n        }\r\n        // Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions\r\n        this._editor.focus();\r\n        // Ensure the cursor is at the position of the mouse click\r\n        if (e.target.position) {\r\n            let hasSelectionAtPosition = false;\r\n            for (const selection of this._editor.getSelections()) {\r\n                if (selection.containsPosition(e.target.position)) {\r\n                    hasSelectionAtPosition = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!hasSelectionAtPosition) {\r\n                this._editor.setPosition(e.target.position);\r\n            }\r\n        }\r\n        // Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position\r\n        let anchor = null;\r\n        if (e.target.type !== 1 /* TEXTAREA */) {\r\n            anchor = { x: e.event.posx - 1, width: 2, y: e.event.posy - 1, height: 2 };\r\n        }\r\n        // Show the context menu\r\n        this.showContextMenu(anchor);\r\n    }\r\n    showContextMenu(anchor) {\r\n        if (!this._editor.getOption(19 /* contextmenu */)) {\r\n            return; // Context menu is turned off through configuration\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._contextMenuService) {\r\n            this._editor.focus();\r\n            return; // We need the context menu service to function\r\n        }\r\n        // Find actions available for menu\r\n        const menuActions = this._getMenuActions(this._editor.getModel(), this._editor.isSimpleWidget ? MenuId.SimpleEditorContext : MenuId.EditorContext);\r\n        // Show menu if we have actions to show\r\n        if (menuActions.length > 0) {\r\n            this._doShowContextMenu(menuActions, anchor);\r\n        }\r\n    }\r\n    _getMenuActions(model, menuId) {\r\n        const result = [];\r\n        // get menu groups\r\n        const menu = this._menuService.createMenu(menuId, this._contextKeyService);\r\n        const groups = menu.getActions({ arg: model.uri });\r\n        menu.dispose();\r\n        // translate them into other actions\r\n        for (let group of groups) {\r\n            const [, actions] = group;\r\n            let addedItems = 0;\r\n            for (const action of actions) {\r\n                if (action instanceof SubmenuItemAction) {\r\n                    const subActions = this._getMenuActions(model, action.item.submenu);\r\n                    if (subActions.length > 0) {\r\n                        result.push(new SubmenuAction(action.id, action.label, subActions));\r\n                        addedItems++;\r\n                    }\r\n                }\r\n                else {\r\n                    result.push(action);\r\n                    addedItems++;\r\n                }\r\n            }\r\n            if (addedItems) {\r\n                result.push(new Separator());\r\n            }\r\n        }\r\n        if (result.length) {\r\n            result.pop(); // remove last separator\r\n        }\r\n        return result;\r\n    }\r\n    _doShowContextMenu(actions, anchor = null) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // Disable hover\r\n        const oldHoverSetting = this._editor.getOption(52 /* hover */);\r\n        this._editor.updateOptions({\r\n            hover: {\r\n                enabled: false\r\n            }\r\n        });\r\n        if (!anchor) {\r\n            // Ensure selection is visible\r\n            this._editor.revealPosition(this._editor.getPosition(), 1 /* Immediate */);\r\n            this._editor.render();\r\n            const cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());\r\n            // Translate to absolute editor position\r\n            const editorCoords = dom.getDomNodePagePosition(this._editor.getDomNode());\r\n            const posx = editorCoords.left + cursorCoords.left;\r\n            const posy = editorCoords.top + cursorCoords.top + cursorCoords.height;\r\n            anchor = { x: posx, y: posy };\r\n        }\r\n        const useShadowDOM = this._editor.getOption(114 /* useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\r\n        // Show menu\r\n        this._contextMenuIsBeingShownCount++;\r\n        this._contextMenuService.showContextMenu({\r\n            domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\r\n            getAnchor: () => anchor,\r\n            getActions: () => actions,\r\n            getActionViewItem: (action) => {\r\n                const keybinding = this._keybindingFor(action);\r\n                if (keybinding) {\r\n                    return new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel(), isMenu: true });\r\n                }\r\n                const customActionViewItem = action;\r\n                if (typeof customActionViewItem.getActionViewItem === 'function') {\r\n                    return customActionViewItem.getActionViewItem();\r\n                }\r\n                return new ActionViewItem(action, action, { icon: true, label: true, isMenu: true });\r\n            },\r\n            getKeyBinding: (action) => {\r\n                return this._keybindingFor(action);\r\n            },\r\n            onHide: (wasCancelled) => {\r\n                this._contextMenuIsBeingShownCount--;\r\n                this._editor.focus();\r\n                this._editor.updateOptions({\r\n                    hover: oldHoverSetting\r\n                });\r\n            }\r\n        });\r\n    }\r\n    _keybindingFor(action) {\r\n        return this._keybindingService.lookupKeybinding(action.id);\r\n    }\r\n    dispose() {\r\n        if (this._contextMenuIsBeingShownCount > 0) {\r\n            this._contextViewService.hideContextView();\r\n        }\r\n        this._toDispose.dispose();\r\n    }\r\n};\r\nContextMenuController.ID = 'editor.contrib.contextmenu';\r\nContextMenuController = __decorate([\r\n    __param(1, IContextMenuService),\r\n    __param(2, IContextViewService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IKeybindingService),\r\n    __param(5, IMenuService)\r\n], ContextMenuController);\r\nexport { ContextMenuController };\r\nclass ShowContextMenu extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showContextMenu',\r\n            label: nls.localize('action.showContextMenu.label', \"Show Editor Context Menu\"),\r\n            alias: 'Show Editor Context Menu',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 1024 /* Shift */ | 68 /* F10 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let contribution = ContextMenuController.get(editor);\r\n        contribution.showContextMenu();\r\n    }\r\n}\r\nregisterEditorContribution(ContextMenuController.ID, ContextMenuController);\r\nregisterEditorAction(ShowContextMenu);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nclass CursorState {\r\n    constructor(selections) {\r\n        this.selections = selections;\r\n    }\r\n    equals(other) {\r\n        const thisLen = this.selections.length;\r\n        const otherLen = other.selections.length;\r\n        if (thisLen !== otherLen) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < thisLen; i++) {\r\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nclass StackElement {\r\n    constructor(cursorState, scrollTop, scrollLeft) {\r\n        this.cursorState = cursorState;\r\n        this.scrollTop = scrollTop;\r\n        this.scrollLeft = scrollLeft;\r\n    }\r\n}\r\nexport class CursorUndoRedoController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._isCursorUndoRedo = false;\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (this._isCursorUndoRedo) {\r\n                return;\r\n            }\r\n            if (!e.oldSelections) {\r\n                return;\r\n            }\r\n            if (e.oldModelVersionId !== e.modelVersionId) {\r\n                return;\r\n            }\r\n            const prevState = new CursorState(e.oldSelections);\r\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\r\n            if (!isEqualToLastUndoStack) {\r\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\r\n                this._redoStack = [];\r\n                if (this._undoStack.length > 50) {\r\n                    // keep the cursor undo stack bounded\r\n                    this._undoStack.shift();\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CursorUndoRedoController.ID);\r\n    }\r\n    cursorUndo() {\r\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._undoStack.pop());\r\n    }\r\n    cursorRedo() {\r\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._redoStack.pop());\r\n    }\r\n    _applyState(stackElement) {\r\n        this._isCursorUndoRedo = true;\r\n        this._editor.setSelections(stackElement.cursorState.selections);\r\n        this._editor.setScrollPosition({\r\n            scrollTop: stackElement.scrollTop,\r\n            scrollLeft: stackElement.scrollLeft\r\n        });\r\n        this._isCursorUndoRedo = false;\r\n    }\r\n}\r\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\r\nexport class CursorUndo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorUndo',\r\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\r\n            alias: 'Cursor Undo',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 51 /* KEY_U */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorUndo();\r\n    }\r\n}\r\nexport class CursorRedo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorRedo',\r\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\r\n            alias: 'Cursor Redo',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorRedo();\r\n    }\r\n}\r\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController);\r\nregisterEditorAction(CursorUndo);\r\nregisterEditorAction(CursorRedo);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class DragAndDropCommand {\r\n    constructor(selection, targetPosition, copy) {\r\n        this.selection = selection;\r\n        this.targetPosition = targetPosition;\r\n        this.copy = copy;\r\n        this.targetSelection = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let text = model.getValueInRange(this.selection);\r\n        if (!this.copy) {\r\n            builder.addEditOperation(this.selection, null);\r\n        }\r\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\r\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\r\n        )) {\r\n            this.targetSelection = this.selection;\r\n            return;\r\n        }\r\n        if (this.copy) {\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\r\n            // Drag the selection downwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\r\n            // Drag the selection upwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        // The target position is at the same line as the selection's end position.\r\n        if (this.selection.endColumn <= this.targetPosition.column) {\r\n            // The target position is after the selection's end position\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column :\r\n                this.selection.endColumn);\r\n        }\r\n        else {\r\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return this.targetSelection;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dnd.css';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { isMacintosh } from '../../../base/common/platform.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nfunction hasTriggerModifier(e) {\r\n    if (isMacintosh) {\r\n        return e.altKey;\r\n    }\r\n    else {\r\n        return e.ctrlKey;\r\n    }\r\n}\r\nexport class DragAndDropController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\r\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\r\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\r\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\r\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\r\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\r\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\r\n        this._dndDecorationIds = [];\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        this._dragSelection = null;\r\n    }\r\n    onEditorBlur() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n    }\r\n    onEditorKeyDown(e) {\r\n        if (!this._editor.getOption(30 /* dragAndDrop */) || this._editor.getOption(17 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = true;\r\n        }\r\n        if (this._mouseDown && hasTriggerModifier(e)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n    }\r\n    onEditorKeyUp(e) {\r\n        if (!this._editor.getOption(30 /* dragAndDrop */) || this._editor.getOption(17 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = false;\r\n        }\r\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._mouseDown = true;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._mouseDown = false;\r\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n    }\r\n    _onEditorMouseDrag(mouseEvent) {\r\n        let target = mouseEvent.target;\r\n        if (this._dragSelection === null) {\r\n            const selections = this._editor.getSelections() || [];\r\n            let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\r\n            if (possibleSelections.length === 1) {\r\n                this._dragSelection = possibleSelections[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        if (hasTriggerModifier(mouseEvent.event)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n        else {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n        if (target.position) {\r\n            if (this._dragSelection.containsPosition(target.position)) {\r\n                this._removeDecoration();\r\n            }\r\n            else {\r\n                this.showAt(target.position);\r\n            }\r\n        }\r\n    }\r\n    _onEditorMouseDropCanceled() {\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    _onEditorMouseDrop(mouseEvent) {\r\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\r\n            let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\r\n            if (this._dragSelection === null) {\r\n                let newSelections = null;\r\n                if (mouseEvent.event.shiftKey) {\r\n                    let primarySelection = this._editor.getSelection();\r\n                    if (primarySelection) {\r\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\r\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\r\n                    }\r\n                }\r\n                else {\r\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\r\n                        if (selection.containsPosition(newCursorPosition)) {\r\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n                        }\r\n                        else {\r\n                            return selection;\r\n                        }\r\n                    });\r\n                }\r\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\r\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\r\n            }\r\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\r\n                ((hasTriggerModifier(mouseEvent.event) ||\r\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\r\n                )) {\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\r\n                this._editor.pushUndoStop();\r\n            }\r\n        }\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    showAt(position) {\r\n        let newDecorations = [{\r\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\r\n                options: DragAndDropController._DECORATION_OPTIONS\r\n            }];\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n    }\r\n    _removeDecoration() {\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\r\n    }\r\n    _hitContent(target) {\r\n        return target.type === 6 /* CONTENT_TEXT */ ||\r\n            target.type === 7 /* CONTENT_EMPTY */;\r\n    }\r\n    _hitMargin(target) {\r\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\r\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\r\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\r\n    }\r\n    dispose() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        super.dispose();\r\n    }\r\n}\r\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\r\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\r\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'dnd-target',\r\n    className: 'dnd-target'\r\n});\r\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { OverviewRulerLane, MinimapPosition } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { overviewRulerFindMatchForeground, minimapFindMatch } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nexport class FindDecorations {\r\n    constructor(editor) {\r\n        this._editor = editor;\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n        this._startPosition = this._editor.getPosition();\r\n    }\r\n    dispose() {\r\n        this._editor.deltaDecorations(this._allDecorations(), []);\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n    }\r\n    reset() {\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n    }\r\n    getCount() {\r\n        return this._decorations.length;\r\n    }\r\n    /** @deprecated use getFindScopes to support multiple selections */\r\n    getFindScope() {\r\n        if (this._findScopeDecorationIds[0]) {\r\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\r\n        }\r\n        return null;\r\n    }\r\n    getFindScopes() {\r\n        if (this._findScopeDecorationIds.length) {\r\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\r\n            if (scopes.length) {\r\n                return scopes;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getStartPosition() {\r\n        return this._startPosition;\r\n    }\r\n    setStartPosition(newStartPosition) {\r\n        this._startPosition = newStartPosition;\r\n        this.setCurrentFindMatch(null);\r\n    }\r\n    _getDecorationIndex(decorationId) {\r\n        const index = this._decorations.indexOf(decorationId);\r\n        if (index >= 0) {\r\n            return index + 1;\r\n        }\r\n        return 1;\r\n    }\r\n    getCurrentMatchesPosition(desiredRange) {\r\n        let candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\r\n        for (const candidate of candidates) {\r\n            const candidateOpts = candidate.options;\r\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\r\n                return this._getDecorationIndex(candidate.id);\r\n            }\r\n        }\r\n        // We don't know the current match position, so returns zero to show '?' in find widget\r\n        return 0;\r\n    }\r\n    setCurrentFindMatch(nextMatch) {\r\n        let newCurrentDecorationId = null;\r\n        let matchPosition = 0;\r\n        if (nextMatch) {\r\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\r\n                let range = this._editor.getModel().getDecorationRange(this._decorations[i]);\r\n                if (nextMatch.equalsRange(range)) {\r\n                    newCurrentDecorationId = this._decorations[i];\r\n                    matchPosition = (i + 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\r\n            this._editor.changeDecorations((changeAccessor) => {\r\n                if (this._highlightedDecorationId !== null) {\r\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\r\n                    this._highlightedDecorationId = null;\r\n                }\r\n                if (newCurrentDecorationId !== null) {\r\n                    this._highlightedDecorationId = newCurrentDecorationId;\r\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\r\n                }\r\n                if (this._rangeHighlightDecorationId !== null) {\r\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\r\n                    this._rangeHighlightDecorationId = null;\r\n                }\r\n                if (newCurrentDecorationId !== null) {\r\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\r\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\r\n                        let lineBeforeEnd = rng.endLineNumber - 1;\r\n                        let lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\r\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\r\n                    }\r\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\r\n                }\r\n            });\r\n        }\r\n        return matchPosition;\r\n    }\r\n    set(findMatches, findScopes) {\r\n        this._editor.changeDecorations((accessor) => {\r\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\r\n            let newOverviewRulerApproximateDecorations = [];\r\n            if (findMatches.length > 1000) {\r\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\r\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\r\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\r\n                // approximate a distance in lines where matches should be merged\r\n                const lineCount = this._editor.getModel().getLineCount();\r\n                const height = this._editor.getLayoutInfo().height;\r\n                const approxPixelsPerLine = height / lineCount;\r\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\r\n                // merge decorations as much as possible\r\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\r\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\r\n                for (let i = 1, len = findMatches.length; i < len; i++) {\r\n                    const range = findMatches[i].range;\r\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\r\n                        if (range.endLineNumber > prevEndLineNumber) {\r\n                            prevEndLineNumber = range.endLineNumber;\r\n                        }\r\n                    }\r\n                    else {\r\n                        newOverviewRulerApproximateDecorations.push({\r\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\r\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\r\n                        });\r\n                        prevStartLineNumber = range.startLineNumber;\r\n                        prevEndLineNumber = range.endLineNumber;\r\n                    }\r\n                }\r\n                newOverviewRulerApproximateDecorations.push({\r\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\r\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\r\n                });\r\n            }\r\n            // Find matches\r\n            let newFindMatchesDecorations = new Array(findMatches.length);\r\n            for (let i = 0, len = findMatches.length; i < len; i++) {\r\n                newFindMatchesDecorations[i] = {\r\n                    range: findMatches[i].range,\r\n                    options: findMatchesOptions\r\n                };\r\n            }\r\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\r\n            // Overview ruler approximate decorations\r\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\r\n            // Range highlight\r\n            if (this._rangeHighlightDecorationId) {\r\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\r\n                this._rangeHighlightDecorationId = null;\r\n            }\r\n            // Find scope\r\n            if (this._findScopeDecorationIds.length) {\r\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\r\n                this._findScopeDecorationIds = [];\r\n            }\r\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\r\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\r\n            }\r\n        });\r\n    }\r\n    matchBeforePosition(position) {\r\n        if (this._decorations.length === 0) {\r\n            return null;\r\n        }\r\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\r\n            let decorationId = this._decorations[i];\r\n            let r = this._editor.getModel().getDecorationRange(decorationId);\r\n            if (!r || r.endLineNumber > position.lineNumber) {\r\n                continue;\r\n            }\r\n            if (r.endLineNumber < position.lineNumber) {\r\n                return r;\r\n            }\r\n            if (r.endColumn > position.column) {\r\n                continue;\r\n            }\r\n            return r;\r\n        }\r\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\r\n    }\r\n    matchAfterPosition(position) {\r\n        if (this._decorations.length === 0) {\r\n            return null;\r\n        }\r\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\r\n            let decorationId = this._decorations[i];\r\n            let r = this._editor.getModel().getDecorationRange(decorationId);\r\n            if (!r || r.startLineNumber < position.lineNumber) {\r\n                continue;\r\n            }\r\n            if (r.startLineNumber > position.lineNumber) {\r\n                return r;\r\n            }\r\n            if (r.startColumn < position.column) {\r\n                continue;\r\n            }\r\n            return r;\r\n        }\r\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\r\n    }\r\n    _allDecorations() {\r\n        let result = [];\r\n        result = result.concat(this._decorations);\r\n        result = result.concat(this._overviewRulerApproximateDecorations);\r\n        if (this._findScopeDecorationIds.length) {\r\n            result.push(...this._findScopeDecorationIds);\r\n        }\r\n        if (this._rangeHighlightDecorationId) {\r\n            result.push(this._rangeHighlightDecorationId);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\r\n    description: 'current-find-match',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    zIndex: 13,\r\n    className: 'currentFindMatch',\r\n    showIfCollapsed: true,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    },\r\n    minimap: {\r\n        color: themeColorFromId(minimapFindMatch),\r\n        position: MinimapPosition.Inline\r\n    }\r\n});\r\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'findMatch',\r\n    showIfCollapsed: true,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    },\r\n    minimap: {\r\n        color: themeColorFromId(minimapFindMatch),\r\n        position: MinimapPosition.Inline\r\n    }\r\n});\r\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match-no-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'findMatch',\r\n    showIfCollapsed: true\r\n});\r\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match-only-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-range-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'rangeHighlight',\r\n    isWholeLine: true\r\n});\r\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-scope',\r\n    className: 'findScope',\r\n    isWholeLine: true\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nexport class ReplaceAllCommand {\r\n    constructor(editorSelection, ranges, replaceStrings) {\r\n        this._editorSelection = editorSelection;\r\n        this._ranges = ranges;\r\n        this._replaceStrings = replaceStrings;\r\n        this._trackedEditorSelectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        if (this._ranges.length > 0) {\r\n            // Collect all edit operations\r\n            let ops = [];\r\n            for (let i = 0; i < this._ranges.length; i++) {\r\n                ops.push({\r\n                    range: this._ranges[i],\r\n                    text: this._replaceStrings[i]\r\n                });\r\n            }\r\n            // Sort them in ascending order by range starts\r\n            ops.sort((o1, o2) => {\r\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\r\n            });\r\n            // Merge operations that touch each other\r\n            let resultOps = [];\r\n            let previousOp = ops[0];\r\n            for (let i = 1; i < ops.length; i++) {\r\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\r\n                    // These operations are one after another and can be merged\r\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\r\n                    previousOp.text = previousOp.text + ops[i].text;\r\n                }\r\n                else {\r\n                    resultOps.push(previousOp);\r\n                    previousOp = ops[i];\r\n                }\r\n            }\r\n            resultOps.push(previousOp);\r\n            for (const op of resultOps) {\r\n                builder.addEditOperation(op.range, op.text);\r\n            }\r\n        }\r\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from './strings.js';\r\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\r\n    if (matches && (matches[0] !== '')) {\r\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\r\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\r\n        if (containsHyphens && !containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\r\n        }\r\n        else if (!containsHyphens && containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\r\n        }\r\n        if (matches[0].toUpperCase() === matches[0]) {\r\n            return pattern.toUpperCase();\r\n        }\r\n        else if (matches[0].toLowerCase() === matches[0]) {\r\n            return pattern.toLowerCase();\r\n        }\r\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\r\n            return pattern[0].toUpperCase() + pattern.substr(1);\r\n        }\r\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\r\n            return pattern[0].toLowerCase() + pattern.substr(1);\r\n        }\r\n        else {\r\n            // we don't understand its pattern yet.\r\n            return pattern;\r\n        }\r\n    }\r\n    else {\r\n        return pattern;\r\n    }\r\n}\r\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\r\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\r\n}\r\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\r\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\r\n    let replaceString = '';\r\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\r\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\r\n    });\r\n    return replaceString.slice(0, -1);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\r\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\r\nclass StaticValueReplacePattern {\r\n    constructor(staticValue) {\r\n        this.staticValue = staticValue;\r\n        this.kind = 0 /* StaticValue */;\r\n    }\r\n}\r\n/**\r\n * Assigned when the replace pattern has replacement patterns.\r\n */\r\nclass DynamicPiecesReplacePattern {\r\n    constructor(pieces) {\r\n        this.pieces = pieces;\r\n        this.kind = 1 /* DynamicPieces */;\r\n    }\r\n}\r\nexport class ReplacePattern {\r\n    constructor(pieces) {\r\n        if (!pieces || pieces.length === 0) {\r\n            this._state = new StaticValueReplacePattern('');\r\n        }\r\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\r\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\r\n        }\r\n        else {\r\n            this._state = new DynamicPiecesReplacePattern(pieces);\r\n        }\r\n    }\r\n    static fromStaticValue(value) {\r\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\r\n    }\r\n    get hasReplacementPatterns() {\r\n        return (this._state.kind === 1 /* DynamicPieces */);\r\n    }\r\n    buildReplaceString(matches, preserveCase) {\r\n        if (this._state.kind === 0 /* StaticValue */) {\r\n            if (preserveCase) {\r\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\r\n            }\r\n            else {\r\n                return this._state.staticValue;\r\n            }\r\n        }\r\n        let result = '';\r\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\r\n            let piece = this._state.pieces[i];\r\n            if (piece.staticValue !== null) {\r\n                // static value ReplacePiece\r\n                result += piece.staticValue;\r\n                continue;\r\n            }\r\n            // match index ReplacePiece\r\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\r\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\r\n                let repl = [];\r\n                let lenOps = piece.caseOps.length;\r\n                let opIdx = 0;\r\n                for (let idx = 0, len = match.length; idx < len; idx++) {\r\n                    if (opIdx >= lenOps) {\r\n                        repl.push(match.slice(idx));\r\n                        break;\r\n                    }\r\n                    switch (piece.caseOps[opIdx]) {\r\n                        case 'U':\r\n                            repl.push(match[idx].toUpperCase());\r\n                            break;\r\n                        case 'u':\r\n                            repl.push(match[idx].toUpperCase());\r\n                            opIdx++;\r\n                            break;\r\n                        case 'L':\r\n                            repl.push(match[idx].toLowerCase());\r\n                            break;\r\n                        case 'l':\r\n                            repl.push(match[idx].toLowerCase());\r\n                            opIdx++;\r\n                            break;\r\n                        default:\r\n                            repl.push(match[idx]);\r\n                    }\r\n                }\r\n                match = repl.join('');\r\n            }\r\n            result += match;\r\n        }\r\n        return result;\r\n    }\r\n    static _substitute(matchIndex, matches) {\r\n        if (matches === null) {\r\n            return '';\r\n        }\r\n        if (matchIndex === 0) {\r\n            return matches[0];\r\n        }\r\n        let remainder = '';\r\n        while (matchIndex > 0) {\r\n            if (matchIndex < matches.length) {\r\n                // A match can be undefined\r\n                let match = (matches[matchIndex] || '');\r\n                return match + remainder;\r\n            }\r\n            remainder = String(matchIndex % 10) + remainder;\r\n            matchIndex = Math.floor(matchIndex / 10);\r\n        }\r\n        return '$' + remainder;\r\n    }\r\n}\r\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\r\nexport class ReplacePiece {\r\n    constructor(staticValue, matchIndex, caseOps) {\r\n        this.staticValue = staticValue;\r\n        this.matchIndex = matchIndex;\r\n        if (!caseOps || caseOps.length === 0) {\r\n            this.caseOps = null;\r\n        }\r\n        else {\r\n            this.caseOps = caseOps.slice(0);\r\n        }\r\n    }\r\n    static staticValue(value) {\r\n        return new ReplacePiece(value, -1, null);\r\n    }\r\n    static caseOps(index, caseOps) {\r\n        return new ReplacePiece(null, index, caseOps);\r\n    }\r\n}\r\nclass ReplacePieceBuilder {\r\n    constructor(source) {\r\n        this._source = source;\r\n        this._lastCharIndex = 0;\r\n        this._result = [];\r\n        this._resultLen = 0;\r\n        this._currentStaticPiece = '';\r\n    }\r\n    emitUnchanged(toCharIndex) {\r\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    emitStatic(value, toCharIndex) {\r\n        this._emitStatic(value);\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    _emitStatic(value) {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n        this._currentStaticPiece += value;\r\n    }\r\n    emitMatchIndex(index, toCharIndex, caseOps) {\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    finalize() {\r\n        this.emitUnchanged(this._source.length);\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        return new ReplacePattern(this._result);\r\n    }\r\n}\r\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * \\u\t\t\t=> upper-cases one character in a match.\r\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\r\n * \\l\t\t\t=> lower-cases one character in a match.\r\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\r\nexport function parseReplaceString(replaceString) {\r\n    if (!replaceString || replaceString.length === 0) {\r\n        return new ReplacePattern(null);\r\n    }\r\n    let caseOps = [];\r\n    let result = new ReplacePieceBuilder(replaceString);\r\n    for (let i = 0, len = replaceString.length; i < len; i++) {\r\n        let chCode = replaceString.charCodeAt(i);\r\n        if (chCode === 92 /* Backslash */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a \\\r\n                break;\r\n            }\r\n            let nextChCode = replaceString.charCodeAt(i);\r\n            // let replaceWithCharacter: string | null = null;\r\n            switch (nextChCode) {\r\n                case 92 /* Backslash */:\r\n                    // \\\\ => inserts a \"\\\"\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\\\', i + 1);\r\n                    break;\r\n                case 110 /* n */:\r\n                    // \\n => inserts a LF\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\n', i + 1);\r\n                    break;\r\n                case 116 /* t */:\r\n                    // \\t => inserts a TAB\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\t', i + 1);\r\n                    break;\r\n                // Case modification of string replacements, patterned after Boost, but only applied\r\n                // to the replacement text, not subsequent content.\r\n                case 117 /* u */:\r\n                // \\u => upper-cases one character.\r\n                case 85 /* U */:\r\n                // \\U => upper-cases ALL following characters.\r\n                case 108 /* l */:\r\n                // \\l => lower-cases one character.\r\n                case 76 /* L */:\r\n                    // \\L => lower-cases ALL following characters.\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('', i + 1);\r\n                    caseOps.push(String.fromCharCode(nextChCode));\r\n                    break;\r\n            }\r\n            continue;\r\n        }\r\n        if (chCode === 36 /* DollarSign */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a $\r\n                break;\r\n            }\r\n            let nextChCode = replaceString.charCodeAt(i);\r\n            if (nextChCode === 36 /* DollarSign */) {\r\n                // $$ => inserts a \"$\"\r\n                result.emitUnchanged(i - 1);\r\n                result.emitStatic('$', i + 1);\r\n                continue;\r\n            }\r\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\r\n                // $& and $0 => inserts the matched substring.\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(0, i + 1, caseOps);\r\n                caseOps.length = 0;\r\n                continue;\r\n            }\r\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\r\n                // $n\r\n                let matchIndex = nextChCode - 48 /* Digit0 */;\r\n                // peek next char to probe for $nn\r\n                if (i + 1 < len) {\r\n                    let nextNextChCode = replaceString.charCodeAt(i + 1);\r\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\r\n                        // $nn\r\n                        // move to next char\r\n                        i++;\r\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\r\n                        result.emitUnchanged(i - 2);\r\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\r\n                        caseOps.length = 0;\r\n                        continue;\r\n                    }\r\n                }\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\r\n                caseOps.length = 0;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    return result.finalize();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../common/commands/replaceCommand.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { SearchParams } from '../../common/model/textModelSearch.js';\r\nimport { FindDecorations } from './findDecorations.js';\r\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\r\nimport { ReplacePattern, parseReplaceString } from './replacePattern.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { findFirstInSorted } from '../../../base/common/arrays.js';\r\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\r\n// Keep ContextKey use of 'Focussed' to not break when clauses\r\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\r\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\r\nexport const ToggleCaseSensitiveKeybinding = {\r\n    primary: 512 /* Alt */ | 33 /* KEY_C */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 33 /* KEY_C */ }\r\n};\r\nexport const ToggleWholeWordKeybinding = {\r\n    primary: 512 /* Alt */ | 53 /* KEY_W */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 53 /* KEY_W */ }\r\n};\r\nexport const ToggleRegexKeybinding = {\r\n    primary: 512 /* Alt */ | 48 /* KEY_R */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 48 /* KEY_R */ }\r\n};\r\nexport const ToggleSearchScopeKeybinding = {\r\n    primary: 512 /* Alt */ | 42 /* KEY_L */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 42 /* KEY_L */ }\r\n};\r\nexport const TogglePreserveCaseKeybinding = {\r\n    primary: 512 /* Alt */ | 46 /* KEY_P */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 46 /* KEY_P */ }\r\n};\r\nexport const FIND_IDS = {\r\n    StartFindAction: 'actions.find',\r\n    StartFindWithSelection: 'actions.findWithSelection',\r\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\r\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\r\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\r\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\r\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\r\n    CloseFindWidgetCommand: 'closeFindWidget',\r\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\r\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\r\n    ToggleRegexCommand: 'toggleFindRegex',\r\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\r\n    TogglePreserveCaseCommand: 'togglePreserveCase',\r\n    ReplaceOneAction: 'editor.action.replaceOne',\r\n    ReplaceAllAction: 'editor.action.replaceAll',\r\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\r\n};\r\nexport const MATCHES_LIMIT = 19999;\r\nconst RESEARCH_DELAY = 240;\r\nexport class FindModelBoundToEditorModel {\r\n    constructor(editor, state) {\r\n        this._toDispose = new DisposableStore();\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._isDisposed = false;\r\n        this._startSearchingTimer = new TimeoutTimer();\r\n        this._decorations = new FindDecorations(editor);\r\n        this._toDispose.add(this._decorations);\r\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\r\n        this._toDispose.add(this._updateDecorationsScheduler);\r\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\r\n            if (e.reason === 3 /* Explicit */\r\n                || e.reason === 5 /* Undo */\r\n                || e.reason === 6 /* Redo */) {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n            }\r\n        }));\r\n        this._ignoreModelContentChanged = false;\r\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\r\n            if (this._ignoreModelContentChanged) {\r\n                return;\r\n            }\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                this._decorations.reset();\r\n            }\r\n            this._decorations.setStartPosition(this._editor.getPosition());\r\n            this._updateDecorationsScheduler.schedule();\r\n        }));\r\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this.research(false, this._state.searchScope);\r\n    }\r\n    dispose() {\r\n        this._isDisposed = true;\r\n        dispose(this._startSearchingTimer);\r\n        this._toDispose.dispose();\r\n    }\r\n    _onStateChanged(e) {\r\n        if (this._isDisposed) {\r\n            // The find model is disposed during a find state changed event\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            // The find model will be disposed momentarily\r\n            return;\r\n        }\r\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\r\n            let model = this._editor.getModel();\r\n            if (model.isTooLargeForSyncing()) {\r\n                this._startSearchingTimer.cancel();\r\n                this._startSearchingTimer.setIfNotSet(() => {\r\n                    if (e.searchScope) {\r\n                        this.research(e.moveCursor, this._state.searchScope);\r\n                    }\r\n                    else {\r\n                        this.research(e.moveCursor);\r\n                    }\r\n                }, RESEARCH_DELAY);\r\n            }\r\n            else {\r\n                if (e.searchScope) {\r\n                    this.research(e.moveCursor, this._state.searchScope);\r\n                }\r\n                else {\r\n                    this.research(e.moveCursor);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static _getSearchRange(model, findScope) {\r\n        // If we have set now or before a find scope, use it for computing the search range\r\n        if (findScope) {\r\n            return findScope;\r\n        }\r\n        return model.getFullModelRange();\r\n    }\r\n    research(moveCursor, newFindScope) {\r\n        let findScopes = null;\r\n        if (typeof newFindScope !== 'undefined') {\r\n            if (newFindScope !== null) {\r\n                if (!Array.isArray(newFindScope)) {\r\n                    findScopes = [newFindScope];\r\n                }\r\n                else {\r\n                    findScopes = newFindScope;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            findScopes = this._decorations.getFindScopes();\r\n        }\r\n        if (findScopes !== null) {\r\n            findScopes = findScopes.map(findScope => {\r\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\r\n                    let endLineNumber = findScope.endLineNumber;\r\n                    if (findScope.endColumn === 1) {\r\n                        endLineNumber = endLineNumber - 1;\r\n                    }\r\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\r\n                }\r\n                return findScope;\r\n            });\r\n        }\r\n        let findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\r\n        this._decorations.set(findMatches, findScopes);\r\n        const editorSelection = this._editor.getSelection();\r\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\r\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\r\n            // current selection is not on top of a match\r\n            // try to find its nearest result from the top of the document\r\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\r\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\r\n        }\r\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\r\n        if (moveCursor && this._editor.getOption(34 /* find */).cursorMoveOnType) {\r\n            this._moveToNextMatch(this._decorations.getStartPosition());\r\n        }\r\n    }\r\n    _hasMatches() {\r\n        return (this._state.matchesCount > 0);\r\n    }\r\n    _cannotFind() {\r\n        if (!this._hasMatches()) {\r\n            let findScope = this._decorations.getFindScope();\r\n            if (findScope) {\r\n                // Reveal the selection so user is reminded that 'selection find' is on.\r\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _setCurrentFindMatch(match) {\r\n        let matchesPosition = this._decorations.setCurrentFindMatch(match);\r\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\r\n        this._editor.setSelection(match);\r\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */);\r\n    }\r\n    _prevSearchPosition(before) {\r\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        let { lineNumber, column } = before;\r\n        let model = this._editor.getModel();\r\n        if (isUsingLineStops || column === 1) {\r\n            if (lineNumber === 1) {\r\n                lineNumber = model.getLineCount();\r\n            }\r\n            else {\r\n                lineNumber--;\r\n            }\r\n            column = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        else {\r\n            column--;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    }\r\n    _moveToPrevMatch(before, isRecursed = false) {\r\n        if (!this._state.canNavigateBack()) {\r\n            // we are beyond the first matched find result\r\n            // instead of doing nothing, we should refocus the first item\r\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\r\n                before = this._prevSearchPosition(before);\r\n                prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            }\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._cannotFind()) {\r\n            return;\r\n        }\r\n        let findScope = this._decorations.getFindScope();\r\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(before)) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (before.isBefore(searchRange.getStartPosition())) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        let { lineNumber, column } = before;\r\n        let model = this._editor.getModel();\r\n        let position = new Position(lineNumber, column);\r\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._prevSearchPosition(position);\r\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        }\r\n        if (!prevMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\r\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\r\n        }\r\n        this._setCurrentFindMatch(prevMatch.range);\r\n    }\r\n    moveToPrevMatch() {\r\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\r\n    }\r\n    _nextSearchPosition(after) {\r\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        let { lineNumber, column } = after;\r\n        let model = this._editor.getModel();\r\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\r\n            if (lineNumber === model.getLineCount()) {\r\n                lineNumber = 1;\r\n            }\r\n            else {\r\n                lineNumber++;\r\n            }\r\n            column = 1;\r\n        }\r\n        else {\r\n            column++;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    }\r\n    _moveToNextMatch(after) {\r\n        if (!this._state.canNavigateForward()) {\r\n            // we are beyond the last matched find result\r\n            // instead of doing nothing, we should refocus the last item\r\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\r\n                // Looks like we're stuck at this position, unacceptable!\r\n                after = this._nextSearchPosition(after);\r\n                nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            }\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        let nextMatch = this._getNextMatch(after, false, true);\r\n        if (nextMatch) {\r\n            this._setCurrentFindMatch(nextMatch.range);\r\n        }\r\n    }\r\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\r\n        if (this._cannotFind()) {\r\n            return null;\r\n        }\r\n        let findScope = this._decorations.getFindScope();\r\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(after)) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (after.isBefore(searchRange.getStartPosition())) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        let { lineNumber, column } = after;\r\n        let model = this._editor.getModel();\r\n        let position = new Position(lineNumber, column);\r\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, captureMatches);\r\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._nextSearchPosition(position);\r\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, captureMatches);\r\n        }\r\n        if (!nextMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return null;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\r\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\r\n        }\r\n        return nextMatch;\r\n    }\r\n    moveToNextMatch() {\r\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\r\n    }\r\n    _getReplacePattern() {\r\n        if (this._state.isRegex) {\r\n            return parseReplaceString(this._state.replaceString);\r\n        }\r\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\r\n    }\r\n    replace() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        let replacePattern = this._getReplacePattern();\r\n        let selection = this._editor.getSelection();\r\n        let nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\r\n        if (nextMatch) {\r\n            if (selection.equalsRange(nextMatch.range)) {\r\n                // selection sits on a find match => replace it!\r\n                let replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\r\n                let command = new ReplaceCommand(selection, replaceString);\r\n                this._executeEditorCommand('replace', command);\r\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\r\n                this.research(true);\r\n            }\r\n            else {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n                this._setCurrentFindMatch(nextMatch.range);\r\n            }\r\n        }\r\n    }\r\n    _findMatches(findScopes, captureMatches, limitResultCount) {\r\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\r\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, captureMatches, limitResultCount);\r\n    }\r\n    replaceAll() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        const findScopes = this._decorations.getFindScopes();\r\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\r\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\r\n            this._largeReplaceAll();\r\n        }\r\n        else {\r\n            this._regularReplaceAll(findScopes);\r\n        }\r\n        this.research(false);\r\n    }\r\n    _largeReplaceAll() {\r\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null);\r\n        const searchData = searchParams.parseSearchRequest();\r\n        if (!searchData) {\r\n            return;\r\n        }\r\n        let searchRegex = searchData.regex;\r\n        if (!searchRegex.multiline) {\r\n            let mod = 'mu';\r\n            if (searchRegex.ignoreCase) {\r\n                mod += 'i';\r\n            }\r\n            if (searchRegex.global) {\r\n                mod += 'g';\r\n            }\r\n            searchRegex = new RegExp(searchRegex.source, mod);\r\n        }\r\n        const model = this._editor.getModel();\r\n        const modelText = model.getValue(1 /* LF */);\r\n        const fullModelRange = model.getFullModelRange();\r\n        const replacePattern = this._getReplacePattern();\r\n        let resultText;\r\n        const preserveCase = this._state.preserveCase;\r\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\r\n            resultText = modelText.replace(searchRegex, function () {\r\n                return replacePattern.buildReplaceString(arguments, preserveCase);\r\n            });\r\n        }\r\n        else {\r\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\r\n        }\r\n        let command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\r\n        this._executeEditorCommand('replaceAll', command);\r\n    }\r\n    _regularReplaceAll(findScopes) {\r\n        const replacePattern = this._getReplacePattern();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        let matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        let replaceStrings = [];\r\n        for (let i = 0, len = matches.length; i < len; i++) {\r\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\r\n        }\r\n        let command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\r\n        this._executeEditorCommand('replaceAll', command);\r\n    }\r\n    selectAllMatches() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        let findScopes = this._decorations.getFindScopes();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        let matches = this._findMatches(findScopes, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\r\n        // If one of the ranges is the editor selection, then maintain it as primary\r\n        let editorSelection = this._editor.getSelection();\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let sel = selections[i];\r\n            if (sel.equalsRange(editorSelection)) {\r\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        this._editor.setSelections(selections);\r\n    }\r\n    _executeEditorCommand(source, command) {\r\n        try {\r\n            this._ignoreModelContentChanged = true;\r\n            this._editor.pushUndoStop();\r\n            this._editor.executeCommand(source, command);\r\n            this._editor.pushUndoStop();\r\n        }\r\n        finally {\r\n            this._ignoreModelContentChanged = false;\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Widget } from '../widget.js';\r\nimport { CSSIcon } from '../../../common/codicons.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './checkbox.css';\r\nconst defaultOpts = {\r\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\r\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\r\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\r\n};\r\nexport class Checkbox extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._onChange = this._register(new Emitter());\r\n        this.onChange = this._onChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\r\n        this._checked = this._opts.isChecked;\r\n        const classes = ['monaco-custom-checkbox'];\r\n        if (this._opts.icon) {\r\n            classes.push(...CSSIcon.asClassNameArray(this._opts.icon));\r\n        }\r\n        if (this._opts.actionClassName) {\r\n            classes.push(...this._opts.actionClassName.split(' '));\r\n        }\r\n        if (this._checked) {\r\n            classes.push('checked');\r\n        }\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.title = this._opts.title;\r\n        this.domNode.classList.add(...classes);\r\n        if (!this._opts.notFocusable) {\r\n            this.domNode.tabIndex = 0;\r\n        }\r\n        this.domNode.setAttribute('role', 'checkbox');\r\n        this.domNode.setAttribute('aria-checked', String(this._checked));\r\n        this.domNode.setAttribute('aria-label', this._opts.title);\r\n        this.applyStyles();\r\n        this.onclick(this.domNode, (ev) => {\r\n            this.checked = !this._checked;\r\n            this._onChange.fire(false);\r\n            ev.preventDefault();\r\n        });\r\n        this.ignoreGesture(this.domNode);\r\n        this.onkeydown(this.domNode, (keyboardEvent) => {\r\n            if (keyboardEvent.keyCode === 10 /* Space */ || keyboardEvent.keyCode === 3 /* Enter */) {\r\n                this.checked = !this._checked;\r\n                this._onChange.fire(true);\r\n                keyboardEvent.preventDefault();\r\n                return;\r\n            }\r\n            this._onKeyDown.fire(keyboardEvent);\r\n        });\r\n    }\r\n    get enabled() {\r\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\r\n    }\r\n    focus() {\r\n        this.domNode.focus();\r\n    }\r\n    get checked() {\r\n        return this._checked;\r\n    }\r\n    set checked(newIsChecked) {\r\n        this._checked = newIsChecked;\r\n        this.domNode.setAttribute('aria-checked', String(this._checked));\r\n        this.domNode.classList.toggle('checked', this._checked);\r\n        this.applyStyles();\r\n    }\r\n    width() {\r\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\r\n    }\r\n    style(styles) {\r\n        if (styles.inputActiveOptionBorder) {\r\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        }\r\n        if (styles.inputActiveOptionForeground) {\r\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        }\r\n        if (styles.inputActiveOptionBackground) {\r\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        }\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : 'transparent';\r\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\r\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : 'transparent';\r\n        }\r\n    }\r\n    enable() {\r\n        this.domNode.setAttribute('aria-disabled', String(false));\r\n    }\r\n    disable() {\r\n        this.domNode.setAttribute('aria-disabled', String(true));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\r\nconst NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\r\nconst NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\r\nexport class CaseSensitiveCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.caseSensitive,\r\n            title: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class WholeWordsCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.wholeWord,\r\n            title: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class RegexCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.regex,\r\n            title: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from '../../../base/browser/ui/findinput/findInputCheckboxes.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { FIND_IDS } from './findModel.js';\r\nimport { contrastBorder, editorWidgetBackground, inputActiveOptionBorder, inputActiveOptionBackground, widgetShadow, editorWidgetForeground, inputActiveOptionForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nexport class FindOptionsWidget extends Widget {\r\n    constructor(editor, state, keybindingService, themeService) {\r\n        super();\r\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\r\n        this._isVisible = false;\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._keybindingService = keybindingService;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'findOptionsWidget';\r\n        this._domNode.style.display = 'none';\r\n        this._domNode.style.top = '10px';\r\n        this._domNode.setAttribute('role', 'presentation');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor(inputActiveOptionBorder);\r\n        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor(inputActiveOptionForeground);\r\n        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor(inputActiveOptionBackground);\r\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            isChecked: this._state.matchCase,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.caseSensitive.domNode);\r\n        this._register(this.caseSensitive.onChange(() => {\r\n            this._state.change({\r\n                matchCase: this.caseSensitive.checked\r\n            }, false);\r\n        }));\r\n        this.wholeWords = this._register(new WholeWordsCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            isChecked: this._state.wholeWord,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.wholeWords.domNode);\r\n        this._register(this.wholeWords.onChange(() => {\r\n            this._state.change({\r\n                wholeWord: this.wholeWords.checked\r\n            }, false);\r\n        }));\r\n        this.regex = this._register(new RegexCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            isChecked: this._state.isRegex,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.regex.domNode);\r\n        this._register(this.regex.onChange(() => {\r\n            this._state.change({\r\n                isRegex: this.regex.checked\r\n            }, false);\r\n        }));\r\n        this._editor.addOverlayWidget(this);\r\n        this._register(this._state.onFindReplaceStateChange((e) => {\r\n            let somethingChanged = false;\r\n            if (e.isRegex) {\r\n                this.regex.checked = this._state.isRegex;\r\n                somethingChanged = true;\r\n            }\r\n            if (e.wholeWord) {\r\n                this.wholeWords.checked = this._state.wholeWord;\r\n                somethingChanged = true;\r\n            }\r\n            if (e.matchCase) {\r\n                this.caseSensitive.checked = this._state.matchCase;\r\n                somethingChanged = true;\r\n            }\r\n            if (!this._state.isRevealed && somethingChanged) {\r\n                this._revealTemporarily();\r\n            }\r\n        }));\r\n        this._register(dom.addDisposableNonBubblingMouseOutListener(this._domNode, (e) => this._onMouseOut()));\r\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n    }\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindOptionsWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: 0 /* TOP_RIGHT_CORNER */\r\n        };\r\n    }\r\n    highlightFindOptions() {\r\n        this._revealTemporarily();\r\n    }\r\n    _revealTemporarily() {\r\n        this._show();\r\n        this._hideSoon.schedule();\r\n    }\r\n    _onMouseOut() {\r\n        this._hideSoon.schedule();\r\n    }\r\n    _onMouseOver() {\r\n        this._hideSoon.cancel();\r\n    }\r\n    _show() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        this._domNode.style.display = 'block';\r\n    }\r\n    _hide() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        this._domNode.style.display = 'none';\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\r\n        };\r\n        this.caseSensitive.style(inputStyles);\r\n        this.wholeWords.style(inputStyles);\r\n        this.regex.style(inputStyles);\r\n    }\r\n}\r\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\r\nregisterThemingParticipant((theme, collector) => {\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    if (widgetBackground) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);\r\n    }\r\n    const widgetForeground = theme.getColor(editorWidgetForeground);\r\n    if (widgetForeground) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);\r\n    }\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MATCHES_LIMIT } from './findModel.js';\r\nfunction effectiveOptionValue(override, value) {\r\n    if (override === 1 /* True */) {\r\n        return true;\r\n    }\r\n    if (override === 2 /* False */) {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\nexport class FindReplaceState extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onFindReplaceStateChange = this._register(new Emitter());\r\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\r\n        this._searchString = '';\r\n        this._replaceString = '';\r\n        this._isRevealed = false;\r\n        this._isReplaceRevealed = false;\r\n        this._isRegex = false;\r\n        this._isRegexOverride = 0 /* NotSet */;\r\n        this._wholeWord = false;\r\n        this._wholeWordOverride = 0 /* NotSet */;\r\n        this._matchCase = false;\r\n        this._matchCaseOverride = 0 /* NotSet */;\r\n        this._preserveCase = false;\r\n        this._preserveCaseOverride = 0 /* NotSet */;\r\n        this._searchScope = null;\r\n        this._matchesPosition = 0;\r\n        this._matchesCount = 0;\r\n        this._currentMatch = null;\r\n        this._loop = true;\r\n    }\r\n    get searchString() { return this._searchString; }\r\n    get replaceString() { return this._replaceString; }\r\n    get isRevealed() { return this._isRevealed; }\r\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\r\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\r\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\r\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\r\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\r\n    get actualIsRegex() { return this._isRegex; }\r\n    get actualWholeWord() { return this._wholeWord; }\r\n    get actualMatchCase() { return this._matchCase; }\r\n    get actualPreserveCase() { return this._preserveCase; }\r\n    get searchScope() { return this._searchScope; }\r\n    get matchesPosition() { return this._matchesPosition; }\r\n    get matchesCount() { return this._matchesCount; }\r\n    get currentMatch() { return this._currentMatch; }\r\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\r\n        let changeEvent = {\r\n            moveCursor: false,\r\n            updateHistory: false,\r\n            searchString: false,\r\n            replaceString: false,\r\n            isRevealed: false,\r\n            isReplaceRevealed: false,\r\n            isRegex: false,\r\n            wholeWord: false,\r\n            matchCase: false,\r\n            preserveCase: false,\r\n            searchScope: false,\r\n            matchesPosition: false,\r\n            matchesCount: false,\r\n            currentMatch: false,\r\n            loop: false\r\n        };\r\n        let somethingChanged = false;\r\n        if (matchesCount === 0) {\r\n            matchesPosition = 0;\r\n        }\r\n        if (matchesPosition > matchesCount) {\r\n            matchesPosition = matchesCount;\r\n        }\r\n        if (this._matchesPosition !== matchesPosition) {\r\n            this._matchesPosition = matchesPosition;\r\n            changeEvent.matchesPosition = true;\r\n            somethingChanged = true;\r\n        }\r\n        if (this._matchesCount !== matchesCount) {\r\n            this._matchesCount = matchesCount;\r\n            changeEvent.matchesCount = true;\r\n            somethingChanged = true;\r\n        }\r\n        if (typeof currentMatch !== 'undefined') {\r\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\r\n                this._currentMatch = currentMatch;\r\n                changeEvent.currentMatch = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (somethingChanged) {\r\n            this._onFindReplaceStateChange.fire(changeEvent);\r\n        }\r\n    }\r\n    change(newState, moveCursor, updateHistory = true) {\r\n        var _a;\r\n        let changeEvent = {\r\n            moveCursor: moveCursor,\r\n            updateHistory: updateHistory,\r\n            searchString: false,\r\n            replaceString: false,\r\n            isRevealed: false,\r\n            isReplaceRevealed: false,\r\n            isRegex: false,\r\n            wholeWord: false,\r\n            matchCase: false,\r\n            preserveCase: false,\r\n            searchScope: false,\r\n            matchesPosition: false,\r\n            matchesCount: false,\r\n            currentMatch: false,\r\n            loop: false\r\n        };\r\n        let somethingChanged = false;\r\n        const oldEffectiveIsRegex = this.isRegex;\r\n        const oldEffectiveWholeWords = this.wholeWord;\r\n        const oldEffectiveMatchCase = this.matchCase;\r\n        const oldEffectivePreserveCase = this.preserveCase;\r\n        if (typeof newState.searchString !== 'undefined') {\r\n            if (this._searchString !== newState.searchString) {\r\n                this._searchString = newState.searchString;\r\n                changeEvent.searchString = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.replaceString !== 'undefined') {\r\n            if (this._replaceString !== newState.replaceString) {\r\n                this._replaceString = newState.replaceString;\r\n                changeEvent.replaceString = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isRevealed !== 'undefined') {\r\n            if (this._isRevealed !== newState.isRevealed) {\r\n                this._isRevealed = newState.isRevealed;\r\n                changeEvent.isRevealed = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\r\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\r\n                this._isReplaceRevealed = newState.isReplaceRevealed;\r\n                changeEvent.isReplaceRevealed = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isRegex !== 'undefined') {\r\n            this._isRegex = newState.isRegex;\r\n        }\r\n        if (typeof newState.wholeWord !== 'undefined') {\r\n            this._wholeWord = newState.wholeWord;\r\n        }\r\n        if (typeof newState.matchCase !== 'undefined') {\r\n            this._matchCase = newState.matchCase;\r\n        }\r\n        if (typeof newState.preserveCase !== 'undefined') {\r\n            this._preserveCase = newState.preserveCase;\r\n        }\r\n        if (typeof newState.searchScope !== 'undefined') {\r\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\r\n                var _a;\r\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\r\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\r\n                });\r\n            }))) {\r\n                this._searchScope = newState.searchScope;\r\n                changeEvent.searchScope = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.loop !== 'undefined') {\r\n            if (this._loop !== newState.loop) {\r\n                this._loop = newState.loop;\r\n                changeEvent.loop = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\r\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* NotSet */);\r\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* NotSet */);\r\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* NotSet */);\r\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* NotSet */);\r\n        if (oldEffectiveIsRegex !== this.isRegex) {\r\n            somethingChanged = true;\r\n            changeEvent.isRegex = true;\r\n        }\r\n        if (oldEffectiveWholeWords !== this.wholeWord) {\r\n            somethingChanged = true;\r\n            changeEvent.wholeWord = true;\r\n        }\r\n        if (oldEffectiveMatchCase !== this.matchCase) {\r\n            somethingChanged = true;\r\n            changeEvent.matchCase = true;\r\n        }\r\n        if (oldEffectivePreserveCase !== this.preserveCase) {\r\n            somethingChanged = true;\r\n            changeEvent.preserveCase = true;\r\n        }\r\n        if (somethingChanged) {\r\n            this._onFindReplaceStateChange.fire(changeEvent);\r\n        }\r\n    }\r\n    canNavigateBack() {\r\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\r\n    }\r\n    canNavigateForward() {\r\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\r\n    }\r\n    canNavigateInLoop() {\r\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from './findInputCheckboxes.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nexport class FindInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.imeSessionInProgress = false;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this.onMouseDown = this._onMouseDown.event;\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onCaseSensitiveKeyDown = this._register(new Emitter());\r\n        this.onCaseSensitiveKeyDown = this._onCaseSensitiveKeyDown.event;\r\n        this._onRegexKeyDown = this._register(new Emitter());\r\n        this.onRegexKeyDown = this._onRegexKeyDown.event;\r\n        this._lastHighlightFindOptions = 0;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendCaseSensitiveLabel = options.appendCaseSensitiveLabel || '';\r\n        const appendWholeWordsLabel = options.appendWholeWordsLabel || '';\r\n        const appendRegexLabel = options.appendRegexLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            placeholder: this.placeholder || '',\r\n            ariaLabel: this.label || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.regex = this._register(new RegexCheckbox({\r\n            appendTitle: appendRegexLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.regex.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.regex.onKeyDown(e => {\r\n            this._onRegexKeyDown.fire(e);\r\n        }));\r\n        this.wholeWords = this._register(new WholeWordsCheckbox({\r\n            appendTitle: appendWholeWordsLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.wholeWords.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\r\n            appendTitle: appendCaseSensitiveLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.caseSensitive.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.caseSensitive.onKeyDown(e => {\r\n            this._onCaseSensitiveKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.inputBox.paddingRight = this.caseSensitive.width() + this.wholeWords.width() + this.regex.width();\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.caseSensitive.domNode, this.wholeWords.domNode, this.regex.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.caseSensitive.domNode);\r\n        controls.appendChild(this.wholeWords.domNode);\r\n        controls.appendChild(this.regex.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionstart', (e) => {\r\n            this.imeSessionInProgress = true;\r\n        }));\r\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionend', (e) => {\r\n            this.imeSessionInProgress = false;\r\n            this._onInput.fire();\r\n        }));\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.regex.enable();\r\n        this.wholeWords.enable();\r\n        this.caseSensitive.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.regex.disable();\r\n        this.wholeWords.disable();\r\n        this.caseSensitive.disable();\r\n    }\r\n    setFocusInputOnOptionClick(value) {\r\n        this.fixFocusOnOptionClickEnabled = value;\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.inputBox.value;\r\n    }\r\n    setValue(value) {\r\n        if (this.inputBox.value !== value) {\r\n            this.inputBox.value = value;\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.regex.style(checkBoxStyles);\r\n            this.wholeWords.style(checkBoxStyles);\r\n            this.caseSensitive.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getCaseSensitive() {\r\n        return this.caseSensitive.checked;\r\n    }\r\n    setCaseSensitive(value) {\r\n        this.caseSensitive.checked = value;\r\n    }\r\n    getWholeWords() {\r\n        return this.wholeWords.checked;\r\n    }\r\n    setWholeWords(value) {\r\n        this.wholeWords.checked = value;\r\n    }\r\n    getRegex() {\r\n        return this.regex.checked;\r\n    }\r\n    setRegex(value) {\r\n        this.regex.checked = value;\r\n        this.validate();\r\n    }\r\n    focusOnCaseSensitive() {\r\n        this.caseSensitive.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this.domNode.classList.remove('highlight-' + (this._lastHighlightFindOptions));\r\n        this._lastHighlightFindOptions = 1 - this._lastHighlightFindOptions;\r\n        this.domNode.classList.add('highlight-' + (this._lastHighlightFindOptions));\r\n    }\r\n    validate() {\r\n        this.inputBox.validate();\r\n    }\r\n    clearMessage() {\r\n        this.inputBox.hideMessage();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\r\nexport class PreserveCaseCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            // TODO: does this need its own icon?\r\n            icon: Codicon.preserveCase,\r\n            title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class ReplaceInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.cachedOptionsWidth = 0;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onPreserveCaseKeyDown = this._register(new Emitter());\r\n        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            ariaLabel: this.label || '',\r\n            placeholder: this.placeholder || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.preserveCase = this._register(new PreserveCaseCheckbox({\r\n            appendTitle: appendPreserveCaseLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n        }));\r\n        this._register(this.preserveCase.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.preserveCase.onKeyDown(e => {\r\n            this._onPreserveCaseKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.cachedOptionsWidth = this.preserveCase.width();\r\n        }\r\n        else {\r\n            this.cachedOptionsWidth = 0;\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.preserveCase.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.preserveCase.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.preserveCase.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.preserveCase.disable();\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.preserveCase.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getPreserveCase() {\r\n        return this.preserveCase.checked;\r\n    }\r\n    setPreserveCase(value) {\r\n        this.preserveCase.checked = value;\r\n    }\r\n    focusOnPreserve() {\r\n        this.preserveCase.focus();\r\n    }\r\n    validate() {\r\n        if (this.inputBox) {\r\n            this.inputBox.validate();\r\n        }\r\n    }\r\n    set width(newWidth) {\r\n        this.inputBox.paddingRight = this.cachedOptionsWidth;\r\n        this.inputBox.width = newWidth;\r\n        this.domNode.style.width = newWidth + 'px';\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { FindInput } from '../../base/browser/ui/findinput/findInput.js';\r\nimport { ReplaceInput } from '../../base/browser/ui/findinput/replaceInput.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../contextkey/common/contextkey.js';\r\nimport { KeybindingsRegistry } from '../keybinding/common/keybindingsRegistry.js';\r\nexport const HistoryNavigationWidgetContext = 'historyNavigationWidget';\r\nconst HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';\r\nconst HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';\r\nfunction bindContextScopedWidget(contextKeyService, widget, contextKey) {\r\n    new RawContextKey(contextKey, widget).bindTo(contextKeyService);\r\n}\r\nfunction createWidgetScopedContextKeyService(contextKeyService, widget) {\r\n    return contextKeyService.createScoped(widget.target);\r\n}\r\nfunction getContextScopedWidget(contextKeyService, contextKey) {\r\n    return contextKeyService.getContext(document.activeElement).getValue(contextKey);\r\n}\r\nexport function createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, widget) {\r\n    const scopedContextKeyService = createWidgetScopedContextKeyService(contextKeyService, widget);\r\n    bindContextScopedWidget(scopedContextKeyService, widget, HistoryNavigationWidgetContext);\r\n    const historyNavigationForwardsEnablement = new RawContextKey(HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);\r\n    const historyNavigationBackwardsEnablement = new RawContextKey(HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);\r\n    return {\r\n        scopedContextKeyService,\r\n        historyNavigationForwardsEnablement,\r\n        historyNavigationBackwardsEnablement,\r\n    };\r\n}\r\nlet ContextScopedFindInput = class ContextScopedFindInput extends FindInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showFindOptions = false) {\r\n        super(container, contextViewProvider, showFindOptions, options);\r\n        this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: this.inputBox.element, historyNavigator: this.inputBox }).scopedContextKeyService);\r\n    }\r\n};\r\nContextScopedFindInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedFindInput);\r\nexport { ContextScopedFindInput };\r\nlet ContextScopedReplaceInput = class ContextScopedReplaceInput extends ReplaceInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false) {\r\n        super(container, contextViewProvider, showReplaceOptions, options);\r\n        this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: this.inputBox.element, historyNavigator: this.inputBox }).scopedContextKeyService);\r\n    }\r\n};\r\nContextScopedReplaceInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedReplaceInput);\r\nexport { ContextScopedReplaceInput };\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showPrevious',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext), ContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext, true)),\r\n    primary: 16 /* UpArrow */,\r\n    secondary: [512 /* Alt */ | 16 /* UpArrow */],\r\n    handler: (accessor) => {\r\n        const widget = getContextScopedWidget(accessor.get(IContextKeyService), HistoryNavigationWidgetContext);\r\n        if (widget) {\r\n            const historyInputBox = widget.historyNavigator;\r\n            historyInputBox.showPreviousValue();\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showNext',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext), ContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true)),\r\n    primary: 18 /* DownArrow */,\r\n    secondary: [512 /* Alt */ | 18 /* DownArrow */],\r\n    handler: (accessor) => {\r\n        const widget = getContextScopedWidget(accessor.get(IContextKeyService), HistoryNavigationWidgetContext);\r\n        if (widget) {\r\n            const historyInputBox = widget.historyNavigator;\r\n            historyInputBox.showNextValue();\r\n        }\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './findWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { alert as alertFn } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Checkbox } from '../../../base/browser/ui/checkbox/checkbox.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\r\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetResizeBorder, errorForeground, inputActiveOptionBorder, inputActiveOptionBackground, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, widgetShadow, editorWidgetForeground, focusBorder, toolbarHoverBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../platform/browser/contextScopedHistoryWidget.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { registerIcon, widgetClose } from '../../../platform/theme/common/iconRegistry.js';\r\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\r\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\r\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\r\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\r\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\r\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\r\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\r\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\r\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\r\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\r\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\r\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\r\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\r\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\r\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\r\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\r\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\r\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\r\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\r\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\r\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\r\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\r\nconst PART_WIDTH = 275;\r\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\r\nlet MAX_MATCHES_COUNT_WIDTH = 69;\r\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\r\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\r\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\r\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\r\nexport class FindWidgetViewZone {\r\n    constructor(afterLineNumber) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\r\n        this.suppressMouseDown = false;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.className = 'dock-find-viewzone';\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nexport class FindWidget extends Widget {\r\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\r\n        super();\r\n        this._cachedHeight = null;\r\n        this._revealTimeouts = [];\r\n        this._codeEditor = codeEditor;\r\n        this._controller = controller;\r\n        this._state = state;\r\n        this._contextViewProvider = contextViewProvider;\r\n        this._keybindingService = keybindingService;\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._notificationService = notificationService;\r\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\r\n        this._isVisible = false;\r\n        this._isReplaceVisible = false;\r\n        this._ignoreChangeEvent = false;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._buildDomNode();\r\n        this._updateButtons();\r\n        this._tryUpdateWidgetWidth();\r\n        this._findInput.inputBox.layout();\r\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(80 /* readOnly */)) {\r\n                if (this._codeEditor.getOption(80 /* readOnly */)) {\r\n                    // Hide replace part if editor becomes read only\r\n                    this._state.change({ isReplaceRevealed: false }, false);\r\n                }\r\n                this._updateButtons();\r\n            }\r\n            if (e.hasChanged(130 /* layoutInfo */)) {\r\n                this._tryUpdateWidgetWidth();\r\n            }\r\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\r\n                this.updateAccessibilitySupport();\r\n            }\r\n            if (e.hasChanged(34 /* find */)) {\r\n                const addExtraSpaceOnTop = this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop;\r\n                if (addExtraSpaceOnTop && !this._viewZone) {\r\n                    this._viewZone = new FindWidgetViewZone(0);\r\n                    this._showViewZone();\r\n                }\r\n                if (!addExtraSpaceOnTop && this._viewZone) {\r\n                    this._removeViewZone();\r\n                }\r\n            }\r\n        }));\r\n        this.updateAccessibilitySupport();\r\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\r\n            if (this._isVisible) {\r\n                this._updateToggleSelectionFindButton();\r\n            }\r\n        }));\r\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this._isVisible) {\r\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\r\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\r\n                    this._state.change({ searchString: globalBufferTerm }, false);\r\n                    this._findInput.select();\r\n                }\r\n            }\r\n        })));\r\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\r\n        this._register(this._findFocusTracker.onDidFocus(() => {\r\n            this._findInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._findFocusTracker.onDidBlur(() => {\r\n            this._findInputFocused.set(false);\r\n        }));\r\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\r\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\r\n            this._replaceInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\r\n            this._replaceInputFocused.set(false);\r\n        }));\r\n        this._codeEditor.addOverlayWidget(this);\r\n        if (this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop) {\r\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\r\n        }\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._register(this._codeEditor.onDidChangeModel(() => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            this._viewZoneId = undefined;\r\n        }));\r\n        this._register(this._codeEditor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged) {\r\n                this._layoutViewZone();\r\n                return;\r\n            }\r\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\r\n            setTimeout(() => {\r\n                this._layoutViewZone();\r\n            }, 0);\r\n        }));\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                preference: 0 /* TOP_RIGHT_CORNER */\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    // ----- React to state changes\r\n    _onStateChanged(e) {\r\n        if (e.searchString) {\r\n            try {\r\n                this._ignoreChangeEvent = true;\r\n                this._findInput.setValue(this._state.searchString);\r\n            }\r\n            finally {\r\n                this._ignoreChangeEvent = false;\r\n            }\r\n            this._updateButtons();\r\n        }\r\n        if (e.replaceString) {\r\n            this._replaceInput.inputBox.value = this._state.replaceString;\r\n        }\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._reveal();\r\n            }\r\n            else {\r\n                this._hide(true);\r\n            }\r\n        }\r\n        if (e.isReplaceRevealed) {\r\n            if (this._state.isReplaceRevealed) {\r\n                if (!this._codeEditor.getOption(80 /* readOnly */) && !this._isReplaceVisible) {\r\n                    this._isReplaceVisible = true;\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._updateButtons();\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n            }\r\n            else {\r\n                if (this._isReplaceVisible) {\r\n                    this._isReplaceVisible = false;\r\n                    this._updateButtons();\r\n                }\r\n            }\r\n        }\r\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }\r\n        if (e.isRegex) {\r\n            this._findInput.setRegex(this._state.isRegex);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._findInput.setWholeWords(this._state.wholeWord);\r\n        }\r\n        if (e.matchCase) {\r\n            this._findInput.setCaseSensitive(this._state.matchCase);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\r\n        }\r\n        if (e.searchScope) {\r\n            if (this._state.searchScope) {\r\n                this._toggleSelectionFind.checked = true;\r\n            }\r\n            else {\r\n                this._toggleSelectionFind.checked = false;\r\n            }\r\n            this._updateToggleSelectionFindButton();\r\n        }\r\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\r\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\r\n            this._domNode.classList.toggle('no-results', showRedOutline);\r\n            this._updateMatchesCount();\r\n            this._updateButtons();\r\n        }\r\n        if (e.searchString || e.currentMatch) {\r\n            this._layoutViewZone();\r\n        }\r\n        if (e.updateHistory) {\r\n            this._delayedUpdateHistory();\r\n        }\r\n        if (e.loop) {\r\n            this._updateButtons();\r\n        }\r\n    }\r\n    _delayedUpdateHistory() {\r\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\r\n    }\r\n    _updateHistory() {\r\n        if (this._state.searchString) {\r\n            this._findInput.inputBox.addToHistory();\r\n        }\r\n        if (this._state.replaceString) {\r\n            this._replaceInput.inputBox.addToHistory();\r\n        }\r\n    }\r\n    _updateMatchesCount() {\r\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\r\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\r\n        }\r\n        else {\r\n            this._matchesCount.title = '';\r\n        }\r\n        // remove previous content\r\n        if (this._matchesCount.firstChild) {\r\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\r\n        }\r\n        let label;\r\n        if (this._state.matchesCount > 0) {\r\n            let matchesCount = String(this._state.matchesCount);\r\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n                matchesCount += '+';\r\n            }\r\n            let matchesPosition = String(this._state.matchesPosition);\r\n            if (matchesPosition === '0') {\r\n                matchesPosition = '?';\r\n            }\r\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\r\n        }\r\n        else {\r\n            label = NLS_NO_RESULTS;\r\n        }\r\n        this._matchesCount.appendChild(document.createTextNode(label));\r\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\r\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\r\n    }\r\n    // ----- actions\r\n    _getAriaLabel(label, currentMatch, searchString) {\r\n        if (label === NLS_NO_RESULTS) {\r\n            return searchString === ''\r\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\r\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\r\n        }\r\n        if (currentMatch) {\r\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\r\n            const model = this._codeEditor.getModel();\r\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\r\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\r\n                return `${lineContent}, ${ariaLabel}`;\r\n            }\r\n            return ariaLabel;\r\n        }\r\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\r\n    }\r\n    /**\r\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\r\n     * If 'selection find' is OFF we enable the button only if there is a selection.\r\n     */\r\n    _updateToggleSelectionFindButton() {\r\n        let selection = this._codeEditor.getSelection();\r\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\r\n        let isChecked = this._toggleSelectionFind.checked;\r\n        if (this._isVisible && (isChecked || isSelection)) {\r\n            this._toggleSelectionFind.enable();\r\n        }\r\n        else {\r\n            this._toggleSelectionFind.disable();\r\n        }\r\n    }\r\n    _updateButtons() {\r\n        this._findInput.setEnabled(this._isVisible);\r\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\r\n        this._updateToggleSelectionFindButton();\r\n        this._closeBtn.setEnabled(this._isVisible);\r\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\r\n        let matchesCount = this._state.matchesCount ? true : false;\r\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\r\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\r\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        let canReplace = !this._codeEditor.getOption(80 /* readOnly */);\r\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\r\n    }\r\n    _reveal() {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (!this._isVisible) {\r\n            this._isVisible = true;\r\n            const selection = this._codeEditor.getSelection();\r\n            switch (this._codeEditor.getOption(34 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    this._toggleSelectionFind.checked = true;\r\n                    break;\r\n                case 'never':\r\n                    this._toggleSelectionFind.checked = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this._tryUpdateWidgetWidth();\r\n            this._updateButtons();\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._domNode.classList.add('visible');\r\n                this._domNode.setAttribute('aria-hidden', 'false');\r\n            }, 0));\r\n            // validate query again as it's being dismissed when we hide the find widget.\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._findInput.validate();\r\n            }, 200));\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            let adjustEditorScrollTop = true;\r\n            if (this._codeEditor.getOption(34 /* find */).seedSearchStringFromSelection && selection) {\r\n                const domNode = this._codeEditor.getDomNode();\r\n                if (domNode) {\r\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\r\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\r\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\r\n                    const startTop = startCoords ? startCoords.top : 0;\r\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\r\n                        if (selection.endLineNumber > selection.startLineNumber) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\r\n                        if (startLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\r\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\r\n                        if (endLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._showViewZone(adjustEditorScrollTop);\r\n        }\r\n    }\r\n    _hide(focusTheEditor) {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (this._isVisible) {\r\n            this._isVisible = false;\r\n            this._updateButtons();\r\n            this._domNode.classList.remove('visible');\r\n            this._domNode.setAttribute('aria-hidden', 'true');\r\n            this._findInput.clearMessage();\r\n            if (focusTheEditor) {\r\n                this._codeEditor.focus();\r\n            }\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            this._removeViewZone();\r\n        }\r\n    }\r\n    _layoutViewZone(targetScrollTop) {\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            this._removeViewZone();\r\n            return;\r\n        }\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const viewZone = this._viewZone;\r\n        if (this._viewZoneId !== undefined || !viewZone) {\r\n            return;\r\n        }\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            viewZone.heightInPx = this._getHeight();\r\n            this._viewZoneId = accessor.addZone(viewZone);\r\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\r\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\r\n        });\r\n    }\r\n    _showViewZone(adjustScroll = true) {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(34 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            return;\r\n        }\r\n        if (this._viewZone === undefined) {\r\n            this._viewZone = new FindWidgetViewZone(0);\r\n        }\r\n        const viewZone = this._viewZone;\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                // the view zone already exists, we need to update the height\r\n                const newHeight = this._getHeight();\r\n                if (newHeight === viewZone.heightInPx) {\r\n                    return;\r\n                }\r\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\r\n                viewZone.heightInPx = newHeight;\r\n                accessor.layoutZone(this._viewZoneId);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                let scrollAdjustment = this._getHeight();\r\n                // if the editor has top padding, factor that into the zone height\r\n                scrollAdjustment -= this._codeEditor.getOption(74 /* padding */).top;\r\n                if (scrollAdjustment <= 0) {\r\n                    return;\r\n                }\r\n                viewZone.heightInPx = scrollAdjustment;\r\n                this._viewZoneId = accessor.addZone(viewZone);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _removeViewZone() {\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                accessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n                if (this._viewZone) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\r\n                    this._viewZone = undefined;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputBackground: theme.getColor(inputBackground),\r\n            inputForeground: theme.getColor(inputForeground),\r\n            inputBorder: theme.getColor(inputBorder),\r\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\r\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\r\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\r\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\r\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\r\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\r\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\r\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\r\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\r\n        };\r\n        this._findInput.style(inputStyles);\r\n        this._replaceInput.style(inputStyles);\r\n        this._toggleSelectionFind.style(inputStyles);\r\n    }\r\n    _tryUpdateWidgetWidth() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        if (!dom.isInDOM(this._domNode)) {\r\n            // the widget is not in the DOM\r\n            return;\r\n        }\r\n        const layoutInfo = this._codeEditor.getLayoutInfo();\r\n        const editorContentWidth = layoutInfo.contentWidth;\r\n        if (editorContentWidth <= 0) {\r\n            // for example, diff view original editor\r\n            this._domNode.classList.add('hiddenEditor');\r\n            return;\r\n        }\r\n        else if (this._domNode.classList.contains('hiddenEditor')) {\r\n            this._domNode.classList.remove('hiddenEditor');\r\n        }\r\n        const editorWidth = layoutInfo.width;\r\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\r\n        let collapsedFindWidget = false;\r\n        let reducedFindWidget = false;\r\n        let narrowFindWidget = false;\r\n        if (this._resized) {\r\n            let widgetWidth = dom.getTotalWidth(this._domNode);\r\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\r\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\r\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                return;\r\n            }\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\r\n            reducedFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\r\n            narrowFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\r\n            collapsedFindWidget = true;\r\n        }\r\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\r\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\r\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\r\n        if (!narrowFindWidget && !collapsedFindWidget) {\r\n            // the minimal left offset of findwidget is 15px.\r\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n        }\r\n        if (this._resized) {\r\n            this._findInput.inputBox.layout();\r\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\r\n            if (findInputWidth > 0) {\r\n                this._replaceInput.width = findInputWidth;\r\n            }\r\n        }\r\n        else if (this._isReplaceVisible) {\r\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n        }\r\n    }\r\n    _getHeight() {\r\n        let totalheight = 0;\r\n        // find input margin top\r\n        totalheight += 4;\r\n        // find input height\r\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\r\n        if (this._isReplaceVisible) {\r\n            // replace input margin\r\n            totalheight += 4;\r\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\r\n        }\r\n        // margin bottom\r\n        totalheight += 4;\r\n        return totalheight;\r\n    }\r\n    _tryUpdateHeight() {\r\n        const totalHeight = this._getHeight();\r\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\r\n            return false;\r\n        }\r\n        this._cachedHeight = totalHeight;\r\n        this._domNode.style.height = `${totalHeight}px`;\r\n        return true;\r\n    }\r\n    // ----- Public\r\n    focusFindInput() {\r\n        this._findInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._findInput.focus();\r\n    }\r\n    focusReplaceInput() {\r\n        this._replaceInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._replaceInput.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this._findInput.highlightFindOptions();\r\n    }\r\n    _updateSearchScope() {\r\n        if (!this._codeEditor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._toggleSelectionFind.checked) {\r\n            let selections = this._codeEditor.getSelections();\r\n            selections.map(selection => {\r\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                }\r\n                const currentMatch = this._state.currentMatch;\r\n                if (selection.startLineNumber !== selection.endLineNumber) {\r\n                    if (!Range.equalsRange(selection, currentMatch)) {\r\n                        return selection;\r\n                    }\r\n                }\r\n                return null;\r\n            }).filter(element => !!element);\r\n            if (selections.length) {\r\n                this._state.change({ searchScope: selections }, true);\r\n            }\r\n        }\r\n    }\r\n    _onFindInputMouseDown(e) {\r\n        // on linux, middle key does pasting.\r\n        if (e.middleButton) {\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n    _onFindInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            this._findInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.focus();\r\n            }\r\n            else {\r\n                this._findInput.focusOnCaseSensitive();\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n    }\r\n    _onReplaceInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\r\n                // this is the first time when users press Ctrl + Enter to replace all\r\n                this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\r\n                this._ctrlEnterReplaceAllWarningPrompted = true;\r\n                this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\r\n            }\r\n            this._replaceInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            this._findInput.focusOnCaseSensitive();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n            this._findInput.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n    }\r\n    // ----- sash\r\n    getVerticalSashLeft(_sash) {\r\n        return 0;\r\n    }\r\n    // ----- initialization\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    _buildDomNode() {\r\n        const flexibleHeight = true;\r\n        const flexibleWidth = true;\r\n        // Find input\r\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\r\n            width: FIND_INPUT_AREA_WIDTH,\r\n            label: NLS_FIND_INPUT_LABEL,\r\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\r\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            validation: (value) => {\r\n                if (value.length === 0 || !this._findInput.getRegex()) {\r\n                    return null;\r\n                }\r\n                try {\r\n                    // use `g` and `u` which are also used by the TextModel search\r\n                    new RegExp(value, 'gu');\r\n                    return null;\r\n                }\r\n                catch (e) {\r\n                    return { content: e.message };\r\n                }\r\n            },\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._findInput.setRegex(!!this._state.isRegex);\r\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\r\n        this._findInput.setWholeWords(!!this._state.wholeWord);\r\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\r\n        this._register(this._findInput.inputBox.onDidChange(() => {\r\n            if (this._ignoreChangeEvent) {\r\n                return;\r\n            }\r\n            this._state.change({ searchString: this._findInput.getValue() }, true);\r\n        }));\r\n        this._register(this._findInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                isRegex: this._findInput.getRegex(),\r\n                wholeWord: this._findInput.getWholeWords(),\r\n                matchCase: this._findInput.getCaseSensitive()\r\n            }, true);\r\n        }));\r\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\r\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.onRegexKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focusOnPreserve();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        if (platform.isLinux) {\r\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\r\n        }\r\n        this._matchesCount = document.createElement('div');\r\n        this._matchesCount.className = 'matchesCount';\r\n        this._updateMatchesCount();\r\n        // Previous button\r\n        this._prevBtn = this._register(new SimpleButton({\r\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\r\n            icon: findPreviousMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        // Next button\r\n        this._nextBtn = this._register(new SimpleButton({\r\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\r\n            icon: findNextMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        let findPart = document.createElement('div');\r\n        findPart.className = 'find-part';\r\n        findPart.appendChild(this._findInput.domNode);\r\n        const actionsContainer = document.createElement('div');\r\n        actionsContainer.className = 'find-actions';\r\n        findPart.appendChild(actionsContainer);\r\n        actionsContainer.appendChild(this._matchesCount);\r\n        actionsContainer.appendChild(this._prevBtn.domNode);\r\n        actionsContainer.appendChild(this._nextBtn.domNode);\r\n        // Toggle selection button\r\n        this._toggleSelectionFind = this._register(new Checkbox({\r\n            icon: findSelectionIcon,\r\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\r\n            isChecked: false\r\n        }));\r\n        this._register(this._toggleSelectionFind.onChange(() => {\r\n            if (this._toggleSelectionFind.checked) {\r\n                if (this._codeEditor.hasModel()) {\r\n                    let selections = this._codeEditor.getSelections();\r\n                    selections.map(selection => {\r\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                        }\r\n                        if (!selection.isEmpty()) {\r\n                            return selection;\r\n                        }\r\n                        return null;\r\n                    }).filter(element => !!element);\r\n                    if (selections.length) {\r\n                        this._state.change({ searchScope: selections }, true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._state.change({ searchScope: null }, true);\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\r\n        // Close button\r\n        this._closeBtn = this._register(new SimpleButton({\r\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\r\n            icon: widgetClose,\r\n            onTrigger: () => {\r\n                this._state.change({ isRevealed: false, searchScope: null }, false);\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(2 /* Tab */)) {\r\n                    if (this._isReplaceVisible) {\r\n                        if (this._replaceBtn.isEnabled()) {\r\n                            this._replaceBtn.focus();\r\n                        }\r\n                        else {\r\n                            this._codeEditor.focus();\r\n                        }\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._closeBtn.domNode);\r\n        // Replace input\r\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\r\n            label: NLS_REPLACE_INPUT_LABEL,\r\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\r\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\r\n            history: [],\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\r\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\r\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\r\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\r\n        }));\r\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._register(this._replaceInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                preserveCase: this._replaceInput.getPreserveCase()\r\n            }, true);\r\n        }));\r\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._prevBtn.isEnabled()) {\r\n                    this._prevBtn.focus();\r\n                }\r\n                else if (this._nextBtn.isEnabled()) {\r\n                    this._nextBtn.focus();\r\n                }\r\n                else if (this._toggleSelectionFind.enabled) {\r\n                    this._toggleSelectionFind.focus();\r\n                }\r\n                else if (this._closeBtn.isEnabled()) {\r\n                    this._closeBtn.focus();\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n        // Replace one button\r\n        this._replaceBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\r\n            icon: findReplaceIcon,\r\n            onTrigger: () => {\r\n                this._controller.replace();\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                    this._closeBtn.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        // Replace all button\r\n        this._replaceAllBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\r\n            icon: findReplaceAllIcon,\r\n            onTrigger: () => {\r\n                this._controller.replaceAll();\r\n            }\r\n        }));\r\n        let replacePart = document.createElement('div');\r\n        replacePart.className = 'replace-part';\r\n        replacePart.appendChild(this._replaceInput.domNode);\r\n        const replaceActionsContainer = document.createElement('div');\r\n        replaceActionsContainer.className = 'replace-actions';\r\n        replacePart.appendChild(replaceActionsContainer);\r\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\r\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\r\n        // Toggle replace button\r\n        this._toggleReplaceBtn = this._register(new SimpleButton({\r\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\r\n            className: 'codicon toggle left',\r\n            onTrigger: () => {\r\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        // Widget\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'editor-widget find-widget';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\r\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\r\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\r\n        this._domNode.appendChild(findPart);\r\n        this._domNode.appendChild(replacePart);\r\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\r\n        this._resized = false;\r\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\r\n        this._register(this._resizeSash.onDidStart(() => {\r\n            originalWidth = dom.getTotalWidth(this._domNode);\r\n        }));\r\n        this._register(this._resizeSash.onDidChange((evt) => {\r\n            this._resized = true;\r\n            let width = originalWidth + evt.startX - evt.currentX;\r\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // narrow down the find widget should be handled by CSS.\r\n                return;\r\n            }\r\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\r\n            if (width > maxWidth) {\r\n                return;\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n            this._tryUpdateHeight();\r\n        }));\r\n        this._register(this._resizeSash.onDidReset(() => {\r\n            // users double click on the sash\r\n            const currentWidth = dom.getTotalWidth(this._domNode);\r\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\r\n                return;\r\n            }\r\n            let width = FIND_WIDGET_INITIAL_WIDTH;\r\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\r\n                // 1. never resized before, double click should maximizes it\r\n                // 2. users resized it already but its width is the same as default\r\n                const layoutInfo = this._codeEditor.getLayoutInfo();\r\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\r\n                this._resized = true;\r\n            }\r\n            else {\r\n                /**\r\n                 * no op, the find widget should be shrinked to its default size.\r\n                 */\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n        }));\r\n    }\r\n    updateAccessibilitySupport() {\r\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\r\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\r\n    }\r\n}\r\nFindWidget.ID = 'editor.contrib.findWidget';\r\nexport class SimpleButton extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._opts = opts;\r\n        let className = 'button';\r\n        if (this._opts.className) {\r\n            className = className + ' ' + this._opts.className;\r\n        }\r\n        if (this._opts.icon) {\r\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\r\n        }\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.title = this._opts.label;\r\n        this._domNode.tabIndex = 0;\r\n        this._domNode.className = className;\r\n        this._domNode.setAttribute('role', 'button');\r\n        this._domNode.setAttribute('aria-label', this._opts.label);\r\n        this.onclick(this._domNode, (e) => {\r\n            this._opts.onTrigger();\r\n            e.preventDefault();\r\n        });\r\n        this.onkeydown(this._domNode, (e) => {\r\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\r\n                this._opts.onTrigger();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            if (this._opts.onKeyDown) {\r\n                this._opts.onKeyDown(e);\r\n            }\r\n        });\r\n    }\r\n    get domNode() {\r\n        return this._domNode;\r\n    }\r\n    isEnabled() {\r\n        return (this._domNode.tabIndex >= 0);\r\n    }\r\n    focus() {\r\n        this._domNode.focus();\r\n    }\r\n    setEnabled(enabled) {\r\n        this._domNode.classList.toggle('disabled', !enabled);\r\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\r\n        this._domNode.tabIndex = enabled ? 0 : -1;\r\n    }\r\n    setExpanded(expanded) {\r\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\r\n        if (expanded) {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n        }\r\n        else {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n        }\r\n    }\r\n}\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const addBackgroundColorRule = (selector, color) => {\r\n        if (color) {\r\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\r\n        }\r\n    };\r\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\r\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\r\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    addBackgroundColorRule('.find-widget', widgetBackground);\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\r\n    if (findMatchHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\r\n    if (findMatchBorder) {\r\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\r\n    }\r\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\r\n    if (findRangeHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\r\n    }\r\n    const error = theme.getColor(errorForeground);\r\n    if (error) {\r\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\r\n    }\r\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\r\n    if (resizeBorderBackground) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\r\n    }\r\n    else {\r\n        const border = theme.getColor(editorWidgetBorder);\r\n        if (border) {\r\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\r\n        }\r\n    }\r\n    // Action bars\r\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\r\n    if (toolbarHoverBackgroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\r\n    }\r\n    // This rule is used to override the outline color for synthetic-focus find input.\r\n    const focusOutline = theme.getColor(focusBorder);\r\n    if (focusOutline) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, MultiEditorAction, registerMultiEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, FIND_IDS, FindModelBoundToEditorModel, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding, CONTEXT_REPLACE_INPUT_FOCUSED } from './findModel.js';\r\nimport { FindOptionsWidget } from './findOptionsWidget.js';\r\nimport { FindReplaceState } from './findState.js';\r\nimport { FindWidget } from './findWidget.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nconst SEARCH_STRING_MAX_LENGTH = 524288;\r\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\r\n    if (!editor.hasModel()) {\r\n        return null;\r\n    }\r\n    const selection = editor.getSelection();\r\n    // if selection spans multiple lines, default search string to empty\r\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\r\n        || seedSearchStringFromSelection === 'multiple') {\r\n        if (selection.isEmpty()) {\r\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\r\n                return wordAtPosition.word;\r\n            }\r\n        }\r\n        else {\r\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\r\n                return editor.getModel().getValueInRange(selection);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nlet CommonFindController = class CommonFindController extends Disposable {\r\n    constructor(editor, contextKeyService, storageService, clipboardService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._clipboardService = clipboardService;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._state = this._register(new FindReplaceState());\r\n        this.loadQueryState();\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._model = null;\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            let shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\r\n            this.disposeModel();\r\n            this._state.change({\r\n                searchScope: null,\r\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\r\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\r\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\r\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\r\n            }, false);\r\n            if (shouldRestartFind) {\r\n                this._start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'none',\r\n                    seedSearchStringFromNonEmptySelection: false,\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: false,\r\n                    updateSearchScope: false,\r\n                    loop: this._editor.getOption(34 /* find */).loop\r\n                });\r\n            }\r\n        }));\r\n    }\r\n    get editor() {\r\n        return this._editor;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CommonFindController.ID);\r\n    }\r\n    dispose() {\r\n        this.disposeModel();\r\n        super.dispose();\r\n    }\r\n    disposeModel() {\r\n        if (this._model) {\r\n            this._model.dispose();\r\n            this._model = null;\r\n        }\r\n    }\r\n    _onStateChanged(e) {\r\n        this.saveQueryState(e);\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._findWidgetVisible.set(true);\r\n            }\r\n            else {\r\n                this._findWidgetVisible.reset();\r\n                this.disposeModel();\r\n            }\r\n        }\r\n        if (e.searchString) {\r\n            this.setGlobalBufferTerm(this._state.searchString);\r\n        }\r\n    }\r\n    saveQueryState(e) {\r\n        if (e.isRegex) {\r\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.matchCase) {\r\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n    }\r\n    loadQueryState() {\r\n        this._state.change({\r\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\r\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\r\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\r\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\r\n        }, false);\r\n    }\r\n    isFindInputFocused() {\r\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\r\n    }\r\n    getState() {\r\n        return this._state;\r\n    }\r\n    closeFindWidget() {\r\n        this._state.change({\r\n            isRevealed: false,\r\n            searchScope: null\r\n        }, false);\r\n        this._editor.focus();\r\n    }\r\n    toggleCaseSensitive() {\r\n        this._state.change({ matchCase: !this._state.matchCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleWholeWords() {\r\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleRegex() {\r\n        this._state.change({ isRegex: !this._state.isRegex }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    togglePreserveCase() {\r\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleSearchScope() {\r\n        if (this._state.searchScope) {\r\n            this._state.change({ searchScope: null }, true);\r\n        }\r\n        else {\r\n            if (this._editor.hasModel()) {\r\n                let selections = this._editor.getSelections();\r\n                selections.map(selection => {\r\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                    }\r\n                    if (!selection.isEmpty()) {\r\n                        return selection;\r\n                    }\r\n                    return null;\r\n                }).filter(element => !!element);\r\n                if (selections.length) {\r\n                    this._state.change({ searchScope: selections }, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setSearchString(searchString) {\r\n        if (this._state.isRegex) {\r\n            searchString = strings.escapeRegExpCharacters(searchString);\r\n        }\r\n        this._state.change({ searchString: searchString }, false);\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        // overwritten in subclass\r\n    }\r\n    _start(opts) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.disposeModel();\r\n            if (!this._editor.hasModel()) {\r\n                // cannot do anything with an editor that doesn't have a model...\r\n                return;\r\n            }\r\n            let stateChanges = {\r\n                isRevealed: true\r\n            };\r\n            if (opts.seedSearchStringFromSelection === 'single') {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\r\n                if (selectionSearchString) {\r\n                    if (this._state.isRegex) {\r\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\r\n                    }\r\n                    else {\r\n                        stateChanges.searchString = selectionSearchString;\r\n                    }\r\n                }\r\n            }\r\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\r\n                let selectionSearchString = yield this.getGlobalBufferTerm();\r\n                if (!this._editor.hasModel()) {\r\n                    // the editor has lost its model in the meantime\r\n                    return;\r\n                }\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            // Overwrite isReplaceRevealed\r\n            if (opts.forceRevealReplace) {\r\n                stateChanges.isReplaceRevealed = true;\r\n            }\r\n            else if (!this._findWidgetVisible.get()) {\r\n                stateChanges.isReplaceRevealed = false;\r\n            }\r\n            if (opts.updateSearchScope) {\r\n                let currentSelections = this._editor.getSelections();\r\n                if (currentSelections.some(selection => !selection.isEmpty())) {\r\n                    stateChanges.searchScope = currentSelections;\r\n                }\r\n            }\r\n            stateChanges.loop = opts.loop;\r\n            this._state.change(stateChanges, false);\r\n            if (!this._model) {\r\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\r\n            }\r\n        });\r\n    }\r\n    start(opts) {\r\n        return this._start(opts);\r\n    }\r\n    moveToNextMatch() {\r\n        if (this._model) {\r\n            this._model.moveToNextMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToPrevMatch() {\r\n        if (this._model) {\r\n            this._model.moveToPrevMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replace() {\r\n        if (this._model) {\r\n            this._model.replace();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replaceAll() {\r\n        if (this._model) {\r\n            this._model.replaceAll();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    selectAllMatches() {\r\n        if (this._model) {\r\n            this._model.selectAllMatches();\r\n            this._editor.focus();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getGlobalBufferTerm() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.getOption(34 /* find */).globalFindClipboard\r\n                && this._editor.hasModel()\r\n                && !this._editor.getModel().isTooLargeForSyncing()) {\r\n                return this._clipboardService.readFindText();\r\n            }\r\n            return '';\r\n        });\r\n    }\r\n    setGlobalBufferTerm(text) {\r\n        if (this._editor.getOption(34 /* find */).globalFindClipboard\r\n            && this._editor.hasModel()\r\n            && !this._editor.getModel().isTooLargeForSyncing()) {\r\n            // intentionally not awaited\r\n            this._clipboardService.writeFindText(text);\r\n        }\r\n    }\r\n};\r\nCommonFindController.ID = 'editor.contrib.findController';\r\nCommonFindController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IStorageService),\r\n    __param(3, IClipboardService)\r\n], CommonFindController);\r\nexport { CommonFindController };\r\nlet FindController = class FindController extends CommonFindController {\r\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\r\n        super(editor, _contextKeyService, _storageService, clipboardService);\r\n        this._contextViewService = _contextViewService;\r\n        this._keybindingService = _keybindingService;\r\n        this._themeService = _themeService;\r\n        this._notificationService = _notificationService;\r\n        this._widget = null;\r\n        this._findOptionsWidget = null;\r\n    }\r\n    _start(opts) {\r\n        const _super = Object.create(null, {\r\n            _start: { get: () => super._start }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._widget) {\r\n                this._createFindWidget();\r\n            }\r\n            const selection = this._editor.getSelection();\r\n            let updateSearchScope = false;\r\n            switch (this._editor.getOption(34 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    updateSearchScope = true;\r\n                    break;\r\n                case 'never':\r\n                    updateSearchScope = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    updateSearchScope = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            opts.updateSearchScope = updateSearchScope;\r\n            yield _super._start.call(this, opts);\r\n            if (this._widget) {\r\n                if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\r\n                    this._widget.focusReplaceInput();\r\n                }\r\n                else if (opts.shouldFocus === 1 /* FocusFindInput */) {\r\n                    this._widget.focusFindInput();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        if (!this._widget) {\r\n            this._createFindWidget();\r\n        }\r\n        if (this._state.isRevealed && !ignoreWhenVisible) {\r\n            this._widget.highlightFindOptions();\r\n        }\r\n        else {\r\n            this._findOptionsWidget.highlightFindOptions();\r\n        }\r\n    }\r\n    _createFindWidget() {\r\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\r\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\r\n    }\r\n};\r\nFindController = __decorate([\r\n    __param(1, IContextViewService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IThemeService),\r\n    __param(5, INotificationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IClipboardService)\r\n], FindController);\r\nexport { FindController };\r\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\r\n    id: FIND_IDS.StartFindAction,\r\n    label: nls.localize('startFindAction', \"Find\"),\r\n    alias: 'Find',\r\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\r\n    kbOpts: {\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 36 /* KEY_F */,\r\n        weight: 100 /* EditorContrib */\r\n    },\r\n    menuOpts: {\r\n        menuId: MenuId.MenubarEditMenu,\r\n        group: '3_find',\r\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\r\n        order: 1\r\n    }\r\n}));\r\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\r\n    const controller = CommonFindController.get(editor);\r\n    if (!controller) {\r\n        return false;\r\n    }\r\n    return controller.start({\r\n        forceRevealReplace: false,\r\n        seedSearchStringFromSelection: editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\r\n        seedSearchStringFromNonEmptySelection: editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection',\r\n        seedSearchStringFromGlobalClipboard: editor.getOption(34 /* find */).globalFindClipboard,\r\n        shouldFocus: 1 /* FocusFindInput */,\r\n        shouldAnimate: true,\r\n        updateSearchScope: false,\r\n        loop: editor.getOption(34 /* find */).loop\r\n    });\r\n});\r\nexport class StartFindWithSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.StartFindWithSelection,\r\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\r\n            alias: 'Find With Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 35 /* KEY_E */,\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'multiple',\r\n                    seedSearchStringFromNonEmptySelection: false,\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(34 /* find */).loop\r\n                });\r\n                controller.setGlobalBufferTerm(controller.getState().searchString);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class MatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller && !this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\r\n                    seedSearchStringFromNonEmptySelection: editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection',\r\n                    seedSearchStringFromGlobalClipboard: true,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(34 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextMatchFindAction,\r\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\r\n            alias: 'Find Next',\r\n            precondition: undefined,\r\n            kbOpts: [{\r\n                    kbExpr: EditorContextKeys.focus,\r\n                    primary: 61 /* F3 */,\r\n                    mac: { primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */, secondary: [61 /* F3 */] },\r\n                    weight: 100 /* EditorContrib */\r\n                }, {\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                    primary: 3 /* Enter */,\r\n                    weight: 100 /* EditorContrib */\r\n                }]\r\n        });\r\n    }\r\n    _run(controller) {\r\n        const result = controller.moveToNextMatch();\r\n        if (result) {\r\n            controller.editor.pushUndoStop();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class PreviousMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousMatchFindAction,\r\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\r\n            alias: 'Find Previous',\r\n            precondition: undefined,\r\n            kbOpts: [{\r\n                    kbExpr: EditorContextKeys.focus,\r\n                    primary: 1024 /* Shift */ | 61 /* F3 */,\r\n                    mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KEY_G */, secondary: [1024 /* Shift */ | 61 /* F3 */] },\r\n                    weight: 100 /* EditorContrib */\r\n                }, {\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                    primary: 1024 /* Shift */ | 3 /* Enter */,\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport class SelectionMatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (!controller) {\r\n                return;\r\n            }\r\n            const seedSearchStringFromNonEmptySelection = editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection';\r\n            let selectionSearchString = null;\r\n            if (editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never') {\r\n                selectionSearchString = getSelectionSearchString(editor, 'single', seedSearchStringFromNonEmptySelection);\r\n            }\r\n            if (selectionSearchString) {\r\n                controller.setSearchString(selectionSearchString);\r\n            }\r\n            if (!this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\r\n                    seedSearchStringFromNonEmptySelection: seedSearchStringFromNonEmptySelection,\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(34 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextSelectionMatchFindAction,\r\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\r\n            alias: 'Find Next Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToNextMatch();\r\n    }\r\n}\r\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\r\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\r\n            alias: 'Find Previous Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\r\n    id: FIND_IDS.StartFindReplaceAction,\r\n    label: nls.localize('startReplace', \"Replace\"),\r\n    alias: 'Replace',\r\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\r\n    kbOpts: {\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 38 /* KEY_H */,\r\n        mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KEY_F */ },\r\n        weight: 100 /* EditorContrib */\r\n    },\r\n    menuOpts: {\r\n        menuId: MenuId.MenubarEditMenu,\r\n        group: '3_find',\r\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\r\n        order: 2\r\n    }\r\n}));\r\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\r\n    if (!editor.hasModel() || editor.getOption(80 /* readOnly */)) {\r\n        return false;\r\n    }\r\n    const controller = CommonFindController.get(editor);\r\n    if (!controller) {\r\n        return false;\r\n    }\r\n    const currentSelection = editor.getSelection();\r\n    const findInputFocused = controller.isFindInputFocused();\r\n    // we only seed search string from selection when the current selection is single line and not empty,\r\n    // + the find input is not focused\r\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\r\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\r\n        && (editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never')\r\n        && !findInputFocused;\r\n    /*\r\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\r\n\r\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\r\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\r\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\r\n    */\r\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\r\n        2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\r\n    return controller.start({\r\n        forceRevealReplace: true,\r\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\r\n        seedSearchStringFromNonEmptySelection: editor.getOption(34 /* find */).seedSearchStringFromSelection === 'selection',\r\n        seedSearchStringFromGlobalClipboard: editor.getOption(34 /* find */).seedSearchStringFromSelection !== 'never',\r\n        shouldFocus: shouldFocus,\r\n        shouldAnimate: true,\r\n        updateSearchScope: false,\r\n        loop: editor.getOption(34 /* find */).loop\r\n    });\r\n});\r\nregisterEditorContribution(CommonFindController.ID, FindController);\r\nregisterEditorAction(StartFindWithSelectionAction);\r\nregisterEditorAction(NextMatchFindAction);\r\nregisterEditorAction(PreviousMatchFindAction);\r\nregisterEditorAction(NextSelectionMatchFindAction);\r\nregisterEditorAction(PreviousSelectionMatchFindAction);\r\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.CloseFindWidgetCommand,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.closeFindWidget(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleCaseSensitive(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleCaseSensitiveKeybinding.primary,\r\n        mac: ToggleCaseSensitiveKeybinding.mac,\r\n        win: ToggleCaseSensitiveKeybinding.win,\r\n        linux: ToggleCaseSensitiveKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleWholeWordCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleWholeWords(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleWholeWordKeybinding.primary,\r\n        mac: ToggleWholeWordKeybinding.mac,\r\n        win: ToggleWholeWordKeybinding.win,\r\n        linux: ToggleWholeWordKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleRegexCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleRegex(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleRegexKeybinding.primary,\r\n        mac: ToggleRegexKeybinding.mac,\r\n        win: ToggleRegexKeybinding.win,\r\n        linux: ToggleRegexKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleSearchScopeCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleSearchScope(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleSearchScopeKeybinding.primary,\r\n        mac: ToggleSearchScopeKeybinding.mac,\r\n        win: ToggleSearchScopeKeybinding.win,\r\n        linux: ToggleSearchScopeKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.TogglePreserveCaseCommand,\r\n    precondition: undefined,\r\n    handler: x => x.togglePreserveCase(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: TogglePreserveCaseKeybinding.primary,\r\n        mac: TogglePreserveCaseKeybinding.mac,\r\n        win: TogglePreserveCaseKeybinding.win,\r\n        linux: TogglePreserveCaseKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* KEY_1 */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: undefined,\r\n        mac: {\r\n            primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n        }\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.SelectAllMatchesAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.selectAllMatches(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport const MAX_FOLDING_REGIONS = 0xFFFF;\r\nexport const MAX_LINE_NUMBER = 0xFFFFFF;\r\nconst MASK_INDENT = 0xFF000000;\r\nexport class FoldingRegions {\r\n    constructor(startIndexes, endIndexes, types) {\r\n        if (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\r\n            throw new Error('invalid startIndexes or endIndexes size');\r\n        }\r\n        this._startIndexes = startIndexes;\r\n        this._endIndexes = endIndexes;\r\n        this._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));\r\n        this._types = types;\r\n        this._parentsComputed = false;\r\n    }\r\n    ensureParentIndices() {\r\n        if (!this._parentsComputed) {\r\n            this._parentsComputed = true;\r\n            let parentIndexes = [];\r\n            let isInsideLast = (startLineNumber, endLineNumber) => {\r\n                let index = parentIndexes[parentIndexes.length - 1];\r\n                return this.getStartLineNumber(index) <= startLineNumber && this.getEndLineNumber(index) >= endLineNumber;\r\n            };\r\n            for (let i = 0, len = this._startIndexes.length; i < len; i++) {\r\n                let startLineNumber = this._startIndexes[i];\r\n                let endLineNumber = this._endIndexes[i];\r\n                if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n                    throw new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\r\n                }\r\n                while (parentIndexes.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\r\n                    parentIndexes.pop();\r\n                }\r\n                let parentIndex = parentIndexes.length > 0 ? parentIndexes[parentIndexes.length - 1] : -1;\r\n                parentIndexes.push(i);\r\n                this._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\r\n                this._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\r\n            }\r\n        }\r\n    }\r\n    get length() {\r\n        return this._startIndexes.length;\r\n    }\r\n    getStartLineNumber(index) {\r\n        return this._startIndexes[index] & MAX_LINE_NUMBER;\r\n    }\r\n    getEndLineNumber(index) {\r\n        return this._endIndexes[index] & MAX_LINE_NUMBER;\r\n    }\r\n    getType(index) {\r\n        return this._types ? this._types[index] : undefined;\r\n    }\r\n    hasTypes() {\r\n        return !!this._types;\r\n    }\r\n    isCollapsed(index) {\r\n        let arrayIndex = (index / 32) | 0;\r\n        let bit = index % 32;\r\n        return (this._collapseStates[arrayIndex] & (1 << bit)) !== 0;\r\n    }\r\n    setCollapsed(index, newState) {\r\n        let arrayIndex = (index / 32) | 0;\r\n        let bit = index % 32;\r\n        let value = this._collapseStates[arrayIndex];\r\n        if (newState) {\r\n            this._collapseStates[arrayIndex] = value | (1 << bit);\r\n        }\r\n        else {\r\n            this._collapseStates[arrayIndex] = value & ~(1 << bit);\r\n        }\r\n    }\r\n    setCollapsedAllOfType(type, newState) {\r\n        let hasChanged = false;\r\n        if (this._types) {\r\n            for (let i = 0; i < this._types.length; i++) {\r\n                if (this._types[i] === type) {\r\n                    this.setCollapsed(i, newState);\r\n                    hasChanged = true;\r\n                }\r\n            }\r\n        }\r\n        return hasChanged;\r\n    }\r\n    toRegion(index) {\r\n        return new FoldingRegion(this, index);\r\n    }\r\n    getParentIndex(index) {\r\n        this.ensureParentIndices();\r\n        let parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\r\n        if (parent === MAX_FOLDING_REGIONS) {\r\n            return -1;\r\n        }\r\n        return parent;\r\n    }\r\n    contains(index, line) {\r\n        return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\r\n    }\r\n    findIndex(line) {\r\n        let low = 0, high = this._startIndexes.length;\r\n        if (high === 0) {\r\n            return -1; // no children\r\n        }\r\n        while (low < high) {\r\n            let mid = Math.floor((low + high) / 2);\r\n            if (line < this.getStartLineNumber(mid)) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        return low - 1;\r\n    }\r\n    findRange(line) {\r\n        let index = this.findIndex(line);\r\n        if (index >= 0) {\r\n            let endLineNumber = this.getEndLineNumber(index);\r\n            if (endLineNumber >= line) {\r\n                return index;\r\n            }\r\n            index = this.getParentIndex(index);\r\n            while (index !== -1) {\r\n                if (this.contains(index, line)) {\r\n                    return index;\r\n                }\r\n                index = this.getParentIndex(index);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    toString() {\r\n        let res = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            res[i] = `[${this.isCollapsed(i) ? '+' : '-'}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;\r\n        }\r\n        return res.join(', ');\r\n    }\r\n}\r\nexport class FoldingRegion {\r\n    constructor(ranges, index) {\r\n        this.ranges = ranges;\r\n        this.index = index;\r\n    }\r\n    get startLineNumber() {\r\n        return this.ranges.getStartLineNumber(this.index);\r\n    }\r\n    get endLineNumber() {\r\n        return this.ranges.getEndLineNumber(this.index);\r\n    }\r\n    get regionIndex() {\r\n        return this.index;\r\n    }\r\n    get parentIndex() {\r\n        return this.ranges.getParentIndex(this.index);\r\n    }\r\n    get isCollapsed() {\r\n        return this.ranges.isCollapsed(this.index);\r\n    }\r\n    containedBy(range) {\r\n        return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\r\n    }\r\n    containsLine(lineNumber) {\r\n        return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { FoldingRegions } from './foldingRanges.js';\r\nexport class FoldingModel {\r\n    constructor(textModel, decorationProvider) {\r\n        this._updateEventEmitter = new Emitter();\r\n        this.onDidChange = this._updateEventEmitter.event;\r\n        this._textModel = textModel;\r\n        this._decorationProvider = decorationProvider;\r\n        this._regions = new FoldingRegions(new Uint32Array(0), new Uint32Array(0));\r\n        this._editorDecorationIds = [];\r\n        this._isInitialized = false;\r\n    }\r\n    get regions() { return this._regions; }\r\n    get textModel() { return this._textModel; }\r\n    get isInitialized() { return this._isInitialized; }\r\n    toggleCollapseState(toggledRegions) {\r\n        if (!toggledRegions.length) {\r\n            return;\r\n        }\r\n        toggledRegions = toggledRegions.sort((r1, r2) => r1.regionIndex - r2.regionIndex);\r\n        const processed = {};\r\n        this._decorationProvider.changeDecorations(accessor => {\r\n            let k = 0; // index from [0 ... this.regions.length]\r\n            let dirtyRegionEndLine = -1; // end of the range where decorations need to be updated\r\n            let lastHiddenLine = -1; // the end of the last hidden lines\r\n            const updateDecorationsUntil = (index) => {\r\n                while (k < index) {\r\n                    const endLineNumber = this._regions.getEndLineNumber(k);\r\n                    const isCollapsed = this._regions.isCollapsed(k);\r\n                    if (endLineNumber <= dirtyRegionEndLine) {\r\n                        accessor.changeDecorationOptions(this._editorDecorationIds[k], this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine));\r\n                    }\r\n                    if (isCollapsed && endLineNumber > lastHiddenLine) {\r\n                        lastHiddenLine = endLineNumber;\r\n                    }\r\n                    k++;\r\n                }\r\n            };\r\n            for (let region of toggledRegions) {\r\n                let index = region.regionIndex;\r\n                let editorDecorationId = this._editorDecorationIds[index];\r\n                if (editorDecorationId && !processed[editorDecorationId]) {\r\n                    processed[editorDecorationId] = true;\r\n                    updateDecorationsUntil(index); // update all decorations up to current index using the old dirtyRegionEndLine\r\n                    let newCollapseState = !this._regions.isCollapsed(index);\r\n                    this._regions.setCollapsed(index, newCollapseState);\r\n                    dirtyRegionEndLine = Math.max(dirtyRegionEndLine, this._regions.getEndLineNumber(index));\r\n                }\r\n            }\r\n            updateDecorationsUntil(this._regions.length);\r\n        });\r\n        this._updateEventEmitter.fire({ model: this, collapseStateChanged: toggledRegions });\r\n    }\r\n    update(newRegions, blockedLineNumers = []) {\r\n        let newEditorDecorations = [];\r\n        let isBlocked = (startLineNumber, endLineNumber) => {\r\n            for (let blockedLineNumber of blockedLineNumers) {\r\n                if (startLineNumber < blockedLineNumber && blockedLineNumber <= endLineNumber) { // first line is visible\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        let lastHiddenLine = -1;\r\n        let initRange = (index, isCollapsed) => {\r\n            const startLineNumber = newRegions.getStartLineNumber(index);\r\n            const endLineNumber = newRegions.getEndLineNumber(index);\r\n            if (!isCollapsed) {\r\n                isCollapsed = newRegions.isCollapsed(index);\r\n            }\r\n            if (isCollapsed && isBlocked(startLineNumber, endLineNumber)) {\r\n                isCollapsed = false;\r\n            }\r\n            newRegions.setCollapsed(index, isCollapsed);\r\n            const maxColumn = this._textModel.getLineMaxColumn(startLineNumber);\r\n            const decorationRange = {\r\n                startLineNumber: startLineNumber,\r\n                startColumn: Math.max(maxColumn - 1, 1),\r\n                endLineNumber: startLineNumber,\r\n                endColumn: maxColumn\r\n            };\r\n            newEditorDecorations.push({ range: decorationRange, options: this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine) });\r\n            if (isCollapsed && endLineNumber > lastHiddenLine) {\r\n                lastHiddenLine = endLineNumber;\r\n            }\r\n        };\r\n        let i = 0;\r\n        let nextCollapsed = () => {\r\n            while (i < this._regions.length) {\r\n                let isCollapsed = this._regions.isCollapsed(i);\r\n                i++;\r\n                if (isCollapsed) {\r\n                    return i - 1;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n        let k = 0;\r\n        let collapsedIndex = nextCollapsed();\r\n        while (collapsedIndex !== -1 && k < newRegions.length) {\r\n            // get the latest range\r\n            let decRange = this._textModel.getDecorationRange(this._editorDecorationIds[collapsedIndex]);\r\n            if (decRange) {\r\n                let collapsedStartLineNumber = decRange.startLineNumber;\r\n                if (decRange.startColumn === Math.max(decRange.endColumn - 1, 1) && this._textModel.getLineMaxColumn(collapsedStartLineNumber) === decRange.endColumn) { // test that the decoration is still covering the full line else it got deleted\r\n                    while (k < newRegions.length) {\r\n                        let startLineNumber = newRegions.getStartLineNumber(k);\r\n                        if (collapsedStartLineNumber >= startLineNumber) {\r\n                            initRange(k, collapsedStartLineNumber === startLineNumber);\r\n                            k++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            collapsedIndex = nextCollapsed();\r\n        }\r\n        while (k < newRegions.length) {\r\n            initRange(k, false);\r\n            k++;\r\n        }\r\n        this._editorDecorationIds = this._decorationProvider.deltaDecorations(this._editorDecorationIds, newEditorDecorations);\r\n        this._regions = newRegions;\r\n        this._isInitialized = true;\r\n        this._updateEventEmitter.fire({ model: this });\r\n    }\r\n    /**\r\n     * Collapse state memento, for persistence only\r\n     */\r\n    getMemento() {\r\n        let collapsedRanges = [];\r\n        for (let i = 0; i < this._regions.length; i++) {\r\n            if (this._regions.isCollapsed(i)) {\r\n                let range = this._textModel.getDecorationRange(this._editorDecorationIds[i]);\r\n                if (range) {\r\n                    let startLineNumber = range.startLineNumber;\r\n                    let endLineNumber = range.endLineNumber + this._regions.getEndLineNumber(i) - this._regions.getStartLineNumber(i);\r\n                    collapsedRanges.push({ startLineNumber, endLineNumber });\r\n                }\r\n            }\r\n        }\r\n        if (collapsedRanges.length > 0) {\r\n            return collapsedRanges;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Apply persisted state, for persistence only\r\n     */\r\n    applyMemento(state) {\r\n        if (!Array.isArray(state)) {\r\n            return;\r\n        }\r\n        let toToogle = [];\r\n        for (let range of state) {\r\n            let region = this.getRegionAtLine(range.startLineNumber);\r\n            if (region && !region.isCollapsed) {\r\n                toToogle.push(region);\r\n            }\r\n        }\r\n        this.toggleCollapseState(toToogle);\r\n    }\r\n    dispose() {\r\n        this._decorationProvider.deltaDecorations(this._editorDecorationIds, []);\r\n    }\r\n    getAllRegionsAtLine(lineNumber, filter) {\r\n        let result = [];\r\n        if (this._regions) {\r\n            let index = this._regions.findRange(lineNumber);\r\n            let level = 1;\r\n            while (index >= 0) {\r\n                let current = this._regions.toRegion(index);\r\n                if (!filter || filter(current, level)) {\r\n                    result.push(current);\r\n                }\r\n                level++;\r\n                index = current.parentIndex;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getRegionAtLine(lineNumber) {\r\n        if (this._regions) {\r\n            let index = this._regions.findRange(lineNumber);\r\n            if (index >= 0) {\r\n                return this._regions.toRegion(index);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getRegionsInside(region, filter) {\r\n        let result = [];\r\n        let index = region ? region.regionIndex + 1 : 0;\r\n        let endLineNumber = region ? region.endLineNumber : Number.MAX_VALUE;\r\n        if (filter && filter.length === 2) {\r\n            const levelStack = [];\r\n            for (let i = index, len = this._regions.length; i < len; i++) {\r\n                let current = this._regions.toRegion(i);\r\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\r\n                    while (levelStack.length > 0 && !current.containedBy(levelStack[levelStack.length - 1])) {\r\n                        levelStack.pop();\r\n                    }\r\n                    levelStack.push(current);\r\n                    if (filter(current, levelStack.length)) {\r\n                        result.push(current);\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = index, len = this._regions.length; i < len; i++) {\r\n                let current = this._regions.toRegion(i);\r\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\r\n                    if (!filter || filter(current)) {\r\n                        result.push(current);\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\r\n */\r\nexport function toggleCollapseState(foldingModel, levels, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let region = foldingModel.getRegionAtLine(lineNumber);\r\n        if (region) {\r\n            const doCollapse = !region.isCollapsed;\r\n            toToggle.push(region);\r\n            if (levels > 1) {\r\n                let regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n                toToggle.push(...regionsInside);\r\n            }\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations including all children.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\r\n */\r\nexport function setCollapseStateLevelsDown(foldingModel, doCollapse, levels = Number.MAX_VALUE, lineNumbers) {\r\n    let toToggle = [];\r\n    if (lineNumbers && lineNumbers.length > 0) {\r\n        for (let lineNumber of lineNumbers) {\r\n            let region = foldingModel.getRegionAtLine(lineNumber);\r\n            if (region) {\r\n                if (region.isCollapsed !== doCollapse) {\r\n                    toToggle.push(region);\r\n                }\r\n                if (levels > 1) {\r\n                    let regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n                    toToggle.push(...regionsInside);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let regionsInside = foldingModel.getRegionsInside(null, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n        toToggle.push(...regionsInside);\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations including all parents.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand.\r\n */\r\nexport function setCollapseStateLevelsUp(foldingModel, doCollapse, levels, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region, level) => region.isCollapsed !== doCollapse && level <= levels);\r\n        toToggle.push(...regions);\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand a region at the given locations. If the inner most region is already collapsed/expanded, uses the first parent instead.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param lineNumbers the location of the regions to collapse or expand.\r\n */\r\nexport function setCollapseStateUp(foldingModel, doCollapse, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region) => region.isCollapsed !== doCollapse);\r\n        if (regions.length > 0) {\r\n            toToggle.push(regions[0]);\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds or unfolds all regions that have a given level, except if they contain one of the blocked lines.\r\n * @param foldLevel level. Level == 1 is the top level\r\n * @param doCollapse Whether to collapse or expand\r\n*/\r\nexport function setCollapseStateAtLevel(foldingModel, foldLevel, doCollapse, blockedLineNumbers) {\r\n    let filter = (region, level) => level === foldLevel && region.isCollapsed !== doCollapse && !blockedLineNumbers.some(line => region.containsLine(line));\r\n    let toToggle = foldingModel.getRegionsInside(null, filter);\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds or unfolds all regions, except if they contain or are contained by a region of one of the blocked lines.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param blockedLineNumbers the location of regions to not collapse or expand\r\n */\r\nexport function setCollapseStateForRest(foldingModel, doCollapse, blockedLineNumbers) {\r\n    let filteredRegions = [];\r\n    for (let lineNumber of blockedLineNumbers) {\r\n        filteredRegions.push(foldingModel.getAllRegionsAtLine(lineNumber, undefined)[0]);\r\n    }\r\n    let filter = (region) => filteredRegions.every((filteredRegion) => !filteredRegion.containedBy(region) && !region.containedBy(filteredRegion)) && region.isCollapsed !== doCollapse;\r\n    let toToggle = foldingModel.getRegionsInside(null, filter);\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds all regions for which the lines start with a given regex\r\n * @param foldingModel the folding model\r\n */\r\nexport function setCollapseStateForMatchingLines(foldingModel, regExp, doCollapse) {\r\n    let editorModel = foldingModel.textModel;\r\n    let regions = foldingModel.regions;\r\n    let toToggle = [];\r\n    for (let i = regions.length - 1; i >= 0; i--) {\r\n        if (doCollapse !== regions.isCollapsed(i)) {\r\n            let startLineNumber = regions.getStartLineNumber(i);\r\n            if (regExp.test(editorModel.getLineContent(startLineNumber))) {\r\n                toToggle.push(regions.toRegion(i));\r\n            }\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds all regions of the given type\r\n * @param foldingModel the folding model\r\n */\r\nexport function setCollapseStateForType(foldingModel, type, doCollapse) {\r\n    let regions = foldingModel.regions;\r\n    let toToggle = [];\r\n    for (let i = regions.length - 1; i >= 0; i--) {\r\n        if (doCollapse !== regions.isCollapsed(i) && type === regions.getType(i)) {\r\n            toToggle.push(regions.toRegion(i));\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Get line to go to for parent fold of current line\r\n * @param lineNumber the current line number\r\n * @param foldingModel the folding model\r\n *\r\n * @return Parent fold start line\r\n */\r\nexport function getParentFoldLine(lineNumber, foldingModel) {\r\n    let startLineNumber = null;\r\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\r\n    if (foldingRegion !== null) {\r\n        startLineNumber = foldingRegion.startLineNumber;\r\n        // If current line is not the start of the current fold, go to top line of current fold. If not, go to parent fold\r\n        if (lineNumber === startLineNumber) {\r\n            let parentFoldingIdx = foldingRegion.parentIndex;\r\n            if (parentFoldingIdx !== -1) {\r\n                startLineNumber = foldingModel.regions.getStartLineNumber(parentFoldingIdx);\r\n            }\r\n            else {\r\n                startLineNumber = null;\r\n            }\r\n        }\r\n    }\r\n    return startLineNumber;\r\n}\r\n/**\r\n * Get line to go to for previous fold at the same level of current line\r\n * @param lineNumber the current line number\r\n * @param foldingModel the folding model\r\n *\r\n * @return Previous fold start line\r\n */\r\nexport function getPreviousFoldLine(lineNumber, foldingModel) {\r\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\r\n    if (foldingRegion !== null) {\r\n        // If current line is not the start of the current fold, go to top line of current fold. If not, go to previous fold.\r\n        if (lineNumber !== foldingRegion.startLineNumber) {\r\n            return foldingRegion.startLineNumber;\r\n        }\r\n        else {\r\n            // Find min line number to stay within parent.\r\n            let expectedParentIndex = foldingRegion.parentIndex;\r\n            let minLineNumber = 0;\r\n            if (expectedParentIndex !== -1) {\r\n                minLineNumber = foldingModel.regions.getStartLineNumber(foldingRegion.parentIndex);\r\n            }\r\n            // Find fold at same level.\r\n            while (foldingRegion !== null) {\r\n                if (foldingRegion.regionIndex > 0) {\r\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);\r\n                    // Keep at same level.\r\n                    if (foldingRegion.startLineNumber <= minLineNumber) {\r\n                        return null;\r\n                    }\r\n                    else if (foldingRegion.parentIndex === expectedParentIndex) {\r\n                        return foldingRegion.startLineNumber;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // Go to last fold that's before the current line.\r\n        if (foldingModel.regions.length > 0) {\r\n            foldingRegion = foldingModel.regions.toRegion(foldingModel.regions.length - 1);\r\n            while (foldingRegion !== null) {\r\n                // Found non-parent fold before current line.\r\n                if (foldingRegion.parentIndex === -1 && foldingRegion.startLineNumber < lineNumber) {\r\n                    return foldingRegion.startLineNumber;\r\n                }\r\n                if (foldingRegion.regionIndex > 0) {\r\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);\r\n                }\r\n                else {\r\n                    foldingRegion = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get line to go to next fold at the same level of current line\r\n * @param lineNumber the current line number\r\n * @param foldingModel the folding model\r\n *\r\n * @return Next fold start line\r\n */\r\nexport function getNextFoldLine(lineNumber, foldingModel) {\r\n    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);\r\n    if (foldingRegion !== null) {\r\n        // Find max line number to stay within parent.\r\n        let expectedParentIndex = foldingRegion.parentIndex;\r\n        let maxLineNumber = 0;\r\n        if (expectedParentIndex !== -1) {\r\n            maxLineNumber = foldingModel.regions.getEndLineNumber(foldingRegion.parentIndex);\r\n        }\r\n        else if (foldingModel.regions.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            maxLineNumber = foldingModel.regions.getEndLineNumber(foldingModel.regions.length - 1);\r\n        }\r\n        // Find fold at same level.\r\n        while (foldingRegion !== null) {\r\n            if (foldingRegion.regionIndex < foldingModel.regions.length) {\r\n                foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);\r\n                // Keep at same level.\r\n                if (foldingRegion.startLineNumber >= maxLineNumber) {\r\n                    return null;\r\n                }\r\n                else if (foldingRegion.parentIndex === expectedParentIndex) {\r\n                    return foldingRegion.startLineNumber;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // Go to first fold that's after the current line.\r\n        if (foldingModel.regions.length > 0) {\r\n            foldingRegion = foldingModel.regions.toRegion(0);\r\n            while (foldingRegion !== null) {\r\n                // Found non-parent fold after current line.\r\n                if (foldingRegion.parentIndex === -1 && foldingRegion.startLineNumber > lineNumber) {\r\n                    return foldingRegion.startLineNumber;\r\n                }\r\n                if (foldingRegion.regionIndex < foldingModel.regions.length) {\r\n                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);\r\n                }\r\n                else {\r\n                    foldingRegion = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nimport { ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nexport const foldingExpandedIcon = registerIcon('folding-expanded', Codicon.chevronDown, localize('foldingExpandedIcon', 'Icon for expanded ranges in the editor glyph margin.'));\r\nexport const foldingCollapsedIcon = registerIcon('folding-collapsed', Codicon.chevronRight, localize('foldingCollapsedIcon', 'Icon for collapsed ranges in the editor glyph margin.'));\r\nexport class FoldingDecorationProvider {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this.autoHideFoldingControls = true;\r\n        this.showFoldingHighlights = true;\r\n    }\r\n    getDecorationOption(isCollapsed, isHidden) {\r\n        if (isHidden) {\r\n            return FoldingDecorationProvider.HIDDEN_RANGE_DECORATION;\r\n        }\r\n        if (isCollapsed) {\r\n            return this.showFoldingHighlights ? FoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION : FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION;\r\n        }\r\n        else if (this.autoHideFoldingControls) {\r\n            return FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;\r\n        }\r\n        else {\r\n            return FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION;\r\n        }\r\n    }\r\n    deltaDecorations(oldDecorations, newDecorations) {\r\n        return this.editor.deltaDecorations(oldDecorations, newDecorations);\r\n    }\r\n    changeDecorations(callback) {\r\n        return this.editor.changeDecorations(callback);\r\n    }\r\n}\r\nFoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-collapsed-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    afterContentClassName: 'inline-folded',\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\r\n});\r\nFoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-collapsed-highlighted-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    afterContentClassName: 'inline-folded',\r\n    className: 'folded-background',\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\r\n});\r\nFoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-expanded-auto-hide-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingExpandedIcon)\r\n});\r\nFoldingDecorationProvider.EXPANDED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-expanded-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: 'alwaysShowFoldIcons ' + ThemeIcon.asClassName(foldingExpandedIcon)\r\n});\r\nFoldingDecorationProvider.HIDDEN_RANGE_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-hidden-range-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { findFirstInSorted } from '../../../base/common/arrays.js';\r\nexport class HiddenRangeModel {\r\n    constructor(model) {\r\n        this._updateEventEmitter = new Emitter();\r\n        this._foldingModel = model;\r\n        this._foldingModelListener = model.onDidChange(_ => this.updateHiddenRanges());\r\n        this._hiddenRanges = [];\r\n        if (model.regions.length) {\r\n            this.updateHiddenRanges();\r\n        }\r\n    }\r\n    get onDidChange() { return this._updateEventEmitter.event; }\r\n    get hiddenRanges() { return this._hiddenRanges; }\r\n    updateHiddenRanges() {\r\n        let updateHiddenAreas = false;\r\n        let newHiddenAreas = [];\r\n        let i = 0; // index into hidden\r\n        let k = 0;\r\n        let lastCollapsedStart = Number.MAX_VALUE;\r\n        let lastCollapsedEnd = -1;\r\n        let ranges = this._foldingModel.regions;\r\n        for (; i < ranges.length; i++) {\r\n            if (!ranges.isCollapsed(i)) {\r\n                continue;\r\n            }\r\n            let startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\r\n            let endLineNumber = ranges.getEndLineNumber(i);\r\n            if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\r\n                // ignore ranges contained in collapsed regions\r\n                continue;\r\n            }\r\n            if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\r\n                // reuse the old ranges\r\n                newHiddenAreas.push(this._hiddenRanges[k]);\r\n                k++;\r\n            }\r\n            else {\r\n                updateHiddenAreas = true;\r\n                newHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\r\n            }\r\n            lastCollapsedStart = startLineNumber;\r\n            lastCollapsedEnd = endLineNumber;\r\n        }\r\n        if (updateHiddenAreas || k < this._hiddenRanges.length) {\r\n            this.applyHiddenRanges(newHiddenAreas);\r\n        }\r\n    }\r\n    applyMemento(state) {\r\n        if (!Array.isArray(state) || state.length === 0) {\r\n            return false;\r\n        }\r\n        let hiddenRanges = [];\r\n        for (let r of state) {\r\n            if (!r.startLineNumber || !r.endLineNumber) {\r\n                return false;\r\n            }\r\n            hiddenRanges.push(new Range(r.startLineNumber + 1, 1, r.endLineNumber, 1));\r\n        }\r\n        this.applyHiddenRanges(hiddenRanges);\r\n        return true;\r\n    }\r\n    /**\r\n     * Collapse state memento, for persistence only, only used if folding model is not yet initialized\r\n     */\r\n    getMemento() {\r\n        return this._hiddenRanges.map(r => ({ startLineNumber: r.startLineNumber - 1, endLineNumber: r.endLineNumber }));\r\n    }\r\n    applyHiddenRanges(newHiddenAreas) {\r\n        this._hiddenRanges = newHiddenAreas;\r\n        this._updateEventEmitter.fire(newHiddenAreas);\r\n    }\r\n    hasRanges() {\r\n        return this._hiddenRanges.length > 0;\r\n    }\r\n    isHidden(line) {\r\n        return findRange(this._hiddenRanges, line) !== null;\r\n    }\r\n    adjustSelections(selections) {\r\n        let hasChanges = false;\r\n        let editorModel = this._foldingModel.textModel;\r\n        let lastRange = null;\r\n        let adjustLine = (line) => {\r\n            if (!lastRange || !isInside(line, lastRange)) {\r\n                lastRange = findRange(this._hiddenRanges, line);\r\n            }\r\n            if (lastRange) {\r\n                return lastRange.startLineNumber - 1;\r\n            }\r\n            return null;\r\n        };\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            let adjustedStartLine = adjustLine(selection.startLineNumber);\r\n            if (adjustedStartLine) {\r\n                selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\r\n                hasChanges = true;\r\n            }\r\n            let adjustedEndLine = adjustLine(selection.endLineNumber);\r\n            if (adjustedEndLine) {\r\n                selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\r\n                hasChanges = true;\r\n            }\r\n            selections[i] = selection;\r\n        }\r\n        return hasChanges;\r\n    }\r\n    dispose() {\r\n        if (this.hiddenRanges.length > 0) {\r\n            this._hiddenRanges = [];\r\n            this._updateEventEmitter.fire(this._hiddenRanges);\r\n        }\r\n        if (this._foldingModelListener) {\r\n            this._foldingModelListener.dispose();\r\n            this._foldingModelListener = null;\r\n        }\r\n    }\r\n}\r\nfunction isInside(line, range) {\r\n    return line >= range.startLineNumber && line <= range.endLineNumber;\r\n}\r\nfunction findRange(ranges, line) {\r\n    let i = findFirstInSorted(ranges, r => line < r.startLineNumber) - 1;\r\n    if (i >= 0 && ranges[i].endLineNumber >= line) {\r\n        return ranges[i];\r\n    }\r\n    return null;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { FoldingRegions, MAX_LINE_NUMBER } from './foldingRanges.js';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nconst MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT = 5000;\r\nexport const ID_INDENT_PROVIDER = 'indent';\r\nexport class IndentRangeProvider {\r\n    constructor(editorModel) {\r\n        this.editorModel = editorModel;\r\n        this.id = ID_INDENT_PROVIDER;\r\n    }\r\n    dispose() {\r\n    }\r\n    compute(cancelationToken) {\r\n        let foldingRules = LanguageConfigurationRegistry.getFoldingRules(this.editorModel.getLanguageIdentifier().id);\r\n        let offSide = foldingRules && !!foldingRules.offSide;\r\n        let markers = foldingRules && foldingRules.markers;\r\n        return Promise.resolve(computeRanges(this.editorModel, offSide, markers));\r\n    }\r\n}\r\n// public only for testing\r\nexport class RangesCollector {\r\n    constructor(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._indentOccurrences = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    insertFirst(startLineNumber, endLineNumber, indent) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        let index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._length++;\r\n        if (indent < 1000) {\r\n            this._indentOccurrences[indent] = (this._indentOccurrences[indent] || 0) + 1;\r\n        }\r\n    }\r\n    toIndentRanges(model) {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            // reverse and create arrays of the exact length\r\n            let startIndexes = new Uint32Array(this._length);\r\n            let endIndexes = new Uint32Array(this._length);\r\n            for (let i = this._length - 1, k = 0; i >= 0; i--, k++) {\r\n                startIndexes[k] = this._startIndexes[i];\r\n                endIndexes[k] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes);\r\n        }\r\n        else {\r\n            let entries = 0;\r\n            let maxIndent = this._indentOccurrences.length;\r\n            for (let i = 0; i < this._indentOccurrences.length; i++) {\r\n                let n = this._indentOccurrences[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxIndent = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            const tabSize = model.getOptions().tabSize;\r\n            // reverse and create arrays of the exact length\r\n            let startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            for (let i = this._length - 1, k = 0; i >= 0; i--) {\r\n                let startIndex = this._startIndexes[i];\r\n                let lineContent = model.getLineContent(startIndex);\r\n                let indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n                if (indent < maxIndent || (indent === maxIndent && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = startIndex;\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes);\r\n        }\r\n    }\r\n}\r\nexport function computeRanges(model, offSide, markers, foldingRangesLimit = MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT) {\r\n    const tabSize = model.getOptions().tabSize;\r\n    let result = new RangesCollector(foldingRangesLimit);\r\n    let pattern = undefined;\r\n    if (markers) {\r\n        pattern = new RegExp(`(${markers.start.source})|(?:${markers.end.source})`);\r\n    }\r\n    let previousRegions = [];\r\n    let line = model.getLineCount() + 1;\r\n    previousRegions.push({ indent: -1, endAbove: line, line }); // sentinel, to make sure there's at least one entry\r\n    for (let line = model.getLineCount(); line > 0; line--) {\r\n        let lineContent = model.getLineContent(line);\r\n        let indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n        let previous = previousRegions[previousRegions.length - 1];\r\n        if (indent === -1) {\r\n            if (offSide) {\r\n                // for offSide languages, empty lines are associated to the previous block\r\n                // note: the next block is already written to the results, so this only\r\n                // impacts the end position of the block before\r\n                previous.endAbove = line;\r\n            }\r\n            continue; // only whitespace\r\n        }\r\n        let m;\r\n        if (pattern && (m = lineContent.match(pattern))) {\r\n            // folding pattern match\r\n            if (m[1]) { // start pattern match\r\n                // discard all regions until the folding pattern\r\n                let i = previousRegions.length - 1;\r\n                while (i > 0 && previousRegions[i].indent !== -2) {\r\n                    i--;\r\n                }\r\n                if (i > 0) {\r\n                    previousRegions.length = i + 1;\r\n                    previous = previousRegions[i];\r\n                    // new folding range from pattern, includes the end line\r\n                    result.insertFirst(line, previous.line, indent);\r\n                    previous.line = line;\r\n                    previous.indent = indent;\r\n                    previous.endAbove = line;\r\n                    continue;\r\n                }\r\n                else {\r\n                    // no end marker found, treat line as a regular line\r\n                }\r\n            }\r\n            else { // end pattern match\r\n                previousRegions.push({ indent: -2, endAbove: line, line });\r\n                continue;\r\n            }\r\n        }\r\n        if (previous.indent > indent) {\r\n            // discard all regions with larger indent\r\n            do {\r\n                previousRegions.pop();\r\n                previous = previousRegions[previousRegions.length - 1];\r\n            } while (previous.indent > indent);\r\n            // new folding range\r\n            let endLineNumber = previous.endAbove - 1;\r\n            if (endLineNumber - line >= 1) { // needs at east size 1\r\n                result.insertFirst(line, endLineNumber, indent);\r\n            }\r\n        }\r\n        if (previous.indent === indent) {\r\n            previous.endAbove = line;\r\n        }\r\n        else { // previous.indent < indent\r\n            // new region with a bigger indent\r\n            previousRegions.push({ indent, endAbove: line, line });\r\n        }\r\n    }\r\n    return result.toIndentRanges(model);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { MAX_LINE_NUMBER, FoldingRegions } from './foldingRanges.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nconst MAX_FOLDING_REGIONS = 5000;\r\nconst foldingContext = {};\r\nexport const ID_SYNTAX_PROVIDER = 'syntax';\r\nexport class SyntaxRangeProvider {\r\n    constructor(editorModel, providers, handleFoldingRangesChange, limit = MAX_FOLDING_REGIONS) {\r\n        this.editorModel = editorModel;\r\n        this.providers = providers;\r\n        this.limit = limit;\r\n        this.id = ID_SYNTAX_PROVIDER;\r\n        for (const provider of providers) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                if (!this.disposables) {\r\n                    this.disposables = new DisposableStore();\r\n                }\r\n                this.disposables.add(provider.onDidChange(handleFoldingRangesChange));\r\n            }\r\n        }\r\n    }\r\n    compute(cancellationToken) {\r\n        return collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(ranges => {\r\n            if (ranges) {\r\n                let res = sanitizeRanges(ranges, this.limit);\r\n                return res;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.disposables) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\nfunction collectSyntaxRanges(providers, model, cancellationToken) {\r\n    let rangeData = null;\r\n    let promises = providers.map((provider, i) => {\r\n        return Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(ranges => {\r\n            if (cancellationToken.isCancellationRequested) {\r\n                return;\r\n            }\r\n            if (Array.isArray(ranges)) {\r\n                if (!Array.isArray(rangeData)) {\r\n                    rangeData = [];\r\n                }\r\n                let nLines = model.getLineCount();\r\n                for (let r of ranges) {\r\n                    if (r.start > 0 && r.end > r.start && r.end <= nLines) {\r\n                        rangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\r\n                    }\r\n                }\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(_ => {\r\n        return rangeData;\r\n    });\r\n}\r\nexport class RangesCollector {\r\n    constructor(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._nestingLevels = [];\r\n        this._nestingLevelCounts = [];\r\n        this._types = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    add(startLineNumber, endLineNumber, type, nestingLevel) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        let index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._nestingLevels[index] = nestingLevel;\r\n        this._types[index] = type;\r\n        this._length++;\r\n        if (nestingLevel < 30) {\r\n            this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\r\n        }\r\n    }\r\n    toIndentRanges() {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            let startIndexes = new Uint32Array(this._length);\r\n            let endIndexes = new Uint32Array(this._length);\r\n            for (let i = 0; i < this._length; i++) {\r\n                startIndexes[i] = this._startIndexes[i];\r\n                endIndexes[i] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, this._types);\r\n        }\r\n        else {\r\n            let entries = 0;\r\n            let maxLevel = this._nestingLevelCounts.length;\r\n            for (let i = 0; i < this._nestingLevelCounts.length; i++) {\r\n                let n = this._nestingLevelCounts[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxLevel = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            let startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let types = [];\r\n            for (let i = 0, k = 0; i < this._length; i++) {\r\n                let level = this._nestingLevels[i];\r\n                if (level < maxLevel || (level === maxLevel && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = this._startIndexes[i];\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    types[k] = this._types[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, types);\r\n        }\r\n    }\r\n}\r\nexport function sanitizeRanges(rangeData, limit) {\r\n    let sorted = rangeData.sort((d1, d2) => {\r\n        let diff = d1.start - d2.start;\r\n        if (diff === 0) {\r\n            diff = d1.rank - d2.rank;\r\n        }\r\n        return diff;\r\n    });\r\n    let collector = new RangesCollector(limit);\r\n    let top = undefined;\r\n    let previous = [];\r\n    for (let entry of sorted) {\r\n        if (!top) {\r\n            top = entry;\r\n            collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n        }\r\n        else {\r\n            if (entry.start > top.start) {\r\n                if (entry.end <= top.end) {\r\n                    previous.push(top);\r\n                    top = entry;\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n                else {\r\n                    if (entry.start > top.end) {\r\n                        do {\r\n                            top = previous.pop();\r\n                        } while (top && entry.start > top.end);\r\n                        if (top) {\r\n                            previous.push(top);\r\n                        }\r\n                        top = entry;\r\n                    }\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return collector.toIndentRanges();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { sanitizeRanges } from './syntaxRangeProvider.js';\r\nexport const ID_INIT_PROVIDER = 'init';\r\nexport class InitializingRangeProvider {\r\n    constructor(editorModel, initialRanges, onTimeout, timeoutTime) {\r\n        this.editorModel = editorModel;\r\n        this.id = ID_INIT_PROVIDER;\r\n        if (initialRanges.length) {\r\n            let toDecorationRange = (range) => {\r\n                return {\r\n                    range: {\r\n                        startLineNumber: range.startLineNumber,\r\n                        startColumn: 0,\r\n                        endLineNumber: range.endLineNumber,\r\n                        endColumn: editorModel.getLineLength(range.endLineNumber)\r\n                    },\r\n                    options: {\r\n                        description: 'folding-initializing-range-provider',\r\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\r\n                    }\r\n                };\r\n            };\r\n            this.decorationIds = editorModel.deltaDecorations([], initialRanges.map(toDecorationRange));\r\n            this.timeout = setTimeout(onTimeout, timeoutTime);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.decorationIds) {\r\n            this.editorModel.deltaDecorations(this.decorationIds, []);\r\n            this.decorationIds = undefined;\r\n        }\r\n        if (typeof this.timeout === 'number') {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n    compute(cancelationToken) {\r\n        let foldingRangeData = [];\r\n        if (this.decorationIds) {\r\n            for (let id of this.decorationIds) {\r\n                let range = this.editorModel.getDecorationRange(id);\r\n                if (range) {\r\n                    foldingRangeData.push({ start: range.startLineNumber, end: range.endLineNumber, rank: 1 });\r\n                }\r\n            }\r\n        }\r\n        return Promise.resolve(sanitizeRanges(foldingRangeData, Number.MAX_VALUE));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './folding.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { RunOnceScheduler, Delayer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { FoldingModel, setCollapseStateAtLevel, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateForMatchingLines, setCollapseStateForType, setCollapseStateForRest, toggleCollapseState, setCollapseStateUp, getParentFoldLine as getParentFoldLine, getPreviousFoldLine, getNextFoldLine } from './foldingModel.js';\r\nimport { FoldingDecorationProvider, foldingCollapsedIcon, foldingExpandedIcon } from './foldingDecorations.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { HiddenRangeModel } from './hiddenRangeModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IndentRangeProvider } from './indentRangeProvider.js';\r\nimport { FoldingRangeProviderRegistry, FoldingRangeKind } from '../../common/modes.js';\r\nimport { SyntaxRangeProvider, ID_SYNTAX_PROVIDER } from './syntaxRangeProvider.js';\r\nimport { InitializingRangeProvider, ID_INIT_PROVIDER } from './intializingRangeProvider.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorSelectionBackground, transparent, iconForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nconst CONTEXT_FOLDING_ENABLED = new RawContextKey('foldingEnabled', false);\r\nlet FoldingController = class FoldingController extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this.contextKeyService = contextKeyService;\r\n        this.localToDispose = this._register(new DisposableStore());\r\n        this.editor = editor;\r\n        const options = this.editor.getOptions();\r\n        this._isEnabled = options.get(36 /* folding */);\r\n        this._useFoldingProviders = options.get(37 /* foldingStrategy */) !== 'indentation';\r\n        this._unfoldOnClickAfterEndOfLine = options.get(40 /* unfoldOnClickAfterEndOfLine */);\r\n        this._restoringViewState = false;\r\n        this._currentModelHasFoldedImports = false;\r\n        this._foldingImportsByDefault = options.get(39 /* foldingImportsByDefault */);\r\n        this.foldingModel = null;\r\n        this.hiddenRangeModel = null;\r\n        this.rangeProvider = null;\r\n        this.foldingRegionPromise = null;\r\n        this.foldingStateMemento = null;\r\n        this.foldingModelPromise = null;\r\n        this.updateScheduler = null;\r\n        this.cursorChangedScheduler = null;\r\n        this.mouseDownInfo = null;\r\n        this.foldingDecorationProvider = new FoldingDecorationProvider(editor);\r\n        this.foldingDecorationProvider.autoHideFoldingControls = options.get(99 /* showFoldingControls */) === 'mouseover';\r\n        this.foldingDecorationProvider.showFoldingHighlights = options.get(38 /* foldingHighlight */);\r\n        this.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(this.contextKeyService);\r\n        this.foldingEnabled.set(this._isEnabled);\r\n        this._register(this.editor.onDidChangeModel(() => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(36 /* folding */)) {\r\n                this._isEnabled = this.editor.getOptions().get(36 /* folding */);\r\n                this.foldingEnabled.set(this._isEnabled);\r\n                this.onModelChanged();\r\n            }\r\n            if (e.hasChanged(99 /* showFoldingControls */) || e.hasChanged(38 /* foldingHighlight */)) {\r\n                const options = this.editor.getOptions();\r\n                this.foldingDecorationProvider.autoHideFoldingControls = options.get(99 /* showFoldingControls */) === 'mouseover';\r\n                this.foldingDecorationProvider.showFoldingHighlights = options.get(38 /* foldingHighlight */);\r\n                this.onModelContentChanged();\r\n            }\r\n            if (e.hasChanged(37 /* foldingStrategy */)) {\r\n                this._useFoldingProviders = this.editor.getOptions().get(37 /* foldingStrategy */) !== 'indentation';\r\n                this.onFoldingStrategyChanged();\r\n            }\r\n            if (e.hasChanged(40 /* unfoldOnClickAfterEndOfLine */)) {\r\n                this._unfoldOnClickAfterEndOfLine = this.editor.getOptions().get(40 /* unfoldOnClickAfterEndOfLine */);\r\n            }\r\n            if (e.hasChanged(39 /* foldingImportsByDefault */)) {\r\n                this._foldingImportsByDefault = this.editor.getOptions().get(39 /* foldingImportsByDefault */);\r\n            }\r\n        }));\r\n        this.onModelChanged();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(FoldingController.ID);\r\n    }\r\n    /**\r\n     * Store view state.\r\n     */\r\n    saveViewState() {\r\n        let model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\r\n            return {};\r\n        }\r\n        if (this.foldingModel) { // disposed ?\r\n            let collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel.getMemento();\r\n            let provider = this.rangeProvider ? this.rangeProvider.id : undefined;\r\n            return { collapsedRegions, lineCount: model.getLineCount(), provider, foldedImports: this._currentModelHasFoldedImports };\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Restore view state.\r\n     */\r\n    restoreViewState(state) {\r\n        let model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\r\n            return;\r\n        }\r\n        if (!state || state.lineCount !== model.getLineCount()) {\r\n            return;\r\n        }\r\n        this._currentModelHasFoldedImports = !!state.foldedImports;\r\n        if (!state.collapsedRegions) {\r\n            return;\r\n        }\r\n        if (state.provider === ID_SYNTAX_PROVIDER || state.provider === ID_INIT_PROVIDER) {\r\n            this.foldingStateMemento = state;\r\n        }\r\n        const collapsedRegions = state.collapsedRegions;\r\n        // set the hidden ranges right away, before waiting for the folding model.\r\n        if (this.hiddenRangeModel.applyMemento(collapsedRegions)) {\r\n            const foldingModel = this.getFoldingModel();\r\n            if (foldingModel) {\r\n                foldingModel.then(foldingModel => {\r\n                    if (foldingModel) {\r\n                        this._restoringViewState = true;\r\n                        try {\r\n                            foldingModel.applyMemento(collapsedRegions);\r\n                        }\r\n                        finally {\r\n                            this._restoringViewState = false;\r\n                        }\r\n                    }\r\n                }).then(undefined, onUnexpectedError);\r\n            }\r\n        }\r\n    }\r\n    onModelChanged() {\r\n        this.localToDispose.clear();\r\n        let model = this.editor.getModel();\r\n        if (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\r\n            // huge files get no view model, so they cannot support hidden areas\r\n            return;\r\n        }\r\n        this._currentModelHasFoldedImports = false;\r\n        this.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\r\n        this.localToDispose.add(this.foldingModel);\r\n        this.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\r\n        this.localToDispose.add(this.hiddenRangeModel);\r\n        this.localToDispose.add(this.hiddenRangeModel.onDidChange(hr => this.onHiddenRangesChanges(hr)));\r\n        this.updateScheduler = new Delayer(200);\r\n        this.cursorChangedScheduler = new RunOnceScheduler(() => this.revealCursor(), 200);\r\n        this.localToDispose.add(this.cursorChangedScheduler);\r\n        this.localToDispose.add(FoldingRangeProviderRegistry.onDidChange(() => this.onFoldingStrategyChanged()));\r\n        this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(() => this.onFoldingStrategyChanged())); // covers model language changes as well\r\n        this.localToDispose.add(this.editor.onDidChangeModelContent(() => this.onModelContentChanged()));\r\n        this.localToDispose.add(this.editor.onDidChangeCursorPosition(() => this.onCursorPositionChanged()));\r\n        this.localToDispose.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\r\n        this.localToDispose.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\r\n        this.localToDispose.add({\r\n            dispose: () => {\r\n                if (this.foldingRegionPromise) {\r\n                    this.foldingRegionPromise.cancel();\r\n                    this.foldingRegionPromise = null;\r\n                }\r\n                if (this.updateScheduler) {\r\n                    this.updateScheduler.cancel();\r\n                }\r\n                this.updateScheduler = null;\r\n                this.foldingModel = null;\r\n                this.foldingModelPromise = null;\r\n                this.hiddenRangeModel = null;\r\n                this.cursorChangedScheduler = null;\r\n                this.foldingStateMemento = null;\r\n                if (this.rangeProvider) {\r\n                    this.rangeProvider.dispose();\r\n                }\r\n                this.rangeProvider = null;\r\n            }\r\n        });\r\n        this.onModelContentChanged();\r\n    }\r\n    onFoldingStrategyChanged() {\r\n        if (this.rangeProvider) {\r\n            this.rangeProvider.dispose();\r\n        }\r\n        this.rangeProvider = null;\r\n        this.onModelContentChanged();\r\n    }\r\n    getRangeProvider(editorModel) {\r\n        if (this.rangeProvider) {\r\n            return this.rangeProvider;\r\n        }\r\n        this.rangeProvider = new IndentRangeProvider(editorModel); // fallback\r\n        if (this._useFoldingProviders && this.foldingModel) {\r\n            let foldingProviders = FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);\r\n            if (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {\r\n                const rangeProvider = this.rangeProvider = new InitializingRangeProvider(editorModel, this.foldingStateMemento.collapsedRegions, () => {\r\n                    // if after 30 the InitializingRangeProvider is still not replaced, force a refresh\r\n                    this.foldingStateMemento = null;\r\n                    this.onFoldingStrategyChanged();\r\n                }, 30000);\r\n                return rangeProvider; // keep memento in case there are still no foldingProviders on the next request.\r\n            }\r\n            else if (foldingProviders.length > 0) {\r\n                this.rangeProvider = new SyntaxRangeProvider(editorModel, foldingProviders, () => this.onModelContentChanged());\r\n            }\r\n        }\r\n        this.foldingStateMemento = null;\r\n        return this.rangeProvider;\r\n    }\r\n    getFoldingModel() {\r\n        return this.foldingModelPromise;\r\n    }\r\n    onModelContentChanged() {\r\n        if (this.updateScheduler) {\r\n            if (this.foldingRegionPromise) {\r\n                this.foldingRegionPromise.cancel();\r\n                this.foldingRegionPromise = null;\r\n            }\r\n            this.foldingModelPromise = this.updateScheduler.trigger(() => {\r\n                const foldingModel = this.foldingModel;\r\n                if (!foldingModel) { // null if editor has been disposed, or folding turned off\r\n                    return null;\r\n                }\r\n                const provider = this.getRangeProvider(foldingModel.textModel);\r\n                let foldingRegionPromise = this.foldingRegionPromise = createCancelablePromise(token => provider.compute(token));\r\n                return foldingRegionPromise.then(foldingRanges => {\r\n                    if (foldingRanges && foldingRegionPromise === this.foldingRegionPromise) { // new request or cancelled in the meantime?\r\n                        let scrollState;\r\n                        if (this._foldingImportsByDefault && !this._currentModelHasFoldedImports) {\r\n                            const hasChanges = foldingRanges.setCollapsedAllOfType(FoldingRangeKind.Imports.value, true);\r\n                            if (hasChanges) {\r\n                                scrollState = StableEditorScrollState.capture(this.editor);\r\n                                this._currentModelHasFoldedImports = hasChanges;\r\n                            }\r\n                        }\r\n                        // some cursors might have moved into hidden regions, make sure they are in expanded regions\r\n                        let selections = this.editor.getSelections();\r\n                        let selectionLineNumbers = selections ? selections.map(s => s.startLineNumber) : [];\r\n                        foldingModel.update(foldingRanges, selectionLineNumbers);\r\n                        if (scrollState) {\r\n                            scrollState.restore(this.editor);\r\n                        }\r\n                    }\r\n                    return foldingModel;\r\n                });\r\n            }).then(undefined, (err) => {\r\n                onUnexpectedError(err);\r\n                return null;\r\n            });\r\n        }\r\n    }\r\n    onHiddenRangesChanges(hiddenRanges) {\r\n        if (this.hiddenRangeModel && hiddenRanges.length && !this._restoringViewState) {\r\n            let selections = this.editor.getSelections();\r\n            if (selections) {\r\n                if (this.hiddenRangeModel.adjustSelections(selections)) {\r\n                    this.editor.setSelections(selections);\r\n                }\r\n            }\r\n        }\r\n        this.editor.setHiddenAreas(hiddenRanges);\r\n    }\r\n    onCursorPositionChanged() {\r\n        if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\r\n            this.cursorChangedScheduler.schedule();\r\n        }\r\n    }\r\n    revealCursor() {\r\n        const foldingModel = this.getFoldingModel();\r\n        if (!foldingModel) {\r\n            return;\r\n        }\r\n        foldingModel.then(foldingModel => {\r\n            if (foldingModel) {\r\n                let selections = this.editor.getSelections();\r\n                if (selections && selections.length > 0) {\r\n                    let toToggle = [];\r\n                    for (let selection of selections) {\r\n                        let lineNumber = selection.selectionStartLineNumber;\r\n                        if (this.hiddenRangeModel && this.hiddenRangeModel.isHidden(lineNumber)) {\r\n                            toToggle.push(...foldingModel.getAllRegionsAtLine(lineNumber, r => r.isCollapsed && lineNumber > r.startLineNumber));\r\n                        }\r\n                    }\r\n                    if (toToggle.length) {\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        this.reveal(selections[0].getPosition());\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    onEditorMouseDown(e) {\r\n        this.mouseDownInfo = null;\r\n        if (!this.hiddenRangeModel || !e.target || !e.target.range) {\r\n            return;\r\n        }\r\n        if (!e.event.leftButton && !e.event.middleButton) {\r\n            return;\r\n        }\r\n        const range = e.target.range;\r\n        let iconClicked = false;\r\n        switch (e.target.type) {\r\n            case 4 /* GUTTER_LINE_DECORATIONS */:\r\n                const data = e.target.detail;\r\n                const offsetLeftInGutter = e.target.element.offsetLeft;\r\n                const gutterOffsetX = data.offsetX - offsetLeftInGutter;\r\n                // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\r\n                // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\r\n                if (gutterOffsetX < 5) { // the whitespace between the border and the real folding icon border is 5px\r\n                    return;\r\n                }\r\n                iconClicked = true;\r\n                break;\r\n            case 7 /* CONTENT_EMPTY */: {\r\n                if (this._unfoldOnClickAfterEndOfLine && this.hiddenRangeModel.hasRanges()) {\r\n                    const data = e.target.detail;\r\n                    if (!data.isAfterLines) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            case 6 /* CONTENT_TEXT */: {\r\n                if (this.hiddenRangeModel.hasRanges()) {\r\n                    let model = this.editor.getModel();\r\n                    if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n        this.mouseDownInfo = { lineNumber: range.startLineNumber, iconClicked };\r\n    }\r\n    onEditorMouseUp(e) {\r\n        const foldingModel = this.getFoldingModel();\r\n        if (!foldingModel || !this.mouseDownInfo || !e.target) {\r\n            return;\r\n        }\r\n        let lineNumber = this.mouseDownInfo.lineNumber;\r\n        let iconClicked = this.mouseDownInfo.iconClicked;\r\n        let range = e.target.range;\r\n        if (!range || range.startLineNumber !== lineNumber) {\r\n            return;\r\n        }\r\n        if (iconClicked) {\r\n            if (e.target.type !== 4 /* GUTTER_LINE_DECORATIONS */) {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let model = this.editor.getModel();\r\n            if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\r\n                return;\r\n            }\r\n        }\r\n        foldingModel.then(foldingModel => {\r\n            if (foldingModel) {\r\n                let region = foldingModel.getRegionAtLine(lineNumber);\r\n                if (region && region.startLineNumber === lineNumber) {\r\n                    let isCollapsed = region.isCollapsed;\r\n                    if (iconClicked || isCollapsed) {\r\n                        let surrounding = e.event.altKey;\r\n                        let toToggle = [];\r\n                        if (surrounding) {\r\n                            let filter = (otherRegion) => !otherRegion.containedBy(region) && !region.containedBy(otherRegion);\r\n                            let toMaybeToggle = foldingModel.getRegionsInside(null, filter);\r\n                            for (const r of toMaybeToggle) {\r\n                                if (r.isCollapsed) {\r\n                                    toToggle.push(r);\r\n                                }\r\n                            }\r\n                            // if any surrounding regions are folded, unfold those. Otherwise, fold all surrounding\r\n                            if (toToggle.length === 0) {\r\n                                toToggle = toMaybeToggle;\r\n                            }\r\n                        }\r\n                        else {\r\n                            let recursive = e.event.middleButton || e.event.shiftKey;\r\n                            if (recursive) {\r\n                                for (const r of foldingModel.getRegionsInside(region)) {\r\n                                    if (r.isCollapsed === isCollapsed) {\r\n                                        toToggle.push(r);\r\n                                    }\r\n                                }\r\n                            }\r\n                            // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\r\n                            if (isCollapsed || !recursive || toToggle.length === 0) {\r\n                                toToggle.push(region);\r\n                            }\r\n                        }\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        this.reveal({ lineNumber, column: 1 });\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    reveal(position) {\r\n        this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n    }\r\n};\r\nFoldingController.ID = 'editor.contrib.folding';\r\nFoldingController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], FoldingController);\r\nexport { FoldingController };\r\nclass FoldingAction extends EditorAction {\r\n    runEditorCommand(accessor, editor, args) {\r\n        let foldingController = FoldingController.get(editor);\r\n        if (!foldingController) {\r\n            return;\r\n        }\r\n        let foldingModelPromise = foldingController.getFoldingModel();\r\n        if (foldingModelPromise) {\r\n            this.reportTelemetry(accessor, editor);\r\n            return foldingModelPromise.then(foldingModel => {\r\n                if (foldingModel) {\r\n                    this.invoke(foldingController, foldingModel, editor, args);\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                        foldingController.reveal(selection.getStartPosition());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getSelectedLines(editor) {\r\n        let selections = editor.getSelections();\r\n        return selections ? selections.map(s => s.startLineNumber) : [];\r\n    }\r\n    getLineNumbers(args, editor) {\r\n        if (args && args.selectionLines) {\r\n            return args.selectionLines.map(l => l + 1); // to 0-bases line numbers\r\n        }\r\n        return this.getSelectedLines(editor);\r\n    }\r\n    run(_accessor, _editor) {\r\n    }\r\n}\r\nfunction foldingArgumentsConstraint(args) {\r\n    if (!types.isUndefined(args)) {\r\n        if (!types.isObject(args)) {\r\n            return false;\r\n        }\r\n        const foldingArgs = args;\r\n        if (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.selectionLines) && (!types.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nclass UnfoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfold',\r\n            label: nls.localize('unfoldAction.label', \"Unfold\"),\r\n            alias: 'Unfold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Unfold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Unfold editor argument',\r\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\n\t\t\t\t\t\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\n\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t`,\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                    'default': 1\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                    'default': 'down'\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, args) {\r\n        let levels = args && args.levels || 1;\r\n        let lineNumbers = this.getLineNumbers(args, editor);\r\n        if (args && args.direction === 'up') {\r\n            setCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\r\n        }\r\n        else {\r\n            setCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\r\n        }\r\n    }\r\n}\r\nclass UnFoldRecursivelyAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldRecursively',\r\n            label: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\r\n            alias: 'Unfold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, _args) {\r\n        setCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\r\n    }\r\n}\r\nclass FoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.fold',\r\n            label: nls.localize('foldAction.label', \"Fold\"),\r\n            alias: 'Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Fold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Fold editor argument',\r\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t\t* 'levels': Number of levels to fold.\n\t\t\t\t\t\t\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\n\t\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\n\t\t\t\t\t\t`,\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, args) {\r\n        let lineNumbers = this.getLineNumbers(args, editor);\r\n        const levels = args && args.levels;\r\n        const direction = args && args.direction;\r\n        if (typeof levels !== 'number' && typeof direction !== 'string') {\r\n            // fold the region at the location or if already collapsed, the first uncollapsed parent instead.\r\n            setCollapseStateUp(foldingModel, true, lineNumbers);\r\n        }\r\n        else {\r\n            if (direction === 'up') {\r\n                setCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n            else {\r\n                setCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ToggleFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.toggleFold',\r\n            label: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\r\n            alias: 'Toggle Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 42 /* KEY_L */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        toggleCollapseState(foldingModel, 1, selectedLines);\r\n    }\r\n}\r\nclass FoldRecursivelyAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldRecursively',\r\n            label: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\r\n            alias: 'Fold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\r\n    }\r\n}\r\nclass FoldAllBlockCommentsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllBlockComments',\r\n            label: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\r\n            alias: 'Fold All Block Comments',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 85 /* US_SLASH */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let comments = LanguageConfigurationRegistry.getComments(editorModel.getLanguageIdentifier().id);\r\n            if (comments && comments.blockCommentStartToken) {\r\n                let regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass FoldAllRegionsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllMarkerRegions',\r\n            label: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\r\n            alias: 'Fold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 29 /* KEY_8 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                let regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass UnfoldAllRegionsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAllMarkerRegions',\r\n            label: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\r\n            alias: 'Unfold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 30 /* KEY_9 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                let regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, false);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass FoldAllRegionsExceptAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllExcept',\r\n            label: nls.localize('foldAllExcept.label', \"Fold All Regions Except Selected\"),\r\n            alias: 'Fold All Regions Except Selected',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 83 /* US_MINUS */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateForRest(foldingModel, true, selectedLines);\r\n    }\r\n}\r\nclass UnfoldAllRegionsExceptAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAllExcept',\r\n            label: nls.localize('unfoldAllExcept.label', \"Unfold All Regions Except Selected\"),\r\n            alias: 'Unfold All Regions Except Selected',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 81 /* US_EQUAL */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateForRest(foldingModel, false, selectedLines);\r\n    }\r\n}\r\nclass FoldAllAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAll',\r\n            label: nls.localize('foldAllAction.label', \"Fold All\"),\r\n            alias: 'Fold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 21 /* KEY_0 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, true);\r\n    }\r\n}\r\nclass UnfoldAllAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAll',\r\n            label: nls.localize('unfoldAllAction.label', \"Unfold All\"),\r\n            alias: 'Unfold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 40 /* KEY_J */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, false);\r\n    }\r\n}\r\nclass FoldLevelAction extends FoldingAction {\r\n    getFoldingLevel() {\r\n        return parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        setCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\r\n    }\r\n}\r\nFoldLevelAction.ID_PREFIX = 'editor.foldLevel';\r\nFoldLevelAction.ID = (level) => FoldLevelAction.ID_PREFIX + level;\r\n/** Action to go to the parent fold of current line */\r\nclass GotoParentFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoParentFold',\r\n            label: nls.localize('gotoParentFold.label', \"Go to Parent Fold\"),\r\n            alias: 'Go to Parent Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        if (selectedLines.length > 0) {\r\n            let startLineNumber = getParentFoldLine(selectedLines[0], foldingModel);\r\n            if (startLineNumber !== null) {\r\n                editor.setSelection({\r\n                    startLineNumber: startLineNumber,\r\n                    startColumn: 1,\r\n                    endLineNumber: startLineNumber,\r\n                    endColumn: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/** Action to go to the previous fold of current line */\r\nclass GotoPreviousFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoPreviousFold',\r\n            label: nls.localize('gotoPreviousFold.label', \"Go to Previous Fold\"),\r\n            alias: 'Go to Previous Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        if (selectedLines.length > 0) {\r\n            let startLineNumber = getPreviousFoldLine(selectedLines[0], foldingModel);\r\n            if (startLineNumber !== null) {\r\n                editor.setSelection({\r\n                    startLineNumber: startLineNumber,\r\n                    startColumn: 1,\r\n                    endLineNumber: startLineNumber,\r\n                    endColumn: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/** Action to go to the next fold of current line */\r\nclass GotoNextFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoNextFold',\r\n            label: nls.localize('gotoNextFold.label', \"Go to Next Fold\"),\r\n            alias: 'Go to Next Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        if (selectedLines.length > 0) {\r\n            let startLineNumber = getNextFoldLine(selectedLines[0], foldingModel);\r\n            if (startLineNumber !== null) {\r\n                editor.setSelection({\r\n                    startLineNumber: startLineNumber,\r\n                    startColumn: 1,\r\n                    endLineNumber: startLineNumber,\r\n                    endColumn: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(FoldingController.ID, FoldingController);\r\nregisterEditorAction(UnfoldAction);\r\nregisterEditorAction(UnFoldRecursivelyAction);\r\nregisterEditorAction(FoldAction);\r\nregisterEditorAction(FoldRecursivelyAction);\r\nregisterEditorAction(FoldAllAction);\r\nregisterEditorAction(UnfoldAllAction);\r\nregisterEditorAction(FoldAllBlockCommentsAction);\r\nregisterEditorAction(FoldAllRegionsAction);\r\nregisterEditorAction(UnfoldAllRegionsAction);\r\nregisterEditorAction(FoldAllRegionsExceptAction);\r\nregisterEditorAction(UnfoldAllRegionsExceptAction);\r\nregisterEditorAction(ToggleFoldAction);\r\nregisterEditorAction(GotoParentFoldAction);\r\nregisterEditorAction(GotoPreviousFoldAction);\r\nregisterEditorAction(GotoNextFoldAction);\r\nfor (let i = 1; i <= 7; i++) {\r\n    registerInstantiatedEditorAction(new FoldLevelAction({\r\n        id: FoldLevelAction.ID(i),\r\n        label: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\r\n        alias: `Fold Level ${i}`,\r\n        precondition: CONTEXT_FOLDING_ENABLED,\r\n        kbOpts: {\r\n            kbExpr: EditorContextKeys.editorTextFocus,\r\n            primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | (21 /* KEY_0 */ + i)),\r\n            weight: 100 /* EditorContrib */\r\n        }\r\n    }));\r\n}\r\nexport const foldBackgroundBackground = registerColor('editor.foldBackground', { light: transparent(editorSelectionBackground, 0.3), dark: transparent(editorSelectionBackground, 0.3), hc: null }, nls.localize('foldBackgroundBackground', \"Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport const editorFoldForeground = registerColor('editorGutter.foldingControlForeground', { dark: iconForeground, light: iconForeground, hc: iconForeground }, nls.localize('editorGutter.foldingControlForeground', 'Color of the folding control in the editor gutter.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foldBackground = theme.getColor(foldBackgroundBackground);\r\n    if (foldBackground) {\r\n        collector.addRule(`.monaco-editor .folded-background { background-color: ${foldBackground}; }`);\r\n    }\r\n    const editorFoldColor = theme.getColor(editorFoldForeground);\r\n    if (editorFoldColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingExpandedIcon)},\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingCollapsedIcon)} {\n\t\t\tcolor: ${editorFoldColor} !important;\n\t\t}\n\t\t`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorZoom } from '../../common/config/editorZoom.js';\r\nclass EditorFontZoomIn extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomIn',\r\n            label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\r\n            alias: 'Editor Font Zoom In',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\r\n    }\r\n}\r\nclass EditorFontZoomOut extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomOut',\r\n            label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\r\n            alias: 'Editor Font Zoom Out',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\r\n    }\r\n}\r\nclass EditorFontZoomReset extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomReset',\r\n            label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\r\n            alias: 'Editor Font Zoom Reset',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(0);\r\n    }\r\n}\r\nregisterEditorAction(EditorFontZoomIn);\r\nregisterEditorAction(EditorFontZoomOut);\r\nregisterEditorAction(EditorFontZoomReset);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DocumentRangeFormattingEditProviderRegistry, OnTypeFormattingEditProviderRegistry } from '../../common/modes.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { getOnTypeFormattingEdits, alertFormattingEdits, formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider } from './format.js';\r\nimport { FormattingEdit } from './formattingEdit.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Progress, IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nlet FormatOnType = class FormatOnType {\r\n    constructor(editor, _workerService) {\r\n        this._workerService = _workerService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModel = new DisposableStore();\r\n        this._editor = editor;\r\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._callOnDispose.add(OnTypeFormattingEditProviderRegistry.onDidChange(this._update, this));\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        this._callOnModel.dispose();\r\n    }\r\n    _update() {\r\n        // clean up\r\n        this._callOnModel.clear();\r\n        // we are disabled\r\n        if (!this._editor.getOption(47 /* formatOnType */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        // no support\r\n        const [support] = OnTypeFormattingEditProviderRegistry.ordered(model);\r\n        if (!support || !support.autoFormatTriggerCharacters) {\r\n            return;\r\n        }\r\n        // register typing listeners that will trigger the format\r\n        let triggerChars = new CharacterSet();\r\n        for (let ch of support.autoFormatTriggerCharacters) {\r\n            triggerChars.add(ch.charCodeAt(0));\r\n        }\r\n        this._callOnModel.add(this._editor.onDidType((text) => {\r\n            let lastCharCode = text.charCodeAt(text.length - 1);\r\n            if (triggerChars.has(lastCharCode)) {\r\n                this._trigger(String.fromCharCode(lastCharCode));\r\n            }\r\n        }));\r\n    }\r\n    _trigger(ch) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._editor.getSelections().length > 1) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const position = this._editor.getPosition();\r\n        let canceled = false;\r\n        // install a listener that checks if edits happens before the\r\n        // position on which we format right now. If so, we won't\r\n        // apply the format edits\r\n        const unbind = this._editor.onDidChangeModelContent((e) => {\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                // cancel only once\r\n                canceled = true;\r\n                unbind.dispose();\r\n                return;\r\n            }\r\n            for (let i = 0, len = e.changes.length; i < len; i++) {\r\n                const change = e.changes[i];\r\n                if (change.range.endLineNumber <= position.lineNumber) {\r\n                    // cancel only once\r\n                    canceled = true;\r\n                    unbind.dispose();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        getOnTypeFormattingEdits(this._workerService, model, position, ch, model.getFormattingOptions()).then(edits => {\r\n            unbind.dispose();\r\n            if (canceled) {\r\n                return;\r\n            }\r\n            if (isNonEmptyArray(edits)) {\r\n                FormattingEdit.execute(this._editor, edits, true);\r\n                alertFormattingEdits(edits);\r\n            }\r\n        }, (err) => {\r\n            unbind.dispose();\r\n            throw err;\r\n        });\r\n    }\r\n};\r\nFormatOnType.ID = 'editor.contrib.autoFormat';\r\nFormatOnType = __decorate([\r\n    __param(1, IEditorWorkerService)\r\n], FormatOnType);\r\nlet FormatOnPaste = class FormatOnPaste {\r\n    constructor(editor, _instantiationService) {\r\n        this.editor = editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModel = new DisposableStore();\r\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._callOnDispose.add(DocumentRangeFormattingEditProviderRegistry.onDidChange(this._update, this));\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        this._callOnModel.dispose();\r\n    }\r\n    _update() {\r\n        // clean up\r\n        this._callOnModel.clear();\r\n        // we are disabled\r\n        if (!this.editor.getOption(46 /* formatOnPaste */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        // no formatter\r\n        if (!DocumentRangeFormattingEditProviderRegistry.has(this.editor.getModel())) {\r\n            return;\r\n        }\r\n        this._callOnModel.add(this.editor.onDidPaste(({ range }) => this._trigger(range)));\r\n    }\r\n    _trigger(range) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this.editor.getSelections().length > 1) {\r\n            return;\r\n        }\r\n        this._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, 2 /* Silent */, Progress.None, CancellationToken.None).catch(onUnexpectedError);\r\n    }\r\n};\r\nFormatOnPaste.ID = 'editor.contrib.formatOnPaste';\r\nFormatOnPaste = __decorate([\r\n    __param(1, IInstantiationService)\r\n], FormatOnPaste);\r\nclass FormatDocumentAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.formatDocument',\r\n            label: nls.localize('formatDocument.label', \"Format Document\"),\r\n            alias: 'Format Document',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 36 /* KEY_F */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 39 /* KEY_I */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.3\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (editor.hasModel()) {\r\n                const instaService = accessor.get(IInstantiationService);\r\n                const progressService = accessor.get(IEditorProgressService);\r\n                yield progressService.showWhile(instaService.invokeFunction(formatDocumentWithSelectedProvider, editor, 1 /* Explicit */, Progress.None, CancellationToken.None), 250);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass FormatSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.formatSelection',\r\n            label: nls.localize('formatSelection.label', \"Format Selection\"),\r\n            alias: 'Format Selection',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 36 /* KEY_F */),\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                when: EditorContextKeys.hasNonEmptySelection,\r\n                group: '1_modification',\r\n                order: 1.31\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const instaService = accessor.get(IInstantiationService);\r\n            const model = editor.getModel();\r\n            const ranges = editor.getSelections().map(range => {\r\n                return range.isEmpty()\r\n                    ? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber))\r\n                    : range;\r\n            });\r\n            const progressService = accessor.get(IEditorProgressService);\r\n            yield progressService.showWhile(instaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, 1 /* Explicit */, Progress.None, CancellationToken.None), 250);\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(FormatOnType.ID, FormatOnType);\r\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste);\r\nregisterEditorAction(FormatDocumentAction);\r\nregisterEditorAction(FormatSelectionAction);\r\n// this is the old format action that does both (format document OR format selection)\r\n// and we keep it here such that existing keybinding configurations etc will still work\r\nCommandsRegistry.registerCommand('editor.action.format', (accessor) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n    if (!editor || !editor.hasModel()) {\r\n        return;\r\n    }\r\n    const commandService = accessor.get(ICommandService);\r\n    if (editor.getSelection().isEmpty()) {\r\n        yield commandService.executeCommand('editor.action.formatDocument');\r\n    }\r\n    else {\r\n        yield commandService.executeCommand('editor.action.formatSelection');\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { equals } from '../../../base/common/arrays.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nexport class TreeElement {\r\n    remove() {\r\n        if (this.parent) {\r\n            this.parent.children.delete(this.id);\r\n        }\r\n    }\r\n    static findId(candidate, container) {\r\n        // complex id-computation which contains the origin/extension,\r\n        // the parent path, and some dedupe logic when names collide\r\n        let candidateId;\r\n        if (typeof candidate === 'string') {\r\n            candidateId = `${container.id}/${candidate}`;\r\n        }\r\n        else {\r\n            candidateId = `${container.id}/${candidate.name}`;\r\n            if (container.children.get(candidateId) !== undefined) {\r\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\r\n            }\r\n        }\r\n        let id = candidateId;\r\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\r\n            id = `${candidateId}_${i}`;\r\n        }\r\n        return id;\r\n    }\r\n    static empty(element) {\r\n        return element.children.size === 0;\r\n    }\r\n}\r\nexport class OutlineElement extends TreeElement {\r\n    constructor(id, parent, symbol) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.symbol = symbol;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineGroup extends TreeElement {\r\n    constructor(id, parent, label, order) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.label = label;\r\n        this.order = order;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineModel extends TreeElement {\r\n    constructor(uri) {\r\n        super();\r\n        this.uri = uri;\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n        this._groups = new Map();\r\n        this.children = new Map();\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n    }\r\n    static create(textModel, token) {\r\n        let key = this._keys.for(textModel, true);\r\n        let data = OutlineModel._requests.get(key);\r\n        if (!data) {\r\n            let source = new CancellationTokenSource();\r\n            data = {\r\n                promiseCnt: 0,\r\n                source,\r\n                promise: OutlineModel._create(textModel, source.token),\r\n                model: undefined,\r\n            };\r\n            OutlineModel._requests.set(key, data);\r\n            // keep moving average of request durations\r\n            const now = Date.now();\r\n            data.promise.then(() => {\r\n                this._requestDurations.update(textModel, Date.now() - now);\r\n            });\r\n        }\r\n        if (data.model) {\r\n            // resolved -> return data\r\n            return Promise.resolve(data.model);\r\n        }\r\n        // increase usage counter\r\n        data.promiseCnt += 1;\r\n        token.onCancellationRequested(() => {\r\n            // last -> cancel provider request, remove cached promise\r\n            if (--data.promiseCnt === 0) {\r\n                data.source.cancel();\r\n                OutlineModel._requests.delete(key);\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            data.promise.then(model => {\r\n                data.model = model;\r\n                resolve(model);\r\n            }, err => {\r\n                OutlineModel._requests.delete(key);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    static _create(textModel, token) {\r\n        const cts = new CancellationTokenSource(token);\r\n        const result = new OutlineModel(textModel.uri);\r\n        const provider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n        const promises = provider.map((provider, index) => {\r\n            var _a;\r\n            let id = TreeElement.findId(`provider_${index}`, result);\r\n            let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\r\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\r\n                for (const info of result || []) {\r\n                    OutlineModel._makeOutlineElement(info, group);\r\n                }\r\n                return group;\r\n            }, err => {\r\n                onUnexpectedExternalError(err);\r\n                return group;\r\n            }).then(group => {\r\n                if (!TreeElement.empty(group)) {\r\n                    result._groups.set(id, group);\r\n                }\r\n                else {\r\n                    group.remove();\r\n                }\r\n            });\r\n        });\r\n        const listener = DocumentSymbolProviderRegistry.onDidChange(() => {\r\n            const newProvider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n            if (!equals(newProvider, provider)) {\r\n                cts.cancel();\r\n            }\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\r\n                return OutlineModel._create(textModel, token);\r\n            }\r\n            else {\r\n                return result._compact();\r\n            }\r\n        }).finally(() => {\r\n            listener.dispose();\r\n        });\r\n    }\r\n    static _makeOutlineElement(info, container) {\r\n        let id = TreeElement.findId(info, container);\r\n        let res = new OutlineElement(id, container, info);\r\n        if (info.children) {\r\n            for (const childInfo of info.children) {\r\n                OutlineModel._makeOutlineElement(childInfo, res);\r\n            }\r\n        }\r\n        container.children.set(res.id, res);\r\n    }\r\n    _compact() {\r\n        let count = 0;\r\n        for (const [key, group] of this._groups) {\r\n            if (group.children.size === 0) { // empty\r\n                this._groups.delete(key);\r\n            }\r\n            else {\r\n                count += 1;\r\n            }\r\n        }\r\n        if (count !== 1) {\r\n            //\r\n            this.children = this._groups;\r\n        }\r\n        else {\r\n            // adopt all elements of the first group\r\n            let group = Iterable.first(this._groups.values());\r\n            for (let [, child] of group.children) {\r\n                child.parent = this;\r\n                this.children.set(child.id, child);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getTopLevelSymbols() {\r\n        const roots = [];\r\n        for (const child of this.children.values()) {\r\n            if (child instanceof OutlineElement) {\r\n                roots.push(child.symbol);\r\n            }\r\n            else {\r\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\r\n            }\r\n        }\r\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    asListOfDocumentSymbols() {\r\n        const roots = this.getTopLevelSymbols();\r\n        const bucket = [];\r\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\r\n        return bucket.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\r\n        for (const entry of entries) {\r\n            bucket.push({\r\n                kind: entry.kind,\r\n                tags: entry.tags,\r\n                name: entry.name,\r\n                detail: entry.detail,\r\n                containerName: entry.containerName || overrideContainerLabel,\r\n                range: entry.range,\r\n                selectionRange: entry.selectionRange,\r\n                children: undefined, // we flatten it...\r\n            });\r\n            // Recurse over children\r\n            if (entry.children) {\r\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\r\n            }\r\n        }\r\n    }\r\n}\r\nOutlineModel._requestDurations = new LanguageFeatureRequestDelays(DocumentSymbolProviderRegistry, 350);\r\nOutlineModel._requests = new LRUCache(9, 0.75);\r\nOutlineModel._keys = new class {\r\n    constructor() {\r\n        this._counter = 1;\r\n        this._data = new WeakMap();\r\n    }\r\n    for(textModel, version) {\r\n        return `${textModel.id}/${version ? textModel.getVersionId() : ''}/${this._hash(DocumentSymbolProviderRegistry.all(textModel))}`;\r\n    }\r\n    _hash(providers) {\r\n        let result = '';\r\n        for (const provider of providers) {\r\n            let n = this._data.get(provider);\r\n            if (typeof n === 'undefined') {\r\n                n = this._counter++;\r\n                this._data.set(provider, n);\r\n            }\r\n            result += n;\r\n        }\r\n        return result;\r\n    }\r\n};\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { OutlineModel } from './outlineModel.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport function getDocumentSymbols(document, flat, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const model = yield OutlineModel.create(document, token);\r\n        return flat\r\n            ? model.asListOfDocumentSymbols()\r\n            : model.getTopLevelSymbols();\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const [resource] = args;\r\n        assertType(URI.isUri(resource));\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            return getDocumentSymbols(model, false, CancellationToken.None);\r\n        }\r\n        const reference = yield accessor.get(ITextModelService).createModelReference(resource);\r\n        try {\r\n            return yield getDocumentSymbols(reference.object.textEditorModel, false, CancellationToken.None);\r\n        }\r\n        finally {\r\n            reference.dispose();\r\n        }\r\n    });\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function getSpaceCnt(str, tabSize) {\r\n    let spacesCnt = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str.charAt(i) === '\\t') {\r\n            spacesCnt += tabSize;\r\n        }\r\n        else {\r\n            spacesCnt++;\r\n        }\r\n    }\r\n    return spacesCnt;\r\n}\r\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\r\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\r\n    let result = '';\r\n    if (!insertSpaces) {\r\n        let tabsCnt = Math.floor(spacesCnt / tabSize);\r\n        spacesCnt = spacesCnt % tabSize;\r\n        for (let i = 0; i < tabsCnt; i++) {\r\n            result += '\\t';\r\n        }\r\n    }\r\n    for (let i = 0; i < spacesCnt; i++) {\r\n        result += ' ';\r\n    }\r\n    return result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ShiftCommand } from '../../common/commands/shiftCommand.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport * as indentUtils from './indentUtils.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nexport function getReindentEditOperations(model, startLineNumber, endLineNumber, inheritedIndent) {\r\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n        // Model is empty\r\n        return [];\r\n    }\r\n    let indentationRules = LanguageConfigurationRegistry.getIndentationRules(model.getLanguageIdentifier().id);\r\n    if (!indentationRules) {\r\n        return [];\r\n    }\r\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\r\n    // Skip `unIndentedLinePattern` lines\r\n    while (startLineNumber <= endLineNumber) {\r\n        if (!indentationRules.unIndentedLinePattern) {\r\n            break;\r\n        }\r\n        let text = model.getLineContent(startLineNumber);\r\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\r\n            break;\r\n        }\r\n        startLineNumber++;\r\n    }\r\n    if (startLineNumber > endLineNumber - 1) {\r\n        return [];\r\n    }\r\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n    const shiftIndent = (indentation, count) => {\r\n        count = count || 1;\r\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\r\n    };\r\n    const unshiftIndent = (indentation, count) => {\r\n        count = count || 1;\r\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\r\n    };\r\n    let indentEdits = [];\r\n    // indentation being passed to lines below\r\n    let globalIndent;\r\n    // Calculate indentation for the first line\r\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\r\n    let currentLineText = model.getLineContent(startLineNumber);\r\n    let adjustedLineContent = currentLineText;\r\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\r\n        globalIndent = inheritedIndent;\r\n        let oldIndentation = strings.getLeadingWhitespace(currentLineText);\r\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\r\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\r\n            globalIndent = unshiftIndent(globalIndent);\r\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\r\n        }\r\n        if (currentLineText !== adjustedLineContent) {\r\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), TextModel.normalizeIndentation(globalIndent, indentSize, insertSpaces)));\r\n        }\r\n    }\r\n    else {\r\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\r\n    }\r\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\r\n    let idealIndentForNextLine = globalIndent;\r\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\r\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n        globalIndent = shiftIndent(globalIndent);\r\n    }\r\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\r\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n    }\r\n    startLineNumber++;\r\n    // Calculate indentation adjustment for all following lines\r\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        let text = model.getLineContent(lineNumber);\r\n        let oldIndentation = strings.getLeadingWhitespace(text);\r\n        let adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\r\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\r\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\r\n            globalIndent = unshiftIndent(globalIndent);\r\n        }\r\n        if (oldIndentation !== idealIndentForNextLine) {\r\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), TextModel.normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\r\n        }\r\n        // calculate idealIndentForNextLine\r\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\r\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\r\n            // but don't change globalIndent and idealIndentForNextLine.\r\n            continue;\r\n        }\r\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\r\n            globalIndent = shiftIndent(globalIndent);\r\n            idealIndentForNextLine = globalIndent;\r\n        }\r\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\r\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n        }\r\n        else {\r\n            idealIndentForNextLine = globalIndent;\r\n        }\r\n    }\r\n    return indentEdits;\r\n}\r\nexport class IndentationToSpacesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: IndentationToSpacesAction.ID,\r\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\r\n            alias: 'Convert Indentation to Spaces',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let modelOpts = model.getOptions();\r\n        let selection = editor.getSelection();\r\n        if (!selection) {\r\n            return;\r\n        }\r\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n        model.updateOptions({\r\n            insertSpaces: true\r\n        });\r\n    }\r\n}\r\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\r\nexport class IndentationToTabsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: IndentationToTabsAction.ID,\r\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\r\n            alias: 'Convert Indentation to Tabs',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let modelOpts = model.getOptions();\r\n        let selection = editor.getSelection();\r\n        if (!selection) {\r\n            return;\r\n        }\r\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n        model.updateOptions({\r\n            insertSpaces: false\r\n        });\r\n    }\r\n}\r\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\r\nexport class ChangeIndentationSizeAction extends EditorAction {\r\n    constructor(insertSpaces, opts) {\r\n        super(opts);\r\n        this.insertSpaces = insertSpaces;\r\n    }\r\n    run(accessor, editor) {\r\n        const quickInputService = accessor.get(IQuickInputService);\r\n        const modelService = accessor.get(IModelService);\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let creationOpts = modelService.getCreationOptions(model.getLanguageIdentifier().language, model.uri, model.isForSimpleWidget);\r\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\r\n            id: n.toString(),\r\n            label: n.toString(),\r\n            // add description for tabSize value set in the configuration\r\n            description: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : undefined\r\n        }));\r\n        // auto focus the tabSize set for the current editor\r\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\r\n        setTimeout(() => {\r\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\r\n                if (pick) {\r\n                    if (model && !model.isDisposed()) {\r\n                        model.updateOptions({\r\n                            tabSize: parseInt(pick.label, 10),\r\n                            insertSpaces: this.insertSpaces\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\r\n    }\r\n}\r\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: IndentUsingTabs.ID,\r\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\r\n            alias: 'Indent Using Tabs',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\r\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: IndentUsingSpaces.ID,\r\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\r\n            alias: 'Indent Using Spaces',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\r\nexport class DetectIndentation extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: DetectIndentation.ID,\r\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\r\n            alias: 'Detect Indentation from Content',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const modelService = accessor.get(IModelService);\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let creationOpts = modelService.getCreationOptions(model.getLanguageIdentifier().language, model.uri, model.isForSimpleWidget);\r\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\r\n    }\r\n}\r\nDetectIndentation.ID = 'editor.action.detectIndentation';\r\nexport class ReindentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.reindentlines',\r\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\r\n            alias: 'Reindent Lines',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let edits = getReindentEditOperations(model, 1, model.getLineCount());\r\n        if (edits.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeEdits(this.id, edits);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nexport class ReindentSelectedLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.reindentselectedlines',\r\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\r\n            alias: 'Reindent Selected Lines',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let edits = [];\r\n        for (let selection of selections) {\r\n            let startLineNumber = selection.startLineNumber;\r\n            let endLineNumber = selection.endLineNumber;\r\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\r\n                endLineNumber--;\r\n            }\r\n            if (startLineNumber === 1) {\r\n                if (startLineNumber === endLineNumber) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                startLineNumber--;\r\n            }\r\n            let editOperations = getReindentEditOperations(model, startLineNumber, endLineNumber);\r\n            edits.push(...editOperations);\r\n        }\r\n        if (edits.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeEdits(this.id, edits);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nexport class AutoIndentOnPasteCommand {\r\n    constructor(edits, initialSelection) {\r\n        this._initialSelection = initialSelection;\r\n        this._edits = [];\r\n        this._selectionId = null;\r\n        for (let edit of edits) {\r\n            if (edit.range && typeof edit.text === 'string') {\r\n                this._edits.push(edit);\r\n            }\r\n        }\r\n    }\r\n    getEditOperations(model, builder) {\r\n        for (let edit of this._edits) {\r\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\r\n        }\r\n        let selectionIsSet = false;\r\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\r\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\r\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\r\n                selectionIsSet = true;\r\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\r\n            }\r\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\r\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\r\n                selectionIsSet = true;\r\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\r\n            }\r\n        }\r\n        if (!selectionIsSet) {\r\n            this._selectionId = builder.trackSelection(this._initialSelection);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\nexport class AutoIndentOnPaste {\r\n    constructor(editor) {\r\n        this.callOnDispose = new DisposableStore();\r\n        this.callOnModel = new DisposableStore();\r\n        this.editor = editor;\r\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\r\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\r\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\r\n    }\r\n    update() {\r\n        // clean up\r\n        this.callOnModel.clear();\r\n        // we are disabled\r\n        if (this.editor.getOption(9 /* autoIndent */) < 4 /* Full */ || this.editor.getOption(46 /* formatOnPaste */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\r\n            this.trigger(range);\r\n        }));\r\n    }\r\n    trigger(range) {\r\n        let selections = this.editor.getSelections();\r\n        if (selections === null || selections.length > 1) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!model.isCheapToTokenize(range.getStartPosition().lineNumber)) {\r\n            return;\r\n        }\r\n        const autoIndent = this.editor.getOption(9 /* autoIndent */);\r\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n        let textEdits = [];\r\n        let indentConverter = {\r\n            shiftIndent: (indentation) => {\r\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            },\r\n            unshiftIndent: (indentation) => {\r\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            }\r\n        };\r\n        let startLineNumber = range.startLineNumber;\r\n        while (startLineNumber <= range.endLineNumber) {\r\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\r\n                startLineNumber++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (startLineNumber > range.endLineNumber) {\r\n            return;\r\n        }\r\n        let firstLineText = model.getLineContent(startLineNumber);\r\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\r\n            let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, model, model.getLanguageIdentifier().id, startLineNumber, indentConverter);\r\n            if (indentOfFirstLine !== null) {\r\n                let oldIndentation = strings.getLeadingWhitespace(firstLineText);\r\n                let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\r\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                if (newSpaceCnt !== oldSpaceCnt) {\r\n                    let newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                    textEdits.push({\r\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\r\n                        text: newIndent\r\n                    });\r\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\r\n                }\r\n                else {\r\n                    let indentMetadata = LanguageConfigurationRegistry.getIndentMetadata(model, startLineNumber);\r\n                    if (indentMetadata === 0 || indentMetadata === 8 /* UNINDENT_MASK */) {\r\n                        // we paste content into a line where only contains whitespaces\r\n                        // after pasting, the indentation of the first line is already correct\r\n                        // the first line doesn't match any indentation rule\r\n                        // then no-op.\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const firstLineNumber = startLineNumber;\r\n        // ignore empty or ignored lines\r\n        while (startLineNumber < range.endLineNumber) {\r\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\r\n                startLineNumber++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (startLineNumber !== range.endLineNumber) {\r\n            let virtualModel = {\r\n                getLineTokens: (lineNumber) => {\r\n                    return model.getLineTokens(lineNumber);\r\n                },\r\n                getLanguageIdentifier: () => {\r\n                    return model.getLanguageIdentifier();\r\n                },\r\n                getLanguageIdAtPosition: (lineNumber, column) => {\r\n                    return model.getLanguageIdAtPosition(lineNumber, column);\r\n                },\r\n                getLineContent: (lineNumber) => {\r\n                    if (lineNumber === firstLineNumber) {\r\n                        return firstLineText;\r\n                    }\r\n                    else {\r\n                        return model.getLineContent(lineNumber);\r\n                    }\r\n                }\r\n            };\r\n            let indentOfSecondLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageIdentifier().id, startLineNumber + 1, indentConverter);\r\n            if (indentOfSecondLine !== null) {\r\n                let newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\r\n                let oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\r\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\r\n                    let spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\r\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\r\n                        let lineContent = model.getLineContent(i);\r\n                        let originalIndent = strings.getLeadingWhitespace(lineContent);\r\n                        let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\r\n                        let newSpacesCnt = originalSpacesCnt + spaceCntOffset;\r\n                        let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\r\n                        if (newIndent !== originalIndent) {\r\n                            textEdits.push({\r\n                                range: new Range(i, 1, i, originalIndent.length + 1),\r\n                                text: newIndent\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (textEdits.length > 0) {\r\n            this.editor.pushUndoStop();\r\n            let cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\r\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\r\n            this.editor.pushUndoStop();\r\n        }\r\n    }\r\n    shouldIgnoreLine(model, lineNumber) {\r\n        model.forceTokenization(lineNumber);\r\n        let nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\r\n        if (nonWhitespaceColumn === 0) {\r\n            return true;\r\n        }\r\n        let tokens = model.getLineTokens(lineNumber);\r\n        if (tokens.getCount() > 0) {\r\n            let firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\r\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* Comment */) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    dispose() {\r\n        this.callOnDispose.dispose();\r\n        this.callOnModel.dispose();\r\n    }\r\n}\r\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\r\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\r\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n        // Model is empty\r\n        return;\r\n    }\r\n    let spaces = '';\r\n    for (let i = 0; i < tabSize; i++) {\r\n        spaces += ' ';\r\n    }\r\n    let spacesRegExp = new RegExp(spaces, 'gi');\r\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\r\n        if (lastIndentationColumn === 0) {\r\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        if (lastIndentationColumn === 1) {\r\n            continue;\r\n        }\r\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\r\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\r\n        const newIndentation = (tabsToSpaces\r\n            ? originalIndentation.replace(/\\t/ig, spaces)\r\n            : originalIndentation.replace(spacesRegExp, '\\t'));\r\n        builder.addEditOperation(originalIndentationRange, newIndentation);\r\n    }\r\n}\r\nexport class IndentationToSpacesCommand {\r\n    constructor(selection, tabSize) {\r\n        this.selection = selection;\r\n        this.tabSize = tabSize;\r\n        this.selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n        getIndentationEditOperations(model, builder, this.tabSize, true);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n}\r\nexport class IndentationToTabsCommand {\r\n    constructor(selection, tabSize) {\r\n        this.selection = selection;\r\n        this.tabSize = tabSize;\r\n        this.selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n        getIndentationEditOperations(model, builder, this.tabSize, false);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n}\r\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\r\nregisterEditorAction(IndentationToSpacesAction);\r\nregisterEditorAction(IndentationToTabsAction);\r\nregisterEditorAction(IndentUsingTabs);\r\nregisterEditorAction(IndentUsingSpaces);\r\nregisterEditorAction(DetectIndentation);\r\nregisterEditorAction(ReindentLinesAction);\r\nregisterEditorAction(ReindentSelectedLinesAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { InlayHintsProviderRegistry } from '../../common/modes.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { editorInlayHintForeground, editorInlayHintBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst MAX_DECORATORS = 500;\r\nexport function getInlayHints(model, ranges, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const datas = [];\r\n        const providers = InlayHintsProviderRegistry.ordered(model).reverse();\r\n        const promises = flatten(providers.map(provider => ranges.map(range => {\r\n            return Promise.resolve(provider.provideInlayHints(model, range, token)).then(result => {\r\n                const itemsInRange = result === null || result === void 0 ? void 0 : result.filter(hint => range.containsPosition(hint.position));\r\n                if (itemsInRange === null || itemsInRange === void 0 ? void 0 : itemsInRange.length) {\r\n                    datas.push({ list: itemsInRange, provider });\r\n                }\r\n            }, err => {\r\n                onUnexpectedExternalError(err);\r\n            });\r\n        })));\r\n        yield Promise.all(promises);\r\n        return datas;\r\n    });\r\n}\r\nlet InlayHintsController = class InlayHintsController {\r\n    constructor(_editor, _codeEditorService, _themeService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._themeService = _themeService;\r\n        this._configurationService = _configurationService;\r\n        this._disposables = new DisposableStore();\r\n        this._sessionDisposables = new DisposableStore();\r\n        this._getInlayHintsDelays = new LanguageFeatureRequestDelays(InlayHintsProviderRegistry, 25, 2500);\r\n        this._decorationsTypeIds = [];\r\n        this._decorationIds = [];\r\n        this._disposables.add(InlayHintsProviderRegistry.onDidChange(() => this._update()));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(126 /* inlayHints */)) {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        this._sessionDisposables.dispose();\r\n        this._removeAllDecorations();\r\n        this._disposables.dispose();\r\n    }\r\n    _update() {\r\n        this._sessionDisposables.clear();\r\n        if (!this._editor.getOption(126 /* inlayHints */).enabled) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !InlayHintsProviderRegistry.has(model)) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\r\n            const t1 = Date.now();\r\n            const cts = new CancellationTokenSource();\r\n            this._sessionDisposables.add(toDisposable(() => cts.dispose(true)));\r\n            const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n            const result = yield getInlayHints(model, visibleRanges, cts.token);\r\n            // update moving average\r\n            const newDelay = this._getInlayHintsDelays.update(model, Date.now() - t1);\r\n            scheduler.delay = newDelay;\r\n            // render hints\r\n            this._updateHintsDecorators(result);\r\n        }), this._getInlayHintsDelays.get(model));\r\n        this._sessionDisposables.add(scheduler);\r\n        // update inline hints when content or scroll position changes\r\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent(() => scheduler.schedule()));\r\n        this._disposables.add(this._editor.onDidScrollChange(() => scheduler.schedule()));\r\n        scheduler.schedule();\r\n        // update inline hints when any any provider fires an event\r\n        const providerListener = new DisposableStore();\r\n        this._sessionDisposables.add(providerListener);\r\n        for (const provider of InlayHintsProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChangeInlayHints === 'function') {\r\n                providerListener.add(provider.onDidChangeInlayHints(() => scheduler.schedule()));\r\n            }\r\n        }\r\n    }\r\n    _updateHintsDecorators(hintsData) {\r\n        const { fontSize, fontFamily } = this._getLayoutInfo();\r\n        const backgroundColor = this._themeService.getColorTheme().getColor(editorInlayHintBackground);\r\n        const fontColor = this._themeService.getColorTheme().getColor(editorInlayHintForeground);\r\n        const newDecorationsTypeIds = [];\r\n        const newDecorationsData = [];\r\n        const fontFamilyVar = '--inlayHintsFontFamily';\r\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\r\n        const key = this._configurationService.getValue('editor.useInjectedText');\r\n        const shouldUseInjectedText = key === undefined ? true : !!key;\r\n        for (const { list: hints } of hintsData) {\r\n            for (let j = 0; j < hints.length && newDecorationsData.length < MAX_DECORATORS; j++) {\r\n                const { text, position, whitespaceBefore, whitespaceAfter } = hints[j];\r\n                const marginBefore = whitespaceBefore ? (fontSize / 3) | 0 : 0;\r\n                const marginAfter = whitespaceAfter ? (fontSize / 3) | 0 : 0;\r\n                const massagedText = fixSpace(text);\r\n                const before = {\r\n                    contentText: massagedText,\r\n                    backgroundColor: `${backgroundColor}`,\r\n                    color: `${fontColor}`,\r\n                    margin: `0px ${marginAfter}px 0px ${marginBefore}px`,\r\n                    fontSize: `${fontSize}px`,\r\n                    fontFamily: `var(${fontFamilyVar})`,\r\n                    padding: `0px ${(fontSize / 4) | 0}px`,\r\n                    borderRadius: `${(fontSize / 4) | 0}px`,\r\n                    verticalAlign: 'middle',\r\n                };\r\n                const key = 'inlayHints-' + hash(before).toString(16);\r\n                this._codeEditorService.registerDecorationType('inlay-hints-controller', key, shouldUseInjectedText ? { beforeInjectedText: Object.assign(Object.assign({}, before), { affectsLetterSpacing: true }) } : { before }, undefined, this._editor);\r\n                // decoration types are ref-counted which means we only need to\r\n                // call register und remove equally often\r\n                newDecorationsTypeIds.push(key);\r\n                const options = this._codeEditorService.resolveDecorationOptions(key, true);\r\n                newDecorationsData.push({\r\n                    range: Range.fromPositions(position),\r\n                    options\r\n                });\r\n            }\r\n        }\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = newDecorationsTypeIds;\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, newDecorationsData);\r\n    }\r\n    _getLayoutInfo() {\r\n        const options = this._editor.getOption(126 /* inlayHints */);\r\n        const editorFontSize = this._editor.getOption(44 /* fontSize */);\r\n        let fontSize = options.fontSize;\r\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\r\n            fontSize = (editorFontSize * .9) | 0;\r\n        }\r\n        const fontFamily = options.fontFamily || this._editor.getOption(41 /* fontFamily */);\r\n        return { fontSize, fontFamily };\r\n    }\r\n    _removeAllDecorations() {\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, []);\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = [];\r\n    }\r\n};\r\nInlayHintsController.ID = 'editor.contrib.InlayHints';\r\nInlayHintsController = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService),\r\n    __param(3, IConfigurationService)\r\n], InlayHintsController);\r\nexport { InlayHintsController };\r\nfunction fixSpace(str) {\r\n    const noBreakWhitespace = '\\xa0';\r\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\r\n}\r\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\r\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, range] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Range.isIRange(range));\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const data = yield getInlayHints(ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\r\n        return flatten(data.map(item => item.list)).sort((a, b) => Position.compare(a.position, b.position));\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class InPlaceReplaceCommand {\r\n    constructor(editRange, originalSelection, text) {\r\n        this._editRange = editRange;\r\n        this._originalSelection = originalSelection;\r\n        this._text = text;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._editRange, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        const srcRange = inverseEditOperations[0].range;\r\n        if (!this._originalSelection.isEmpty()) {\r\n            // Preserve selection and extends to typed text\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\r\n        }\r\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { registerEditorAction, EditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\r\nimport { EditorState } from '../../browser/core/editorState.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { createCancelablePromise, timeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nlet InPlaceReplaceController = class InPlaceReplaceController {\r\n    constructor(editor, editorWorkerService) {\r\n        this.decorationIds = [];\r\n        this.editor = editor;\r\n        this.editorWorkerService = editorWorkerService;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(InPlaceReplaceController.ID);\r\n    }\r\n    dispose() {\r\n    }\r\n    run(source, up) {\r\n        // cancel any pending request\r\n        if (this.currentRequest) {\r\n            this.currentRequest.cancel();\r\n        }\r\n        const editorSelection = this.editor.getSelection();\r\n        const model = this.editor.getModel();\r\n        if (!model || !editorSelection) {\r\n            return undefined;\r\n        }\r\n        let selection = editorSelection;\r\n        if (selection.startLineNumber !== selection.endLineNumber) {\r\n            // Can't accept multiline selection\r\n            return undefined;\r\n        }\r\n        const state = new EditorState(this.editor, 1 /* Value */ | 4 /* Position */);\r\n        const modelURI = model.uri;\r\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\r\n        return this.currentRequest.then(result => {\r\n            if (!result || !result.range || !result.value) {\r\n                // No proper result\r\n                return;\r\n            }\r\n            if (!state.validate(this.editor)) {\r\n                // state has changed\r\n                return;\r\n            }\r\n            // Selection\r\n            let editRange = Range.lift(result.range);\r\n            let highlightRange = result.range;\r\n            let diff = result.value.length - (selection.endColumn - selection.startColumn);\r\n            // highlight\r\n            highlightRange = {\r\n                startLineNumber: highlightRange.startLineNumber,\r\n                startColumn: highlightRange.startColumn,\r\n                endLineNumber: highlightRange.endLineNumber,\r\n                endColumn: highlightRange.startColumn + result.value.length\r\n            };\r\n            if (diff > 1) {\r\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\r\n            }\r\n            // Insert new text\r\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\r\n            this.editor.pushUndoStop();\r\n            this.editor.executeCommand(source, command);\r\n            this.editor.pushUndoStop();\r\n            // add decoration\r\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\r\n                    range: highlightRange,\r\n                    options: InPlaceReplaceController.DECORATION\r\n                }]);\r\n            // remove decoration after delay\r\n            if (this.decorationRemover) {\r\n                this.decorationRemover.cancel();\r\n            }\r\n            this.decorationRemover = timeout(350);\r\n            this.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\r\n        }).catch(onUnexpectedError);\r\n    }\r\n};\r\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\r\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\r\n    description: 'in-place-replace',\r\n    className: 'valueSetReplacement'\r\n});\r\nInPlaceReplaceController = __decorate([\r\n    __param(1, IEditorWorkerService)\r\n], InPlaceReplaceController);\r\nclass InPlaceReplaceUp extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inPlaceReplace.up',\r\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\r\n            alias: 'Replace with Previous Value',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 82 /* US_COMMA */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = InPlaceReplaceController.get(editor);\r\n        if (!controller) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return controller.run(this.id, true);\r\n    }\r\n}\r\nclass InPlaceReplaceDown extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inPlaceReplace.down',\r\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\r\n            alias: 'Replace with Next Value',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = InPlaceReplaceController.get(editor);\r\n        if (!controller) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return controller.run(this.id, false);\r\n    }\r\n}\r\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\r\nregisterEditorAction(InPlaceReplaceUp);\r\nregisterEditorAction(InPlaceReplaceDown);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorBracketMatchBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../core/editOperation.js';\r\nimport { Range } from '../core/range.js';\r\nexport class TrimTrailingWhitespaceCommand {\r\n    constructor(selection, cursors) {\r\n        this._selection = selection;\r\n        this._cursors = cursors;\r\n        this._selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let ops = trimTrailingWhitespace(model, this._cursors);\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            let op = ops[i];\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this._selectionId = builder.trackSelection(this._selection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\n/**\r\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\r\n */\r\nexport function trimTrailingWhitespace(model, cursors) {\r\n    // Sort cursors ascending\r\n    cursors.sort((a, b) => {\r\n        if (a.lineNumber === b.lineNumber) {\r\n            return a.column - b.column;\r\n        }\r\n        return a.lineNumber - b.lineNumber;\r\n    });\r\n    // Reduce multiple cursors on the same line and only keep the last one on the line\r\n    for (let i = cursors.length - 2; i >= 0; i--) {\r\n        if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\r\n            // Remove cursor at `i`\r\n            cursors.splice(i, 1);\r\n        }\r\n    }\r\n    let r = [];\r\n    let rLen = 0;\r\n    let cursorIndex = 0;\r\n    let cursorLen = cursors.length;\r\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        let lineContent = model.getLineContent(lineNumber);\r\n        let maxLineColumn = lineContent.length + 1;\r\n        let minEditColumn = 0;\r\n        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\r\n            minEditColumn = cursors[cursorIndex].column;\r\n            cursorIndex++;\r\n            if (minEditColumn === maxLineColumn) {\r\n                // The cursor is at the end of the line => no edits for sure on this line\r\n                continue;\r\n            }\r\n        }\r\n        if (lineContent.length === 0) {\r\n            continue;\r\n        }\r\n        let lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\r\n        let fromColumn = 0;\r\n        if (lastNonWhitespaceIndex === -1) {\r\n            // Entire line is whitespace\r\n            fromColumn = 1;\r\n        }\r\n        else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\r\n            // There is trailing whitespace\r\n            fromColumn = lastNonWhitespaceIndex + 2;\r\n        }\r\n        else {\r\n            // There is no trailing whitespace\r\n            continue;\r\n        }\r\n        fromColumn = Math.max(minEditColumn, fromColumn);\r\n        r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\r\n    }\r\n    return r;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class CopyLinesCommand {\r\n    constructor(selection, isCopyingDown, noop) {\r\n        this._selection = selection;\r\n        this._isCopyingDown = isCopyingDown;\r\n        this._noop = noop || false;\r\n        this._selectionDirection = 0 /* LTR */;\r\n        this._selectionId = null;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let s = this._selection;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._endLineNumberDelta = 1;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        let sourceLines = [];\r\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            sourceLines.push(model.getLineContent(i));\r\n        }\r\n        const sourceText = sourceLines.join('\\n');\r\n        if (sourceText === '') {\r\n            // Duplicating empty line\r\n            if (this._isCopyingDown) {\r\n                this._startLineNumberDelta++;\r\n                this._endLineNumberDelta++;\r\n            }\r\n        }\r\n        if (this._noop) {\r\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\r\n        }\r\n        else {\r\n            if (!this._isCopyingDown) {\r\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\r\n            }\r\n            else {\r\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        this._selectionDirection = this._selection.getDirection();\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\r\n            let startLineNumber = result.startLineNumber;\r\n            let startColumn = result.startColumn;\r\n            let endLineNumber = result.endLineNumber;\r\n            let endColumn = result.endColumn;\r\n            if (this._startLineNumberDelta !== 0) {\r\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\r\n                startColumn = 1;\r\n            }\r\n            if (this._endLineNumberDelta !== 0) {\r\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\r\n                endColumn = 1;\r\n            }\r\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { ShiftCommand } from '../../common/commands/shiftCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { IndentAction } from '../../common/modes/languageConfiguration.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport * as indentUtils from '../indentation/indentUtils.js';\r\nexport class MoveLinesCommand {\r\n    constructor(selection, isMovingDown, autoIndent) {\r\n        this._selection = selection;\r\n        this._isMovingDown = isMovingDown;\r\n        this._autoIndent = autoIndent;\r\n        this._selectionId = null;\r\n        this._moveEndLineSelectionShrink = false;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let modelLineCount = model.getLineCount();\r\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\r\n            this._selectionId = builder.trackSelection(this._selection);\r\n            return;\r\n        }\r\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\r\n            this._selectionId = builder.trackSelection(this._selection);\r\n            return;\r\n        }\r\n        this._moveEndPositionDown = false;\r\n        let s = this._selection;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._moveEndPositionDown = true;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n        let indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\r\n        let virtualModel = {\r\n            getLineTokens: (lineNumber) => {\r\n                return model.getLineTokens(lineNumber);\r\n            },\r\n            getLanguageIdentifier: () => {\r\n                return model.getLanguageIdentifier();\r\n            },\r\n            getLanguageIdAtPosition: (lineNumber, column) => {\r\n                return model.getLanguageIdAtPosition(lineNumber, column);\r\n            },\r\n            getLineContent: null,\r\n        };\r\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\r\n            // Current line is empty\r\n            let lineNumber = s.startLineNumber;\r\n            let otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\r\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\r\n                // Other line number is empty too, so no editing is needed\r\n                // Add a no-op to force running by the model\r\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\r\n            }\r\n            else {\r\n                // Type content from other line number on line number\r\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\r\n                // Remove content from other line number\r\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\r\n            }\r\n            // Track selection at the other line number\r\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\r\n        }\r\n        else {\r\n            let movingLineNumber;\r\n            let movingLineText;\r\n            if (this._isMovingDown) {\r\n                movingLineNumber = s.endLineNumber + 1;\r\n                movingLineText = model.getLineContent(movingLineNumber);\r\n                // Delete line that needs to be moved\r\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\r\n                let insertingText = movingLineText;\r\n                if (this.shouldAutoIndent(model, s)) {\r\n                    let movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\r\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\r\n                    if (movingLineMatchResult !== null) {\r\n                        let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\r\n                        let newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                        let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\r\n                    }\r\n                    else {\r\n                        // no enter rule matches, let's check indentatin rules then.\r\n                        virtualModel.getLineContent = (lineNumber) => {\r\n                            if (lineNumber === s.startLineNumber) {\r\n                                return model.getLineContent(movingLineNumber);\r\n                            }\r\n                            else {\r\n                                return model.getLineContent(lineNumber);\r\n                            }\r\n                        };\r\n                        let indentOfMovingLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter);\r\n                        if (indentOfMovingLine !== null) {\r\n                            let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\r\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\r\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\r\n                            }\r\n                        }\r\n                    }\r\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\r\n                    // to s.startLineNumber\r\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\r\n                    let ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\r\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\r\n                    if (ret !== null) {\r\n                        if (ret !== 0) {\r\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // it doesn't match onEnter rules, let's check indentation rules then.\r\n                        virtualModel.getLineContent = (lineNumber) => {\r\n                            if (lineNumber === s.startLineNumber) {\r\n                                return insertingText;\r\n                            }\r\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\r\n                                return model.getLineContent(lineNumber - 1);\r\n                            }\r\n                            else {\r\n                                return model.getLineContent(lineNumber);\r\n                            }\r\n                        };\r\n                        let newIndentatOfMovingBlock = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter);\r\n                        if (newIndentatOfMovingBlock !== null) {\r\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\r\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\r\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\r\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Insert line that needs to be moved before\r\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\r\n                }\r\n            }\r\n            else {\r\n                movingLineNumber = s.startLineNumber - 1;\r\n                movingLineText = model.getLineContent(movingLineNumber);\r\n                // Delete line that needs to be moved\r\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\r\n                // Insert line that needs to be moved after\r\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\r\n                if (this.shouldAutoIndent(model, s)) {\r\n                    virtualModel.getLineContent = (lineNumber) => {\r\n                        if (lineNumber === movingLineNumber) {\r\n                            return model.getLineContent(s.startLineNumber);\r\n                        }\r\n                        else {\r\n                            return model.getLineContent(lineNumber);\r\n                        }\r\n                    };\r\n                    let ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\r\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\r\n                    if (ret !== null) {\r\n                        if (ret !== 0) {\r\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\r\n                        let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter);\r\n                        if (indentOfFirstLine !== null) {\r\n                            // adjust the indentation of the moving block\r\n                            let oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\r\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\r\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                let spaceCntOffset = newSpaceCnt - oldSpaceCnt;\r\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n    }\r\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\r\n        return {\r\n            shiftIndent: (indentation) => {\r\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            },\r\n            unshiftIndent: (indentation) => {\r\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            }\r\n        };\r\n    }\r\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\r\n        if (enter) {\r\n            let enterPrefix = enter.indentation;\r\n            if (enter.indentAction === IndentAction.None) {\r\n                enterPrefix = enter.indentation + enter.appendText;\r\n            }\r\n            else if (enter.indentAction === IndentAction.Indent) {\r\n                enterPrefix = enter.indentation + enter.appendText;\r\n            }\r\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\r\n                enterPrefix = enter.indentation;\r\n            }\r\n            else if (enter.indentAction === IndentAction.Outdent) {\r\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\r\n            }\r\n            let movingLineText = model.getLineContent(line);\r\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\r\n                let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\r\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\r\n                let indentMetadataOfMovelingLine = LanguageConfigurationRegistry.getIndentMetadata(model, line);\r\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* DECREASE_MASK */) {\r\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\r\n                }\r\n                let newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\r\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                return newSpaceCnt - oldSpaceCnt;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     * @param model\r\n     * @param indentConverter\r\n     * @param tabSize\r\n     * @param line the line moving down\r\n     * @param futureAboveLineNumber the line which will be at the `line` position\r\n     * @param futureAboveLineText\r\n     */\r\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\r\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\r\n            // break\r\n            let maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\r\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn));\r\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n        }\r\n        else {\r\n            // go upwards, starting from `line - 1`\r\n            let validPrecedingLine = line - 1;\r\n            while (validPrecedingLine >= 1) {\r\n                let lineContent = model.getLineContent(validPrecedingLine);\r\n                let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\r\n                if (nonWhitespaceIdx >= 0) {\r\n                    break;\r\n                }\r\n                validPrecedingLine--;\r\n            }\r\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\r\n                return null;\r\n            }\r\n            let maxColumn = model.getLineMaxColumn(validPrecedingLine);\r\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\r\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n        }\r\n    }\r\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\r\n        let validPrecedingLine = oneLineAbove;\r\n        while (validPrecedingLine >= 1) {\r\n            // ship empty lines as empty lines just inherit indentation\r\n            let lineContent;\r\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\r\n                lineContent = previousLineText;\r\n            }\r\n            else {\r\n                lineContent = model.getLineContent(validPrecedingLine);\r\n            }\r\n            let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\r\n            if (nonWhitespaceIdx >= 0) {\r\n                break;\r\n            }\r\n            validPrecedingLine--;\r\n        }\r\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\r\n            return null;\r\n        }\r\n        let maxColumn = model.getLineMaxColumn(validPrecedingLine);\r\n        let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\r\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n    }\r\n    trimLeft(str) {\r\n        return str.replace(/^\\s+/, '');\r\n    }\r\n    shouldAutoIndent(model, selection) {\r\n        if (this._autoIndent < 4 /* Full */) {\r\n            return false;\r\n        }\r\n        // if it's not easy to tokenize, we stop auto indent.\r\n        if (!model.isCheapToTokenize(selection.startLineNumber)) {\r\n            return false;\r\n        }\r\n        let languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\r\n        let languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\r\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\r\n            return false;\r\n        }\r\n        if (LanguageConfigurationRegistry.getIndentRulesSupport(languageAtSelectionStart) === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\r\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            let lineContent = model.getLineContent(i);\r\n            let originalIndent = strings.getLeadingWhitespace(lineContent);\r\n            let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\r\n            let newSpacesCnt = originalSpacesCnt + offset;\r\n            let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\r\n            if (newIndent !== originalIndent) {\r\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\r\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\r\n                    // as users select part of the original indent white spaces\r\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\r\n                    this._moveEndLineSelectionShrink = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._moveEndPositionDown) {\r\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\r\n        }\r\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\r\n            result = result.setEndPosition(result.endLineNumber, 2);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class SortLinesCommand {\r\n    constructor(selection, descending) {\r\n        this.selection = selection;\r\n        this.descending = descending;\r\n        this.selectionId = null;\r\n    }\r\n    static getCollator() {\r\n        if (!SortLinesCommand._COLLATOR) {\r\n            SortLinesCommand._COLLATOR = new Intl.Collator();\r\n        }\r\n        return SortLinesCommand._COLLATOR;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let op = sortLines(model, this.selection, this.descending);\r\n        if (op) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n    static canRun(model, selection, descending) {\r\n        if (model === null) {\r\n            return false;\r\n        }\r\n        let data = getSortData(model, selection, descending);\r\n        if (!data) {\r\n            return false;\r\n        }\r\n        for (let i = 0, len = data.before.length; i < len; i++) {\r\n            if (data.before[i] !== data.after[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nSortLinesCommand._COLLATOR = null;\r\nfunction getSortData(model, selection, descending) {\r\n    let startLineNumber = selection.startLineNumber;\r\n    let endLineNumber = selection.endLineNumber;\r\n    if (selection.endColumn === 1) {\r\n        endLineNumber--;\r\n    }\r\n    // Nothing to sort if user didn't select anything.\r\n    if (startLineNumber >= endLineNumber) {\r\n        return null;\r\n    }\r\n    let linesToSort = [];\r\n    // Get the contents of the selection to be sorted.\r\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        linesToSort.push(model.getLineContent(lineNumber));\r\n    }\r\n    let sorted = linesToSort.slice(0);\r\n    sorted.sort(SortLinesCommand.getCollator().compare);\r\n    // If descending, reverse the order.\r\n    if (descending === true) {\r\n        sorted = sorted.reverse();\r\n    }\r\n    return {\r\n        startLineNumber: startLineNumber,\r\n        endLineNumber: endLineNumber,\r\n        before: linesToSort,\r\n        after: sorted\r\n    };\r\n}\r\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\r\nfunction sortLines(model, selection, descending) {\r\n    let data = getSortData(model, selection, descending);\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\r\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\r\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CopyLinesCommand } from './copyLinesCommand.js';\r\nimport { MoveLinesCommand } from './moveLinesCommand.js';\r\nimport { SortLinesCommand } from './sortLinesCommand.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\n// copy lines\r\nclass AbstractCopyLinesAction extends EditorAction {\r\n    constructor(down, opts) {\r\n        super(opts);\r\n        this.down = down;\r\n    }\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\r\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        // Remove selections that would result in copying the same line\r\n        let prev = selections[0];\r\n        for (let i = 1; i < selections.length; i++) {\r\n            const curr = selections[i];\r\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\r\n                // these two selections would copy the same line\r\n                if (prev.index < curr.index) {\r\n                    // prev wins\r\n                    curr.ignore = true;\r\n                }\r\n                else {\r\n                    // curr wins\r\n                    prev.ignore = true;\r\n                    prev = curr;\r\n                }\r\n            }\r\n        }\r\n        const commands = [];\r\n        for (const selection of selections) {\r\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.copyLinesUpAction',\r\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\r\n            alias: 'Copy Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.copyLinesDownAction',\r\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\r\n            alias: 'Copy Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DuplicateSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.duplicateSelection',\r\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\r\n            alias: 'Duplicate Selection',\r\n            precondition: EditorContextKeys.writable,\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\r\n                order: 5\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const commands = [];\r\n        const selections = editor.getSelections();\r\n        const model = editor.getModel();\r\n        for (const selection of selections) {\r\n            if (selection.isEmpty()) {\r\n                commands.push(new CopyLinesCommand(selection, true));\r\n            }\r\n            else {\r\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\r\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\n// move lines\r\nclass AbstractMoveLinesAction extends EditorAction {\r\n    constructor(down, opts) {\r\n        super(opts);\r\n        this.down = down;\r\n    }\r\n    run(_accessor, editor) {\r\n        let commands = [];\r\n        let selections = editor.getSelections() || [];\r\n        const autoIndent = editor.getOption(9 /* autoIndent */);\r\n        for (const selection of selections) {\r\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.moveLinesUpAction',\r\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\r\n            alias: 'Move Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.moveLinesDownAction',\r\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\r\n            alias: 'Move Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\r\n                order: 4\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class AbstractSortLinesAction extends EditorAction {\r\n    constructor(descending, opts) {\r\n        super(opts);\r\n        this.descending = descending;\r\n    }\r\n    run(_accessor, editor) {\r\n        const selections = editor.getSelections() || [];\r\n        for (const selection of selections) {\r\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\r\n                return;\r\n            }\r\n        }\r\n        let commands = [];\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.sortLinesAscending',\r\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\r\n            alias: 'Sort Lines Ascending',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.sortLinesDescending',\r\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\r\n            alias: 'Sort Lines Descending',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class TrimTrailingWhitespaceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TrimTrailingWhitespaceAction.ID,\r\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\r\n            alias: 'Trim Trailing Whitespace',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 54 /* KEY_X */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, args) {\r\n        let cursors = [];\r\n        if (args.reason === 'auto-save') {\r\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\r\n            // It is very convenient for the editor config extension to invoke this action.\r\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\r\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\r\n        }\r\n        let selection = editor.getSelection();\r\n        if (selection === null) {\r\n            return;\r\n        }\r\n        let command = new TrimTrailingWhitespaceCommand(selection, cursors);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\r\nexport class DeleteLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.deleteLines',\r\n            label: nls.localize('lines.delete', \"Delete Line\"),\r\n            alias: 'Delete Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KEY_K */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let ops = this._getLinesToRemove(editor);\r\n        let model = editor.getModel();\r\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n            // Model is empty\r\n            return;\r\n        }\r\n        let linesDeleted = 0;\r\n        let edits = [];\r\n        let cursorState = [];\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            const op = ops[i];\r\n            let startLineNumber = op.startLineNumber;\r\n            let endLineNumber = op.endLineNumber;\r\n            let startColumn = 1;\r\n            let endColumn = model.getLineMaxColumn(endLineNumber);\r\n            if (endLineNumber < model.getLineCount()) {\r\n                endLineNumber += 1;\r\n                endColumn = 1;\r\n            }\r\n            else if (startLineNumber > 1) {\r\n                startLineNumber -= 1;\r\n                startColumn = model.getLineMaxColumn(startLineNumber);\r\n            }\r\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\r\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\r\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, cursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n    _getLinesToRemove(editor) {\r\n        // Construct delete operations\r\n        let operations = editor.getSelections().map((s) => {\r\n            let endLineNumber = s.endLineNumber;\r\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n                endLineNumber -= 1;\r\n            }\r\n            return {\r\n                startLineNumber: s.startLineNumber,\r\n                selectionStartColumn: s.selectionStartColumn,\r\n                endLineNumber: endLineNumber,\r\n                positionColumn: s.positionColumn\r\n            };\r\n        });\r\n        // Sort delete operations\r\n        operations.sort((a, b) => {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                return a.endLineNumber - b.endLineNumber;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        });\r\n        // Merge delete operations which are adjacent or overlapping\r\n        let mergedOperations = [];\r\n        let previousOperation = operations[0];\r\n        for (let i = 1; i < operations.length; i++) {\r\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\r\n                // Merge current operations into the previous one\r\n                previousOperation.endLineNumber = operations[i].endLineNumber;\r\n            }\r\n            else {\r\n                // Push previous operation\r\n                mergedOperations.push(previousOperation);\r\n                previousOperation = operations[i];\r\n            }\r\n        }\r\n        // Push the last operation\r\n        mergedOperations.push(previousOperation);\r\n        return mergedOperations;\r\n    }\r\n}\r\nexport class IndentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.indentLines',\r\n            label: nls.localize('lines.indent', \"Indent Line\"),\r\n            alias: 'Indent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass OutdentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.outdentLines',\r\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\r\n            alias: 'Outdent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\r\n    }\r\n}\r\nexport class InsertLineBeforeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertLineBefore',\r\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\r\n            alias: 'Insert Line Above',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n    }\r\n}\r\nexport class InsertLineAfterAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertLineAfter',\r\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\r\n            alias: 'Insert Line Below',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n    }\r\n}\r\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const primaryCursor = editor.getSelection();\r\n        let rangesToDelete = this._getRangesToDelete(editor);\r\n        // merge overlapping selections\r\n        let effectiveRanges = [];\r\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\r\n            let range = rangesToDelete[i];\r\n            let nextRange = rangesToDelete[i + 1];\r\n            if (Range.intersectRanges(range, nextRange) === null) {\r\n                effectiveRanges.push(range);\r\n            }\r\n            else {\r\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\r\n            }\r\n        }\r\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\r\n        let endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\r\n        let edits = effectiveRanges.map(range => {\r\n            return EditOperation.replace(range, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteAllLeft',\r\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\r\n            alias: 'Delete All Left',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _getEndCursorState(primaryCursor, rangesToDelete) {\r\n        let endPrimaryCursor = null;\r\n        let endCursorState = [];\r\n        let deletedLines = 0;\r\n        rangesToDelete.forEach(range => {\r\n            let endCursor;\r\n            if (range.endColumn === 1 && deletedLines > 0) {\r\n                let newStartLine = range.startLineNumber - deletedLines;\r\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\r\n            }\r\n            else {\r\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n            }\r\n            deletedLines += range.endLineNumber - range.startLineNumber;\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        });\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    }\r\n    _getRangesToDelete(editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        let rangesToDelete = selections;\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        rangesToDelete = rangesToDelete.map(selection => {\r\n            if (selection.isEmpty()) {\r\n                if (selection.startColumn === 1) {\r\n                    let deleteFromLine = Math.max(1, selection.startLineNumber - 1);\r\n                    let deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\r\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\r\n                }\r\n                else {\r\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\r\n                }\r\n            }\r\n            else {\r\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\r\n            }\r\n        });\r\n        return rangesToDelete;\r\n    }\r\n}\r\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteAllRight',\r\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\r\n            alias: 'Delete All Right',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KEY_K */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _getEndCursorState(primaryCursor, rangesToDelete) {\r\n        let endPrimaryCursor = null;\r\n        let endCursorState = [];\r\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\r\n            let range = rangesToDelete[i];\r\n            let endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        }\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    }\r\n    _getRangesToDelete(editor) {\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        let rangesToDelete = selections.map((sel) => {\r\n            if (sel.isEmpty()) {\r\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\r\n                if (sel.startColumn === maxColumn) {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\r\n                }\r\n                else {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\r\n                }\r\n            }\r\n            return sel;\r\n        });\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        return rangesToDelete;\r\n    }\r\n}\r\nexport class JoinLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.joinLines',\r\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\r\n            alias: 'Join Lines',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KEY_J */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let primaryCursor = editor.getSelection();\r\n        if (primaryCursor === null) {\r\n            return;\r\n        }\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        let reducedSelections = [];\r\n        let lastSelection = selections.reduce((previousValue, currentValue) => {\r\n            if (previousValue.isEmpty()) {\r\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\r\n                    if (primaryCursor.equalsSelection(previousValue)) {\r\n                        primaryCursor = currentValue;\r\n                    }\r\n                    return currentValue;\r\n                }\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n            else {\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n        });\r\n        reducedSelections.push(lastSelection);\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        let edits = [];\r\n        let endCursorState = [];\r\n        let endPrimaryCursor = primaryCursor;\r\n        let lineOffset = 0;\r\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\r\n            let selection = reducedSelections[i];\r\n            let startLineNumber = selection.startLineNumber;\r\n            let startColumn = 1;\r\n            let columnDeltaOffset = 0;\r\n            let endLineNumber, endColumn;\r\n            let selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\r\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\r\n                let position = selection.getStartPosition();\r\n                if (position.lineNumber < model.getLineCount()) {\r\n                    endLineNumber = startLineNumber + 1;\r\n                    endColumn = model.getLineMaxColumn(endLineNumber);\r\n                }\r\n                else {\r\n                    endLineNumber = position.lineNumber;\r\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\r\n                }\r\n            }\r\n            else {\r\n                endLineNumber = selection.endLineNumber;\r\n                endColumn = model.getLineMaxColumn(endLineNumber);\r\n            }\r\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\r\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\r\n                let lineText = model.getLineContent(i);\r\n                let firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\r\n                if (firstNonWhitespaceIdx >= 1) {\r\n                    let insertSpace = true;\r\n                    if (trimmedLinesContent === '') {\r\n                        insertSpace = false;\r\n                    }\r\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\r\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\r\n                        insertSpace = false;\r\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\r\n                    }\r\n                    let lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\r\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\r\n                    if (insertSpace) {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\r\n                    }\r\n                    else {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length;\r\n                    }\r\n                }\r\n                else {\r\n                    columnDeltaOffset = 0;\r\n                }\r\n            }\r\n            let deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            if (!deleteSelection.isEmpty()) {\r\n                let resultSelection;\r\n                if (selection.isEmpty()) {\r\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\r\n                }\r\n                else {\r\n                    if (selection.startLineNumber === selection.endLineNumber) {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\r\n                    }\r\n                    else {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\r\n                    }\r\n                }\r\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\r\n                    endPrimaryCursor = resultSelection;\r\n                }\r\n                else {\r\n                    endCursorState.push(resultSelection);\r\n                }\r\n            }\r\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\r\n        }\r\n        endCursorState.unshift(endPrimaryCursor);\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class TransposeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transpose',\r\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\r\n            alias: 'Transpose characters around the cursor',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        let commands = [];\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            let cursor = selection.getStartPosition();\r\n            let maxColumn = model.getLineMaxColumn(cursor.lineNumber);\r\n            if (cursor.column >= maxColumn) {\r\n                if (cursor.lineNumber === model.getLineCount()) {\r\n                    continue;\r\n                }\r\n                // The cursor is at the end of current line and current line is not empty\r\n                // then we transpose the character before the cursor and the line break if there is any following line.\r\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\r\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\r\n            }\r\n            else {\r\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\r\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class AbstractCaseAction extends EditorAction {\r\n    run(_accessor, editor) {\r\n        const selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        const wordSeparators = editor.getOption(116 /* wordSeparators */);\r\n        const textEdits = [];\r\n        for (const selection of selections) {\r\n            if (selection.isEmpty()) {\r\n                const cursor = selection.getStartPosition();\r\n                const word = editor.getConfiguredWordAtPosition(cursor);\r\n                if (!word) {\r\n                    continue;\r\n                }\r\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\r\n                const text = model.getValueInRange(wordRange);\r\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\r\n            }\r\n            else {\r\n                const text = model.getValueInRange(selection);\r\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, textEdits);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class UpperCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToUppercase',\r\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\r\n            alias: 'Transform to Uppercase',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        return text.toLocaleUpperCase();\r\n    }\r\n}\r\nexport class LowerCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToLowercase',\r\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\r\n            alias: 'Transform to Lowercase',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        return text.toLocaleLowerCase();\r\n    }\r\n}\r\nexport class TitleCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToTitlecase',\r\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\r\n            alias: 'Transform to Title Case',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        const separators = '\\r\\n\\t ' + wordSeparators;\r\n        const excludedChars = separators.split('');\r\n        let title = '';\r\n        let startUpperCase = true;\r\n        for (let i = 0; i < text.length; i++) {\r\n            let currentChar = text[i];\r\n            if (excludedChars.indexOf(currentChar) >= 0) {\r\n                startUpperCase = true;\r\n                title += currentChar;\r\n            }\r\n            else if (startUpperCase) {\r\n                startUpperCase = false;\r\n                title += currentChar.toLocaleUpperCase();\r\n            }\r\n            else {\r\n                title += currentChar.toLocaleLowerCase();\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n}\r\nclass BackwardsCompatibleRegExp {\r\n    constructor(_pattern, _flags) {\r\n        this._pattern = _pattern;\r\n        this._flags = _flags;\r\n        this._actual = null;\r\n        this._evaluated = false;\r\n    }\r\n    get() {\r\n        if (!this._evaluated) {\r\n            this._evaluated = true;\r\n            try {\r\n                this._actual = new RegExp(this._pattern, this._flags);\r\n            }\r\n            catch (err) {\r\n                // this browser does not support this regular expression\r\n            }\r\n        }\r\n        return this._actual;\r\n    }\r\n    isSupported() {\r\n        return (this.get() !== null);\r\n    }\r\n}\r\nexport class SnakeCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToSnakecase',\r\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\r\n            alias: 'Transform to Snake Case',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        const regExp1 = SnakeCaseAction.regExp1.get();\r\n        const regExp2 = SnakeCaseAction.regExp2.get();\r\n        if (!regExp1 || !regExp2) {\r\n            // cannot support this\r\n            return text;\r\n        }\r\n        return (text\r\n            .replace(regExp1, '$1_$2')\r\n            .replace(regExp2, '$1_$2$3')\r\n            .toLocaleLowerCase());\r\n    }\r\n}\r\nSnakeCaseAction.regExp1 = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\r\nSnakeCaseAction.regExp2 = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\r\nregisterEditorAction(CopyLinesUpAction);\r\nregisterEditorAction(CopyLinesDownAction);\r\nregisterEditorAction(DuplicateSelectionAction);\r\nregisterEditorAction(MoveLinesUpAction);\r\nregisterEditorAction(MoveLinesDownAction);\r\nregisterEditorAction(SortLinesAscendingAction);\r\nregisterEditorAction(SortLinesDescendingAction);\r\nregisterEditorAction(TrimTrailingWhitespaceAction);\r\nregisterEditorAction(DeleteLinesAction);\r\nregisterEditorAction(IndentLinesAction);\r\nregisterEditorAction(OutdentLinesAction);\r\nregisterEditorAction(InsertLineBeforeAction);\r\nregisterEditorAction(InsertLineAfterAction);\r\nregisterEditorAction(DeleteAllLeftAction);\r\nregisterEditorAction(DeleteAllRightAction);\r\nregisterEditorAction(JoinLinesAction);\r\nregisterEditorAction(TransposeAction);\r\nregisterEditorAction(UpperCaseAction);\r\nregisterEditorAction(LowerCaseAction);\r\nregisterEditorAction(TitleCaseAction);\r\nif (SnakeCaseAction.regExp1.isSupported() && SnakeCaseAction.regExp2.isSupported()) {\r\n    registerEditorAction(SnakeCaseAction);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { registerEditorContribution, registerModelAndPositionCommand, EditorAction, EditorCommand, registerEditorAction, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedEditingRangeProviderRegistry } from '../../common/modes.js';\r\nimport { first, createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ContextKeyExpr, RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { isPromiseCanceledError, onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\r\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\r\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this._debounceDuration = 200;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._editor = editor;\r\n        this._enabled = false;\r\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\r\n        this._currentDecorations = [];\r\n        this._languageWordPattern = null;\r\n        this._currentWordPattern = null;\r\n        this._ignoreChangeEvent = false;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._rangeUpdateTriggerPromise = null;\r\n        this._rangeSyncTriggerPromise = null;\r\n        this._currentRequest = null;\r\n        this._currentRequestPosition = null;\r\n        this._currentRequestModelVersion = null;\r\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\r\n        this._register(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(61 /* linkedEditing */) || e.hasChanged(81 /* renameOnType */)) {\r\n                this.reinitialize(false);\r\n            }\r\n        }));\r\n        this._register(LinkedEditingRangeProviderRegistry.onDidChange(() => this.reinitialize(false)));\r\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\r\n        this.reinitialize(true);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(LinkedEditingContribution.ID);\r\n    }\r\n    reinitialize(forceRefresh) {\r\n        const model = this._editor.getModel();\r\n        const isEnabled = model !== null && (this._editor.getOption(61 /* linkedEditing */) || this._editor.getOption(81 /* renameOnType */)) && LinkedEditingRangeProviderRegistry.has(model);\r\n        if (isEnabled === this._enabled && !forceRefresh) {\r\n            return;\r\n        }\r\n        this._enabled = isEnabled;\r\n        this.clearRanges();\r\n        this._localToDispose.clear();\r\n        if (!isEnabled || model === null) {\r\n            return;\r\n        }\r\n        this._languageWordPattern = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n        this._localToDispose.add(model.onDidChangeLanguageConfiguration(() => {\r\n            this._languageWordPattern = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n        }));\r\n        const rangeUpdateScheduler = new Delayer(this._debounceDuration);\r\n        const triggerRangeUpdate = () => {\r\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), this._debounceDuration);\r\n        };\r\n        const rangeSyncScheduler = new Delayer(0);\r\n        const triggerRangeSync = (decorations) => {\r\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(decorations));\r\n        };\r\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\r\n            triggerRangeUpdate();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\r\n            if (!this._ignoreChangeEvent) {\r\n                if (this._currentDecorations.length > 0) {\r\n                    const referenceRange = model.getDecorationRange(this._currentDecorations[0]);\r\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\r\n                        triggerRangeSync(this._currentDecorations);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            triggerRangeUpdate();\r\n        }));\r\n        this._localToDispose.add({\r\n            dispose: () => {\r\n                rangeUpdateScheduler.cancel();\r\n                rangeSyncScheduler.cancel();\r\n            }\r\n        });\r\n        this.updateRanges();\r\n    }\r\n    _syncRanges(decorations) {\r\n        // dalayed invocation, make sure we're still on\r\n        if (!this._editor.hasModel() || decorations !== this._currentDecorations || decorations.length === 0) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const referenceRange = model.getDecorationRange(decorations[0]);\r\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\r\n            return this.clearRanges();\r\n        }\r\n        const referenceValue = model.getValueInRange(referenceRange);\r\n        if (this._currentWordPattern) {\r\n            const match = referenceValue.match(this._currentWordPattern);\r\n            const matchLength = match ? match[0].length : 0;\r\n            if (matchLength !== referenceValue.length) {\r\n                return this.clearRanges();\r\n            }\r\n        }\r\n        let edits = [];\r\n        for (let i = 1, len = decorations.length; i < len; i++) {\r\n            const mirrorRange = model.getDecorationRange(decorations[i]);\r\n            if (!mirrorRange) {\r\n                continue;\r\n            }\r\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\r\n                edits.push({\r\n                    range: mirrorRange,\r\n                    text: referenceValue\r\n                });\r\n            }\r\n            else {\r\n                let oldValue = model.getValueInRange(mirrorRange);\r\n                let newValue = referenceValue;\r\n                let rangeStartColumn = mirrorRange.startColumn;\r\n                let rangeEndColumn = mirrorRange.endColumn;\r\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\r\n                rangeStartColumn += commonPrefixLength;\r\n                oldValue = oldValue.substr(commonPrefixLength);\r\n                newValue = newValue.substr(commonPrefixLength);\r\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\r\n                rangeEndColumn -= commonSuffixLength;\r\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\r\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\r\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\r\n                    edits.push({\r\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\r\n                        text: newValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (edits.length === 0) {\r\n            return;\r\n        }\r\n        try {\r\n            this._editor.popUndoStop();\r\n            this._ignoreChangeEvent = true;\r\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\r\n            this._editor.executeEdits('linkedEditing', edits);\r\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\r\n        }\r\n        finally {\r\n            this._ignoreChangeEvent = false;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.clearRanges();\r\n        super.dispose();\r\n    }\r\n    clearRanges() {\r\n        this._visibleContextKey.set(false);\r\n        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, []);\r\n        if (this._currentRequest) {\r\n            this._currentRequest.cancel();\r\n            this._currentRequest = null;\r\n            this._currentRequestPosition = null;\r\n        }\r\n    }\r\n    updateRanges(force = false) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                this.clearRanges();\r\n                return;\r\n            }\r\n            const position = this._editor.getPosition();\r\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\r\n                // disabled or multicursor\r\n                this.clearRanges();\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const modelVersionId = model.getVersionId();\r\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\r\n                if (position.equals(this._currentRequestPosition)) {\r\n                    return; // same position\r\n                }\r\n                if (this._currentDecorations && this._currentDecorations.length > 0) {\r\n                    const range = model.getDecorationRange(this._currentDecorations[0]);\r\n                    if (range && range.containsPosition(position)) {\r\n                        return; // just moving inside the existing primary range\r\n                    }\r\n                }\r\n            }\r\n            this._currentRequestPosition = position;\r\n            this._currentRequestModelVersion = modelVersionId;\r\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const response = yield getLinkedEditingRanges(model, position, token);\r\n                    if (request !== this._currentRequest) {\r\n                        return;\r\n                    }\r\n                    this._currentRequest = null;\r\n                    if (modelVersionId !== model.getVersionId()) {\r\n                        return;\r\n                    }\r\n                    let ranges = [];\r\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\r\n                        ranges = response.ranges;\r\n                    }\r\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\r\n                    let foundReferenceRange = false;\r\n                    for (let i = 0, len = ranges.length; i < len; i++) {\r\n                        if (Range.containsPosition(ranges[i], position)) {\r\n                            foundReferenceRange = true;\r\n                            if (i !== 0) {\r\n                                const referenceRange = ranges[i];\r\n                                ranges.splice(i, 1);\r\n                                ranges.unshift(referenceRange);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!foundReferenceRange) {\r\n                        // Cannot do linked editing if the ranges are not where the cursor is...\r\n                        this.clearRanges();\r\n                        return;\r\n                    }\r\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\r\n                    this._visibleContextKey.set(true);\r\n                    this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, decorations);\r\n                }\r\n                catch (err) {\r\n                    if (!isPromiseCanceledError(err)) {\r\n                        onUnexpectedError(err);\r\n                    }\r\n                    if (this._currentRequest === request || !this._currentRequest) {\r\n                        // stop if we are still the latest request\r\n                        this.clearRanges();\r\n                    }\r\n                }\r\n            }));\r\n            this._currentRequest = request;\r\n            return request;\r\n        });\r\n    }\r\n};\r\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\r\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\r\n    description: 'linked-editing',\r\n    stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\r\n    className: DECORATION_CLASS_NAME\r\n});\r\nLinkedEditingContribution = __decorate([\r\n    __param(1, IContextKeyService)\r\n], LinkedEditingContribution);\r\nexport { LinkedEditingContribution };\r\nexport class LinkedEditingAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.linkedEditing',\r\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\r\n            alias: 'Start Linked Editing',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(_accessor, editor) {\r\n        const controller = LinkedEditingContribution.get(editor);\r\n        if (controller) {\r\n            return Promise.resolve(controller.updateRanges(true));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\r\nregisterEditorCommand(new LinkedEditingCommand({\r\n    id: 'cancelLinkedEditingInput',\r\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.clearRanges(),\r\n    kbOpts: {\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nfunction getLinkedEditingRanges(model, position, token) {\r\n    const orderedByScore = LinkedEditingRangeProviderRegistry.ordered(model);\r\n    // in order of score ask the linked editing range provider\r\n    // until someone response with a good result\r\n    // (good = not null)\r\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            return yield provider.provideLinkedEditingRanges(model, position, token);\r\n        }\r\n        catch (e) {\r\n            onUnexpectedExternalError(e);\r\n            return undefined;\r\n        }\r\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\r\n}\r\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hc: Color.fromHex('#f00').transparent(0.3) }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\r\n    if (editorLinkedEditingBackgroundColor) {\r\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\r\n    }\r\n});\r\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (model, position) => getLinkedEditingRanges(model, position, CancellationToken.None));\r\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\r\nregisterEditorAction(LinkedEditingAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport class Link {\r\n    constructor(link, provider) {\r\n        this._link = link;\r\n        this._provider = provider;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            range: this.range,\r\n            url: this.url,\r\n            tooltip: this.tooltip\r\n        };\r\n    }\r\n    get range() {\r\n        return this._link.range;\r\n    }\r\n    get url() {\r\n        return this._link.url;\r\n    }\r\n    get tooltip() {\r\n        return this._link.tooltip;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._link.url) {\r\n                return this._link.url;\r\n            }\r\n            if (typeof this._provider.resolveLink === 'function') {\r\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\r\n                    this._link = value || this._link;\r\n                    if (this._link.url) {\r\n                        // recurse\r\n                        return this.resolve(token);\r\n                    }\r\n                    return Promise.reject(new Error('missing'));\r\n                });\r\n            }\r\n            return Promise.reject(new Error('missing'));\r\n        });\r\n    }\r\n}\r\nexport class LinksList {\r\n    constructor(tuples) {\r\n        this._disposables = new DisposableStore();\r\n        let links = [];\r\n        for (const [list, provider] of tuples) {\r\n            // merge all links\r\n            const newLinks = list.links.map(link => new Link(link, provider));\r\n            links = LinksList._union(links, newLinks);\r\n            // register disposables\r\n            if (isDisposable(list)) {\r\n                this._disposables.add(list);\r\n            }\r\n        }\r\n        this.links = links;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this.links.length = 0;\r\n    }\r\n    static _union(oldLinks, newLinks) {\r\n        // reunite oldLinks with newLinks and remove duplicates\r\n        let result = [];\r\n        let oldIndex;\r\n        let oldLen;\r\n        let newIndex;\r\n        let newLen;\r\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\r\n            const oldLink = oldLinks[oldIndex];\r\n            const newLink = newLinks[newIndex];\r\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\r\n                // Remove the oldLink\r\n                oldIndex++;\r\n                continue;\r\n            }\r\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\r\n            if (comparisonResult < 0) {\r\n                // oldLink is before\r\n                result.push(oldLink);\r\n                oldIndex++;\r\n            }\r\n            else {\r\n                // newLink is before\r\n                result.push(newLink);\r\n                newIndex++;\r\n            }\r\n        }\r\n        for (; oldIndex < oldLen; oldIndex++) {\r\n            result.push(oldLinks[oldIndex]);\r\n        }\r\n        for (; newIndex < newLen; newIndex++) {\r\n            result.push(newLinks[newIndex]);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport function getLinks(model, token) {\r\n    const lists = [];\r\n    // ask all providers for links in parallel\r\n    const promises = LinkProviderRegistry.ordered(model).reverse().map((provider, i) => {\r\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\r\n            if (result) {\r\n                lists[i] = [result, provider];\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(() => {\r\n        const result = new LinksList(coalesce(lists));\r\n        if (!token.isCancellationRequested) {\r\n            return result;\r\n        }\r\n        result.dispose();\r\n        return new LinksList([]);\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let [uri, resolveCount] = args;\r\n    assertType(uri instanceof URI);\r\n    if (typeof resolveCount !== 'number') {\r\n        resolveCount = 0;\r\n    }\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return [];\r\n    }\r\n    const list = yield getLinks(model, CancellationToken.None);\r\n    if (!list) {\r\n        return [];\r\n    }\r\n    // resolve links\r\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\r\n        yield list.links[i].resolve(CancellationToken.None);\r\n    }\r\n    const result = list.links.slice(0);\r\n    list.dispose();\r\n    return result;\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './links.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as async from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { LinkProviderRegistry } from '../../common/modes.js';\r\nimport { ClickLinkGesture } from '../gotoSymbol/link/clickLinkGesture.js';\r\nimport { getLinks } from './getLinks.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorActiveLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport * as resources from '../../../base/common/resources.js';\r\nfunction getHoverMessage(link, useMetaKey) {\r\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\r\n    const label = link.tooltip\r\n        ? link.tooltip\r\n        : executeCmd\r\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\r\n            : nls.localize('links.navigate.follow', 'Follow link');\r\n    const kb = useMetaKey\r\n        ? platform.isMacintosh\r\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\r\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\r\n        : platform.isMacintosh\r\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\r\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\r\n    if (link.url) {\r\n        let nativeLabel = '';\r\n        if (/^command:/i.test(link.url.toString())) {\r\n            // Don't show complete command arguments in the native tooltip\r\n            const match = link.url.toString().match(/^command:([^?#]+)/);\r\n            if (match) {\r\n                const commandId = match[1];\r\n                const nativeLabelText = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\r\n                nativeLabel = ` \"${nativeLabelText}\"`;\r\n            }\r\n        }\r\n        const hoverMessage = new MarkdownString('', true).appendMarkdown(`[${label}](${link.url.toString(true)}${nativeLabel}) (${kb})`);\r\n        return hoverMessage;\r\n    }\r\n    else {\r\n        return new MarkdownString().appendText(`${label} (${kb})`);\r\n    }\r\n}\r\nconst decoration = {\r\n    general: ModelDecorationOptions.register({\r\n        description: 'detected-link',\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        collapseOnReplaceEdit: true,\r\n        inlineClassName: 'detected-link'\r\n    }),\r\n    active: ModelDecorationOptions.register({\r\n        description: 'detected-link-active',\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        collapseOnReplaceEdit: true,\r\n        inlineClassName: 'detected-link-active'\r\n    })\r\n};\r\nclass LinkOccurrence {\r\n    constructor(link, decorationId) {\r\n        this.link = link;\r\n        this.decorationId = decorationId;\r\n    }\r\n    static decoration(link, useMetaKey) {\r\n        return {\r\n            range: link.range,\r\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\r\n        };\r\n    }\r\n    static _getOptions(link, useMetaKey, isActive) {\r\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\r\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\r\n        return options;\r\n    }\r\n    activate(changeAccessor, useMetaKey) {\r\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\r\n    }\r\n    deactivate(changeAccessor, useMetaKey) {\r\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\r\n    }\r\n}\r\nlet LinkDetector = class LinkDetector {\r\n    constructor(editor, openerService, notificationService) {\r\n        this.listenersToRemove = new DisposableStore();\r\n        this.editor = editor;\r\n        this.openerService = openerService;\r\n        this.notificationService = notificationService;\r\n        let clickLinkGesture = new ClickLinkGesture(editor);\r\n        this.listenersToRemove.add(clickLinkGesture);\r\n        this.listenersToRemove.add(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\r\n        }));\r\n        this.listenersToRemove.add(clickLinkGesture.onExecute((e) => {\r\n            this.onEditorMouseUp(e);\r\n        }));\r\n        this.listenersToRemove.add(clickLinkGesture.onCancel((e) => {\r\n            this.cleanUpActiveLinkDecoration();\r\n        }));\r\n        this.enabled = editor.getOption(62 /* links */);\r\n        this.listenersToRemove.add(editor.onDidChangeConfiguration((e) => {\r\n            const enabled = editor.getOption(62 /* links */);\r\n            if (this.enabled === enabled) {\r\n                // No change in our configuration option\r\n                return;\r\n            }\r\n            this.enabled = enabled;\r\n            // Remove any links (for the getting disabled case)\r\n            this.updateDecorations([]);\r\n            // Stop any computation (for the getting disabled case)\r\n            this.stop();\r\n            // Start computing (for the getting enabled case)\r\n            this.beginCompute();\r\n        }));\r\n        this.listenersToRemove.add(editor.onDidChangeModelContent((e) => this.onChange()));\r\n        this.listenersToRemove.add(editor.onDidChangeModel((e) => this.onModelChanged()));\r\n        this.listenersToRemove.add(editor.onDidChangeModelLanguage((e) => this.onModelModeChanged()));\r\n        this.listenersToRemove.add(LinkProviderRegistry.onDidChange((e) => this.onModelModeChanged()));\r\n        this.timeout = new async.TimeoutTimer();\r\n        this.computePromise = null;\r\n        this.activeLinksList = null;\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        this.beginCompute();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(LinkDetector.ID);\r\n    }\r\n    onModelChanged() {\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        this.stop();\r\n        this.beginCompute();\r\n    }\r\n    onModelModeChanged() {\r\n        this.stop();\r\n        this.beginCompute();\r\n    }\r\n    onChange() {\r\n        this.timeout.setIfNotSet(() => this.beginCompute(), LinkDetector.RECOMPUTE_TIME);\r\n    }\r\n    beginCompute() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.editor.hasModel() || !this.enabled) {\r\n                return;\r\n            }\r\n            const model = this.editor.getModel();\r\n            if (!LinkProviderRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (this.activeLinksList) {\r\n                this.activeLinksList.dispose();\r\n                this.activeLinksList = null;\r\n            }\r\n            this.computePromise = async.createCancelablePromise(token => getLinks(model, token));\r\n            try {\r\n                this.activeLinksList = yield this.computePromise;\r\n                this.updateDecorations(this.activeLinksList.links);\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                this.computePromise = null;\r\n            }\r\n        });\r\n    }\r\n    updateDecorations(links) {\r\n        const useMetaKey = (this.editor.getOption(69 /* multiCursorModifier */) === 'altKey');\r\n        let oldDecorations = [];\r\n        let keys = Object.keys(this.currentOccurrences);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            let decorationId = keys[i];\r\n            let occurance = this.currentOccurrences[decorationId];\r\n            oldDecorations.push(occurance.decorationId);\r\n        }\r\n        let newDecorations = [];\r\n        if (links) {\r\n            // Not sure why this is sometimes null\r\n            for (const link of links) {\r\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\r\n            }\r\n        }\r\n        let decorations = this.editor.deltaDecorations(oldDecorations, newDecorations);\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        for (let i = 0, len = decorations.length; i < len; i++) {\r\n            let occurance = new LinkOccurrence(links[i], decorations[i]);\r\n            this.currentOccurrences[occurance.decorationId] = occurance;\r\n        }\r\n    }\r\n    _onEditorMouseMove(mouseEvent, withKey) {\r\n        const useMetaKey = (this.editor.getOption(69 /* multiCursorModifier */) === 'altKey');\r\n        if (this.isEnabled(mouseEvent, withKey)) {\r\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\r\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\r\n            if (occurrence) {\r\n                this.editor.changeDecorations((changeAccessor) => {\r\n                    occurrence.activate(changeAccessor, useMetaKey);\r\n                    this.activeLinkDecorationId = occurrence.decorationId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.cleanUpActiveLinkDecoration();\r\n        }\r\n    }\r\n    cleanUpActiveLinkDecoration() {\r\n        const useMetaKey = (this.editor.getOption(69 /* multiCursorModifier */) === 'altKey');\r\n        if (this.activeLinkDecorationId) {\r\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\r\n            if (occurrence) {\r\n                this.editor.changeDecorations((changeAccessor) => {\r\n                    occurrence.deactivate(changeAccessor, useMetaKey);\r\n                });\r\n            }\r\n            this.activeLinkDecorationId = null;\r\n        }\r\n    }\r\n    onEditorMouseUp(mouseEvent) {\r\n        if (!this.isEnabled(mouseEvent)) {\r\n            return;\r\n        }\r\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\r\n        if (!occurrence) {\r\n            return;\r\n        }\r\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\r\n    }\r\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\r\n        if (!this.openerService) {\r\n            return;\r\n        }\r\n        const { link } = occurrence;\r\n        link.resolve(CancellationToken.None).then(uri => {\r\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\r\n            if (typeof uri === 'string' && this.editor.hasModel()) {\r\n                const modelUri = this.editor.getModel().uri;\r\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\r\n                    const parsedUri = URI.parse(uri);\r\n                    if (parsedUri.scheme === Schemas.file) {\r\n                        const fsPath = resources.originalFSPath(parsedUri);\r\n                        let relativePath = null;\r\n                        if (fsPath.startsWith('/./')) {\r\n                            relativePath = `.${fsPath.substr(1)}`;\r\n                        }\r\n                        else if (fsPath.startsWith('//./')) {\r\n                            relativePath = `.${fsPath.substr(2)}`;\r\n                        }\r\n                        if (relativePath) {\r\n                            uri = resources.joinPath(modelUri, relativePath);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true });\r\n        }, err => {\r\n            const messageOrError = err instanceof Error ? err.message : err;\r\n            // different error cases\r\n            if (messageOrError === 'invalid') {\r\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\r\n            }\r\n            else if (messageOrError === 'missing') {\r\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\r\n            }\r\n            else {\r\n                onUnexpectedError(err);\r\n            }\r\n        });\r\n    }\r\n    getLinkOccurrence(position) {\r\n        if (!this.editor.hasModel() || !position) {\r\n            return null;\r\n        }\r\n        const decorations = this.editor.getModel().getDecorationsInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: position.column,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        }, 0, true);\r\n        for (const decoration of decorations) {\r\n            const currentOccurrence = this.currentOccurrences[decoration.id];\r\n            if (currentOccurrence) {\r\n                return currentOccurrence;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return Boolean((mouseEvent.target.type === 6 /* CONTENT_TEXT */)\r\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\r\n    }\r\n    stop() {\r\n        var _a;\r\n        this.timeout.cancel();\r\n        if (this.activeLinksList) {\r\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.activeLinksList = null;\r\n        }\r\n        if (this.computePromise) {\r\n            this.computePromise.cancel();\r\n            this.computePromise = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.listenersToRemove.dispose();\r\n        this.stop();\r\n        this.timeout.dispose();\r\n    }\r\n};\r\nLinkDetector.ID = 'editor.linkDetector';\r\nLinkDetector.RECOMPUTE_TIME = 1000; // ms\r\nLinkDetector = __decorate([\r\n    __param(1, IOpenerService),\r\n    __param(2, INotificationService)\r\n], LinkDetector);\r\nexport { LinkDetector };\r\nclass OpenLinkAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.openLink',\r\n            label: nls.localize('label', \"Open Link\"),\r\n            alias: 'Open Link',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let linkDetector = LinkDetector.get(editor);\r\n        if (!linkDetector) {\r\n            return;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let selections = editor.getSelections();\r\n        for (let sel of selections) {\r\n            let link = linkDetector.getLinkOccurrence(sel.getEndPosition());\r\n            if (link) {\r\n                linkDetector.openLinkOccurrence(link, false);\r\n            }\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\r\nregisterEditorAction(OpenLinkAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { status } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { CommonFindController } from '../find/findController.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { overviewRulerSelectionHighlightForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nfunction announceCursorChange(previousCursorState, cursorState) {\r\n    const cursorDiff = cursorState.filter(cs => !previousCursorState.find(pcs => pcs.equals(cs)));\r\n    if (cursorDiff.length >= 1) {\r\n        const cursorPositions = cursorDiff.map(cs => `line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`).join(', ');\r\n        const msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\r\n        status(msg);\r\n    }\r\n}\r\nexport class InsertCursorAbove extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorAbove',\r\n            label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\r\n            alias: 'Add Cursor Above',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 16 /* UpArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const useLogicalLine = (args && args.logicalLine === true);\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel.cursorConfig.readOnly) {\r\n            return;\r\n        }\r\n        viewModel.pushStackElement();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));\r\n        viewModel.revealTopMostCursor(args.source);\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nexport class InsertCursorBelow extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorBelow',\r\n            label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\r\n            alias: 'Add Cursor Below',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 18 /* DownArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const useLogicalLine = (args && args.logicalLine === true);\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel.cursorConfig.readOnly) {\r\n            return;\r\n        }\r\n        viewModel.pushStackElement();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));\r\n        viewModel.revealBottomMostCursor(args.source);\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorAtEndOfEachLineSelected',\r\n            label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\r\n            alias: 'Add Cursors to Line Ends',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 39 /* KEY_I */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\r\n                order: 4\r\n            }\r\n        });\r\n    }\r\n    getCursorsForSelection(selection, model, result) {\r\n        if (selection.isEmpty()) {\r\n            return;\r\n        }\r\n        for (let i = selection.startLineNumber; i < selection.endLineNumber; i++) {\r\n            let currentLineMaxColumn = model.getLineMaxColumn(i);\r\n            result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\r\n        }\r\n        if (selection.endColumn > 1) {\r\n            result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\r\n        }\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        let newSelections = [];\r\n        selections.forEach((sel) => this.getCursorsForSelection(sel, model, newSelections));\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addCursorsToBottom',\r\n            label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\r\n            alias: 'Add Cursors To Bottom',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections();\r\n        const lineCount = editor.getModel().getLineCount();\r\n        let newSelections = [];\r\n        for (let i = selections[0].startLineNumber; i <= lineCount; i++) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addCursorsToTop',\r\n            label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\r\n            alias: 'Add Cursors To Top',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections();\r\n        let newSelections = [];\r\n        for (let i = selections[0].startLineNumber; i >= 1; i--) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nexport class MultiCursorSessionResult {\r\n    constructor(selections, revealRange, revealScrollType) {\r\n        this.selections = selections;\r\n        this.revealRange = revealRange;\r\n        this.revealScrollType = revealScrollType;\r\n    }\r\n}\r\nexport class MultiCursorSession {\r\n    constructor(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\r\n        this._editor = _editor;\r\n        this.findController = findController;\r\n        this.isDisconnectedFromFindController = isDisconnectedFromFindController;\r\n        this.searchText = searchText;\r\n        this.wholeWord = wholeWord;\r\n        this.matchCase = matchCase;\r\n        this.currentMatch = currentMatch;\r\n    }\r\n    static create(editor, findController) {\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const findState = findController.getState();\r\n        // Find widget owns entirely what we search for if:\r\n        //  - focus is not in the editor (i.e. it is in the find widget)\r\n        //  - and the search widget is visible\r\n        //  - and the search string is non-empty\r\n        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\r\n            // Find widget owns what is searched for\r\n            return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\r\n        }\r\n        // Otherwise, the selection gives the search text, and the find widget gives the search settings\r\n        // The exception is the find state disassociation case: when beginning with a single, collapsed selection\r\n        let isDisconnectedFromFindController = false;\r\n        let wholeWord;\r\n        let matchCase;\r\n        const selections = editor.getSelections();\r\n        if (selections.length === 1 && selections[0].isEmpty()) {\r\n            isDisconnectedFromFindController = true;\r\n            wholeWord = true;\r\n            matchCase = true;\r\n        }\r\n        else {\r\n            wholeWord = findState.wholeWord;\r\n            matchCase = findState.matchCase;\r\n        }\r\n        // Selection owns what is searched for\r\n        const s = editor.getSelection();\r\n        let searchText;\r\n        let currentMatch = null;\r\n        if (s.isEmpty()) {\r\n            // selection is empty => expand to current word\r\n            const word = editor.getConfiguredWordAtPosition(s.getStartPosition());\r\n            if (!word) {\r\n                return null;\r\n            }\r\n            searchText = word.word;\r\n            currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\r\n        }\r\n        else {\r\n            searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\r\n        }\r\n        return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\r\n    }\r\n    addSelectionToNextFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    }\r\n    moveSelectionToNextFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    }\r\n    _getNextMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            const result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        const allSelections = this._editor.getSelections();\r\n        const lastAddedSelection = allSelections[allSelections.length - 1];\r\n        const nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\r\n    }\r\n    addSelectionToPreviousFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    }\r\n    moveSelectionToPreviousFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    }\r\n    _getPreviousMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            const result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        const allSelections = this._editor.getSelections();\r\n        const lastAddedSelection = allSelections[allSelections.length - 1];\r\n        const previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false);\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\r\n    }\r\n    selectAll() {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        return this._editor.getModel().findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n    }\r\n}\r\nexport class MultiCursorSelectionController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._sessionDispose = this._register(new DisposableStore());\r\n        this._editor = editor;\r\n        this._ignoreSelectionChange = false;\r\n        this._session = null;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MultiCursorSelectionController.ID);\r\n    }\r\n    dispose() {\r\n        this._endSession();\r\n        super.dispose();\r\n    }\r\n    _beginSessionIfNeeded(findController) {\r\n        if (!this._session) {\r\n            // Create a new session\r\n            const session = MultiCursorSession.create(this._editor, findController);\r\n            if (!session) {\r\n                return;\r\n            }\r\n            this._session = session;\r\n            const newState = { searchString: this._session.searchText };\r\n            if (this._session.isDisconnectedFromFindController) {\r\n                newState.wholeWordOverride = 1 /* True */;\r\n                newState.matchCaseOverride = 1 /* True */;\r\n                newState.isRegexOverride = 2 /* False */;\r\n            }\r\n            findController.getState().change(newState, false);\r\n            this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e) => {\r\n                if (this._ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                this._endSession();\r\n            }));\r\n            this._sessionDispose.add(this._editor.onDidBlurEditorText(() => {\r\n                this._endSession();\r\n            }));\r\n            this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e) => {\r\n                if (e.matchCase || e.wholeWord) {\r\n                    this._endSession();\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    _endSession() {\r\n        this._sessionDispose.clear();\r\n        if (this._session && this._session.isDisconnectedFromFindController) {\r\n            const newState = {\r\n                wholeWordOverride: 0 /* NotSet */,\r\n                matchCaseOverride: 0 /* NotSet */,\r\n                isRegexOverride: 0 /* NotSet */,\r\n            };\r\n            this._session.findController.getState().change(newState, false);\r\n        }\r\n        this._session = null;\r\n    }\r\n    _setSelections(selections) {\r\n        this._ignoreSelectionChange = true;\r\n        this._editor.setSelections(selections);\r\n        this._ignoreSelectionChange = false;\r\n    }\r\n    _expandEmptyToWord(model, selection) {\r\n        if (!selection.isEmpty()) {\r\n            return selection;\r\n        }\r\n        const word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n        if (!word) {\r\n            return selection;\r\n        }\r\n        return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n    }\r\n    _applySessionResult(result) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        this._setSelections(result.selections);\r\n        if (result.revealRange) {\r\n            this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\r\n        }\r\n    }\r\n    getSession(findController) {\r\n        return this._session;\r\n    }\r\n    addSelectionToNextFindMatch(findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._session) {\r\n            // If there are multiple cursors, handle the case where they do not all select the same text.\r\n            const allSelections = this._editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                const findState = findController.getState();\r\n                const matchCase = findState.matchCase;\r\n                const selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    const model = this._editor.getModel();\r\n                    let resultingSelections = [];\r\n                    for (let i = 0, len = allSelections.length; i < len; i++) {\r\n                        resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\r\n                    }\r\n                    this._editor.setSelections(resultingSelections);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToNextFindMatch());\r\n        }\r\n    }\r\n    addSelectionToPreviousFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\r\n        }\r\n    }\r\n    moveSelectionToNextFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToNextFindMatch());\r\n        }\r\n    }\r\n    moveSelectionToPreviousFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\r\n        }\r\n    }\r\n    selectAll(findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let matches = null;\r\n        const findState = findController.getState();\r\n        // Special case: find widget owns entirely what we search for if:\r\n        // - focus is not in the editor (i.e. it is in the find widget)\r\n        // - and the search widget is visible\r\n        // - and the search string is non-empty\r\n        // - and we're searching for a regex\r\n        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\r\n            matches = this._editor.getModel().findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(116 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        }\r\n        else {\r\n            this._beginSessionIfNeeded(findController);\r\n            if (!this._session) {\r\n                return;\r\n            }\r\n            matches = this._session.selectAll();\r\n        }\r\n        if (findState.searchScope) {\r\n            const states = findState.searchScope;\r\n            let inSelection = [];\r\n            matches.forEach((match) => {\r\n                states.forEach((state) => {\r\n                    if (match.range.endLineNumber <= state.endLineNumber && match.range.startLineNumber >= state.startLineNumber) {\r\n                        inSelection.push(match);\r\n                    }\r\n                });\r\n            });\r\n            matches = inSelection;\r\n        }\r\n        if (matches.length > 0) {\r\n            const editorSelection = this._editor.getSelection();\r\n            // Have the primary cursor remain the one where the action was invoked\r\n            for (let i = 0, len = matches.length; i < len; i++) {\r\n                const match = matches[i];\r\n                const intersection = match.range.intersectRanges(editorSelection);\r\n                if (intersection) {\r\n                    // bingo!\r\n                    matches[i] = matches[0];\r\n                    matches[0] = match;\r\n                    break;\r\n                }\r\n            }\r\n            this._setSelections(matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)));\r\n        }\r\n    }\r\n}\r\nMultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\r\nexport class MultiCursorSelectionControllerAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        const multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return;\r\n        }\r\n        const findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return;\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel) {\r\n            const previousCursorState = viewModel.getCursorStates();\r\n            this._run(multiCursorController, findController);\r\n            announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n        }\r\n    }\r\n}\r\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addSelectionToNextFindMatch',\r\n            label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\r\n            alias: 'Add Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 34 /* KEY_D */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\r\n                order: 5\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.addSelectionToNextFindMatch(findController);\r\n    }\r\n}\r\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addSelectionToPreviousFindMatch',\r\n            label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\r\n            alias: 'Add Selection To Previous Find Match',\r\n            precondition: undefined,\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.addSelectionToPreviousFindMatch(findController);\r\n    }\r\n}\r\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.moveSelectionToNextFindMatch',\r\n            label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\r\n            alias: 'Move Last Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 34 /* KEY_D */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToNextFindMatch(findController);\r\n    }\r\n}\r\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.moveSelectionToPreviousFindMatch',\r\n            label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\r\n            alias: 'Move Last Selection To Previous Find Match',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToPreviousFindMatch(findController);\r\n    }\r\n}\r\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectHighlights',\r\n            label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\r\n            alias: 'Select All Occurrences of Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 42 /* KEY_L */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\r\n                order: 7\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    }\r\n}\r\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.changeAll',\r\n            label: nls.localize('changeAll.label', \"Change All Occurrences\"),\r\n            alias: 'Change All Occurrences',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.2\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    }\r\n}\r\nclass SelectionHighlighterState {\r\n    constructor(searchText, matchCase, wordSeparators, modelVersionId) {\r\n        this.searchText = searchText;\r\n        this.matchCase = matchCase;\r\n        this.wordSeparators = wordSeparators;\r\n        this.modelVersionId = modelVersionId;\r\n    }\r\n    /**\r\n     * Everything equals except for `lastWordUnderCursor`\r\n     */\r\n    static softEquals(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.searchText === b.searchText\r\n            && a.matchCase === b.matchCase\r\n            && a.wordSeparators === b.wordSeparators\r\n            && a.modelVersionId === b.modelVersionId);\r\n    }\r\n}\r\nexport class SelectionHighlighter extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._isEnabled = editor.getOption(97 /* selectionHighlight */);\r\n        this.decorations = [];\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\r\n        this.state = null;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            this._isEnabled = editor.getOption(97 /* selectionHighlight */);\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (!this._isEnabled) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            if (e.selection.isEmpty()) {\r\n                if (e.reason === 3 /* Explicit */) {\r\n                    if (this.state) {\r\n                        // no longer valid\r\n                        this._setState(null);\r\n                    }\r\n                    this.updateSoon.schedule();\r\n                }\r\n                else {\r\n                    this._setState(null);\r\n                }\r\n            }\r\n            else {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._setState(null);\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            if (this._isEnabled) {\r\n                this.updateSoon.schedule();\r\n            }\r\n        }));\r\n        this._register(CommonFindController.get(editor).getState().onFindReplaceStateChange((e) => {\r\n            this._update();\r\n        }));\r\n    }\r\n    _update() {\r\n        this._setState(SelectionHighlighter._createState(this._isEnabled, this.editor));\r\n    }\r\n    static _createState(isEnabled, editor) {\r\n        if (!isEnabled) {\r\n            return null;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const s = editor.getSelection();\r\n        if (s.startLineNumber !== s.endLineNumber) {\r\n            // multiline forbidden for perf reasons\r\n            return null;\r\n        }\r\n        const multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return null;\r\n        }\r\n        const findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return null;\r\n        }\r\n        let r = multiCursorController.getSession(findController);\r\n        if (!r) {\r\n            const allSelections = editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                const findState = findController.getState();\r\n                const matchCase = findState.matchCase;\r\n                const selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    return null;\r\n                }\r\n            }\r\n            r = MultiCursorSession.create(editor, findController);\r\n        }\r\n        if (!r) {\r\n            return null;\r\n        }\r\n        if (r.currentMatch) {\r\n            // This is an empty selection\r\n            // Do not interfere with semantic word highlighting in the no selection case\r\n            return null;\r\n        }\r\n        if (/^[ \\t]+$/.test(r.searchText)) {\r\n            // whitespace only selection\r\n            return null;\r\n        }\r\n        if (r.searchText.length > 200) {\r\n            // very long selection\r\n            return null;\r\n        }\r\n        // TODO: better handling of this case\r\n        const findState = findController.getState();\r\n        const caseSensitive = findState.matchCase;\r\n        // Return early if the find widget shows the exact same matches\r\n        if (findState.isRevealed) {\r\n            let findStateSearchString = findState.searchString;\r\n            if (!caseSensitive) {\r\n                findStateSearchString = findStateSearchString.toLowerCase();\r\n            }\r\n            let mySearchString = r.searchText;\r\n            if (!caseSensitive) {\r\n                mySearchString = mySearchString.toLowerCase();\r\n            }\r\n            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\r\n                return null;\r\n            }\r\n        }\r\n        return new SelectionHighlighterState(r.searchText, r.matchCase, r.wholeWord ? editor.getOption(116 /* wordSeparators */) : null, editor.getModel().getVersionId());\r\n    }\r\n    _setState(state) {\r\n        if (SelectionHighlighterState.softEquals(this.state, state)) {\r\n            this.state = state;\r\n            return;\r\n        }\r\n        this.state = state;\r\n        if (!this.state) {\r\n            this.decorations = this.editor.deltaDecorations(this.decorations, []);\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (model.isTooLargeForTokenization()) {\r\n            // the file is too large, so searching word under cursor in the whole document takes is blocking the UI.\r\n            return;\r\n        }\r\n        const hasFindOccurrences = DocumentHighlightProviderRegistry.has(model) && this.editor.getOption(71 /* occurrencesHighlight */);\r\n        let allMatches = model.findMatches(this.state.searchText, true, false, this.state.matchCase, this.state.wordSeparators, false).map(m => m.range);\r\n        allMatches.sort(Range.compareRangesUsingStarts);\r\n        let selections = this.editor.getSelections();\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        // do not overlap with selection (issue #64 and #512)\r\n        let matches = [];\r\n        for (let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\r\n            const match = allMatches[i];\r\n            if (j >= lenJ) {\r\n                // finished all editor selections\r\n                matches.push(match);\r\n                i++;\r\n            }\r\n            else {\r\n                const cmp = Range.compareRangesUsingStarts(match, selections[j]);\r\n                if (cmp < 0) {\r\n                    // match is before sel\r\n                    if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\r\n                        matches.push(match);\r\n                    }\r\n                    i++;\r\n                }\r\n                else if (cmp > 0) {\r\n                    // sel is before match\r\n                    j++;\r\n                }\r\n                else {\r\n                    // sel is equal to match\r\n                    i++;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n        const decorations = matches.map(r => {\r\n            return {\r\n                range: r,\r\n                // Show in overviewRuler only if model has no semantic highlighting\r\n                options: (hasFindOccurrences ? SelectionHighlighter._SELECTION_HIGHLIGHT : SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW)\r\n            };\r\n        });\r\n        this.decorations = this.editor.deltaDecorations(this.decorations, decorations);\r\n    }\r\n    dispose() {\r\n        this._setState(null);\r\n        super.dispose();\r\n    }\r\n}\r\nSelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\r\nSelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW = ModelDecorationOptions.register({\r\n    description: 'selection-highlight-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nSelectionHighlighter._SELECTION_HIGHLIGHT = ModelDecorationOptions.register({\r\n    description: 'selection-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n});\r\nfunction modelRangesContainSameText(model, ranges, matchCase) {\r\n    const selectedText = getValueInRange(model, ranges[0], !matchCase);\r\n    for (let i = 1, len = ranges.length; i < len; i++) {\r\n        const range = ranges[i];\r\n        if (range.isEmpty()) {\r\n            return false;\r\n        }\r\n        const thisSelectedText = getValueInRange(model, range, !matchCase);\r\n        if (selectedText !== thisSelectedText) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getValueInRange(model, range, toLowerCase) {\r\n    const text = model.getValueInRange(range);\r\n    return (toLowerCase ? text.toLowerCase() : text);\r\n}\r\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController);\r\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter);\r\nregisterEditorAction(InsertCursorAbove);\r\nregisterEditorAction(InsertCursorBelow);\r\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\r\nregisterEditorAction(AddSelectionToNextFindMatchAction);\r\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\r\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(SelectHighlightsAction);\r\nregisterEditorAction(CompatChangeAll);\r\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\r\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('parameterHintsVisible', false),\r\n    MultipleSignatures: new RawContextKey('parameterHintsMultipleSignatures', false),\r\n};\r\nexport function provideSignatureHelp(model, position, context, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const supports = modes.SignatureHelpProviderRegistry.ordered(model);\r\n        for (const support of supports) {\r\n            try {\r\n                const result = yield support.provideSignatureHelp(model, position, token, context);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeSignatureHelpProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = yield provideSignatureHelp(ref.object.textEditorModel, Position.lift(position), {\r\n            triggerKind: modes.SignatureHelpTriggerKind.Invoke,\r\n            isRetrigger: false,\r\n            triggerCharacter,\r\n        }, CancellationToken.None);\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        setTimeout(() => result.dispose(), 0);\r\n        return result.value;\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { provideSignatureHelp } from './provideSignatureHelp.js';\r\nvar ParameterHintState;\r\n(function (ParameterHintState) {\r\n    ParameterHintState.Default = { type: 0 /* Default */ };\r\n    class Pending {\r\n        constructor(request, previouslyActiveHints) {\r\n            this.request = request;\r\n            this.previouslyActiveHints = previouslyActiveHints;\r\n            this.type = 2 /* Pending */;\r\n        }\r\n    }\r\n    ParameterHintState.Pending = Pending;\r\n    class Active {\r\n        constructor(hints) {\r\n            this.hints = hints;\r\n            this.type = 1 /* Active */;\r\n        }\r\n    }\r\n    ParameterHintState.Active = Active;\r\n})(ParameterHintState || (ParameterHintState = {}));\r\nexport class ParameterHintsModel extends Disposable {\r\n    constructor(editor, delay = ParameterHintsModel.DEFAULT_DELAY) {\r\n        super();\r\n        this._onChangedHints = this._register(new Emitter());\r\n        this.onChangedHints = this._onChangedHints.event;\r\n        this.triggerOnType = false;\r\n        this._state = ParameterHintState.Default;\r\n        this._pendingTriggers = [];\r\n        this._lastSignatureHelpResult = this._register(new MutableDisposable());\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        this.triggerId = 0;\r\n        this.editor = editor;\r\n        this.throttledDelayer = new Delayer(delay);\r\n        this._register(this.editor.onDidBlurEditorWidget(() => this.cancel()));\r\n        this._register(this.editor.onDidChangeConfiguration(() => this.onEditorConfigurationChange()));\r\n        this._register(this.editor.onDidChangeModel(e => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeModelLanguage(_ => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeCursorSelection(e => this.onCursorChange(e)));\r\n        this._register(this.editor.onDidChangeModelContent(e => this.onModelContentChange()));\r\n        this._register(modes.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));\r\n        this._register(this.editor.onDidType(text => this.onDidType(text)));\r\n        this.onEditorConfigurationChange();\r\n        this.onModelChanged();\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        if (this._state.type === 2 /* Pending */) {\r\n            this._state.request.cancel();\r\n        }\r\n        this._state = value;\r\n    }\r\n    cancel(silent = false) {\r\n        this.state = ParameterHintState.Default;\r\n        this.throttledDelayer.cancel();\r\n        if (!silent) {\r\n            this._onChangedHints.fire(undefined);\r\n        }\r\n    }\r\n    trigger(context, delay) {\r\n        const model = this.editor.getModel();\r\n        if (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        const triggerId = ++this.triggerId;\r\n        this._pendingTriggers.push(context);\r\n        this.throttledDelayer.trigger(() => {\r\n            return this.doTrigger(triggerId);\r\n        }, delay)\r\n            .catch(onUnexpectedError);\r\n    }\r\n    next() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const last = (activeSignature % length) === (length - 1);\r\n        const cycle = this.editor.getOption(75 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on last signature of list\r\n        if ((length < 2 || last) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\r\n    }\r\n    previous() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const first = activeSignature === 0;\r\n        const cycle = this.editor.getOption(75 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on first signature of list\r\n        if ((length < 2 || first) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\r\n    }\r\n    updateActiveSignature(activeSignature) {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        this.state = new ParameterHintState.Active(Object.assign(Object.assign({}, this.state.hints), { activeSignature }));\r\n        this._onChangedHints.fire(this.state.hints);\r\n    }\r\n    doTrigger(triggerId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const isRetrigger = this.state.type === 1 /* Active */ || this.state.type === 2 /* Pending */;\r\n            const activeSignatureHelp = this.getLastActiveHints();\r\n            this.cancel(true);\r\n            if (this._pendingTriggers.length === 0) {\r\n                return false;\r\n            }\r\n            const context = this._pendingTriggers.reduce(mergeTriggerContexts);\r\n            this._pendingTriggers = [];\r\n            const triggerContext = {\r\n                triggerKind: context.triggerKind,\r\n                triggerCharacter: context.triggerCharacter,\r\n                isRetrigger: isRetrigger,\r\n                activeSignatureHelp: activeSignatureHelp\r\n            };\r\n            if (!this.editor.hasModel()) {\r\n                return false;\r\n            }\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            this.state = new ParameterHintState.Pending(createCancelablePromise(token => provideSignatureHelp(model, position, triggerContext, token)), activeSignatureHelp);\r\n            try {\r\n                const result = yield this.state.request;\r\n                // Check that we are still resolving the correct signature help\r\n                if (triggerId !== this.triggerId) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    return false;\r\n                }\r\n                if (!result || !result.value.signatures || result.value.signatures.length === 0) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    this._lastSignatureHelpResult.clear();\r\n                    this.cancel();\r\n                    return false;\r\n                }\r\n                else {\r\n                    this.state = new ParameterHintState.Active(result.value);\r\n                    this._lastSignatureHelpResult.value = result;\r\n                    this._onChangedHints.fire(this.state.hints);\r\n                    return true;\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (triggerId === this.triggerId) {\r\n                    this.state = ParameterHintState.Default;\r\n                }\r\n                onUnexpectedError(error);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    getLastActiveHints() {\r\n        switch (this.state.type) {\r\n            case 1 /* Active */: return this.state.hints;\r\n            case 2 /* Pending */: return this.state.previouslyActiveHints;\r\n            default: return undefined;\r\n        }\r\n    }\r\n    get isTriggered() {\r\n        return this.state.type === 1 /* Active */\r\n            || this.state.type === 2 /* Pending */\r\n            || this.throttledDelayer.isTriggered();\r\n    }\r\n    onModelChanged() {\r\n        this.cancel();\r\n        // Update trigger characters\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (const support of modes.SignatureHelpProviderRegistry.ordered(model)) {\r\n            for (const ch of support.signatureHelpTriggerCharacters || []) {\r\n                this.triggerChars.add(ch.charCodeAt(0));\r\n                // All trigger characters are also considered retrigger characters\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n            for (const ch of support.signatureHelpRetriggerCharacters || []) {\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n    }\r\n    onDidType(text) {\r\n        if (!this.triggerOnType) {\r\n            return;\r\n        }\r\n        const lastCharIndex = text.length - 1;\r\n        const triggerCharCode = text.charCodeAt(lastCharIndex);\r\n        if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\r\n            this.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\r\n                triggerCharacter: text.charAt(lastCharIndex),\r\n            });\r\n        }\r\n    }\r\n    onCursorChange(e) {\r\n        if (e.source === 'mouse') {\r\n            this.cancel();\r\n        }\r\n        else if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onModelContentChange() {\r\n        if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onEditorConfigurationChange() {\r\n        this.triggerOnType = this.editor.getOption(75 /* parameterHints */).enabled;\r\n        if (!this.triggerOnType) {\r\n            this.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel(true);\r\n        super.dispose();\r\n    }\r\n}\r\nParameterHintsModel.DEFAULT_DELAY = 120; // ms\r\nfunction mergeTriggerContexts(previous, current) {\r\n    switch (current.triggerKind) {\r\n        case modes.SignatureHelpTriggerKind.Invoke:\r\n            // Invoke overrides previous triggers.\r\n            return current;\r\n        case modes.SignatureHelpTriggerKind.ContentChange:\r\n            // Ignore content changes triggers\r\n            return previous;\r\n        case modes.SignatureHelpTriggerKind.TriggerCharacter:\r\n        default:\r\n            return current;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport './parameterHints.css';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { Context } from './provideSignatureHelp.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorHoverBackground, editorHoverBorder, textCodeBlockBackground, textLinkForeground, editorHoverForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ParameterHintsModel } from './parameterHintsModel.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { assertIsDefined } from '../../../base/common/types.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nconst $ = dom.$;\r\nconst parameterHintsNextIcon = registerIcon('parameter-hints-next', Codicon.chevronDown, nls.localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\r\nconst parameterHintsPreviousIcon = registerIcon('parameter-hints-previous', Codicon.chevronUp, nls.localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\r\nlet ParameterHintsWidget = class ParameterHintsWidget extends Disposable {\r\n    constructor(editor, contextKeyService, openerService, modeService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.renderDisposeables = this._register(new DisposableStore());\r\n        this.visible = false;\r\n        this.announcedLabel = null;\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this.markdownRenderer = this._register(new MarkdownRenderer({ editor }, modeService, openerService));\r\n        this.model = this._register(new ParameterHintsModel(editor));\r\n        this.keyVisible = Context.Visible.bindTo(contextKeyService);\r\n        this.keyMultipleSignatures = Context.MultipleSignatures.bindTo(contextKeyService);\r\n        this._register(this.model.onChangedHints(newParameterHints => {\r\n            if (newParameterHints) {\r\n                this.show();\r\n                this.render(newParameterHints);\r\n            }\r\n            else {\r\n                this.hide();\r\n            }\r\n        }));\r\n    }\r\n    createParameterHintDOMNodes() {\r\n        const element = $('.editor-widget.parameter-hints-widget');\r\n        const wrapper = dom.append(element, $('.phwrapper'));\r\n        wrapper.tabIndex = -1;\r\n        const controls = dom.append(wrapper, $('.controls'));\r\n        const previous = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsPreviousIcon)));\r\n        const overloads = dom.append(controls, $('.overloads'));\r\n        const next = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsNextIcon)));\r\n        this._register(dom.addDisposableListener(previous, 'click', e => {\r\n            dom.EventHelper.stop(e);\r\n            this.previous();\r\n        }));\r\n        this._register(dom.addDisposableListener(next, 'click', e => {\r\n            dom.EventHelper.stop(e);\r\n            this.next();\r\n        }));\r\n        const body = $('.body');\r\n        const scrollbar = new DomScrollableElement(body, {});\r\n        this._register(scrollbar);\r\n        wrapper.appendChild(scrollbar.getDomNode());\r\n        const signature = dom.append(body, $('.signature'));\r\n        const docs = dom.append(body, $('.docs'));\r\n        element.style.userSelect = 'text';\r\n        this.domNodes = {\r\n            element,\r\n            signature,\r\n            overloads,\r\n            docs,\r\n            scrollbar,\r\n        };\r\n        this.editor.addContentWidget(this);\r\n        this.hide();\r\n        this._register(this.editor.onDidChangeCursorSelection(e => {\r\n            if (this.visible) {\r\n                this.editor.layoutContentWidget(this);\r\n            }\r\n        }));\r\n        const updateFont = () => {\r\n            if (!this.domNodes) {\r\n                return;\r\n            }\r\n            const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n            this.domNodes.element.style.fontSize = `${fontInfo.fontSize}px`;\r\n        };\r\n        updateFont();\r\n        this._register(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor))\r\n            .filter(e => e.hasChanged(42 /* fontInfo */))\r\n            .on(updateFont, null));\r\n        this._register(this.editor.onDidLayoutChange(e => this.updateMaxHeight()));\r\n        this.updateMaxHeight();\r\n    }\r\n    show() {\r\n        if (this.visible) {\r\n            return;\r\n        }\r\n        if (!this.domNodes) {\r\n            this.createParameterHintDOMNodes();\r\n        }\r\n        this.keyVisible.set(true);\r\n        this.visible = true;\r\n        setTimeout(() => {\r\n            if (this.domNodes) {\r\n                this.domNodes.element.classList.add('visible');\r\n            }\r\n        }, 100);\r\n        this.editor.layoutContentWidget(this);\r\n    }\r\n    hide() {\r\n        this.renderDisposeables.clear();\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        this.keyVisible.reset();\r\n        this.visible = false;\r\n        this.announcedLabel = null;\r\n        if (this.domNodes) {\r\n            this.domNodes.element.classList.remove('visible');\r\n        }\r\n        this.editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this.visible) {\r\n            return {\r\n                position: this.editor.getPosition(),\r\n                preference: [1 /* ABOVE */, 2 /* BELOW */]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    render(hints) {\r\n        var _a;\r\n        this.renderDisposeables.clear();\r\n        if (!this.domNodes) {\r\n            return;\r\n        }\r\n        const multiple = hints.signatures.length > 1;\r\n        this.domNodes.element.classList.toggle('multiple', multiple);\r\n        this.keyMultipleSignatures.set(multiple);\r\n        this.domNodes.signature.innerText = '';\r\n        this.domNodes.docs.innerText = '';\r\n        const signature = hints.signatures[hints.activeSignature];\r\n        if (!signature) {\r\n            return;\r\n        }\r\n        const code = dom.append(this.domNodes.signature, $('.code'));\r\n        const fontInfo = this.editor.getOption(42 /* fontInfo */);\r\n        code.style.fontSize = `${fontInfo.fontSize}px`;\r\n        code.style.fontFamily = fontInfo.fontFamily;\r\n        const hasParameters = signature.parameters.length > 0;\r\n        const activeParameterIndex = (_a = signature.activeParameter) !== null && _a !== void 0 ? _a : hints.activeParameter;\r\n        if (!hasParameters) {\r\n            const label = dom.append(code, $('span'));\r\n            label.textContent = signature.label;\r\n        }\r\n        else {\r\n            this.renderParameters(code, signature, activeParameterIndex);\r\n        }\r\n        const activeParameter = signature.parameters[activeParameterIndex];\r\n        if (activeParameter === null || activeParameter === void 0 ? void 0 : activeParameter.documentation) {\r\n            const documentation = $('span.documentation');\r\n            if (typeof activeParameter.documentation === 'string') {\r\n                documentation.textContent = activeParameter.documentation;\r\n            }\r\n            else {\r\n                const renderedContents = this.renderMarkdownDocs(activeParameter.documentation);\r\n                documentation.appendChild(renderedContents.element);\r\n            }\r\n            dom.append(this.domNodes.docs, $('p', {}, documentation));\r\n        }\r\n        if (signature.documentation === undefined) {\r\n            /** no op */\r\n        }\r\n        else if (typeof signature.documentation === 'string') {\r\n            dom.append(this.domNodes.docs, $('p', {}, signature.documentation));\r\n        }\r\n        else {\r\n            const renderedContents = this.renderMarkdownDocs(signature.documentation);\r\n            dom.append(this.domNodes.docs, renderedContents.element);\r\n        }\r\n        const hasDocs = this.hasDocs(signature, activeParameter);\r\n        this.domNodes.signature.classList.toggle('has-docs', hasDocs);\r\n        this.domNodes.docs.classList.toggle('empty', !hasDocs);\r\n        this.domNodes.overloads.textContent =\r\n            String(hints.activeSignature + 1).padStart(hints.signatures.length.toString().length, '0') + '/' + hints.signatures.length;\r\n        if (activeParameter) {\r\n            let labelToAnnounce = '';\r\n            const param = signature.parameters[activeParameterIndex];\r\n            if (Array.isArray(param.label)) {\r\n                labelToAnnounce = signature.label.substring(param.label[0], param.label[1]);\r\n            }\r\n            else {\r\n                labelToAnnounce = param.label;\r\n            }\r\n            if (param.documentation) {\r\n                labelToAnnounce += typeof param.documentation === 'string' ? `, ${param.documentation}` : `, ${param.documentation.value}`;\r\n            }\r\n            if (signature.documentation) {\r\n                labelToAnnounce += typeof signature.documentation === 'string' ? `, ${signature.documentation}` : `, ${signature.documentation.value}`;\r\n            }\r\n            // Select method gets called on every user type while parameter hints are visible.\r\n            // We do not want to spam the user with same announcements, so we only announce if the current parameter changed.\r\n            if (this.announcedLabel !== labelToAnnounce) {\r\n                aria.alert(nls.localize('hint', \"{0}, hint\", labelToAnnounce));\r\n                this.announcedLabel = labelToAnnounce;\r\n            }\r\n        }\r\n        this.editor.layoutContentWidget(this);\r\n        this.domNodes.scrollbar.scanDomNode();\r\n    }\r\n    renderMarkdownDocs(markdown) {\r\n        const renderedContents = this.renderDisposeables.add(this.markdownRenderer.render(markdown, {\r\n            asyncRenderCallback: () => {\r\n                var _a;\r\n                (_a = this.domNodes) === null || _a === void 0 ? void 0 : _a.scrollbar.scanDomNode();\r\n            }\r\n        }));\r\n        renderedContents.element.classList.add('markdown-docs');\r\n        return renderedContents;\r\n    }\r\n    hasDocs(signature, activeParameter) {\r\n        if (activeParameter && typeof activeParameter.documentation === 'string' && assertIsDefined(activeParameter.documentation).length > 0) {\r\n            return true;\r\n        }\r\n        if (activeParameter && typeof activeParameter.documentation === 'object' && assertIsDefined(activeParameter.documentation).value.length > 0) {\r\n            return true;\r\n        }\r\n        if (signature.documentation && typeof signature.documentation === 'string' && assertIsDefined(signature.documentation).length > 0) {\r\n            return true;\r\n        }\r\n        if (signature.documentation && typeof signature.documentation === 'object' && assertIsDefined(signature.documentation.value).length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    renderParameters(parent, signature, activeParameterIndex) {\r\n        const [start, end] = this.getParameterLabelOffsets(signature, activeParameterIndex);\r\n        const beforeSpan = document.createElement('span');\r\n        beforeSpan.textContent = signature.label.substring(0, start);\r\n        const paramSpan = document.createElement('span');\r\n        paramSpan.textContent = signature.label.substring(start, end);\r\n        paramSpan.className = 'parameter active';\r\n        const afterSpan = document.createElement('span');\r\n        afterSpan.textContent = signature.label.substring(end);\r\n        dom.append(parent, beforeSpan, paramSpan, afterSpan);\r\n    }\r\n    getParameterLabelOffsets(signature, paramIdx) {\r\n        const param = signature.parameters[paramIdx];\r\n        if (!param) {\r\n            return [0, 0];\r\n        }\r\n        else if (Array.isArray(param.label)) {\r\n            return param.label;\r\n        }\r\n        else if (!param.label.length) {\r\n            return [0, 0];\r\n        }\r\n        else {\r\n            const regex = new RegExp(`(\\\\W|^)${escapeRegExpCharacters(param.label)}(?=\\\\W|$)`, 'g');\r\n            regex.test(signature.label);\r\n            const idx = regex.lastIndex - param.label.length;\r\n            return idx >= 0\r\n                ? [idx, regex.lastIndex]\r\n                : [0, 0];\r\n        }\r\n    }\r\n    next() {\r\n        this.editor.focus();\r\n        this.model.next();\r\n    }\r\n    previous() {\r\n        this.editor.focus();\r\n        this.model.previous();\r\n    }\r\n    cancel() {\r\n        this.model.cancel();\r\n    }\r\n    getDomNode() {\r\n        if (!this.domNodes) {\r\n            this.createParameterHintDOMNodes();\r\n        }\r\n        return this.domNodes.element;\r\n    }\r\n    getId() {\r\n        return ParameterHintsWidget.ID;\r\n    }\r\n    trigger(context) {\r\n        this.model.trigger(context, 0);\r\n    }\r\n    updateMaxHeight() {\r\n        if (!this.domNodes) {\r\n            return;\r\n        }\r\n        const height = Math.max(this.editor.getLayoutInfo().height / 4, 250);\r\n        const maxHeight = `${height}px`;\r\n        this.domNodes.element.style.maxHeight = maxHeight;\r\n        const wrapper = this.domNodes.element.getElementsByClassName('phwrapper');\r\n        if (wrapper.length) {\r\n            wrapper[0].style.maxHeight = maxHeight;\r\n        }\r\n    }\r\n};\r\nParameterHintsWidget.ID = 'editor.widget.parameterHintsWidget';\r\nParameterHintsWidget = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IModeService)\r\n], ParameterHintsWidget);\r\nexport { ParameterHintsWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorHoverBorder);\r\n    if (border) {\r\n        const borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`);\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(0.5)}; }`);\r\n    }\r\n    const background = theme.getColor(editorHoverBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorHoverForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { ParameterHintsWidget } from './parameterHintsWidget.js';\r\nimport { Context } from './provideSignatureHelp.js';\r\nimport * as modes from '../../common/modes.js';\r\nlet ParameterHintsController = class ParameterHintsController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.widget = this._register(instantiationService.createInstance(ParameterHintsWidget, this.editor));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ParameterHintsController.ID);\r\n    }\r\n    cancel() {\r\n        this.widget.cancel();\r\n    }\r\n    previous() {\r\n        this.widget.previous();\r\n    }\r\n    next() {\r\n        this.widget.next();\r\n    }\r\n    trigger(context) {\r\n        this.widget.trigger(context);\r\n    }\r\n};\r\nParameterHintsController.ID = 'editor.controller.parameterHints';\r\nParameterHintsController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], ParameterHintsController);\r\nexport class TriggerParameterHintsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.triggerParameterHints',\r\n            label: nls.localize('parameterHints.trigger.label', \"Trigger Parameter Hints\"),\r\n            alias: 'Trigger Parameter Hints',\r\n            precondition: EditorContextKeys.hasSignatureHelpProvider,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 10 /* Space */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = ParameterHintsController.get(editor);\r\n        if (controller) {\r\n            controller.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.Invoke\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(ParameterHintsController.ID, ParameterHintsController);\r\nregisterEditorAction(TriggerParameterHintsAction);\r\nconst weight = 100 /* EditorContrib */ + 75;\r\nconst ParameterHintsCommand = EditorCommand.bindToContribution(ParameterHintsController.get);\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'closeParameterHints',\r\n    precondition: Context.Visible,\r\n    handler: x => x.cancel(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'showPrevParameterHint',\r\n    precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\r\n    handler: x => x.previous(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [512 /* Alt */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [512 /* Alt */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'showNextParameterHint',\r\n    precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\r\n    handler: x => x.next(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [512 /* Alt */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [512 /* Alt */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './renameInputField.css';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { inputBackground, inputBorder, inputForeground, widgetShadow, editorWidgetBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, localize('renameInputVisible', \"Whether the rename input widget is visible\"));\r\nlet RenameInputField = class RenameInputField {\r\n    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._acceptKeybindings = _acceptKeybindings;\r\n        this._themeService = _themeService;\r\n        this._keybindingService = _keybindingService;\r\n        this._disposables = new DisposableStore();\r\n        this.allowEditorOverflow = true;\r\n        this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\r\n        this._editor.addContentWidget(this);\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(42 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return '__renameInputWidget';\r\n    }\r\n    getDomNode() {\r\n        if (!this._domNode) {\r\n            this._domNode = document.createElement('div');\r\n            this._domNode.className = 'monaco-editor rename-box';\r\n            this._input = document.createElement('input');\r\n            this._input.className = 'rename-input';\r\n            this._input.type = 'text';\r\n            this._input.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\r\n            this._domNode.appendChild(this._input);\r\n            this._label = document.createElement('div');\r\n            this._label.className = 'rename-label';\r\n            this._domNode.appendChild(this._label);\r\n            const updateLabel = () => {\r\n                var _a, _b;\r\n                const [accept, preview] = this._acceptKeybindings;\r\n                this._keybindingService.lookupKeybinding(accept);\r\n                this._label.innerText = localize({ key: 'label', comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"'] }, \"{0} to Rename, {1} to Preview\", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());\r\n            };\r\n            updateLabel();\r\n            this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));\r\n            this._updateFont();\r\n            this._updateStyles(this._themeService.getColorTheme());\r\n        }\r\n        return this._domNode;\r\n    }\r\n    _updateStyles(theme) {\r\n        var _a, _b, _c, _d;\r\n        if (!this._input || !this._domNode) {\r\n            return;\r\n        }\r\n        const widgetShadowColor = theme.getColor(widgetShadow);\r\n        this._domNode.style.backgroundColor = String((_a = theme.getColor(editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');\r\n        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\r\n        this._domNode.style.color = String((_b = theme.getColor(inputForeground)) !== null && _b !== void 0 ? _b : '');\r\n        this._input.style.backgroundColor = String((_c = theme.getColor(inputBackground)) !== null && _c !== void 0 ? _c : '');\r\n        // this._input.style.color = String(theme.getColor(inputForeground) ?? '');\r\n        const border = theme.getColor(inputBorder);\r\n        this._input.style.borderWidth = border ? '1px' : '0px';\r\n        this._input.style.borderStyle = border ? 'solid' : 'none';\r\n        this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';\r\n    }\r\n    _updateFont() {\r\n        if (!this._input || !this._label) {\r\n            return;\r\n        }\r\n        const fontInfo = this._editor.getOption(42 /* fontInfo */);\r\n        this._input.style.fontFamily = fontInfo.fontFamily;\r\n        this._input.style.fontWeight = fontInfo.fontWeight;\r\n        this._input.style.fontSize = `${fontInfo.fontSize}px`;\r\n        this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;\r\n    }\r\n    getPosition() {\r\n        if (!this._visible) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\r\n        };\r\n    }\r\n    afterRender(position) {\r\n        if (!position) {\r\n            // cancel rename when input widget isn't rendered anymore\r\n            this.cancelInput(true);\r\n        }\r\n    }\r\n    acceptInput(wantsPreview) {\r\n        if (this._currentAcceptInput) {\r\n            this._currentAcceptInput(wantsPreview);\r\n        }\r\n    }\r\n    cancelInput(focusEditor) {\r\n        if (this._currentCancelInput) {\r\n            this._currentCancelInput(focusEditor);\r\n        }\r\n    }\r\n    getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {\r\n        this._domNode.classList.toggle('preview', supportPreview);\r\n        this._position = new Position(where.startLineNumber, where.startColumn);\r\n        this._input.value = value;\r\n        this._input.setAttribute('selectionStart', selectionStart.toString());\r\n        this._input.setAttribute('selectionEnd', selectionEnd.toString());\r\n        this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\r\n        const disposeOnDone = new DisposableStore();\r\n        return new Promise(resolve => {\r\n            this._currentCancelInput = (focusEditor) => {\r\n                this._currentAcceptInput = undefined;\r\n                this._currentCancelInput = undefined;\r\n                resolve(focusEditor);\r\n                return true;\r\n            };\r\n            this._currentAcceptInput = (wantsPreview) => {\r\n                if (this._input.value.trim().length === 0 || this._input.value === value) {\r\n                    // empty or whitespace only or not changed\r\n                    this.cancelInput(true);\r\n                    return;\r\n                }\r\n                this._currentAcceptInput = undefined;\r\n                this._currentCancelInput = undefined;\r\n                resolve({\r\n                    newName: this._input.value,\r\n                    wantsPreview: supportPreview && wantsPreview\r\n                });\r\n            };\r\n            token.onCancellationRequested(() => this.cancelInput(true));\r\n            disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\r\n            this._show();\r\n        }).finally(() => {\r\n            disposeOnDone.dispose();\r\n            this._hide();\r\n        });\r\n    }\r\n    _show() {\r\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* Smooth */);\r\n        this._visible = true;\r\n        this._visibleContextKey.set(true);\r\n        this._editor.layoutContentWidget(this);\r\n        setTimeout(() => {\r\n            this._input.focus();\r\n            this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));\r\n        }, 100);\r\n    }\r\n    _hide() {\r\n        this._visible = false;\r\n        this._visibleContextKey.reset();\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n};\r\nRenameInputField = __decorate([\r\n    __param(2, IThemeService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IContextKeyService)\r\n], RenameInputField);\r\nexport { RenameInputField };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { RenameInputField, CONTEXT_RENAME_INPUT_VISIBLE } from './renameInputField.js';\r\nimport { RenameProviderRegistry } from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { IdleValue, raceCancellation } from '../../../base/common/async.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfigurationService.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nclass RenameSkeleton {\r\n    constructor(model, position) {\r\n        this.model = model;\r\n        this.position = position;\r\n        this._providerRenameIdx = 0;\r\n        this._providers = RenameProviderRegistry.ordered(model);\r\n    }\r\n    hasProvider() {\r\n        return this._providers.length > 0;\r\n    }\r\n    resolveRenameLocation(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const rejects = [];\r\n            for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\r\n                const provider = this._providers[this._providerRenameIdx];\r\n                if (!provider.resolveRenameLocation) {\r\n                    break;\r\n                }\r\n                let res = yield provider.resolveRenameLocation(this.model, this.position, token);\r\n                if (!res) {\r\n                    continue;\r\n                }\r\n                if (res.rejectReason) {\r\n                    rejects.push(res.rejectReason);\r\n                    continue;\r\n                }\r\n                return res;\r\n            }\r\n            const word = this.model.getWordAtPosition(this.position);\r\n            if (!word) {\r\n                return {\r\n                    range: Range.fromPositions(this.position),\r\n                    text: '',\r\n                    rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n                };\r\n            }\r\n            return {\r\n                range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\r\n                text: word.word,\r\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n            };\r\n        });\r\n    }\r\n    provideRenameEdits(newName, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\r\n        });\r\n    }\r\n    _provideRenameEdits(newName, i, rejects, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const provider = this._providers[i];\r\n            if (!provider) {\r\n                return {\r\n                    edits: [],\r\n                    rejectReason: rejects.join('\\n')\r\n                };\r\n            }\r\n            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\r\n            if (!result) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\r\n            }\r\n            else if (result.rejectReason) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexport function rename(model, position, newName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const skeleton = new RenameSkeleton(model, position);\r\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\r\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\r\n            return { edits: [], rejectReason: loc.rejectReason };\r\n        }\r\n        return skeleton.provideRenameEdits(newName, CancellationToken.None);\r\n    });\r\n}\r\n// ---  register actions and commands\r\nlet RenameController = class RenameController {\r\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService) {\r\n        this.editor = editor;\r\n        this._instaService = _instaService;\r\n        this._notificationService = _notificationService;\r\n        this._bulkEditService = _bulkEditService;\r\n        this._progressService = _progressService;\r\n        this._logService = _logService;\r\n        this._configService = _configService;\r\n        this._dispoableStore = new DisposableStore();\r\n        this._cts = new CancellationTokenSource();\r\n        this._renameInputField = this._dispoableStore.add(new IdleValue(() => this._dispoableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']))));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(RenameController.ID);\r\n    }\r\n    dispose() {\r\n        this._dispoableStore.dispose();\r\n        this._cts.dispose(true);\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._cts.dispose(true);\r\n            if (!this.editor.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const skeleton = new RenameSkeleton(this.editor.getModel(), position);\r\n            if (!skeleton.hasProvider()) {\r\n                return undefined;\r\n            }\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */);\r\n            // resolve rename location\r\n            let loc;\r\n            try {\r\n                const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);\r\n                this._progressService.showWhile(resolveLocationOperation, 250);\r\n                loc = yield resolveLocationOperation;\r\n            }\r\n            catch (e) {\r\n                MessageController.get(this.editor).showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\r\n                return undefined;\r\n            }\r\n            if (!loc) {\r\n                return undefined;\r\n            }\r\n            if (loc.rejectReason) {\r\n                MessageController.get(this.editor).showMessage(loc.rejectReason, position);\r\n                return undefined;\r\n            }\r\n            if (this._cts.token.isCancellationRequested) {\r\n                return undefined;\r\n            }\r\n            this._cts.dispose();\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */, loc.range);\r\n            // do rename at location\r\n            let selection = this.editor.getSelection();\r\n            let selectionStart = 0;\r\n            let selectionEnd = loc.text.length;\r\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\r\n                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\r\n                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\r\n            }\r\n            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\r\n            const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);\r\n            // no result, only hint to focus the editor or not\r\n            if (typeof inputFieldResult === 'boolean') {\r\n                if (inputFieldResult) {\r\n                    this.editor.focus();\r\n                }\r\n                return undefined;\r\n            }\r\n            this.editor.focus();\r\n            const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then((renameResult) => __awaiter(this, void 0, void 0, function* () {\r\n                if (!renameResult || !this.editor.hasModel()) {\r\n                    return;\r\n                }\r\n                if (renameResult.rejectReason) {\r\n                    this._notificationService.info(renameResult.rejectReason);\r\n                    return;\r\n                }\r\n                this._bulkEditService.apply(ResourceEdit.convert(renameResult), {\r\n                    editor: this.editor,\r\n                    showPreview: inputFieldResult.wantsPreview,\r\n                    label: nls.localize('label', \"Renaming '{0}'\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                    quotableLabel: nls.localize('quotableLabel', \"Renaming {0}\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                }).then(result => {\r\n                    if (result.ariaSummary) {\r\n                        alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\r\n                    }\r\n                }).catch(err => {\r\n                    this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\r\n                    this._logService.error(err);\r\n                });\r\n            }), err => {\r\n                this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\r\n                this._logService.error(err);\r\n            });\r\n            this._progressService.showWhile(renameOperation, 250);\r\n            return renameOperation;\r\n        });\r\n    }\r\n    acceptRenameInput(wantsPreview) {\r\n        this._renameInputField.value.acceptInput(wantsPreview);\r\n    }\r\n    cancelRenameInput() {\r\n        this._renameInputField.value.cancelInput(true);\r\n    }\r\n};\r\nRenameController.ID = 'editor.contrib.renameController';\r\nRenameController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, INotificationService),\r\n    __param(3, IBulkEditService),\r\n    __param(4, IEditorProgressService),\r\n    __param(5, ILogService),\r\n    __param(6, ITextResourceConfigurationService)\r\n], RenameController);\r\n// ---- action implementation\r\nexport class RenameAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.rename',\r\n            label: nls.localize('rename.label', \"Rename Symbol\"),\r\n            alias: 'Rename Symbol',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.1\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = RenameController.get(editor);\r\n        if (controller) {\r\n            return controller.run();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nregisterEditorContribution(RenameController.ID, RenameController);\r\nregisterEditorAction(RenameAction);\r\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.acceptRenameInput(false),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInputWithPreview',\r\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\r\n    handler: x => x.acceptRenameInput(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 1024 /* Shift */ + 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'cancelRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.cancelRenameInput(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n// ---- api bridge command\r\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (model, position, ...args) {\r\n    const [newName] = args;\r\n    assertType(typeof newName === 'string');\r\n    return rename(model, position, newName);\r\n});\r\n//todo@jrieken use editor options world\r\nRegistry.as(Extensions.Configuration).registerConfiguration({\r\n    id: 'editor',\r\n    properties: {\r\n        'editor.rename.enablePreview': {\r\n            scope: 5 /* LANGUAGE_OVERRIDABLE */,\r\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\r\n            default: true,\r\n            type: 'boolean'\r\n        }\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isUpperAsciiLetter, isLowerAsciiLetter } from '../../../base/common/strings.js';\r\nexport class WordSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        const result = [];\r\n        for (const position of positions) {\r\n            const bucket = [];\r\n            result.push(bucket);\r\n            this._addInWordRanges(bucket, model, position);\r\n            this._addWordRanges(bucket, model, position);\r\n            this._addWhitespaceLine(bucket, model, position);\r\n            bucket.push({ range: model.getFullModelRange() });\r\n        }\r\n        return result;\r\n    }\r\n    _addInWordRanges(bucket, model, pos) {\r\n        const obj = model.getWordAtPosition(pos);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        let { word, startColumn } = obj;\r\n        let offset = pos.column - startColumn;\r\n        let start = offset;\r\n        let end = offset;\r\n        let lastCh = 0;\r\n        // LEFT anchor (start)\r\n        for (; start >= 0; start--) {\r\n            let ch = word.charCodeAt(start);\r\n            if ((start !== offset) && (ch === 95 /* Underline */ || ch === 45 /* Dash */)) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        start += 1;\r\n        // RIGHT anchor (end)\r\n        for (; end < word.length; end++) {\r\n            let ch = word.charCodeAt(end);\r\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            else if (ch === 95 /* Underline */ || ch === 45 /* Dash */) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        if (start < end) {\r\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\r\n        }\r\n    }\r\n    _addWordRanges(bucket, model, pos) {\r\n        const word = model.getWordAtPosition(pos);\r\n        if (word) {\r\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\r\n        }\r\n    }\r\n    _addWhitespaceLine(bucket, model, pos) {\r\n        if (model.getLineLength(pos.lineNumber) > 0\r\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\r\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\r\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { WordSelectionRangeProvider } from './wordSelections.js';\r\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nclass SelectionRanges {\r\n    constructor(index, ranges) {\r\n        this.index = index;\r\n        this.ranges = ranges;\r\n    }\r\n    mov(fwd) {\r\n        let index = this.index + (fwd ? 1 : -1);\r\n        if (index < 0 || index >= this.ranges.length) {\r\n            return this;\r\n        }\r\n        const res = new SelectionRanges(index, this.ranges);\r\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\r\n            // next range equals this range, retry with next-next\r\n            return res.mov(fwd);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nclass SmartSelectController {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ignoreSelection = false;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SmartSelectController.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n    run(forward) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = this._editor.getSelections();\r\n            const model = this._editor.getModel();\r\n            if (!modes.SelectionRangeRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (!this._state) {\r\n                yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(102 /* smartSelect */), CancellationToken.None).then(ranges => {\r\n                    var _a;\r\n                    if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\r\n                        // invalid result\r\n                        return;\r\n                    }\r\n                    if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\r\n                        // invalid editor state\r\n                        return;\r\n                    }\r\n                    for (let i = 0; i < ranges.length; i++) {\r\n                        ranges[i] = ranges[i].filter(range => {\r\n                            // filter ranges inside the selection\r\n                            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\r\n                        });\r\n                        // prepend current selection\r\n                        ranges[i].unshift(selections[i]);\r\n                    }\r\n                    this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\r\n                    // listen to caret move and forget about state\r\n                    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                    this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\r\n                        var _a;\r\n                        if (!this._ignoreSelection) {\r\n                            (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                            this._state = undefined;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            if (!this._state) {\r\n                // no state\r\n                return;\r\n            }\r\n            this._state = this._state.map(state => state.mov(forward));\r\n            const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\r\n            this._ignoreSelection = true;\r\n            try {\r\n                this._editor.setSelections(newSelections);\r\n            }\r\n            finally {\r\n                this._ignoreSelection = false;\r\n            }\r\n        });\r\n    }\r\n}\r\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\r\nclass AbstractSmartSelect extends EditorAction {\r\n    constructor(forward, opts) {\r\n        super(opts);\r\n        this._forward = forward;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = SmartSelectController.get(editor);\r\n            if (controller) {\r\n                yield controller.run(this._forward);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass GrowSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.smartSelect.expand',\r\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\r\n            alias: 'Expand Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\n// renamed command id\r\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\r\nclass ShrinkSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.smartSelect.shrink',\r\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\r\n            alias: 'Shrink Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\r\nregisterEditorAction(GrowSelectionAction);\r\nregisterEditorAction(ShrinkSelectionAction);\r\n// word selection\r\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\r\nexport function provideSelectionRanges(model, positions, options, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const providers = modes.SelectionRangeRegistry.all(model);\r\n        if (providers.length === 1) {\r\n            // add word selection and bracket selection when no provider exists\r\n            providers.unshift(new BracketSelectionRangeProvider());\r\n        }\r\n        let work = [];\r\n        let allRawRanges = [];\r\n        for (const provider of providers) {\r\n            work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\r\n                if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\r\n                    for (let i = 0; i < positions.length; i++) {\r\n                        if (!allRawRanges[i]) {\r\n                            allRawRanges[i] = [];\r\n                        }\r\n                        for (const oneProviderRanges of allProviderRanges[i]) {\r\n                            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\r\n                                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, onUnexpectedExternalError));\r\n        }\r\n        yield Promise.all(work);\r\n        return allRawRanges.map(oneRawRanges => {\r\n            if (oneRawRanges.length === 0) {\r\n                return [];\r\n            }\r\n            // sort all by start/end position\r\n            oneRawRanges.sort((a, b) => {\r\n                if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\r\n                    return 1;\r\n                }\r\n                else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            // remove ranges that don't contain the former range or that are equal to the\r\n            // former range\r\n            let oneRanges = [];\r\n            let last;\r\n            for (const range of oneRawRanges) {\r\n                if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\r\n                    oneRanges.push(range);\r\n                    last = range;\r\n                }\r\n            }\r\n            if (!options.selectLeadingAndTrailingWhitespace) {\r\n                return oneRanges;\r\n            }\r\n            // add ranges that expand trivia at line starts and ends whenever a range\r\n            // wraps onto the a new line\r\n            let oneRangesWithTrivia = [oneRanges[0]];\r\n            for (let i = 1; i < oneRanges.length; i++) {\r\n                const prev = oneRanges[i - 1];\r\n                const cur = oneRanges[i];\r\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\r\n                    // add line/block range without leading/failing whitespace\r\n                    const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\r\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\r\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\r\n                    }\r\n                    // add line/block range\r\n                    const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\r\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\r\n                        oneRangesWithTrivia.push(rangeFull);\r\n                    }\r\n                }\r\n                oneRangesWithTrivia.push(cur);\r\n            }\r\n            return oneRangesWithTrivia;\r\n        });\r\n    });\r\n}\r\nregisterModelCommand('_executeSelectionRangeProvider', function (model, ...args) {\r\n    const [positions] = args;\r\n    return provideSelectionRanges(model, positions, { selectLeadingAndTrailingWhitespace: true }, CancellationToken.None);\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nclass ForceRetokenizeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.forceRetokenize',\r\n            label: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\r\n            alias: 'Developer: Force Retokenize',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        model.resetTokenization();\r\n        const sw = new StopWatch(true);\r\n        model.forceTokenization(model.getLineCount());\r\n        sw.stop();\r\n        console.log(`tokenization took ${sw.elapsed()}`);\r\n    }\r\n}\r\nregisterEditorAction(ForceRetokenizeAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { TabFocus } from '../../common/config/commonEditorConfig.js';\r\nexport class ToggleTabFocusModeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ToggleTabFocusModeAction.ID,\r\n            label: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\r\n            alias: 'Toggle Tab Key Moves Focus',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 2048 /* CtrlCmd */ | 43 /* KEY_M */,\r\n                mac: { primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 43 /* KEY_M */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const oldValue = TabFocus.getTabFocusMode();\r\n        const newValue = !oldValue;\r\n        TabFocus.setTabFocusMode(newValue);\r\n        if (newValue) {\r\n            alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\r\n        }\r\n        else {\r\n            alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\r\n        }\r\n    }\r\n}\r\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\r\nregisterEditorAction(ToggleTabFocusModeAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nconst ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';\r\nfunction writeIgnoreState(codeEditorService, model, state) {\r\n    codeEditorService.setModelProperty(model.uri, ignoreUnusualLineTerminators, state);\r\n}\r\nfunction readIgnoreState(codeEditorService, model) {\r\n    return codeEditorService.getModelProperty(model.uri, ignoreUnusualLineTerminators);\r\n}\r\nlet UnusualLineTerminatorsDetector = class UnusualLineTerminatorsDetector extends Disposable {\r\n    constructor(_editor, _dialogService, _codeEditorService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._dialogService = _dialogService;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._config = this._editor.getOption(113 /* unusualLineTerminators */);\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(113 /* unusualLineTerminators */)) {\r\n                this._config = this._editor.getOption(113 /* unusualLineTerminators */);\r\n                this._checkForUnusualLineTerminators();\r\n            }\r\n        }));\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            this._checkForUnusualLineTerminators();\r\n        }));\r\n        this._register(this._editor.onDidChangeModelContent((e) => {\r\n            if (e.isUndoing) {\r\n                // skip checking in case of undoing\r\n                return;\r\n            }\r\n            this._checkForUnusualLineTerminators();\r\n        }));\r\n    }\r\n    _checkForUnusualLineTerminators() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._config === 'off') {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            if (!model.mightContainUnusualLineTerminators()) {\r\n                return;\r\n            }\r\n            const ignoreState = readIgnoreState(this._codeEditorService, model);\r\n            if (ignoreState === true) {\r\n                // this model should be ignored\r\n                return;\r\n            }\r\n            if (this._editor.getOption(80 /* readOnly */)) {\r\n                // read only editor => sorry!\r\n                return;\r\n            }\r\n            if (this._config === 'auto') {\r\n                // just do it!\r\n                model.removeUnusualLineTerminators(this._editor.getSelections());\r\n                return;\r\n            }\r\n            const result = yield this._dialogService.confirm({\r\n                title: nls.localize('unusualLineTerminators.title', \"Unusual Line Terminators\"),\r\n                message: nls.localize('unusualLineTerminators.message', \"Detected unusual line terminators\"),\r\n                detail: nls.localize('unusualLineTerminators.detail', \"The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\\n\\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.\", basename(model.uri)),\r\n                primaryButton: nls.localize('unusualLineTerminators.fix', \"Remove Unusual Line Terminators\"),\r\n                secondaryButton: nls.localize('unusualLineTerminators.ignore', \"Ignore\")\r\n            });\r\n            if (!result.confirmed) {\r\n                // this model should be ignored\r\n                writeIgnoreState(this._codeEditorService, model, true);\r\n                return;\r\n            }\r\n            model.removeUnusualLineTerminators(this._editor.getSelections());\r\n        });\r\n    }\r\n};\r\nUnusualLineTerminatorsDetector.ID = 'editor.contrib.unusualLineTerminatorsDetector';\r\nUnusualLineTerminatorsDetector = __decorate([\r\n    __param(1, IDialogService),\r\n    __param(2, ICodeEditorService)\r\n], UnusualLineTerminatorsDetector);\r\nexport { UnusualLineTerminatorsDetector };\r\nregisterEditorContribution(UnusualLineTerminatorsDetector.ID, UnusualLineTerminatorsDetector);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { DocumentRangeSemanticTokensProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { toMultilineTokens2 } from '../../common/services/semanticTokensProviderStyling.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { isSemanticColoringEnabled, SEMANTIC_HIGHLIGHTING_SETTING_ID } from '../../common/services/modelServiceImpl.js';\r\nimport { getDocumentRangeSemanticTokensProvider } from '../../common/services/getSemanticTokens.js';\r\nlet ViewportSemanticTokensContribution = class ViewportSemanticTokensContribution extends Disposable {\r\n    constructor(editor, _modelService, _themeService, _configurationService) {\r\n        super();\r\n        this._modelService = _modelService;\r\n        this._themeService = _themeService;\r\n        this._configurationService = _configurationService;\r\n        this._editor = editor;\r\n        this._tokenizeViewport = new RunOnceScheduler(() => this._tokenizeViewportNow(), 100);\r\n        this._outstandingRequests = [];\r\n        this._register(this._editor.onDidScrollChange(() => {\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._editor.onDidChangeModelContent((e) => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(DocumentRangeSemanticTokensProviderRegistry.onDidChange(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\r\n                this._cancelAll();\r\n                this._tokenizeViewport.schedule();\r\n            }\r\n        }));\r\n        this._register(this._themeService.onDidColorThemeChange(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n    }\r\n    _cancelAll() {\r\n        for (const request of this._outstandingRequests) {\r\n            request.cancel();\r\n        }\r\n        this._outstandingRequests = [];\r\n    }\r\n    _removeOutstandingRequest(req) {\r\n        for (let i = 0, len = this._outstandingRequests.length; i < len; i++) {\r\n            if (this._outstandingRequests[i] === req) {\r\n                this._outstandingRequests.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _tokenizeViewportNow() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (model.hasCompleteSemanticTokens()) {\r\n            return;\r\n        }\r\n        if (!isSemanticColoringEnabled(model, this._themeService, this._configurationService)) {\r\n            if (model.hasSomeSemanticTokens()) {\r\n                model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const provider = getDocumentRangeSemanticTokensProvider(model);\r\n        if (!provider) {\r\n            if (model.hasSomeSemanticTokens()) {\r\n                model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const styling = this._modelService.getSemanticTokensProviderStyling(provider);\r\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n        this._outstandingRequests = this._outstandingRequests.concat(visibleRanges.map(range => this._requestRange(model, range, provider, styling)));\r\n    }\r\n    _requestRange(model, range, provider, styling) {\r\n        const requestVersionId = model.getVersionId();\r\n        const request = createCancelablePromise(token => Promise.resolve(provider.provideDocumentRangeSemanticTokens(model, range, token)));\r\n        request.then((r) => {\r\n            if (!r || model.isDisposed() || model.getVersionId() !== requestVersionId) {\r\n                return;\r\n            }\r\n            model.setPartialSemanticTokens(range, toMultilineTokens2(r, styling, model.getLanguageIdentifier()));\r\n        }).then(() => this._removeOutstandingRequest(request), () => this._removeOutstandingRequest(request));\r\n        return request;\r\n    }\r\n};\r\nViewportSemanticTokensContribution.ID = 'editor.contrib.viewportSemanticTokens';\r\nViewportSemanticTokensContribution = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IThemeService),\r\n    __param(3, IConfigurationService)\r\n], ViewportSemanticTokensContribution);\r\nregisterEditorContribution(ViewportSemanticTokensContribution.ID, ViewportSemanticTokensContribution);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { createCancelablePromise, first, timeout } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightKind, DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { activeContrastBorder, editorSelectionHighlight, editorSelectionHighlightBorder, overviewRulerSelectionHighlightForeground, registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nconst editorWordHighlight = registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hc: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst editorWordHighlightStrong = registerColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hc: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst editorWordHighlightBorder = registerColor('editor.wordHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\r\nconst editorWordHighlightStrongBorder = registerColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\r\nconst overviewRulerWordHighlightForeground = registerColor('editorOverviewRuler.wordHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst overviewRulerWordHighlightStrongForeground = registerColor('editorOverviewRuler.wordHighlightStrongForeground', { dark: '#C0A0C0CC', light: '#C0A0C0CC', hc: '#C0A0C0CC' }, nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst ctxHasWordHighlights = new RawContextKey('hasWordHighlights', false);\r\nexport function getOccurrencesAtPosition(model, position, token) {\r\n    const orderedByScore = DocumentHighlightProviderRegistry.ordered(model);\r\n    // in order of score ask the occurrences provider\r\n    // until someone response with a good result\r\n    // (good = none empty array)\r\n    return first(orderedByScore.map(provider => () => {\r\n        return Promise.resolve(provider.provideDocumentHighlights(model, position, token))\r\n            .then(undefined, onUnexpectedExternalError);\r\n    }), arrays.isNonEmptyArray);\r\n}\r\nclass OccurenceAtPositionRequest {\r\n    constructor(model, selection, wordSeparators) {\r\n        this._wordRange = this._getCurrentWordRange(model, selection);\r\n        this.result = createCancelablePromise(token => this._compute(model, selection, wordSeparators, token));\r\n    }\r\n    _getCurrentWordRange(model, selection) {\r\n        const word = model.getWordAtPosition(selection.getPosition());\r\n        if (word) {\r\n            return new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n        }\r\n        return null;\r\n    }\r\n    isValid(model, selection, decorationIds) {\r\n        const lineNumber = selection.startLineNumber;\r\n        const startColumn = selection.startColumn;\r\n        const endColumn = selection.endColumn;\r\n        const currentWordRange = this._getCurrentWordRange(model, selection);\r\n        let requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\r\n        // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\r\n        // (Same symbol)\r\n        for (let i = 0, len = decorationIds.length; !requestIsValid && i < len; i++) {\r\n            let range = model.getDecorationRange(decorationIds[i]);\r\n            if (range && range.startLineNumber === lineNumber) {\r\n                if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\r\n                    requestIsValid = true;\r\n                }\r\n            }\r\n        }\r\n        return requestIsValid;\r\n    }\r\n    cancel() {\r\n        this.result.cancel();\r\n    }\r\n}\r\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\r\n    _compute(model, selection, wordSeparators, token) {\r\n        return getOccurrencesAtPosition(model, selection.getPosition(), token).then(value => value || []);\r\n    }\r\n}\r\nclass TextualOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\r\n    constructor(model, selection, wordSeparators) {\r\n        super(model, selection, wordSeparators);\r\n        this._selectionIsEmpty = selection.isEmpty();\r\n    }\r\n    _compute(model, selection, wordSeparators, token) {\r\n        return timeout(250, token).then(() => {\r\n            if (!selection.isEmpty()) {\r\n                return [];\r\n            }\r\n            const word = model.getWordAtPosition(selection.getPosition());\r\n            if (!word || word.word.length > 1000) {\r\n                return [];\r\n            }\r\n            const matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\r\n            return matches.map(m => {\r\n                return {\r\n                    range: m.range,\r\n                    kind: DocumentHighlightKind.Text\r\n                };\r\n            });\r\n        });\r\n    }\r\n    isValid(model, selection, decorationIds) {\r\n        const currentSelectionIsEmpty = selection.isEmpty();\r\n        if (this._selectionIsEmpty !== currentSelectionIsEmpty) {\r\n            return false;\r\n        }\r\n        return super.isValid(model, selection, decorationIds);\r\n    }\r\n}\r\nfunction computeOccurencesAtPosition(model, selection, wordSeparators) {\r\n    if (DocumentHighlightProviderRegistry.has(model)) {\r\n        return new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators);\r\n    }\r\n    return new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\r\n}\r\nregisterModelAndPositionCommand('_executeDocumentHighlights', (model, position) => getOccurrencesAtPosition(model, position, CancellationToken.None));\r\nclass WordHighlighter {\r\n    constructor(editor, contextKeyService) {\r\n        this.toUnhook = new DisposableStore();\r\n        this.workerRequestTokenId = 0;\r\n        this.workerRequestCompleted = false;\r\n        this.workerRequestValue = [];\r\n        this.lastCursorPositionChangeTime = 0;\r\n        this.renderDecorationsTimer = -1;\r\n        this.editor = editor;\r\n        this._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\r\n        this._ignorePositionChangeEvent = false;\r\n        this.occurrencesHighlight = this.editor.getOption(71 /* occurrencesHighlight */);\r\n        this.model = this.editor.getModel();\r\n        this.toUnhook.add(editor.onDidChangeCursorPosition((e) => {\r\n            if (this._ignorePositionChangeEvent) {\r\n                // We are changing the position => ignore this event\r\n                return;\r\n            }\r\n            if (!this.occurrencesHighlight) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            this._onPositionChanged(e);\r\n        }));\r\n        this.toUnhook.add(editor.onDidChangeModelContent((e) => {\r\n            this._stopAll();\r\n        }));\r\n        this.toUnhook.add(editor.onDidChangeConfiguration((e) => {\r\n            let newValue = this.editor.getOption(71 /* occurrencesHighlight */);\r\n            if (this.occurrencesHighlight !== newValue) {\r\n                this.occurrencesHighlight = newValue;\r\n                this._stopAll();\r\n            }\r\n        }));\r\n        this._decorationIds = [];\r\n        this.workerRequestTokenId = 0;\r\n        this.workerRequest = null;\r\n        this.workerRequestCompleted = false;\r\n        this.lastCursorPositionChangeTime = 0;\r\n        this.renderDecorationsTimer = -1;\r\n    }\r\n    hasDecorations() {\r\n        return (this._decorationIds.length > 0);\r\n    }\r\n    restore() {\r\n        if (!this.occurrencesHighlight) {\r\n            return;\r\n        }\r\n        this._run();\r\n    }\r\n    _getSortedHighlights() {\r\n        return arrays.coalesce(this._decorationIds\r\n            .map((id) => this.model.getDecorationRange(id))\r\n            .sort(Range.compareRangesUsingStarts));\r\n    }\r\n    moveNext() {\r\n        let highlights = this._getSortedHighlights();\r\n        let index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\r\n        let newIndex = ((index + 1) % highlights.length);\r\n        let dest = highlights[newIndex];\r\n        try {\r\n            this._ignorePositionChangeEvent = true;\r\n            this.editor.setPosition(dest.getStartPosition());\r\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\r\n            const word = this._getWord();\r\n            if (word) {\r\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\r\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\r\n            }\r\n        }\r\n        finally {\r\n            this._ignorePositionChangeEvent = false;\r\n        }\r\n    }\r\n    moveBack() {\r\n        let highlights = this._getSortedHighlights();\r\n        let index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\r\n        let newIndex = ((index - 1 + highlights.length) % highlights.length);\r\n        let dest = highlights[newIndex];\r\n        try {\r\n            this._ignorePositionChangeEvent = true;\r\n            this.editor.setPosition(dest.getStartPosition());\r\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\r\n            const word = this._getWord();\r\n            if (word) {\r\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\r\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\r\n            }\r\n        }\r\n        finally {\r\n            this._ignorePositionChangeEvent = false;\r\n        }\r\n    }\r\n    _removeDecorations() {\r\n        if (this._decorationIds.length > 0) {\r\n            // remove decorations\r\n            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\r\n            this._hasWordHighlights.set(false);\r\n        }\r\n    }\r\n    _stopAll() {\r\n        // Remove any existing decorations\r\n        this._removeDecorations();\r\n        // Cancel any renderDecorationsTimer\r\n        if (this.renderDecorationsTimer !== -1) {\r\n            clearTimeout(this.renderDecorationsTimer);\r\n            this.renderDecorationsTimer = -1;\r\n        }\r\n        // Cancel any worker request\r\n        if (this.workerRequest !== null) {\r\n            this.workerRequest.cancel();\r\n            this.workerRequest = null;\r\n        }\r\n        // Invalidate any worker request callback\r\n        if (!this.workerRequestCompleted) {\r\n            this.workerRequestTokenId++;\r\n            this.workerRequestCompleted = true;\r\n        }\r\n    }\r\n    _onPositionChanged(e) {\r\n        // disabled\r\n        if (!this.occurrencesHighlight) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        // ignore typing & other\r\n        if (e.reason !== 3 /* Explicit */) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        this._run();\r\n    }\r\n    _getWord() {\r\n        let editorSelection = this.editor.getSelection();\r\n        let lineNumber = editorSelection.startLineNumber;\r\n        let startColumn = editorSelection.startColumn;\r\n        return this.model.getWordAtPosition({\r\n            lineNumber: lineNumber,\r\n            column: startColumn\r\n        });\r\n    }\r\n    _run() {\r\n        let editorSelection = this.editor.getSelection();\r\n        // ignore multiline selection\r\n        if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        let startColumn = editorSelection.startColumn;\r\n        let endColumn = editorSelection.endColumn;\r\n        const word = this._getWord();\r\n        // The selection must be inside a word or surround one word at most\r\n        if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        // All the effort below is trying to achieve this:\r\n        // - when cursor is moved to a word, trigger immediately a findOccurrences request\r\n        // - 250ms later after the last cursor move event, render the occurrences\r\n        // - no flickering!\r\n        const workerRequestIsValid = (this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this._decorationIds));\r\n        // There are 4 cases:\r\n        // a) old workerRequest is valid & completed, renderDecorationsTimer fired\r\n        // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\r\n        // c) old workerRequest is valid, but not completed\r\n        // d) old workerRequest is not valid\r\n        // For a) no action is needed\r\n        // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\r\n        this.lastCursorPositionChangeTime = (new Date()).getTime();\r\n        if (workerRequestIsValid) {\r\n            if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\r\n                // case b)\r\n                // Delay the firing of renderDecorationsTimer by an extra 250 ms\r\n                clearTimeout(this.renderDecorationsTimer);\r\n                this.renderDecorationsTimer = -1;\r\n                this._beginRenderDecorations();\r\n            }\r\n        }\r\n        else {\r\n            // case d)\r\n            // Stop all previous actions and start fresh\r\n            this._stopAll();\r\n            let myRequestId = ++this.workerRequestTokenId;\r\n            this.workerRequestCompleted = false;\r\n            this.workerRequest = computeOccurencesAtPosition(this.model, this.editor.getSelection(), this.editor.getOption(116 /* wordSeparators */));\r\n            this.workerRequest.result.then(data => {\r\n                if (myRequestId === this.workerRequestTokenId) {\r\n                    this.workerRequestCompleted = true;\r\n                    this.workerRequestValue = data || [];\r\n                    this._beginRenderDecorations();\r\n                }\r\n            }, onUnexpectedError);\r\n        }\r\n    }\r\n    _beginRenderDecorations() {\r\n        let currentTime = (new Date()).getTime();\r\n        let minimumRenderTime = this.lastCursorPositionChangeTime + 250;\r\n        if (currentTime >= minimumRenderTime) {\r\n            // Synchronous\r\n            this.renderDecorationsTimer = -1;\r\n            this.renderDecorations();\r\n        }\r\n        else {\r\n            // Asynchronous\r\n            this.renderDecorationsTimer = setTimeout(() => {\r\n                this.renderDecorations();\r\n            }, (minimumRenderTime - currentTime));\r\n        }\r\n    }\r\n    renderDecorations() {\r\n        this.renderDecorationsTimer = -1;\r\n        let decorations = [];\r\n        for (const info of this.workerRequestValue) {\r\n            if (info.range) {\r\n                decorations.push({\r\n                    range: info.range,\r\n                    options: WordHighlighter._getDecorationOptions(info.kind)\r\n                });\r\n            }\r\n        }\r\n        this._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\r\n        this._hasWordHighlights.set(this.hasDecorations());\r\n    }\r\n    static _getDecorationOptions(kind) {\r\n        if (kind === DocumentHighlightKind.Write) {\r\n            return this._WRITE_OPTIONS;\r\n        }\r\n        else if (kind === DocumentHighlightKind.Text) {\r\n            return this._TEXT_OPTIONS;\r\n        }\r\n        else {\r\n            return this._REGULAR_OPTIONS;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._stopAll();\r\n        this.toUnhook.dispose();\r\n    }\r\n}\r\nWordHighlighter._WRITE_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'word-highlight-strong',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'wordHighlightStrong',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerWordHighlightStrongForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nWordHighlighter._TEXT_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'selection-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nWordHighlighter._REGULAR_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'word-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'wordHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerWordHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nlet WordHighlighterContribution = class WordHighlighterContribution extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this.wordHighlighter = null;\r\n        const createWordHighlighterIfPossible = () => {\r\n            if (editor.hasModel()) {\r\n                this.wordHighlighter = new WordHighlighter(editor, contextKeyService);\r\n            }\r\n        };\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            if (this.wordHighlighter) {\r\n                this.wordHighlighter.dispose();\r\n                this.wordHighlighter = null;\r\n            }\r\n            createWordHighlighterIfPossible();\r\n        }));\r\n        createWordHighlighterIfPossible();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(WordHighlighterContribution.ID);\r\n    }\r\n    saveViewState() {\r\n        if (this.wordHighlighter && this.wordHighlighter.hasDecorations()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveNext() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.moveNext();\r\n        }\r\n    }\r\n    moveBack() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.moveBack();\r\n        }\r\n    }\r\n    restoreViewState(state) {\r\n        if (this.wordHighlighter && state) {\r\n            this.wordHighlighter.restore();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.dispose();\r\n            this.wordHighlighter = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n};\r\nWordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\r\nWordHighlighterContribution = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordHighlighterContribution);\r\nclass WordHighlightNavigationAction extends EditorAction {\r\n    constructor(next, opts) {\r\n        super(opts);\r\n        this._isNext = next;\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = WordHighlighterContribution.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        if (this._isNext) {\r\n            controller.moveNext();\r\n        }\r\n        else {\r\n            controller.moveBack();\r\n        }\r\n    }\r\n}\r\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.wordHighlight.next',\r\n            label: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\r\n            alias: 'Go to Next Symbol Highlight',\r\n            precondition: ctxHasWordHighlights,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.wordHighlight.prev',\r\n            label: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\r\n            alias: 'Go to Previous Symbol Highlight',\r\n            precondition: ctxHasWordHighlights,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass TriggerWordHighlightAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.wordHighlight.trigger',\r\n            label: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\r\n            alias: 'Trigger Symbol Highlight',\r\n            precondition: ctxHasWordHighlights.toNegated(),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        const controller = WordHighlighterContribution.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.restoreViewState(true);\r\n    }\r\n}\r\nregisterEditorContribution(WordHighlighterContribution.ID, WordHighlighterContribution);\r\nregisterEditorAction(NextWordHighlightAction);\r\nregisterEditorAction(PrevWordHighlightAction);\r\nregisterEditorAction(TriggerWordHighlightAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const selectionHighlight = theme.getColor(editorSelectionHighlight);\r\n    if (selectionHighlight) {\r\n        collector.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${selectionHighlight}; }`);\r\n        collector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);\r\n    }\r\n    const wordHighlight = theme.getColor(editorWordHighlight);\r\n    if (wordHighlight) {\r\n        collector.addRule(`.monaco-editor .wordHighlight { background-color: ${wordHighlight}; }`);\r\n    }\r\n    const wordHighlightStrong = theme.getColor(editorWordHighlightStrong);\r\n    if (wordHighlightStrong) {\r\n        collector.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${wordHighlightStrong}; }`);\r\n    }\r\n    const selectionHighlightBorder = theme.getColor(editorSelectionHighlightBorder);\r\n    if (selectionHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .selectionHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${selectionHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const wordHighlightBorder = theme.getColor(editorWordHighlightBorder);\r\n    if (wordHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .wordHighlight { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const wordHighlightStrongBorder = theme.getColor(editorWordHighlightStrongBorder);\r\n    if (wordHighlightStrongBorder) {\r\n        collector.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightStrongBorder}; box-sizing: border-box; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorCommand, registerEditorCommand, EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { CursorState } from '../../common/controller/cursorCommon.js';\r\nimport { WordOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { EditorOptions } from '../../common/config/editorOptions.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IsWindowsContext } from '../../../platform/contextkey/common/contextkeys.js';\r\nexport class MoveWordCommand extends EditorCommand {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._inSelectionMode = opts.inSelectionMode;\r\n        this._wordNavigationType = opts.wordNavigationType;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(116 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const result = selections.map((sel) => {\r\n            const inPosition = new Position(sel.positionLineNumber, sel.positionColumn);\r\n            const outPosition = this._move(wordSeparators, model, inPosition, this._wordNavigationType);\r\n            return this._moveTo(sel, outPosition, this._inSelectionMode);\r\n        });\r\n        model.pushStackElement();\r\n        editor._getViewModel().setCursorStates('moveWordCommand', 3 /* Explicit */, result.map(r => CursorState.fromModelSelection(r)));\r\n        if (result.length === 1) {\r\n            const pos = new Position(result[0].positionLineNumber, result[0].positionColumn);\r\n            editor.revealPosition(pos, 0 /* Smooth */);\r\n        }\r\n    }\r\n    _moveTo(from, to, inSelectionMode) {\r\n        if (inSelectionMode) {\r\n            // move just position\r\n            return new Selection(from.selectionStartLineNumber, from.selectionStartColumn, to.lineNumber, to.column);\r\n        }\r\n        else {\r\n            // move everything\r\n            return new Selection(to.lineNumber, to.column, to.lineNumber, to.column);\r\n        }\r\n    }\r\n}\r\nexport class WordLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class WordRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordStartLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordLeft extends WordLeftCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 1 /* WordStartFast */,\r\n            id: 'cursorWordLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 15 /* LeftArrow */,\r\n                mac: { primary: 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordStartLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 1 /* WordStartFast */,\r\n            id: 'cursorWordLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                mac: { primary: 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\r\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordStartRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndRight extends WordRightCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 17 /* RightArrow */,\r\n                mac: { primary: 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordStartRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                mac: { primary: 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordAccessibilityRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class DeleteWordCommand extends EditorCommand {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._whitespaceHeuristics = opts.whitespaceHeuristics;\r\n        this._wordNavigationType = opts.wordNavigationType;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(116 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const autoClosingBrackets = editor.getOption(5 /* autoClosingBrackets */);\r\n        const autoClosingQuotes = editor.getOption(8 /* autoClosingQuotes */);\r\n        const autoClosingPairs = LanguageConfigurationRegistry.getAutoClosingPairs(model.getLanguageIdentifier().id);\r\n        const viewModel = editor._getViewModel();\r\n        const commands = selections.map((sel) => {\r\n            const deleteRange = this._delete({\r\n                wordSeparators,\r\n                model,\r\n                selection: sel,\r\n                whitespaceHeuristics: this._whitespaceHeuristics,\r\n                autoClosingDelete: editor.getOption(6 /* autoClosingDelete */),\r\n                autoClosingBrackets,\r\n                autoClosingQuotes,\r\n                autoClosingPairs,\r\n                autoClosedCharacters: viewModel.getCursorAutoClosedCharacters()\r\n            }, this._wordNavigationType);\r\n            return new ReplaceCommand(deleteRange, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class DeleteWordLeftCommand extends DeleteWordCommand {\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordOperations.deleteWordLeft(ctx, wordNavigationType);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordRightCommand extends DeleteWordCommand {\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordOperations.deleteWordRight(ctx, wordNavigationType);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class DeleteWordStartLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordStartLeft',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordEndLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordEndLeft',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1 /* Backspace */,\r\n                mac: { primary: 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordStartRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordStartRight',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordEndRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordEndRight',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 20 /* Delete */,\r\n                mac: { primary: 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DeleteInsideWord extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteInsideWord',\r\n            precondition: EditorContextKeys.writable,\r\n            label: nls.localize('deleteInsideWord', \"Delete Word\"),\r\n            alias: 'Delete Word'\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(116 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const commands = selections.map((sel) => {\r\n            const deleteRange = WordOperations.deleteInsideWord(wordSeparators, model, sel);\r\n            return new ReplaceCommand(deleteRange, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nregisterEditorCommand(new CursorWordStartLeft());\r\nregisterEditorCommand(new CursorWordEndLeft());\r\nregisterEditorCommand(new CursorWordLeft());\r\nregisterEditorCommand(new CursorWordStartLeftSelect());\r\nregisterEditorCommand(new CursorWordEndLeftSelect());\r\nregisterEditorCommand(new CursorWordLeftSelect());\r\nregisterEditorCommand(new CursorWordStartRight());\r\nregisterEditorCommand(new CursorWordEndRight());\r\nregisterEditorCommand(new CursorWordRight());\r\nregisterEditorCommand(new CursorWordStartRightSelect());\r\nregisterEditorCommand(new CursorWordEndRightSelect());\r\nregisterEditorCommand(new CursorWordRightSelect());\r\nregisterEditorCommand(new CursorWordAccessibilityLeft());\r\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\r\nregisterEditorCommand(new CursorWordAccessibilityRight());\r\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\r\nregisterEditorCommand(new DeleteWordStartLeft());\r\nregisterEditorCommand(new DeleteWordEndLeft());\r\nregisterEditorCommand(new DeleteWordLeft());\r\nregisterEditorCommand(new DeleteWordStartRight());\r\nregisterEditorCommand(new DeleteWordEndRight());\r\nregisterEditorCommand(new DeleteWordRight());\r\nregisterEditorAction(DeleteInsideWord);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { WordPartOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DeleteWordCommand, MoveWordCommand } from '../wordOperations/wordOperations.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport class DeleteWordPartLeft extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordPartLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartLeft(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordPartRight extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordPartRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartRight(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class WordPartLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartLeft extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\r\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\r\nexport class WordPartRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartRight extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorCommand(new DeleteWordPartLeft());\r\nregisterEditorCommand(new DeleteWordPartRight());\r\nregisterEditorCommand(new CursorWordPartLeft());\r\nregisterEditorCommand(new CursorWordPartLeftSelect());\r\nregisterEditorCommand(new CursorWordPartRight());\r\nregisterEditorCommand(new CursorWordPartRightSelect());\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './accessibilityHelp.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { renderFormattedText } from '../../../../base/browser/formattedTextRenderer.js';\r\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\r\nimport { Widget } from '../../../../base/browser/ui/widget.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { URI } from '../../../../base/common/uri.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { ToggleTabFocusModeAction } from '../../../contrib/toggleTabFocusMode/toggleTabFocusMode.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\r\nimport { contrastBorder, editorWidgetBackground, widgetShadow, editorWidgetForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { AccessibilityHelpNLS } from '../../../common/standaloneStrings.js';\r\nconst CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE = new RawContextKey('accessibilityHelpWidgetVisible', false);\r\nlet AccessibilityHelpController = class AccessibilityHelpController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._widget = this._register(instantiationService.createInstance(AccessibilityHelpWidget, this._editor));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(AccessibilityHelpController.ID);\r\n    }\r\n    show() {\r\n        this._widget.show();\r\n    }\r\n    hide() {\r\n        this._widget.hide();\r\n    }\r\n};\r\nAccessibilityHelpController.ID = 'editor.contrib.accessibilityHelpController';\r\nAccessibilityHelpController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], AccessibilityHelpController);\r\nfunction getSelectionLabel(selections, charactersSelected) {\r\n    if (!selections || selections.length === 0) {\r\n        return AccessibilityHelpNLS.noSelection;\r\n    }\r\n    if (selections.length === 1) {\r\n        if (charactersSelected) {\r\n            return strings.format(AccessibilityHelpNLS.singleSelectionRange, selections[0].positionLineNumber, selections[0].positionColumn, charactersSelected);\r\n        }\r\n        return strings.format(AccessibilityHelpNLS.singleSelection, selections[0].positionLineNumber, selections[0].positionColumn);\r\n    }\r\n    if (charactersSelected) {\r\n        return strings.format(AccessibilityHelpNLS.multiSelectionRange, selections.length, charactersSelected);\r\n    }\r\n    if (selections.length > 0) {\r\n        return strings.format(AccessibilityHelpNLS.multiSelection, selections.length);\r\n    }\r\n    return '';\r\n}\r\nlet AccessibilityHelpWidget = class AccessibilityHelpWidget extends Widget {\r\n    constructor(editor, _contextKeyService, _keybindingService, _openerService) {\r\n        super();\r\n        this._contextKeyService = _contextKeyService;\r\n        this._keybindingService = _keybindingService;\r\n        this._openerService = _openerService;\r\n        this._editor = editor;\r\n        this._isVisibleKey = CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE.bindTo(this._contextKeyService);\r\n        this._domNode = createFastDomNode(document.createElement('div'));\r\n        this._domNode.setClassName('accessibilityHelpWidget');\r\n        this._domNode.setDisplay('none');\r\n        this._domNode.setAttribute('role', 'dialog');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._contentDomNode = createFastDomNode(document.createElement('div'));\r\n        this._contentDomNode.setAttribute('role', 'document');\r\n        this._domNode.appendChild(this._contentDomNode);\r\n        this._isVisible = false;\r\n        this._register(this._editor.onDidLayoutChange(() => {\r\n            if (this._isVisible) {\r\n                this._layout();\r\n            }\r\n        }));\r\n        // Intentionally not configurable!\r\n        this._register(dom.addStandardDisposableListener(this._contentDomNode.domNode, 'keydown', (e) => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            if (e.equals(2048 /* CtrlCmd */ | 35 /* KEY_E */)) {\r\n                alert(AccessibilityHelpNLS.emergencyConfOn);\r\n                this._editor.updateOptions({\r\n                    accessibilitySupport: 'on'\r\n                });\r\n                dom.clearNode(this._contentDomNode.domNode);\r\n                this._buildContent();\r\n                this._contentDomNode.domNode.focus();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            if (e.equals(2048 /* CtrlCmd */ | 38 /* KEY_H */)) {\r\n                alert(AccessibilityHelpNLS.openingDocs);\r\n                let url = this._editor.getRawOptions().accessibilityHelpUrl;\r\n                if (typeof url === 'undefined') {\r\n                    url = 'https://go.microsoft.com/fwlink/?linkid=852450';\r\n                }\r\n                this._openerService.open(URI.parse(url));\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }));\r\n        this.onblur(this._contentDomNode.domNode, () => {\r\n            this.hide();\r\n        });\r\n        this._editor.addOverlayWidget(this);\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return AccessibilityHelpWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: null\r\n        };\r\n    }\r\n    show() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        this._isVisibleKey.set(true);\r\n        this._layout();\r\n        this._domNode.setDisplay('block');\r\n        this._domNode.setAttribute('aria-hidden', 'false');\r\n        this._contentDomNode.domNode.tabIndex = 0;\r\n        this._buildContent();\r\n        this._contentDomNode.domNode.focus();\r\n    }\r\n    _descriptionForCommand(commandId, msg, noKbMsg) {\r\n        let kb = this._keybindingService.lookupKeybinding(commandId);\r\n        if (kb) {\r\n            return strings.format(msg, kb.getAriaLabel());\r\n        }\r\n        return strings.format(noKbMsg, commandId);\r\n    }\r\n    _buildContent() {\r\n        const options = this._editor.getOptions();\r\n        const selections = this._editor.getSelections();\r\n        let charactersSelected = 0;\r\n        if (selections) {\r\n            const model = this._editor.getModel();\r\n            if (model) {\r\n                selections.forEach((selection) => {\r\n                    charactersSelected += model.getValueLengthInRange(selection);\r\n                });\r\n            }\r\n        }\r\n        let text = getSelectionLabel(selections, charactersSelected);\r\n        if (options.get(53 /* inDiffEditor */)) {\r\n            if (options.get(80 /* readOnly */)) {\r\n                text += AccessibilityHelpNLS.readonlyDiffEditor;\r\n            }\r\n            else {\r\n                text += AccessibilityHelpNLS.editableDiffEditor;\r\n            }\r\n        }\r\n        else {\r\n            if (options.get(80 /* readOnly */)) {\r\n                text += AccessibilityHelpNLS.readonlyEditor;\r\n            }\r\n            else {\r\n                text += AccessibilityHelpNLS.editableEditor;\r\n            }\r\n        }\r\n        const turnOnMessage = (platform.isMacintosh\r\n            ? AccessibilityHelpNLS.changeConfigToOnMac\r\n            : AccessibilityHelpNLS.changeConfigToOnWinLinux);\r\n        switch (options.get(2 /* accessibilitySupport */)) {\r\n            case 0 /* Unknown */:\r\n                text += '\\n\\n - ' + turnOnMessage;\r\n                break;\r\n            case 2 /* Enabled */:\r\n                text += '\\n\\n - ' + AccessibilityHelpNLS.auto_on;\r\n                break;\r\n            case 1 /* Disabled */:\r\n                text += '\\n\\n - ' + AccessibilityHelpNLS.auto_off;\r\n                text += ' ' + turnOnMessage;\r\n                break;\r\n        }\r\n        if (options.get(129 /* tabFocusMode */)) {\r\n            text += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, AccessibilityHelpNLS.tabFocusModeOnMsg, AccessibilityHelpNLS.tabFocusModeOnMsgNoKb);\r\n        }\r\n        else {\r\n            text += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, AccessibilityHelpNLS.tabFocusModeOffMsg, AccessibilityHelpNLS.tabFocusModeOffMsgNoKb);\r\n        }\r\n        const openDocMessage = (platform.isMacintosh\r\n            ? AccessibilityHelpNLS.openDocMac\r\n            : AccessibilityHelpNLS.openDocWinLinux);\r\n        text += '\\n\\n - ' + openDocMessage;\r\n        text += '\\n\\n' + AccessibilityHelpNLS.outroMsg;\r\n        this._contentDomNode.domNode.appendChild(renderFormattedText(text));\r\n        // Per https://www.w3.org/TR/wai-aria/roles#document, Authors SHOULD provide a title or label for documents\r\n        this._contentDomNode.domNode.setAttribute('aria-label', text);\r\n    }\r\n    hide() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        this._isVisibleKey.reset();\r\n        this._domNode.setDisplay('none');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._contentDomNode.domNode.tabIndex = -1;\r\n        dom.clearNode(this._contentDomNode.domNode);\r\n        this._editor.focus();\r\n    }\r\n    _layout() {\r\n        let editorLayout = this._editor.getLayoutInfo();\r\n        let w = Math.max(5, Math.min(AccessibilityHelpWidget.WIDTH, editorLayout.width - 40));\r\n        let h = Math.max(5, Math.min(AccessibilityHelpWidget.HEIGHT, editorLayout.height - 40));\r\n        this._domNode.setWidth(w);\r\n        this._domNode.setHeight(h);\r\n        let top = Math.round((editorLayout.height - h) / 2);\r\n        this._domNode.setTop(top);\r\n        let left = Math.round((editorLayout.width - w) / 2);\r\n        this._domNode.setLeft(left);\r\n    }\r\n};\r\nAccessibilityHelpWidget.ID = 'editor.contrib.accessibilityHelpWidget';\r\nAccessibilityHelpWidget.WIDTH = 500;\r\nAccessibilityHelpWidget.HEIGHT = 300;\r\nAccessibilityHelpWidget = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, IOpenerService)\r\n], AccessibilityHelpWidget);\r\nclass ShowAccessibilityHelpAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showAccessibilityHelp',\r\n            label: AccessibilityHelpNLS.showAccessibilityHelpAction,\r\n            alias: 'Show Accessibility Help',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                primary: 512 /* Alt */ | 59 /* F1 */,\r\n                weight: 100 /* EditorContrib */,\r\n                linux: {\r\n                    primary: 512 /* Alt */ | 1024 /* Shift */ | 59 /* F1 */,\r\n                    secondary: [512 /* Alt */ | 59 /* F1 */]\r\n                }\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = AccessibilityHelpController.get(editor);\r\n        if (controller) {\r\n            controller.show();\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(AccessibilityHelpController.ID, AccessibilityHelpController);\r\nregisterEditorAction(ShowAccessibilityHelpAction);\r\nconst AccessibilityHelpCommand = EditorCommand.bindToContribution(AccessibilityHelpController.get);\r\nregisterEditorCommand(new AccessibilityHelpCommand({\r\n    id: 'closeAccessibilityHelp',\r\n    precondition: CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE,\r\n    handler: x => x.hide(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 100,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    if (widgetBackground) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${widgetBackground}; }`);\r\n    }\r\n    const widgetForeground = theme.getColor(editorWidgetForeground);\r\n    if (widgetForeground) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${widgetForeground}; }`);\r\n    }\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${widgetShadowColor}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${hcBorder}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './iPadShowKeyboard.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { isIOS } from '../../../../base/common/platform.js';\r\nexport class IPadShowKeyboard extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this.widget = null;\r\n        if (isIOS) {\r\n            this._register(editor.onDidChangeConfiguration(() => this.update()));\r\n            this.update();\r\n        }\r\n    }\r\n    update() {\r\n        const shouldHaveWidget = (!this.editor.getOption(80 /* readOnly */));\r\n        if (!this.widget && shouldHaveWidget) {\r\n            this.widget = new ShowKeyboardWidget(this.editor);\r\n        }\r\n        else if (this.widget && !shouldHaveWidget) {\r\n            this.widget.dispose();\r\n            this.widget = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        if (this.widget) {\r\n            this.widget.dispose();\r\n            this.widget = null;\r\n        }\r\n    }\r\n}\r\nIPadShowKeyboard.ID = 'editor.contrib.iPadShowKeyboard';\r\nclass ShowKeyboardWidget extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._domNode = document.createElement('textarea');\r\n        this._domNode.className = 'iPadShowKeyboard';\r\n        this._register(dom.addDisposableListener(this._domNode, 'touchstart', (e) => {\r\n            this.editor.focus();\r\n        }));\r\n        this._register(dom.addDisposableListener(this._domNode, 'focus', (e) => {\r\n            this.editor.focus();\r\n        }));\r\n        this.editor.addOverlayWidget(this);\r\n    }\r\n    dispose() {\r\n        this.editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return ShowKeyboardWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: 1 /* BOTTOM_RIGHT_CORNER */\r\n        };\r\n    }\r\n}\r\nShowKeyboardWidget.ID = 'editor.contrib.ShowKeyboardWidget';\r\nregisterEditorContribution(IPadShowKeyboard.ID, IPadShowKeyboard);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './inspectTokens.css';\r\nimport { $, append, reset } from '../../../../base/browser/dom.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { TokenMetadata, TokenizationRegistry } from '../../../common/modes.js';\r\nimport { NULL_STATE, nullTokenize, nullTokenize2 } from '../../../common/modes/nullMode.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\r\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { InspectTokensNLS } from '../../../common/standaloneStrings.js';\r\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\r\nlet InspectTokensController = class InspectTokensController extends Disposable {\r\n    constructor(editor, standaloneColorService, modeService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._modeService = modeService;\r\n        this._widget = null;\r\n        this._register(this._editor.onDidChangeModel((e) => this.stop()));\r\n        this._register(this._editor.onDidChangeModelLanguage((e) => this.stop()));\r\n        this._register(TokenizationRegistry.onDidChange((e) => this.stop()));\r\n        this._register(this._editor.onKeyUp((e) => e.keyCode === 9 /* Escape */ && this.stop()));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(InspectTokensController.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        super.dispose();\r\n    }\r\n    launch() {\r\n        if (this._widget) {\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._widget = new InspectTokensWidget(this._editor, this._modeService);\r\n    }\r\n    stop() {\r\n        if (this._widget) {\r\n            this._widget.dispose();\r\n            this._widget = null;\r\n        }\r\n    }\r\n};\r\nInspectTokensController.ID = 'editor.contrib.inspectTokens';\r\nInspectTokensController = __decorate([\r\n    __param(1, IStandaloneThemeService),\r\n    __param(2, IModeService)\r\n], InspectTokensController);\r\nclass InspectTokens extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inspectTokens',\r\n            label: InspectTokensNLS.inspectTokensAction,\r\n            alias: 'Developer: Inspect Tokens',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = InspectTokensController.get(editor);\r\n        if (controller) {\r\n            controller.launch();\r\n        }\r\n    }\r\n}\r\nfunction renderTokenText(tokenText) {\r\n    let result = '';\r\n    for (let charIndex = 0, len = tokenText.length; charIndex < len; charIndex++) {\r\n        let charCode = tokenText.charCodeAt(charIndex);\r\n        switch (charCode) {\r\n            case 9 /* Tab */:\r\n                result += '\\u2192'; // &rarr;\r\n                break;\r\n            case 32 /* Space */:\r\n                result += '\\u00B7'; // &middot;\r\n                break;\r\n            default:\r\n                result += String.fromCharCode(charCode);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getSafeTokenizationSupport(languageIdentifier) {\r\n    let tokenizationSupport = TokenizationRegistry.get(languageIdentifier.language);\r\n    if (tokenizationSupport) {\r\n        return tokenizationSupport;\r\n    }\r\n    return {\r\n        getInitialState: () => NULL_STATE,\r\n        tokenize: (line, hasEOL, state, deltaOffset) => nullTokenize(languageIdentifier.language, line, state, deltaOffset),\r\n        tokenize2: (line, hasEOL, state, deltaOffset) => nullTokenize2(languageIdentifier.id, line, state, deltaOffset)\r\n    };\r\n}\r\nclass InspectTokensWidget extends Disposable {\r\n    constructor(editor, modeService) {\r\n        super();\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._editor = editor;\r\n        this._modeService = modeService;\r\n        this._model = this._editor.getModel();\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'tokens-inspect-widget';\r\n        this._tokenizationSupport = getSafeTokenizationSupport(this._model.getLanguageIdentifier());\r\n        this._compute(this._editor.getPosition());\r\n        this._register(this._editor.onDidChangeCursorPosition((e) => this._compute(this._editor.getPosition())));\r\n        this._editor.addContentWidget(this);\r\n    }\r\n    dispose() {\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return InspectTokensWidget._ID;\r\n    }\r\n    _compute(position) {\r\n        let data = this._getTokensAtLine(position.lineNumber);\r\n        let token1Index = 0;\r\n        for (let i = data.tokens1.length - 1; i >= 0; i--) {\r\n            let t = data.tokens1[i];\r\n            if (position.column - 1 >= t.offset) {\r\n                token1Index = i;\r\n                break;\r\n            }\r\n        }\r\n        let token2Index = 0;\r\n        for (let i = (data.tokens2.length >>> 1); i >= 0; i--) {\r\n            if (position.column - 1 >= data.tokens2[(i << 1)]) {\r\n                token2Index = i;\r\n                break;\r\n            }\r\n        }\r\n        let lineContent = this._model.getLineContent(position.lineNumber);\r\n        let tokenText = '';\r\n        if (token1Index < data.tokens1.length) {\r\n            let tokenStartIndex = data.tokens1[token1Index].offset;\r\n            let tokenEndIndex = token1Index + 1 < data.tokens1.length ? data.tokens1[token1Index + 1].offset : lineContent.length;\r\n            tokenText = lineContent.substring(tokenStartIndex, tokenEndIndex);\r\n        }\r\n        reset(this._domNode, $('h2.tm-token', undefined, renderTokenText(tokenText), $('span.tm-token-length', undefined, `${tokenText.length} ${tokenText.length === 1 ? 'char' : 'chars'}`)));\r\n        append(this._domNode, $('hr.tokens-inspect-separator', { 'style': 'clear:both' }));\r\n        const metadata = (token2Index << 1) + 1 < data.tokens2.length ? this._decodeMetadata(data.tokens2[(token2Index << 1) + 1]) : null;\r\n        append(this._domNode, $('table.tm-metadata-table', undefined, $('tbody', undefined, $('tr', undefined, $('td.tm-metadata-key', undefined, 'language'), $('td.tm-metadata-value', undefined, `${metadata ? metadata.languageIdentifier.language : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'token type'), $('td.tm-metadata-value', undefined, `${metadata ? this._tokenTypeToString(metadata.tokenType) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'font style'), $('td.tm-metadata-value', undefined, `${metadata ? this._fontStyleToString(metadata.fontStyle) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'foreground'), $('td.tm-metadata-value', undefined, `${metadata ? Color.Format.CSS.formatHex(metadata.foreground) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'background'), $('td.tm-metadata-value', undefined, `${metadata ? Color.Format.CSS.formatHex(metadata.background) : '-?-'}`)))));\r\n        append(this._domNode, $('hr.tokens-inspect-separator'));\r\n        if (token1Index < data.tokens1.length) {\r\n            append(this._domNode, $('span.tm-token-type', undefined, data.tokens1[token1Index].type));\r\n        }\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    _decodeMetadata(metadata) {\r\n        let colorMap = TokenizationRegistry.getColorMap();\r\n        let languageId = TokenMetadata.getLanguageId(metadata);\r\n        let tokenType = TokenMetadata.getTokenType(metadata);\r\n        let fontStyle = TokenMetadata.getFontStyle(metadata);\r\n        let foreground = TokenMetadata.getForeground(metadata);\r\n        let background = TokenMetadata.getBackground(metadata);\r\n        return {\r\n            languageIdentifier: this._modeService.getLanguageIdentifier(languageId),\r\n            tokenType: tokenType,\r\n            fontStyle: fontStyle,\r\n            foreground: colorMap[foreground],\r\n            background: colorMap[background]\r\n        };\r\n    }\r\n    _tokenTypeToString(tokenType) {\r\n        switch (tokenType) {\r\n            case 0 /* Other */: return 'Other';\r\n            case 1 /* Comment */: return 'Comment';\r\n            case 2 /* String */: return 'String';\r\n            case 4 /* RegEx */: return 'RegEx';\r\n            default: return '??';\r\n        }\r\n    }\r\n    _fontStyleToString(fontStyle) {\r\n        let r = '';\r\n        if (fontStyle & 1 /* Italic */) {\r\n            r += 'italic ';\r\n        }\r\n        if (fontStyle & 2 /* Bold */) {\r\n            r += 'bold ';\r\n        }\r\n        if (fontStyle & 4 /* Underline */) {\r\n            r += 'underline ';\r\n        }\r\n        if (r.length === 0) {\r\n            r = '---';\r\n        }\r\n        return r;\r\n    }\r\n    _getTokensAtLine(lineNumber) {\r\n        let stateBeforeLine = this._getStateBeforeLine(lineNumber);\r\n        let tokenizationResult1 = this._tokenizationSupport.tokenize(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);\r\n        let tokenizationResult2 = this._tokenizationSupport.tokenize2(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);\r\n        return {\r\n            startState: stateBeforeLine,\r\n            tokens1: tokenizationResult1.tokens,\r\n            tokens2: tokenizationResult2.tokens,\r\n            endState: tokenizationResult1.endState\r\n        };\r\n    }\r\n    _getStateBeforeLine(lineNumber) {\r\n        let state = this._tokenizationSupport.getInitialState();\r\n        for (let i = 1; i < lineNumber; i++) {\r\n            let tokenizationResult = this._tokenizationSupport.tokenize(this._model.getLineContent(i), true, state, 0);\r\n            state = tokenizationResult.endState;\r\n        }\r\n        return state;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this._editor.getPosition(),\r\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\r\n        };\r\n    }\r\n}\r\nInspectTokensWidget._ID = 'editor.contrib.inspectTokensWidget';\r\nregisterEditorContribution(InspectTokensController.ID, InspectTokensController);\r\nregisterEditorAction(InspectTokens);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorHoverBorder);\r\n    if (border) {\r\n        let borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { border: ${borderWidth}px solid ${border}; }`);\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${border}; }`);\r\n    }\r\n    const background = theme.getColor(editorHoverBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorHoverForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { color: ${foreground}; }`);\r\n    }\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { Extensions } from '../common/quickAccess.js';\r\nimport { IQuickInputService } from '../common/quickInput.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\r\n    constructor(quickInputService) {\r\n        this.quickInputService = quickInputService;\r\n        this.registry = Registry.as(Extensions.Quickaccess);\r\n    }\r\n    provide(picker) {\r\n        const disposables = new DisposableStore();\r\n        // Open a picker with the selected value if picked\r\n        disposables.add(picker.onDidAccept(() => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Also open a picker when we detect the user typed the exact\r\n        // name of a provider (e.g. `?term` for terminals)\r\n        disposables.add(picker.onDidChangeValue(value => {\r\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\r\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\r\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Fill in all providers separated by editor/global scope\r\n        const { editorProviders, globalProviders } = this.getQuickAccessProviders();\r\n        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\r\n            // Without groups\r\n            [\r\n                ...(editorProviders.length === 0 ? globalProviders : editorProviders)\r\n            ] :\r\n            // With groups\r\n            [\r\n                { label: localize('globalCommands', \"global commands\"), type: 'separator' },\r\n                ...globalProviders,\r\n                { label: localize('editorCommands', \"editor commands\"), type: 'separator' },\r\n                ...editorProviders\r\n            ];\r\n        return disposables;\r\n    }\r\n    getQuickAccessProviders() {\r\n        const globalProviders = [];\r\n        const editorProviders = [];\r\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\r\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\r\n                continue; // exclude help which is already active\r\n            }\r\n            for (const helpEntry of provider.helpEntries) {\r\n                const prefix = helpEntry.prefix || provider.prefix;\r\n                const label = prefix || '\\u2026' /* ... */;\r\n                (helpEntry.needsEditor ? editorProviders : globalProviders).push({\r\n                    prefix,\r\n                    label,\r\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\r\n                    description: helpEntry.description\r\n                });\r\n            }\r\n        }\r\n        return { editorProviders, globalProviders };\r\n    }\r\n};\r\nHelpQuickAccessProvider.PREFIX = '?';\r\nHelpQuickAccessProvider = __decorate([\r\n    __param(0, IQuickInputService)\r\n], HelpQuickAccessProvider);\r\nexport { HelpQuickAccessProvider };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { QuickHelpNLS } from '../../../common/standaloneStrings.js';\r\nimport { HelpQuickAccessProvider } from '../../../../platform/quickinput/browser/helpQuickAccess.js';\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: HelpQuickAccessProvider,\r\n    prefix: '',\r\n    helpEntries: [{ description: QuickHelpNLS.helpQuickAccessActionLabel, needsEditor: true }]\r\n});\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { overviewRulerRangeHighlight } from '../../common/view/editorColorRegistry.js';\r\nimport { DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isDiffEditor, getCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { withNullAsUndefined } from '../../../base/common/types.js';\r\nimport { once } from '../../../base/common/functional.js';\r\n/**\r\n * A reusable quick access provider for the editor with support\r\n * for adding decorations for navigating in the currently active file\r\n * (for example \"Go to line\", \"Go to symbol\").\r\n */\r\nexport class AbstractEditorNavigationQuickAccessProvider {\r\n    constructor(options) {\r\n        this.options = options;\r\n        //#endregion\r\n        //#region Decorations Utils\r\n        this.rangeHighlightDecorationId = undefined;\r\n    }\r\n    //#region Provider methods\r\n    provide(picker, token) {\r\n        var _a;\r\n        const disposables = new DisposableStore();\r\n        // Apply options if any\r\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\r\n        // Disable filtering & sorting, we control the results\r\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\r\n        // Provide based on current active editor\r\n        const pickerDisposable = disposables.add(new MutableDisposable());\r\n        pickerDisposable.value = this.doProvide(picker, token);\r\n        // Re-create whenever the active editor changes\r\n        disposables.add(this.onDidActiveTextEditorControlChange(() => {\r\n            // Clear old\r\n            pickerDisposable.value = undefined;\r\n            // Add new\r\n            pickerDisposable.value = this.doProvide(picker, token);\r\n        }));\r\n        return disposables;\r\n    }\r\n    doProvide(picker, token) {\r\n        const disposables = new DisposableStore();\r\n        // With text control\r\n        const editor = this.activeTextEditorControl;\r\n        if (editor && this.canProvideWithTextEditor(editor)) {\r\n            const context = { editor };\r\n            // Restore any view state if this picker was closed\r\n            // without actually going to a line\r\n            const codeEditor = getCodeEditor(editor);\r\n            if (codeEditor) {\r\n                // Remember view state and update it when the cursor position\r\n                // changes even later because it could be that the user has\r\n                // configured quick access to remain open when focus is lost and\r\n                // we always want to restore the current location.\r\n                let lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\r\n                disposables.add(codeEditor.onDidChangeCursorPosition(() => {\r\n                    lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\r\n                }));\r\n                context.restoreViewState = () => {\r\n                    if (lastKnownEditorViewState && editor === this.activeTextEditorControl) {\r\n                        editor.restoreViewState(lastKnownEditorViewState);\r\n                    }\r\n                };\r\n                disposables.add(once(token.onCancellationRequested)(() => { var _a; return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context); }));\r\n            }\r\n            // Clean up decorations on dispose\r\n            disposables.add(toDisposable(() => this.clearDecorations(editor)));\r\n            // Ask subclass for entries\r\n            disposables.add(this.provideWithTextEditor(context, picker, token));\r\n        }\r\n        // Without text control\r\n        else {\r\n            disposables.add(this.provideWithoutTextEditor(picker, token));\r\n        }\r\n        return disposables;\r\n    }\r\n    /**\r\n     * Subclasses to implement if they can operate on the text editor.\r\n     */\r\n    canProvideWithTextEditor(editor) {\r\n        return true;\r\n    }\r\n    gotoLocation({ editor }, options) {\r\n        editor.setSelection(options.range);\r\n        editor.revealRangeInCenter(options.range, 0 /* Smooth */);\r\n        if (!options.preserveFocus) {\r\n            editor.focus();\r\n        }\r\n    }\r\n    getModel(editor) {\r\n        var _a;\r\n        return isDiffEditor(editor) ?\r\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified :\r\n            editor.getModel();\r\n    }\r\n    addDecorations(editor, range) {\r\n        editor.changeDecorations(changeAccessor => {\r\n            // Reset old decorations if any\r\n            const deleteDecorations = [];\r\n            if (this.rangeHighlightDecorationId) {\r\n                deleteDecorations.push(this.rangeHighlightDecorationId.overviewRulerDecorationId);\r\n                deleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);\r\n                this.rangeHighlightDecorationId = undefined;\r\n            }\r\n            // Add new decorations for the range\r\n            const newDecorations = [\r\n                // highlight the entire line on the range\r\n                {\r\n                    range,\r\n                    options: {\r\n                        description: 'quick-access-range-highlight',\r\n                        className: 'rangeHighlight',\r\n                        isWholeLine: true\r\n                    }\r\n                },\r\n                // also add overview ruler highlight\r\n                {\r\n                    range,\r\n                    options: {\r\n                        description: 'quick-access-range-highlight-overview',\r\n                        overviewRuler: {\r\n                            color: themeColorFromId(overviewRulerRangeHighlight),\r\n                            position: OverviewRulerLane.Full\r\n                        }\r\n                    }\r\n                }\r\n            ];\r\n            const [rangeHighlightId, overviewRulerDecorationId] = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\r\n            this.rangeHighlightDecorationId = { rangeHighlightId, overviewRulerDecorationId };\r\n        });\r\n    }\r\n    clearDecorations(editor) {\r\n        const rangeHighlightDecorationId = this.rangeHighlightDecorationId;\r\n        if (rangeHighlightDecorationId) {\r\n            editor.changeDecorations(changeAccessor => {\r\n                changeAccessor.deltaDecorations([\r\n                    rangeHighlightDecorationId.overviewRulerDecorationId,\r\n                    rangeHighlightDecorationId.rangeHighlightId\r\n                ], []);\r\n            });\r\n            this.rangeHighlightDecorationId = undefined;\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { DisposableStore, Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\r\nimport { getCodeEditor } from '../../browser/editorBrowser.js';\r\nexport class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\r\n    constructor() {\r\n        super({ canAcceptInBackground: true });\r\n    }\r\n    provideWithoutTextEditor(picker) {\r\n        const label = localize('cannotRunGotoLine', \"Open a text editor first to go to a line.\");\r\n        picker.items = [{ label }];\r\n        picker.ariaLabel = label;\r\n        return Disposable.None;\r\n    }\r\n    provideWithTextEditor(context, picker, token) {\r\n        const editor = context.editor;\r\n        const disposables = new DisposableStore();\r\n        // Goto line once picked\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                if (!this.isValidLineNumber(editor, item.lineNumber)) {\r\n                    return;\r\n                }\r\n                this.gotoLocation(context, { range: this.toRange(item.lineNumber, item.column), keyMods: picker.keyMods, preserveFocus: event.inBackground });\r\n                if (!event.inBackground) {\r\n                    picker.hide();\r\n                }\r\n            }\r\n        }));\r\n        // React to picker changes\r\n        const updatePickerAndEditor = () => {\r\n            const position = this.parsePosition(editor, picker.value.trim().substr(AbstractGotoLineQuickAccessProvider.PREFIX.length));\r\n            const label = this.getPickLabel(editor, position.lineNumber, position.column);\r\n            // Picker\r\n            picker.items = [{\r\n                    lineNumber: position.lineNumber,\r\n                    column: position.column,\r\n                    label\r\n                }];\r\n            // ARIA Label\r\n            picker.ariaLabel = label;\r\n            // Clear decorations for invalid range\r\n            if (!this.isValidLineNumber(editor, position.lineNumber)) {\r\n                this.clearDecorations(editor);\r\n                return;\r\n            }\r\n            // Reveal\r\n            const range = this.toRange(position.lineNumber, position.column);\r\n            editor.revealRangeInCenter(range, 0 /* Smooth */);\r\n            // Decorate\r\n            this.addDecorations(editor, range);\r\n        };\r\n        updatePickerAndEditor();\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerAndEditor()));\r\n        // Adjust line number visibility as needed\r\n        const codeEditor = getCodeEditor(editor);\r\n        if (codeEditor) {\r\n            const options = codeEditor.getOptions();\r\n            const lineNumbers = options.get(59 /* lineNumbers */);\r\n            if (lineNumbers.renderType === 2 /* Relative */) {\r\n                codeEditor.updateOptions({ lineNumbers: 'on' });\r\n                disposables.add(toDisposable(() => codeEditor.updateOptions({ lineNumbers: 'relative' })));\r\n            }\r\n        }\r\n        return disposables;\r\n    }\r\n    toRange(lineNumber = 1, column = 1) {\r\n        return {\r\n            startLineNumber: lineNumber,\r\n            startColumn: column,\r\n            endLineNumber: lineNumber,\r\n            endColumn: column\r\n        };\r\n    }\r\n    parsePosition(editor, value) {\r\n        // Support line-col formats of `line,col`, `line:col`, `line#col`\r\n        const numbers = value.split(/,|:|#/).map(part => parseInt(part, 10)).filter(part => !isNaN(part));\r\n        const endLine = this.lineCount(editor) + 1;\r\n        return {\r\n            lineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],\r\n            column: numbers[1]\r\n        };\r\n    }\r\n    getPickLabel(editor, lineNumber, column) {\r\n        // Location valid: indicate this as picker label\r\n        if (this.isValidLineNumber(editor, lineNumber)) {\r\n            if (this.isValidColumn(editor, lineNumber, column)) {\r\n                return localize('gotoLineColumnLabel', \"Go to line {0} and character {1}.\", lineNumber, column);\r\n            }\r\n            return localize('gotoLineLabel', \"Go to line {0}.\", lineNumber);\r\n        }\r\n        // Location invalid: show generic label\r\n        const position = editor.getPosition() || { lineNumber: 1, column: 1 };\r\n        const lineCount = this.lineCount(editor);\r\n        if (lineCount > 1) {\r\n            return localize('gotoLineLabelEmptyWithLimit', \"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.\", position.lineNumber, position.column, lineCount);\r\n        }\r\n        return localize('gotoLineLabelEmpty', \"Current Line: {0}, Character: {1}. Type a line number to navigate to.\", position.lineNumber, position.column);\r\n    }\r\n    isValidLineNumber(editor, lineNumber) {\r\n        if (!lineNumber || typeof lineNumber !== 'number') {\r\n            return false;\r\n        }\r\n        return lineNumber > 0 && lineNumber <= this.lineCount(editor);\r\n    }\r\n    isValidColumn(editor, lineNumber, column) {\r\n        if (!column || typeof column !== 'number') {\r\n            return false;\r\n        }\r\n        const model = this.getModel(editor);\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const positionCandidate = { lineNumber, column };\r\n        return model.validatePosition(positionCandidate).equals(positionCandidate);\r\n    }\r\n    lineCount(editor) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.getModel(editor)) === null || _a === void 0 ? void 0 : _a.getLineCount()) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n}\r\nAbstractGotoLineQuickAccessProvider.PREFIX = ':';\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/gotoLineQuickAccess.js';\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneGotoLineQuickAccessProvider = class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\r\n    constructor(editorService) {\r\n        super();\r\n        this.editorService = editorService;\r\n        this.onDidActiveTextEditorControlChange = Event.None;\r\n    }\r\n    get activeTextEditorControl() {\r\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\r\n    }\r\n};\r\nStandaloneGotoLineQuickAccessProvider = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], StandaloneGotoLineQuickAccessProvider);\r\nexport { StandaloneGotoLineQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneGotoLineQuickAccessProvider,\r\n    prefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\r\n    helpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, needsEditor: true }]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.gotoLine',\r\n            label: GoToLineNLS.gotoLineActionLabel,\r\n            alias: 'Go to Line/Column...',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */,\r\n                mac: { primary: 256 /* WinCtrl */ | 37 /* KEY_G */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n","import { createMatches as createFuzzyMatches, fuzzyScore } from './filters.js';\r\nimport { sep } from './path.js';\r\nimport { isWindows } from './platform.js';\r\nimport { stripWildcards } from './strings.js';\r\nconst NO_SCORE2 = [undefined, []];\r\nexport function scoreFuzzy2(target, query, patternStart = 0, wordStart = 0) {\r\n    // Score: multiple inputs\r\n    const preparedQuery = query;\r\n    if (preparedQuery.values && preparedQuery.values.length > 1) {\r\n        return doScoreFuzzy2Multiple(target, preparedQuery.values, patternStart, wordStart);\r\n    }\r\n    // Score: single input\r\n    return doScoreFuzzy2Single(target, query, patternStart, wordStart);\r\n}\r\nfunction doScoreFuzzy2Multiple(target, query, patternStart, wordStart) {\r\n    let totalScore = 0;\r\n    const totalMatches = [];\r\n    for (const queryPiece of query) {\r\n        const [score, matches] = doScoreFuzzy2Single(target, queryPiece, patternStart, wordStart);\r\n        if (typeof score !== 'number') {\r\n            // if a single query value does not match, return with\r\n            // no score entirely, we require all queries to match\r\n            return NO_SCORE2;\r\n        }\r\n        totalScore += score;\r\n        totalMatches.push(...matches);\r\n    }\r\n    // if we have a score, ensure that the positions are\r\n    // sorted in ascending order and distinct\r\n    return [totalScore, normalizeMatches(totalMatches)];\r\n}\r\nfunction doScoreFuzzy2Single(target, query, patternStart, wordStart) {\r\n    const score = fuzzyScore(query.original, query.originalLowercase, patternStart, target, target.toLowerCase(), wordStart, true);\r\n    if (!score) {\r\n        return NO_SCORE2;\r\n    }\r\n    return [score[0], createFuzzyMatches(score)];\r\n}\r\nfunction normalizeMatches(matches) {\r\n    // sort matches by start to be able to normalize\r\n    const sortedMatches = matches.sort((matchA, matchB) => {\r\n        return matchA.start - matchB.start;\r\n    });\r\n    // merge matches that overlap\r\n    const normalizedMatches = [];\r\n    let currentMatch = undefined;\r\n    for (const match of sortedMatches) {\r\n        // if we have no current match or the matches\r\n        // do not overlap, we take it as is and remember\r\n        // it for future merging\r\n        if (!currentMatch || !matchOverlaps(currentMatch, match)) {\r\n            currentMatch = match;\r\n            normalizedMatches.push(match);\r\n        }\r\n        // otherwise we merge the matches\r\n        else {\r\n            currentMatch.start = Math.min(currentMatch.start, match.start);\r\n            currentMatch.end = Math.max(currentMatch.end, match.end);\r\n        }\r\n    }\r\n    return normalizedMatches;\r\n}\r\nfunction matchOverlaps(matchA, matchB) {\r\n    if (matchA.end < matchB.start) {\r\n        return false; // A ends before B starts\r\n    }\r\n    if (matchB.end < matchA.start) {\r\n        return false; // B ends before A starts\r\n    }\r\n    return true;\r\n}\r\n/*\r\n * If a query is wrapped in quotes, the user does not want to\r\n * use fuzzy search for this query.\r\n */\r\nfunction queryExpectsExactMatch(query) {\r\n    return query.startsWith('\"') && query.endsWith('\"');\r\n}\r\n/**\r\n * Helper function to prepare a search value for scoring by removing unwanted characters\r\n * and allowing to score on multiple pieces separated by whitespace character.\r\n */\r\nconst MULTIPLE_QUERY_VALUES_SEPARATOR = ' ';\r\nexport function prepareQuery(original) {\r\n    if (typeof original !== 'string') {\r\n        original = '';\r\n    }\r\n    const originalLowercase = original.toLowerCase();\r\n    const { pathNormalized, normalized, normalizedLowercase } = normalizeQuery(original);\r\n    const containsPathSeparator = pathNormalized.indexOf(sep) >= 0;\r\n    const expectExactMatch = queryExpectsExactMatch(original);\r\n    let values = undefined;\r\n    const originalSplit = original.split(MULTIPLE_QUERY_VALUES_SEPARATOR);\r\n    if (originalSplit.length > 1) {\r\n        for (const originalPiece of originalSplit) {\r\n            const expectExactMatchPiece = queryExpectsExactMatch(originalPiece);\r\n            const { pathNormalized: pathNormalizedPiece, normalized: normalizedPiece, normalizedLowercase: normalizedLowercasePiece } = normalizeQuery(originalPiece);\r\n            if (normalizedPiece) {\r\n                if (!values) {\r\n                    values = [];\r\n                }\r\n                values.push({\r\n                    original: originalPiece,\r\n                    originalLowercase: originalPiece.toLowerCase(),\r\n                    pathNormalized: pathNormalizedPiece,\r\n                    normalized: normalizedPiece,\r\n                    normalizedLowercase: normalizedLowercasePiece,\r\n                    expectContiguousMatch: expectExactMatchPiece\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return { original, originalLowercase, pathNormalized, normalized, normalizedLowercase, values, containsPathSeparator, expectContiguousMatch: expectExactMatch };\r\n}\r\nfunction normalizeQuery(original) {\r\n    let pathNormalized;\r\n    if (isWindows) {\r\n        pathNormalized = original.replace(/\\//g, sep); // Help Windows users to search for paths when using slash\r\n    }\r\n    else {\r\n        pathNormalized = original.replace(/\\\\/g, sep); // Help macOS/Linux users to search for paths when using backslash\r\n    }\r\n    // we remove quotes here because quotes are used for exact match search\r\n    const normalized = stripWildcards(pathNormalized).replace(/\\s|\"/g, '');\r\n    return {\r\n        pathNormalized,\r\n        normalized,\r\n        normalizedLowercase: normalized.toLowerCase()\r\n    };\r\n}\r\nexport function pieceToQuery(arg1) {\r\n    if (Array.isArray(arg1)) {\r\n        return prepareQuery(arg1.map(piece => piece.original).join(MULTIPLE_QUERY_VALUES_SEPARATOR));\r\n    }\r\n    return prepareQuery(arg1.original);\r\n}\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore, Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\r\nimport { SymbolKinds, DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { OutlineModel } from '../documentSymbols/outlineModel.js';\r\nimport { trim, format } from '../../../base/common/strings.js';\r\nimport { prepareQuery, pieceToQuery, scoreFuzzy2 } from '../../../base/common/fuzzyScorer.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport class AbstractGotoSymbolQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\r\n    constructor(options = Object.create(null)) {\r\n        super(options);\r\n        this.options = options;\r\n        this.options.canAcceptInBackground = true;\r\n    }\r\n    provideWithoutTextEditor(picker) {\r\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutEditor', \"To go to a symbol, first open a text editor with symbol information.\"));\r\n        return Disposable.None;\r\n    }\r\n    provideWithTextEditor(context, picker, token) {\r\n        const editor = context.editor;\r\n        const model = this.getModel(editor);\r\n        if (!model) {\r\n            return Disposable.None;\r\n        }\r\n        // Provide symbols from model if available in registry\r\n        if (DocumentSymbolProviderRegistry.has(model)) {\r\n            return this.doProvideWithEditorSymbols(context, model, picker, token);\r\n        }\r\n        // Otherwise show an entry for a model without registry\r\n        // But give a chance to resolve the symbols at a later\r\n        // point if possible\r\n        return this.doProvideWithoutEditorSymbols(context, model, picker, token);\r\n    }\r\n    doProvideWithoutEditorSymbols(context, model, picker, token) {\r\n        const disposables = new DisposableStore();\r\n        // Generic pick for not having any symbol information\r\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutSymbolProvider', \"The active text editor does not provide symbol information.\"));\r\n        // Wait for changes to the registry and see if eventually\r\n        // we do get symbols. This can happen if the picker is opened\r\n        // very early after the model has loaded but before the\r\n        // language registry is ready.\r\n        // https://github.com/microsoft/vscode/issues/70607\r\n        (() => __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield this.waitForLanguageSymbolRegistry(model, disposables);\r\n            if (!result || token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            disposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));\r\n        }))();\r\n        return disposables;\r\n    }\r\n    provideLabelPick(picker, label) {\r\n        picker.items = [{ label, index: 0, kind: 14 /* String */ }];\r\n        picker.ariaLabel = label;\r\n    }\r\n    waitForLanguageSymbolRegistry(model, disposables) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (DocumentSymbolProviderRegistry.has(model)) {\r\n                return true;\r\n            }\r\n            let symbolProviderRegistryPromiseResolve;\r\n            const symbolProviderRegistryPromise = new Promise(resolve => symbolProviderRegistryPromiseResolve = resolve);\r\n            // Resolve promise when registry knows model\r\n            const symbolProviderListener = disposables.add(DocumentSymbolProviderRegistry.onDidChange(() => {\r\n                if (DocumentSymbolProviderRegistry.has(model)) {\r\n                    symbolProviderListener.dispose();\r\n                    symbolProviderRegistryPromiseResolve(true);\r\n                }\r\n            }));\r\n            // Resolve promise when we get disposed too\r\n            disposables.add(toDisposable(() => symbolProviderRegistryPromiseResolve(false)));\r\n            return symbolProviderRegistryPromise;\r\n        });\r\n    }\r\n    doProvideWithEditorSymbols(context, model, picker, token) {\r\n        const editor = context.editor;\r\n        const disposables = new DisposableStore();\r\n        // Goto symbol once picked\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (item && item.range) {\r\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, preserveFocus: event.inBackground });\r\n                if (!event.inBackground) {\r\n                    picker.hide();\r\n                }\r\n            }\r\n        }));\r\n        // Goto symbol side by side if enabled\r\n        disposables.add(picker.onDidTriggerItemButton(({ item }) => {\r\n            if (item && item.range) {\r\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, forceSideBySide: true });\r\n                picker.hide();\r\n            }\r\n        }));\r\n        // Resolve symbols from document once and reuse this\r\n        // request for all filtering and typing then on\r\n        const symbolsPromise = this.getDocumentSymbols(model, token);\r\n        // Set initial picks and update on type\r\n        let picksCts = undefined;\r\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\r\n            // Cancel any previous ask for picks and busy\r\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\r\n            picker.busy = false;\r\n            // Create new cancellation source for this run\r\n            picksCts = new CancellationTokenSource(token);\r\n            // Collect symbol picks\r\n            picker.busy = true;\r\n            try {\r\n                const query = prepareQuery(picker.value.substr(AbstractGotoSymbolQuickAccessProvider.PREFIX.length).trim());\r\n                const items = yield this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token);\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                if (items.length > 0) {\r\n                    picker.items = items;\r\n                }\r\n                else {\r\n                    if (query.original.length > 0) {\r\n                        this.provideLabelPick(picker, localize('noMatchingSymbolResults', \"No matching editor symbols\"));\r\n                    }\r\n                    else {\r\n                        this.provideLabelPick(picker, localize('noSymbolResults', \"No editor symbols\"));\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                if (!token.isCancellationRequested) {\r\n                    picker.busy = false;\r\n                }\r\n            }\r\n        });\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\r\n        updatePickerItems();\r\n        // Reveal and decorate when active item changes\r\n        // However, ignore the very first event so that\r\n        // opening the picker is not immediately revealing\r\n        // and decorating the first entry.\r\n        let ignoreFirstActiveEvent = true;\r\n        disposables.add(picker.onDidChangeActive(() => {\r\n            const [item] = picker.activeItems;\r\n            if (item && item.range) {\r\n                if (ignoreFirstActiveEvent) {\r\n                    ignoreFirstActiveEvent = false;\r\n                    return;\r\n                }\r\n                // Reveal\r\n                editor.revealRangeInCenter(item.range.selection, 0 /* Smooth */);\r\n                // Decorate\r\n                this.addDecorations(editor, item.range.decoration);\r\n            }\r\n        }));\r\n        return disposables;\r\n    }\r\n    doGetSymbolPicks(symbolsPromise, query, options, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const symbols = yield symbolsPromise;\r\n            if (token.isCancellationRequested) {\r\n                return [];\r\n            }\r\n            const filterBySymbolKind = query.original.indexOf(AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX) === 0;\r\n            const filterPos = filterBySymbolKind ? 1 : 0;\r\n            // Split between symbol and container query\r\n            let symbolQuery;\r\n            let containerQuery;\r\n            if (query.values && query.values.length > 1) {\r\n                symbolQuery = pieceToQuery(query.values[0]); // symbol: only match on first part\r\n                containerQuery = pieceToQuery(query.values.slice(1)); // container: match on all but first parts\r\n            }\r\n            else {\r\n                symbolQuery = query;\r\n            }\r\n            // Convert to symbol picks and apply filtering\r\n            const filteredSymbolPicks = [];\r\n            for (let index = 0; index < symbols.length; index++) {\r\n                const symbol = symbols[index];\r\n                const symbolLabel = trim(symbol.name);\r\n                const symbolLabelWithIcon = `$(symbol-${SymbolKinds.toString(symbol.kind) || 'property'}) ${symbolLabel}`;\r\n                const symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\r\n                let containerLabel = symbol.containerName;\r\n                if (options === null || options === void 0 ? void 0 : options.extraContainerLabel) {\r\n                    if (containerLabel) {\r\n                        containerLabel = `${options.extraContainerLabel} • ${containerLabel}`;\r\n                    }\r\n                    else {\r\n                        containerLabel = options.extraContainerLabel;\r\n                    }\r\n                }\r\n                let symbolScore = undefined;\r\n                let symbolMatches = undefined;\r\n                let containerScore = undefined;\r\n                let containerMatches = undefined;\r\n                if (query.original.length > filterPos) {\r\n                    // First: try to score on the entire query, it is possible that\r\n                    // the symbol matches perfectly (e.g. searching for \"change log\"\r\n                    // can be a match on a markdown symbol \"change log\"). In that\r\n                    // case we want to skip the container query altogether.\r\n                    let skipContainerQuery = false;\r\n                    if (symbolQuery !== query) {\r\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, Object.assign(Object.assign({}, query), { values: undefined /* disable multi-query support */ }), filterPos, symbolLabelIconOffset);\r\n                        if (typeof symbolScore === 'number') {\r\n                            skipContainerQuery = true; // since we consumed the query, skip any container matching\r\n                        }\r\n                    }\r\n                    // Otherwise: score on the symbol query and match on the container later\r\n                    if (typeof symbolScore !== 'number') {\r\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);\r\n                        if (typeof symbolScore !== 'number') {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // Score by container if specified\r\n                    if (!skipContainerQuery && containerQuery) {\r\n                        if (containerLabel && containerQuery.original.length > 0) {\r\n                            [containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\r\n                        }\r\n                        if (typeof containerScore !== 'number') {\r\n                            continue;\r\n                        }\r\n                        if (typeof symbolScore === 'number') {\r\n                            symbolScore += containerScore; // boost symbolScore by containerScore\r\n                        }\r\n                    }\r\n                }\r\n                const deprecated = symbol.tags && symbol.tags.indexOf(1 /* Deprecated */) >= 0;\r\n                filteredSymbolPicks.push({\r\n                    index,\r\n                    kind: symbol.kind,\r\n                    score: symbolScore,\r\n                    label: symbolLabelWithIcon,\r\n                    ariaLabel: symbolLabel,\r\n                    description: containerLabel,\r\n                    highlights: deprecated ? undefined : {\r\n                        label: symbolMatches,\r\n                        description: containerMatches\r\n                    },\r\n                    range: {\r\n                        selection: Range.collapseToStart(symbol.selectionRange),\r\n                        decoration: symbol.range\r\n                    },\r\n                    strikethrough: deprecated,\r\n                    buttons: (() => {\r\n                        var _a, _b;\r\n                        const openSideBySideDirection = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.openSideBySideDirection) ? (_b = this.options) === null || _b === void 0 ? void 0 : _b.openSideBySideDirection() : undefined;\r\n                        if (!openSideBySideDirection) {\r\n                            return undefined;\r\n                        }\r\n                        return [\r\n                            {\r\n                                iconClass: openSideBySideDirection === 'right' ? Codicon.splitHorizontal.classNames : Codicon.splitVertical.classNames,\r\n                                tooltip: openSideBySideDirection === 'right' ? localize('openToSide', \"Open to the Side\") : localize('openToBottom', \"Open to the Bottom\")\r\n                            }\r\n                        ];\r\n                    })()\r\n                });\r\n            }\r\n            // Sort by score\r\n            const sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB) => filterBySymbolKind ?\r\n                this.compareByKindAndScore(symbolA, symbolB) :\r\n                this.compareByScore(symbolA, symbolB));\r\n            // Add separator for types\r\n            // - @  only total number of symbols\r\n            // - @: grouped by symbol kind\r\n            let symbolPicks = [];\r\n            if (filterBySymbolKind) {\r\n                let lastSymbolKind = undefined;\r\n                let lastSeparator = undefined;\r\n                let lastSymbolKindCounter = 0;\r\n                function updateLastSeparatorLabel() {\r\n                    if (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) {\r\n                        lastSeparator.label = format(NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);\r\n                    }\r\n                }\r\n                for (const symbolPick of sortedFilteredSymbolPicks) {\r\n                    // Found new kind\r\n                    if (lastSymbolKind !== symbolPick.kind) {\r\n                        // Update last separator with number of symbols we found for kind\r\n                        updateLastSeparatorLabel();\r\n                        lastSymbolKind = symbolPick.kind;\r\n                        lastSymbolKindCounter = 1;\r\n                        // Add new separator for new kind\r\n                        lastSeparator = { type: 'separator' };\r\n                        symbolPicks.push(lastSeparator);\r\n                    }\r\n                    // Existing kind, keep counting\r\n                    else {\r\n                        lastSymbolKindCounter++;\r\n                    }\r\n                    // Add to final result\r\n                    symbolPicks.push(symbolPick);\r\n                }\r\n                // Update last separator with number of symbols we found for kind\r\n                updateLastSeparatorLabel();\r\n            }\r\n            else if (sortedFilteredSymbolPicks.length > 0) {\r\n                symbolPicks = [\r\n                    { label: localize('symbols', \"symbols ({0})\", filteredSymbolPicks.length), type: 'separator' },\r\n                    ...sortedFilteredSymbolPicks\r\n                ];\r\n            }\r\n            return symbolPicks;\r\n        });\r\n    }\r\n    compareByScore(symbolA, symbolB) {\r\n        if (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') {\r\n            return 1;\r\n        }\r\n        else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') {\r\n            return -1;\r\n        }\r\n        if (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\r\n            if (symbolA.score > symbolB.score) {\r\n                return -1;\r\n            }\r\n            else if (symbolA.score < symbolB.score) {\r\n                return 1;\r\n            }\r\n        }\r\n        if (symbolA.index < symbolB.index) {\r\n            return -1;\r\n        }\r\n        else if (symbolA.index > symbolB.index) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    compareByKindAndScore(symbolA, symbolB) {\r\n        const kindA = NLS_SYMBOL_KIND_CACHE[symbolA.kind] || FALLBACK_NLS_SYMBOL_KIND;\r\n        const kindB = NLS_SYMBOL_KIND_CACHE[symbolB.kind] || FALLBACK_NLS_SYMBOL_KIND;\r\n        // Sort by type first if scoped search\r\n        const result = kindA.localeCompare(kindB);\r\n        if (result === 0) {\r\n            return this.compareByScore(symbolA, symbolB);\r\n        }\r\n        return result;\r\n    }\r\n    getDocumentSymbols(document, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const model = yield OutlineModel.create(document, token);\r\n            return token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();\r\n        });\r\n    }\r\n}\r\nAbstractGotoSymbolQuickAccessProvider.PREFIX = '@';\r\nAbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX = ':';\r\nAbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY = `${AbstractGotoSymbolQuickAccessProvider.PREFIX}${AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX}`;\r\n// #region NLS Helpers\r\nconst FALLBACK_NLS_SYMBOL_KIND = localize('property', \"properties ({0})\");\r\nconst NLS_SYMBOL_KIND_CACHE = {\r\n    [5 /* Method */]: localize('method', \"methods ({0})\"),\r\n    [11 /* Function */]: localize('function', \"functions ({0})\"),\r\n    [8 /* Constructor */]: localize('_constructor', \"constructors ({0})\"),\r\n    [12 /* Variable */]: localize('variable', \"variables ({0})\"),\r\n    [4 /* Class */]: localize('class', \"classes ({0})\"),\r\n    [22 /* Struct */]: localize('struct', \"structs ({0})\"),\r\n    [23 /* Event */]: localize('event', \"events ({0})\"),\r\n    [24 /* Operator */]: localize('operator', \"operators ({0})\"),\r\n    [10 /* Interface */]: localize('interface', \"interfaces ({0})\"),\r\n    [2 /* Namespace */]: localize('namespace', \"namespaces ({0})\"),\r\n    [3 /* Package */]: localize('package', \"packages ({0})\"),\r\n    [25 /* TypeParameter */]: localize('typeParameter', \"type parameters ({0})\"),\r\n    [1 /* Module */]: localize('modules', \"modules ({0})\"),\r\n    [6 /* Property */]: localize('property', \"properties ({0})\"),\r\n    [9 /* Enum */]: localize('enum', \"enumerations ({0})\"),\r\n    [21 /* EnumMember */]: localize('enumMember', \"enumeration members ({0})\"),\r\n    [14 /* String */]: localize('string', \"strings ({0})\"),\r\n    [0 /* File */]: localize('file', \"files ({0})\"),\r\n    [17 /* Array */]: localize('array', \"arrays ({0})\"),\r\n    [15 /* Number */]: localize('number', \"numbers ({0})\"),\r\n    [16 /* Boolean */]: localize('boolean', \"booleans ({0})\"),\r\n    [18 /* Object */]: localize('object', \"objects ({0})\"),\r\n    [19 /* Key */]: localize('key', \"keys ({0})\"),\r\n    [7 /* Field */]: localize('field', \"fields ({0})\"),\r\n    [13 /* Constant */]: localize('constant', \"constants ({0})\")\r\n};\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport '../../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../../../contrib/symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport { AbstractGotoSymbolQuickAccessProvider } from '../../../contrib/quickAccess/gotoSymbolQuickAccess.js';\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { QuickOutlineNLS } from '../../../common/standaloneStrings.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneGotoSymbolQuickAccessProvider = class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\r\n    constructor(editorService) {\r\n        super();\r\n        this.editorService = editorService;\r\n        this.onDidActiveTextEditorControlChange = Event.None;\r\n    }\r\n    get activeTextEditorControl() {\r\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\r\n    }\r\n};\r\nStandaloneGotoSymbolQuickAccessProvider = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], StandaloneGotoSymbolQuickAccessProvider);\r\nexport { StandaloneGotoSymbolQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneGotoSymbolQuickAccessProvider,\r\n    prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\r\n    helpEntries: [\r\n        { description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, needsEditor: true },\r\n        { description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY, needsEditor: true }\r\n    ]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.quickOutline',\r\n            label: QuickOutlineNLS.quickOutlineActionLabel,\r\n            alias: 'Go to Symbol...',\r\n            precondition: EditorContextKeys.hasDocumentSymbolProvider,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as arrays from './arrays.js';\r\nimport * as types from './types.js';\r\nimport * as nls from '../../nls.js';\r\nfunction exceptionToErrorMessage(exception, verbose) {\r\n    if (verbose && (exception.stack || exception.stacktrace)) {\r\n        return nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\r\n    }\r\n    return detectSystemErrorMessage(exception);\r\n}\r\nfunction stackToString(stack) {\r\n    if (Array.isArray(stack)) {\r\n        return stack.join('\\n');\r\n    }\r\n    return stack;\r\n}\r\nfunction detectSystemErrorMessage(exception) {\r\n    // See https://nodejs.org/api/errors.html#errors_class_system_error\r\n    if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\r\n        return nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\r\n    }\r\n    return exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n}\r\n/**\r\n * Tries to generate a human readable error message out of the error. If the verbose parameter\r\n * is set to true, the error message will include stacktrace details if provided.\r\n *\r\n * @returns A string containing the error message.\r\n */\r\nexport function toErrorMessage(error = null, verbose = false) {\r\n    if (!error) {\r\n        return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n    }\r\n    if (Array.isArray(error)) {\r\n        const errors = arrays.coalesce(error);\r\n        const msg = toErrorMessage(errors[0], verbose);\r\n        if (errors.length > 1) {\r\n            return nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\r\n        }\r\n        return msg;\r\n    }\r\n    if (types.isString(error)) {\r\n        return error;\r\n    }\r\n    if (error.detail) {\r\n        const detail = error.detail;\r\n        if (detail.error) {\r\n            return exceptionToErrorMessage(detail.error, verbose);\r\n        }\r\n        if (detail.exception) {\r\n            return exceptionToErrorMessage(detail.exception, verbose);\r\n        }\r\n    }\r\n    if (error.stack) {\r\n        return exceptionToErrorMessage(error, verbose);\r\n    }\r\n    if (error.message) {\r\n        return error.message;\r\n    }\r\n    return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { timeout } from '../../../base/common/async.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nexport var TriggerAction;\r\n(function (TriggerAction) {\r\n    /**\r\n     * Do nothing after the button was clicked.\r\n     */\r\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\r\n    /**\r\n     * Close the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\r\n    /**\r\n     * Update the results of the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\r\n    /**\r\n     * Remove the item from the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\r\n})(TriggerAction || (TriggerAction = {}));\r\nfunction isPicksWithActive(obj) {\r\n    const candidate = obj;\r\n    return Array.isArray(candidate.items);\r\n}\r\nfunction isFastAndSlowPicks(obj) {\r\n    const candidate = obj;\r\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\r\n}\r\nexport class PickerQuickAccessProvider extends Disposable {\r\n    constructor(prefix, options) {\r\n        super();\r\n        this.prefix = prefix;\r\n        this.options = options;\r\n    }\r\n    provide(picker, token) {\r\n        var _a;\r\n        const disposables = new DisposableStore();\r\n        // Apply options if any\r\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\r\n        // Disable filtering & sorting, we control the results\r\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\r\n        // Set initial picks and update on type\r\n        let picksCts = undefined;\r\n        const picksDisposable = disposables.add(new MutableDisposable());\r\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\r\n            const picksDisposables = picksDisposable.value = new DisposableStore();\r\n            // Cancel any previous ask for picks and busy\r\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\r\n            picker.busy = false;\r\n            // Create new cancellation source for this run\r\n            picksCts = new CancellationTokenSource(token);\r\n            // Collect picks and support both long running and short or combined\r\n            const picksToken = picksCts.token;\r\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\r\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\r\n            const applyPicks = (picks, skipEmpty) => {\r\n                var _a;\r\n                let items;\r\n                let activeItem = undefined;\r\n                if (isPicksWithActive(picks)) {\r\n                    items = picks.items;\r\n                    activeItem = picks.active;\r\n                }\r\n                else {\r\n                    items = picks;\r\n                }\r\n                if (items.length === 0) {\r\n                    if (skipEmpty) {\r\n                        return false;\r\n                    }\r\n                    if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\r\n                        items = [this.options.noResultsPick];\r\n                    }\r\n                }\r\n                picker.items = items;\r\n                if (activeItem) {\r\n                    picker.activeItems = [activeItem];\r\n                }\r\n                return true;\r\n            };\r\n            // No Picks\r\n            if (providedPicks === null) {\r\n                // Ignore\r\n            }\r\n            // Fast and Slow Picks\r\n            else if (isFastAndSlowPicks(providedPicks)) {\r\n                let fastPicksApplied = false;\r\n                let slowPicksApplied = false;\r\n                yield Promise.all([\r\n                    // Fast Picks: to reduce amount of flicker, we race against\r\n                    // the slow picks over 500ms and then set the fast picks.\r\n                    // If the slow picks are faster, we reduce the flicker by\r\n                    // only setting the items once.\r\n                    (() => __awaiter(this, void 0, void 0, function* () {\r\n                        yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\r\n                        if (picksToken.isCancellationRequested) {\r\n                            return;\r\n                        }\r\n                        if (!slowPicksApplied) {\r\n                            fastPicksApplied = applyPicks(providedPicks.picks, true /* skip over empty to reduce flicker */);\r\n                        }\r\n                    }))(),\r\n                    // Slow Picks: we await the slow picks and then set them at\r\n                    // once together with the fast picks, but only if we actually\r\n                    // have additional results.\r\n                    (() => __awaiter(this, void 0, void 0, function* () {\r\n                        picker.busy = true;\r\n                        try {\r\n                            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\r\n                            if (picksToken.isCancellationRequested) {\r\n                                return;\r\n                            }\r\n                            let picks;\r\n                            let activePick = undefined;\r\n                            if (isPicksWithActive(providedPicks.picks)) {\r\n                                picks = providedPicks.picks.items;\r\n                                activePick = providedPicks.picks.active;\r\n                            }\r\n                            else {\r\n                                picks = providedPicks.picks;\r\n                            }\r\n                            let additionalPicks;\r\n                            let additionalActivePick = undefined;\r\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\r\n                                additionalPicks = awaitedAdditionalPicks.items;\r\n                                additionalActivePick = awaitedAdditionalPicks.active;\r\n                            }\r\n                            else {\r\n                                additionalPicks = awaitedAdditionalPicks;\r\n                            }\r\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\r\n                                // If we do not have any activePick or additionalActivePick\r\n                                // we try to preserve the currently active pick from the\r\n                                // fast results. This fixes an issue where the user might\r\n                                // have made a pick active before the additional results\r\n                                // kick in.\r\n                                // See https://github.com/microsoft/vscode/issues/102480\r\n                                let fallbackActivePick = undefined;\r\n                                if (!activePick && !additionalActivePick) {\r\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\r\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\r\n                                        fallbackActivePick = fallbackActivePickCandidate;\r\n                                    }\r\n                                }\r\n                                applyPicks({\r\n                                    items: [...picks, ...additionalPicks],\r\n                                    active: activePick || additionalActivePick || fallbackActivePick\r\n                                });\r\n                            }\r\n                        }\r\n                        finally {\r\n                            if (!picksToken.isCancellationRequested) {\r\n                                picker.busy = false;\r\n                            }\r\n                            slowPicksApplied = true;\r\n                        }\r\n                    }))()\r\n                ]);\r\n            }\r\n            // Fast Picks\r\n            else if (!(providedPicks instanceof Promise)) {\r\n                applyPicks(providedPicks);\r\n            }\r\n            // Slow Picks\r\n            else {\r\n                picker.busy = true;\r\n                try {\r\n                    const awaitedPicks = yield providedPicks;\r\n                    if (picksToken.isCancellationRequested) {\r\n                        return;\r\n                    }\r\n                    applyPicks(awaitedPicks);\r\n                }\r\n                finally {\r\n                    if (!picksToken.isCancellationRequested) {\r\n                        picker.busy = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\r\n        updatePickerItems();\r\n        // Accept the pick on accept and hide picker\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\r\n                if (!event.inBackground) {\r\n                    picker.hide(); // hide picker unless we accept in background\r\n                }\r\n                item.accept(picker.keyMods, event);\r\n            }\r\n        }));\r\n        // Trigger the pick with button index if button triggered\r\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b, _c;\r\n            if (typeof item.trigger === 'function') {\r\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\r\n                if (buttonIndex >= 0) {\r\n                    const result = item.trigger(buttonIndex, picker.keyMods);\r\n                    const action = (typeof result === 'number') ? result : yield result;\r\n                    if (token.isCancellationRequested) {\r\n                        return;\r\n                    }\r\n                    switch (action) {\r\n                        case TriggerAction.NO_ACTION:\r\n                            break;\r\n                        case TriggerAction.CLOSE_PICKER:\r\n                            picker.hide();\r\n                            break;\r\n                        case TriggerAction.REFRESH_PICKER:\r\n                            updatePickerItems();\r\n                            break;\r\n                        case TriggerAction.REMOVE_ITEM:\r\n                            const index = picker.items.indexOf(item);\r\n                            if (index !== -1) {\r\n                                const items = picker.items.slice();\r\n                                items.splice(index, 1);\r\n                                picker.items = items;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        })));\r\n        return disposables;\r\n    }\r\n}\r\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport { matchesContiguousSubString, matchesPrefix, matchesWords, or } from '../../../base/common/filters.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { withNullAsUndefined } from '../../../base/common/types.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { ICommandService } from '../../commands/common/commands.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { PickerQuickAccessProvider } from './pickerQuickAccess.js';\r\nimport { IStorageService } from '../../storage/common/storage.js';\r\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\r\nlet AbstractCommandsQuickAccessProvider = class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider {\r\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super(AbstractCommandsQuickAccessProvider.PREFIX, options);\r\n        this.instantiationService = instantiationService;\r\n        this.keybindingService = keybindingService;\r\n        this.commandService = commandService;\r\n        this.telemetryService = telemetryService;\r\n        this.dialogService = dialogService;\r\n        this.commandsHistory = this._register(this.instantiationService.createInstance(CommandsHistory));\r\n        this.options = options;\r\n    }\r\n    _getPicks(filter, disposables, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Ask subclass for all command picks\r\n            const allCommandPicks = yield this.getCommandPicks(disposables, token);\r\n            if (token.isCancellationRequested) {\r\n                return [];\r\n            }\r\n            // Filter\r\n            const filteredCommandPicks = [];\r\n            for (const commandPick of allCommandPicks) {\r\n                const labelHighlights = withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.label));\r\n                const aliasHighlights = commandPick.commandAlias ? withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.commandAlias)) : undefined;\r\n                // Add if matching in label or alias\r\n                if (labelHighlights || aliasHighlights) {\r\n                    commandPick.highlights = {\r\n                        label: labelHighlights,\r\n                        detail: this.options.showAlias ? aliasHighlights : undefined\r\n                    };\r\n                    filteredCommandPicks.push(commandPick);\r\n                }\r\n                // Also add if we have a 100% command ID match\r\n                else if (filter === commandPick.commandId) {\r\n                    filteredCommandPicks.push(commandPick);\r\n                }\r\n            }\r\n            // Add description to commands that have duplicate labels\r\n            const mapLabelToCommand = new Map();\r\n            for (const commandPick of filteredCommandPicks) {\r\n                const existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\r\n                if (existingCommandForLabel) {\r\n                    commandPick.description = commandPick.commandId;\r\n                    existingCommandForLabel.description = existingCommandForLabel.commandId;\r\n                }\r\n                else {\r\n                    mapLabelToCommand.set(commandPick.label, commandPick);\r\n                }\r\n            }\r\n            // Sort by MRU order and fallback to name otherwise\r\n            filteredCommandPicks.sort((commandPickA, commandPickB) => {\r\n                const commandACounter = this.commandsHistory.peek(commandPickA.commandId);\r\n                const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\r\n                if (commandACounter && commandBCounter) {\r\n                    return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\r\n                }\r\n                if (commandACounter) {\r\n                    return -1; // first command was used, so it wins over the non used one\r\n                }\r\n                if (commandBCounter) {\r\n                    return 1; // other command was used so it wins over the command\r\n                }\r\n                // both commands were never used, so we sort by name\r\n                return commandPickA.label.localeCompare(commandPickB.label);\r\n            });\r\n            const commandPicks = [];\r\n            let addSeparator = false;\r\n            for (let i = 0; i < filteredCommandPicks.length; i++) {\r\n                const commandPick = filteredCommandPicks[i];\r\n                const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\r\n                const ariaLabel = keybinding ?\r\n                    localize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\r\n                    commandPick.label;\r\n                // Separator: recently used\r\n                if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\r\n                    commandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\r\n                    addSeparator = true;\r\n                }\r\n                // Separator: other commands\r\n                if (i !== 0 && addSeparator && !this.commandsHistory.peek(commandPick.commandId)) {\r\n                    commandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\r\n                    addSeparator = false; // only once\r\n                }\r\n                // Command\r\n                commandPicks.push(Object.assign(Object.assign({}, commandPick), { ariaLabel, detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined, keybinding, accept: () => __awaiter(this, void 0, void 0, function* () {\r\n                        // Add to history\r\n                        this.commandsHistory.push(commandPick.commandId);\r\n                        // Telementry\r\n                        this.telemetryService.publicLog2('workbenchActionExecuted', {\r\n                            id: commandPick.commandId,\r\n                            from: 'quick open'\r\n                        });\r\n                        // Run\r\n                        try {\r\n                            yield this.commandService.executeCommand(commandPick.commandId);\r\n                        }\r\n                        catch (error) {\r\n                            if (!isPromiseCanceledError(error)) {\r\n                                this.dialogService.show(Severity.Error, localize('canNotRun', \"Command '{0}' resulted in an error ({1})\", commandPick.label, toErrorMessage(error)));\r\n                            }\r\n                        }\r\n                    }) }));\r\n            }\r\n            return commandPicks;\r\n        });\r\n    }\r\n};\r\nAbstractCommandsQuickAccessProvider.PREFIX = '>';\r\nAbstractCommandsQuickAccessProvider.WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString);\r\nAbstractCommandsQuickAccessProvider = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, ICommandService),\r\n    __param(4, ITelemetryService),\r\n    __param(5, IDialogService)\r\n], AbstractCommandsQuickAccessProvider);\r\nexport { AbstractCommandsQuickAccessProvider };\r\nlet CommandsHistory = class CommandsHistory extends Disposable {\r\n    constructor(storageService, configurationService) {\r\n        super();\r\n        this.storageService = storageService;\r\n        this.configurationService = configurationService;\r\n        this.configuredCommandsHistoryLength = 0;\r\n        this.updateConfiguration();\r\n        this.load();\r\n        this.registerListeners();\r\n    }\r\n    registerListeners() {\r\n        this._register(this.configurationService.onDidChangeConfiguration(() => this.updateConfiguration()));\r\n    }\r\n    updateConfiguration() {\r\n        this.configuredCommandsHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(this.configurationService);\r\n        if (CommandsHistory.cache && CommandsHistory.cache.limit !== this.configuredCommandsHistoryLength) {\r\n            CommandsHistory.cache.limit = this.configuredCommandsHistoryLength;\r\n            CommandsHistory.saveState(this.storageService);\r\n        }\r\n    }\r\n    load() {\r\n        const raw = this.storageService.get(CommandsHistory.PREF_KEY_CACHE, 0 /* GLOBAL */);\r\n        let serializedCache;\r\n        if (raw) {\r\n            try {\r\n                serializedCache = JSON.parse(raw);\r\n            }\r\n            catch (error) {\r\n                // invalid data\r\n            }\r\n        }\r\n        const cache = CommandsHistory.cache = new LRUCache(this.configuredCommandsHistoryLength, 1);\r\n        if (serializedCache) {\r\n            let entries;\r\n            if (serializedCache.usesLRU) {\r\n                entries = serializedCache.entries;\r\n            }\r\n            else {\r\n                entries = serializedCache.entries.sort((a, b) => a.value - b.value);\r\n            }\r\n            entries.forEach(entry => cache.set(entry.key, entry.value));\r\n        }\r\n        CommandsHistory.counter = this.storageService.getNumber(CommandsHistory.PREF_KEY_COUNTER, 0 /* GLOBAL */, CommandsHistory.counter);\r\n    }\r\n    push(commandId) {\r\n        if (!CommandsHistory.cache) {\r\n            return;\r\n        }\r\n        CommandsHistory.cache.set(commandId, CommandsHistory.counter++); // set counter to command\r\n        CommandsHistory.saveState(this.storageService);\r\n    }\r\n    peek(commandId) {\r\n        var _a;\r\n        return (_a = CommandsHistory.cache) === null || _a === void 0 ? void 0 : _a.peek(commandId);\r\n    }\r\n    static saveState(storageService) {\r\n        if (!CommandsHistory.cache) {\r\n            return;\r\n        }\r\n        const serializedCache = { usesLRU: true, entries: [] };\r\n        CommandsHistory.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\r\n        storageService.store(CommandsHistory.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* GLOBAL */, 0 /* USER */);\r\n        storageService.store(CommandsHistory.PREF_KEY_COUNTER, CommandsHistory.counter, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    static getConfiguredCommandHistoryLength(configurationService) {\r\n        var _a, _b;\r\n        const config = configurationService.getValue();\r\n        const configuredCommandHistoryLength = (_b = (_a = config.workbench) === null || _a === void 0 ? void 0 : _a.commandPalette) === null || _b === void 0 ? void 0 : _b.history;\r\n        if (typeof configuredCommandHistoryLength === 'number') {\r\n            return configuredCommandHistoryLength;\r\n        }\r\n        return CommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH;\r\n    }\r\n};\r\nCommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH = 50;\r\nCommandsHistory.PREF_KEY_CACHE = 'commandPalette.mru.cache';\r\nCommandsHistory.PREF_KEY_COUNTER = 'commandPalette.mru.counter';\r\nCommandsHistory.counter = 1;\r\nCommandsHistory = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IConfigurationService)\r\n], CommandsHistory);\r\nexport { CommandsHistory };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { AbstractCommandsQuickAccessProvider } from '../../../platform/quickinput/browser/commandsQuickAccess.js';\r\nimport { stripIcons } from '../../../base/common/iconLabels.js';\r\nexport class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {\r\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);\r\n    }\r\n    getCodeEditorCommandPicks() {\r\n        const activeTextEditorControl = this.activeTextEditorControl;\r\n        if (!activeTextEditorControl) {\r\n            return [];\r\n        }\r\n        const editorCommandPicks = [];\r\n        for (const editorAction of activeTextEditorControl.getSupportedActions()) {\r\n            editorCommandPicks.push({\r\n                commandId: editorAction.id,\r\n                commandAlias: editorAction.alias,\r\n                label: stripIcons(editorAction.label) || editorAction.id,\r\n            });\r\n        }\r\n        return editorCommandPicks;\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { QuickCommandNLS } from '../../../common/standaloneStrings.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { AbstractEditorCommandsQuickAccessProvider } from '../../../contrib/quickAccess/commandsQuickAccess.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\r\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\r\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneCommandsQuickAccessProvider = class StandaloneCommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\r\n    constructor(instantiationService, codeEditorService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super({ showAlias: false }, instantiationService, keybindingService, commandService, telemetryService, dialogService);\r\n        this.codeEditorService = codeEditorService;\r\n    }\r\n    get activeTextEditorControl() { return withNullAsUndefined(this.codeEditorService.getFocusedCodeEditor()); }\r\n    getCommandPicks() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getCodeEditorCommandPicks();\r\n        });\r\n    }\r\n};\r\nStandaloneCommandsQuickAccessProvider = __decorate([\r\n    __param(0, IInstantiationService),\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, ICommandService),\r\n    __param(4, ITelemetryService),\r\n    __param(5, IDialogService)\r\n], StandaloneCommandsQuickAccessProvider);\r\nexport { StandaloneCommandsQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneCommandsQuickAccessProvider,\r\n    prefix: StandaloneCommandsQuickAccessProvider.PREFIX,\r\n    helpEntries: [{ description: QuickCommandNLS.quickCommandHelp, needsEditor: true }]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.quickCommand',\r\n            label: QuickCommandNLS.quickCommandActionLabel,\r\n            alias: 'Command Palette',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 59 /* F1 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'z_commands',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneCommandsQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { ReferencesController } from '../../../contrib/gotoSymbol/peek/referencesController.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nlet StandaloneReferencesController = class StandaloneReferencesController extends ReferencesController {\r\n    constructor(editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService) {\r\n        super(true, editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService);\r\n    }\r\n};\r\nStandaloneReferencesController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, ICodeEditorService),\r\n    __param(3, INotificationService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, IStorageService),\r\n    __param(6, IConfigurationService)\r\n], StandaloneReferencesController);\r\nexport { StandaloneReferencesController };\r\nregisterEditorContribution(ReferencesController.ID, StandaloneReferencesController);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\r\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings.js';\r\nclass ToggleHighContrast extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.toggleHighContrast',\r\n            label: ToggleHighContrastNLS.toggleHighContrast,\r\n            alias: 'Toggle High Contrast Theme',\r\n            precondition: undefined\r\n        });\r\n        this._originalThemeName = null;\r\n    }\r\n    run(accessor, editor) {\r\n        const standaloneThemeService = accessor.get(IStandaloneThemeService);\r\n        if (this._originalThemeName) {\r\n            // We must toggle back to the integrator's theme\r\n            standaloneThemeService.setTheme(this._originalThemeName);\r\n            this._originalThemeName = null;\r\n        }\r\n        else {\r\n            this._originalThemeName = standaloneThemeService.getColorTheme().themeName;\r\n            standaloneThemeService.setTheme('hc-black');\r\n        }\r\n    }\r\n}\r\nregisterEditorAction(ToggleHighContrast);\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n","import arrayWithoutHoles from './_array_without_holes';\nimport iterableToArray from './_iterable_to_array';\nimport nonIterableSpread from './_non_iterable_spread';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n","/*!\n * cyrillicToLatin.js - Convert cyrillic to latin.\n * https://github.com/stojanovic/cyrillic-to-latin\n */\n\n/*global define: false cyrillicToLatin: true*/\n\n(function(global, factory) {\n  // CommonJS\n  if (typeof exports === 'object' && exports) {\n    module.exports = factory()\n  }\n  // AMD\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  // global\n  else {\n    global.cyrillicToLatin = factory()\n  }\n}(this, function () {\n\n  'use strict';\n\n  return function(string) {\n    var cyrillic = 'А_Б_В_Г_Д_Ђ_Е_Ё_Ж_З_И_Й_Ј_К_Л_Љ_М_Н_Њ_О_П_Р_С_Т_Ћ_У_Ф_Х_Ц_Ч_Џ_Ш_Щ_Ъ_Ы_Ь_Э_Ю_Я_а_б_в_г_д_ђ_е_ё_ж_з_и_й_ј_к_л_љ_м_н_њ_о_п_р_с_т_ћ_у_ф_х_ц_ч_џ_ш_щ_ъ_ы_ь_э_ю_я'.split('_')\n    var latin = 'A_B_V_G_D_Đ_E_Ë_Ž_Z_I_J_J_K_L_Lj_M_N_Nj_O_P_R_S_T_Ć_U_F_H_C_Č_Dž_Š_Ŝ_ʺ_Y_ʹ_È_Û_Â_a_b_v_g_d_đ_e_ë_ž_z_i_j_j_k_l_lj_m_n_nj_o_p_r_s_t_ć_u_f_h_c_č_dž_š_ŝ_ʺ_y_ʹ_è_û_â'.split('_')\n\n    return string.split('').map(function(char) {\n      var index = cyrillic.indexOf(char)\n      if (!~index)\n        return char\n      return latin[index]\n    }).join('')\n  }\n\n}))\n","let keywordMap = {\n  прозор: \"window\",\n  отвори: \"open\",\n  Обећање: \"Promise\",\n  асинхрона: \"async\",\n  одложи: \"setTimeout\",\n  сачекај: \"await\",\n  онда: \"then\",\n  ухвати: \"catch\",\n  пробај: \"try\",\n  празно: \"null\",\n  заСваки: \"forEach\",\n  недефинисано: \"undefined\",\n  Математика: \"Math\",\n  \"минус Бесконачно\": \"Number.NEGATIVE_INFINITY\",\n  Бесконачно: \"Math.Infinity\",\n  насумично: \"random\",\n  функција: \"function\",\n  класа: \"class\",\n  наслеђује: \"extends\",\n  конструктор: \"constructor\",\n  родитељ: \"super\",\n  врати: \"return\",\n  испиши: \"alert\",\n  излогуј: \"console.log\",\n  константа: \"const\",\n  \"дај да\": \"let\",\n  нека: \"let\",\n  ово: \"this\",\n  буде: \"=\",\n  буду: \"=\",\n  постаје: \"=\",\n  дохвати: \"fetch\",\n  пробај: \"try\",\n  баци: \"throw\",\n  Грешку: \"Error\",\n  гурни: \"push\",\n  споји: \"join\",\n  растави: \"split\",\n  \"добија вредност\": \"=\",\n  \"повећај за\": \"+=\",\n  \"увећај за\": \"+=\",\n  \"умањи за\": \"-=\",\n  \"помножи са\": \"*=\",\n  нетачно: \"false\",\n  тачно: \"true\",\n  \"није једнако\": \"!=\",\n  није: \"!\",\n  \"мањи од\": \"<\",\n  \"мање од\": \"<\",\n  \"већи од\": \">\",\n  \"веће од\": \">\",\n  \"је једнако\": \"==\",\n  постаје: \"=\",\n  једнако: \"=\",\n  Низ: \"Array\",\n  процеди: \"filter\",\n  дужина: \"length\",\n  обрни: \"reverse\",\n  окрени: \"reverse\",\n  нови: \"new\",\n  нова: \"new\",\n  ново: \"new\",\n  нову: \"new\",\n  пута: \"*\",\n  за: \"for\",\n  док: \"while\",\n  \"док је\": \"while\",\n  \"ако је\": \"if\",\n  ако: \"if\",\n  \"у супротном\": \"else\",\n  или: \"||\",\n  и: \"&&\",\n  \"ако је инстанца\": \"instanceof\",\n  \"ако је тип\": \"typeof\",\n  стани: \"break\",\n  кочи: \"break\",\n  случај: \"case\",\n  настави: \"continue\",\n  \"шта се покварило\": \"debugger\",\n  подразумевано: \"default\",\n  обриши: \"delete\",\n  ради: \"do\",\n  коначно: \"finally\",\n  напокон: \"finally\",\n  пребаци: \"switch\",\n  подај: \"var\",\n  изнедефиниши: \"void\",\n  извези: \"export\",\n  увези: \"import\",\n  у: \"in\",\n  статично: \"static\",\n  \"остатак при дељењу са\": \"%\",\n  прекини: \"break\",\n  минус: \"–\",\n};\n\nexport const keywords = Object.keys(keywordMap);\n\nexport function transform(code) {\n  code = ` ${code} `;\n\n  let newCode = Object.keys(keywordMap).reduce((prev, keyword) => {\n    return prev.replace(\n      new RegExp(\n        `(\\\\s|\\\\(|\\\\.|\\\\'|\\\\\"|\\\\{}|\\\\=)${keyword}(\\\\s|\\\\(|\\\\.|\\\\'|\\\\\"|\\\\{}|\\\\=|\\\\)|\\\\;)`,\n        \"g\"\n      ),\n      `$1${keywordMap[keyword]}$2`\n    );\n  }, code);\n\n  return newCode;\n}\n\nexport function execute(code) {\n  try {\n    let result = eval(code);\n    return result;\n  } catch (ex) {\n    return ex;\n  }\n}\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.main.js\";\nimport { keywords } from \"./engine\";\n\n// Register a new language\nmonaco.languages.register({ id: \"chpp\" });\n\n// Register a tokens provider for the language\nmonaco.languages.setMonarchTokensProvider(\"chpp\", {\n  tokenizer: {\n    root: [\n      ...keywords.map((keyword) => [new RegExp(` ${keyword} `), \"keyword\"]),\n      [/\\класа/, \"type.identifier\"],\n      // [/\\дај да/, \"keyword\"],\n    ],\n  },\n});\n\n// Define a new theme that contains only rules that match this language\nmonaco.editor.defineTheme(\"chpp-theme\", {\n  base: \"vs-dark\",\n  inherit: true,\n  rules: [{ token: \"variable\", foreground: \"FFA500\" }],\n});\n","export const singletonCode = `\n\nкласа Јединац {\n\n    статично ја добија вредност празно;\n    \n    конструктор() {\n        ако (Јединац.ја) {\n            врати Јединац.ја\n        }\n        \n        Јединац.ја = ово\n        врати ово\n    }\n\n}\n\nдај да новиЈединац буде нови Јединац\nдај да новиЈединац2 буде нови Јединац\n\nновиЈединац === новиЈединац2\n\n`;\n","import \"normalize.css\";\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.main.js\";\nimport convert from \"cyrillic-to-latin\";\n\nimport \"./chpp-lang\";\nimport { execute, transform } from \"./engine\";\nimport { singletonCode } from \"./examples/singleton\";\n\nconst $ = document.querySelector.bind(document);\nlet $code = $(\".js-code\");\nlet $execute = $(\".js-execute\");\nlet $debug = $(\".js-debug\");\nlet $debugOverlay = $(\".js-debug-overlay\");\nlet $output = $(\".js-output\");\n\nlet editor = monaco.editor.create($code, {\n  value: singletonCode,\n  language: \"chpp\",\n\n  roundedSelection: false,\n  scrollBeyondLastLine: false,\n  readOnly: false,\n  minimap: {\n    enabled: false,\n  },\n  theme: \"chpp-theme\",\n  fontSize: 20,\n});\n\n$execute.addEventListener(\"click\", () => {\n  const code = editor.getValue();\n  console.log({ code });\n\n  const jsCode = transform(code);\n  console.log({ jsCode });\n  $debugOverlay.innerText = convert(jsCode);\n\n  const output = execute(jsCode);\n\n  console.log({ output });\n\n  $output.innerText = output;\n});\n\n$debug.addEventListener(\"click\", () => {\n  $debugOverlay.classList.toggle(\"show\");\n});\n"],"names":["$b60118307a695b19$export$40339995e8a21591","$b60118307a695b19$export$357eb1b4f03c1402","$b60118307a695b19$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$cca0620e03dc781c$var$LanguageServiceDefaultsImpl","LanguageServiceDefaultsImpl","languageId","options","modeConfiguration","_onDidChange","$eHiec","Emitter","_languageId","setOptions","setModeConfiguration","defineProperty","prototype","get","event","enumerable","configurable","_modeConfiguration","_options","create","fire","this","setDiagnosticsOptions","$cca0620e03dc781c$var$optionsDefault","validate","lint","compatibleVendorPrefixes","vendorPrefix","duplicateProperties","emptyRules","importStatement","boxModel","universalSelector","zeroUnits","fontFaceProperties","hexColorLength","argumentsInColorFunction","unknownProperties","ieHack","unknownVendorSpecificProperties","propertyIgnoredDueToDisplay","important","float","idSelector","data","useDefaultDataProvider","$cca0620e03dc781c$var$modeConfigurationDefault","completionItems","hovers","documentSymbols","definitions","references","documentHighlights","rename","colors","foldingRanges","diagnostics","selectionRanges","$cca0620e03dc781c$export$a87ff7e310793277","$cca0620e03dc781c$export$5bbffe450bca6622","$cca0620e03dc781c$export$eaf41c474da60dd7","$cca0620e03dc781c$var$getMode","languages","css","cssDefaults","lessDefaults","scssDefaults","module","exports","Promise","all","getBundleURL","resolve","then","$1QOEH","bundle","reject","existingLinks","document","getElementsByTagName","concat","some","link","href","rel","indexOf","createElement","onerror","e","onload","remove","appendChild","$1591f0e75f353b07$var$cachedBundles","$1591f0e75f353b07$var$cachedPreloads","$1591f0e75f353b07$var$cachedPrefetches","$1591f0e75f353b07$var$getCache","type","loader","cache","apply","arguments","catch","$c895b651f656c2fc$export$da289beea9c5b10d","$c895b651f656c2fc$var$bundleURL","$c895b651f656c2fc$var$getBaseURL","url","replace","value","err","matches","stack","match","$c895b651f656c2fc$var$getBundleURL","existingScripts","script","src","async","charset","onLanguage","mode","setupMode","$000a066f0997016c$var$LanguageServiceDefaultsImpl","diagnosticsOptions","_diagnosticsOptions","$000a066f0997016c$var$diagnosticDefault","allowComments","schemas","enableSchemaRequest","schemaRequest","schemaValidation","comments","trailingCommas","$000a066f0997016c$var$modeConfigurationDefault","documentFormattingEdits","documentRangeFormattingEdits","tokens","$000a066f0997016c$export$d268c46a32392aa4","$000a066f0997016c$var$getMode","json","jsonDefaults","extensions","aliases","mimetypes","$b1dafc4dac314930$var$__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","body","sent","t","n","v","op","f","TypeError","y","call","_","trys","pop","label","ops","push","g","verb","return","Symbol","iterator","$b1dafc4dac314930$var$formatDefaults","tabSize","insertSpaces","wrapLineLength","unformatted","contentUnformatted","indentInnerHtml","preserveNewLines","maxPreserveNewLines","indentHandlebars","extraLiners","wrapAttributes","format","$b1dafc4dac314930$var$getConfigurationDefault","links","$b1dafc4dac314930$var$htmlLanguageId","$b1dafc4dac314930$var$handlebarsLanguageId","$b1dafc4dac314930$var$razorLanguageId","$b1dafc4dac314930$export$de544f564c181410","$b1dafc4dac314930$export$a3d3bb4812d48f43","$b1dafc4dac314930$var$optionsDefault","$b1dafc4dac314930$export$80f92579b04312fc","defaults","$b1dafc4dac314930$export$91240bcfa821e3cd","$b1dafc4dac314930$export$ade9bb860bfec86e","$b1dafc4dac314930$export$690e76c00434b52c","$b1dafc4dac314930$export$981a4f75f0fa99c7","$b1dafc4dac314930$var$getMode","_this","$b1dafc4dac314930$var$LanguageServiceDefaultsImpl","onLanguageListener","dispose","undefined","html","htmlDefaults","razorDefaults","handlebarDefaults","htmlLanguageService","registerHTMLLanguageService","$302e059aac65c995$var$languageDefinitions","$302e059aac65c995$var$lazyLanguageLoaders","$302e059aac65c995$var$LazyLanguageLoader","LazyLanguageLoader","_loadingTriggered","_lazyLoadPromise","_lazyLoadPromiseResolve","_lazyLoadPromiseReject","getOrCreate","whenLoaded","load","mod","$302e059aac65c995$export$ecb1189b612f157d","$302e059aac65c995$export$1009f340c2fb4cd1","def","lazyLanguageLoader","setMonarchTokensProvider","language","setLanguageConfiguration","conf","filenames","firstLine","$1e9a5a7c0c53624f$export$aec284c58bafc4d8","value1","isTrustedOrOptions","_a","_b","$gDSKg","illegalArgument","isTrusted","supportThemeIcons","appendText","newlineStyle","$1e9a5a7c0c53624f$export$efc17dfe9b02748e","$65hVN","escapeIcons","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","code","$1e9a5a7c0c53624f$export$99d694b387faa6d3","oneOrMany","$1e9a5a7c0c53624f$export$2dca106d8b8eb3d5","Array","isArray","every","thing","text","$1e9a5a7c0c53624f$export$5acc57695013539a","$1e9a5a7c0c53624f$export$15fd475ca7e00d19","dimensions","splitted","split","map","s","trim","parameters","heightFromParams","exec","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","$5a98c7e01199efd5$var$__decorate","decorators","target","key","desc","d","r","c","getOwnPropertyDescriptor","Reflect","decorate","$5a98c7e01199efd5$var$__param","paramIndex","decorator","$6POIt","RawContextKey","SelectionAnchorController","editor1","contextKeyService","selectionAnchorSetContextKey","$5a98c7e01199efd5$export$d6fce6fa51f5f075","bindTo","modelChangeListener","onDidChangeModel","reset","static","editor","getContribution","ID","hasModel","previousDecorations","decorationId","deltaDecorations","$dOfkw","Selection","fromPositions","position","description","newDecorationId","set","$ezyVy","alert","$4q8Mp","localize","lineNumber","column","anchorPosition","getModel","getDecorationRange","setPosition","getStartPosition","end","getPosition","setSelection","start","cancelSelectionAnchor","IContextKeyService","$9uNsR","EditorAction","weight","$5a98c7e01199efd5$var$__awaiter","$5a98c7e01199efd5$var$SelectionAnchorController","alias","precondition","registerEditorContribution","registerEditorAction","$5a98c7e01199efd5$var$SetSelectionAnchor","$b9338b70ecd88371$var$overviewRulerBracketMatchForeground","$g674p","registerColor","dark","light","hc","$b9338b70ecd88371$var$JumpToBracketAction","super","kbOpts","kbExpr","$hNbQi","EditorContextKeys","editorTextFocus","primary","run","accessor","controller","$b9338b70ecd88371$export$801af77c521cc14b","jumpToBracket","$b9338b70ecd88371$var$SelectToBracketAction","args","name","schema","properties","default","selectBrackets","selectToBracket","$b9338b70ecd88371$var$BracketsData","brackets","$buoIl","Disposable","_editor","_lastBracketsData","_lastVersionId","_decorations","_updateBracketsSoon","_register","$dcB30","RunOnceScheduler","_updateBrackets","_matchBrackets","getOption","schedule","onDidChangeCursorPosition","onDidChangeModelContent","onDidChangeModelLanguageConfiguration","onDidChangeConfiguration","hasChanged","model","newSelections","getSelections","selection","position1","brackets1","matchBracket","newCursorPosition","containsPosition","enclosingBrackets","findEnclosingBrackets","nextBracket","findNextBracket","range","setSelections","revealRange","forEach","selectFrom","selectTo","sort","$eXLbZ","Range","compareRangesUsingStarts","open","close","getEndPosition","tmp","_recomputeBrackets","newDecorations","newDecorationsLen","bracketData","selections","versionId","getVersionId","previousData","positions","positionsLen","len","isEmpty","$6E8gd","Position","compare","newData","newDataLen","previousIndex","previousLen","i1","len1","isBefore","equals","options1","_DECORATION_OPTIONS_WITH_OVERVIEW_RULER","_DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER","$aQnth","ModelDecorationOptions","stickiness","className","overviewRuler","color","$brXM3","themeColorFromId","$kxfnO","OverviewRulerLane","Center","registerThemingParticipant","theme","collector","bracketMatchBackground","getColor","$2q216","editorBracketMatchBackground","addRule","bracketMatchBorder","editorBracketMatchBorder","$b7FnQ","MenuRegistry","appendMenuItem","MenuId","MenubarGoMenu","group","command","title","comment","order","$a859c1a0e8d43800$export$2f5b910561dba428","isMovingLeft","_selection","_isMovingLeft","getEditOperations","builder","startLineNumber","endLineNumber","startColumn","endColumn","getLineMaxColumn","rangeBefore","charBefore","getValueInRange","addEditOperation","rangeAfter","charAfter","computeCursorState","helper","$f0b6815c6c5cc05d$var$MoveCaretAction","left","opts","commands","pushUndoStop","executeCommands","$f0b6815c6c5cc05d$var$MoveCaretLeftAction","writable","$f0b6815c6c5cc05d$var$MoveCaretRightAction","$4e62239964aa5cf9$var$TransposeLettersAction","textInputFocus","mac","lastColumn","endPosition","$6I1F4","MoveOperations","rightPosition","middlePosition","leftPosition","beginPosition","leftChar","rightChar","replaceRange","$btsqh","ReplaceCommand","$e3e3293f63cca02d$var$__awaiter","$e3e3293f63cca02d$var$CLIPBOARD_CONTEXT_MENU_GROUP","$e3e3293f63cca02d$var$supportsCut","$4Omtg","isNative","queryCommandSupported","$e3e3293f63cca02d$var$supportsCopy","navigator","clipboard","$j5jAv","isFirefox","$e3e3293f63cca02d$var$registerCommand","$e3e3293f63cca02d$export$a8d6789320b048c","MultiCommand","MenubarEditMenu","menuId","EditorContext","CommandPalette","SimpleEditorContext","$e3e3293f63cca02d$export$8b1bb1da381bfe9d","MenubarCopy","original","EditorContextCopy","$e3e3293f63cca02d$export$a9fe4d1a2388c0e4","$e3e3293f63cca02d$var$supportsPaste","getSelection","$fq7hC","CopyOptions","forceCopyWithSyntaxHighlighting","focus","$e3e3293f63cca02d$var$registerExecCommandImpl","browserCommand","addImplementation","focusedEditor","$kahFb","ICodeEditorService","getFocusedCodeEditor","hasTextFocus","emptySelectionClipboard","execCommand","codeEditorService","clipboardService","$lr6td","IClipboardService","isWeb","clipboardText","readText","metadata","InMemoryClipboardMetadataManager","INSTANCE","pasteOnNewLine","multicursorText","isFromEmptySelection","$b5913a7242a49dfc$export$1b3d3e4661a6e372","executor","_didRun","getValue","_value","_error","$99b4d14f4ba70560$export$4a4e7458a0da9102","other","contains","startsWith","sep","intersects","append","part","$99b4d14f4ba70560$export$27825e69043be60c","filter","providedKind","include","excludes","exclude","$99b4d14f4ba70560$var$excludesAction","includeSourceActions","Source","$99b4d14f4ba70560$export$825ab508231dd706","action","actionKind","kind","onlyIncludePreferredActions","isPreferred","None","Empty","QuickFix","Refactor","SourceOrganizeImports","SourceFixAll","$99b4d14f4ba70560$export$4ce1b95d28ffb235","preferred","arg","getKindFromUser","getApplyFromUser","getPreferredUser","defaultAutoApply","toLowerCase","defaultKind","$ce1cc38e9fd5d816$var$__awaiter","$ce1cc38e9fd5d816$export$1bd4e2dfd61b18c2","$ce1cc38e9fd5d816$export$a82b5bafd5358407","$ce1cc38e9fd5d816$export$53c44422ff541409","constructor","provider","token","resolveCodeAction","edit","action1","onUnexpectedExternalError","actions","documentation","disposables","allActions","$ce1cc38e9fd5d816$var$ManagedCodeActionSet","codeActionsComparator","validActions","disabled","a","b","$5Tucp","isNonEmptyArray","message","localeCompare","hasAutoFix","trigger","only","cts","$87ELy","TextModelCancellationTokenSource","$ce1cc38e9fd5d816$var$getCodeActionProviders","DisposableStore","providers","provider1","progress","report","providedCodeActions","provideCodeActions","rangeOrSelection","codeActionContext","isCancellationRequested","$ce1cc38e9fd5d816$var$emptyCodeActionsResponse","documentation1","isPromiseCanceledError","listener","$cfFE4","CodeActionProviderRegistry","onDidChange","newProviders","cancel","promises","actions1","allDocumentation","coalesce","x","disposables1","finally","providedCodeActionKinds","entry","currentBest","registerCommand","resource","itemResolveCount","$8HQg4","URI","$bUg3q","IModelService","validatedRangeOrSelection","isISelection","liftSelection","isIRange","validateRange","$ce1cc38e9fd5d816$export$f7d3e97828274814","Progress","$1laRf","CancellationToken","resolving","Math","min","codeActionSet","resolveCount","item","setTimeout","$f174975a40cddadf$var$__decorate","$f174975a40cddadf$var$__param","MessageController","_messageWidget","MutableDisposable","_messageListeners","_visible","MESSAGE_VISIBLE","_editorListener","onDidAttemptReadOnlyEdit","_onDidAttemptReadOnlyEdit","bounds","clear","add","closeMessage","TimeoutTimer","onMouseMove","$f174975a40cddadf$var$MessageWidget","fadeOut","showMessage","$f174975a40cddadf$export$3dbfd35d3f9b386c","$f174975a40cddadf$var$MessageCommand","EditorCommand","bindToContribution","registerEditorCommand","editor2","allowEditorOverflow","suppressMouseDown","revealLinesInCenterIfOutsideViewport","_domNode","classList","anchorTop","textContent","anchorBottom","addContentWidget","messageWidget","handle","clearTimeout","getDomNode","removeEventListener","addEventListener","removeContentWidget","getId","_position","toggle","border","inputValidationInfoBorder","borderWidth","$228n3","ColorScheme","HIGH_CONTRAST","background","inputValidationInfoBackground","$e971a3ecdf511658$var$__decorate","$e971a3ecdf511658$var$__param","$44ZzT","Action","callback","$e971a3ecdf511658$var$stripNewlines","str","_delegate","_contextMenuService","keybindingService","_keybindingResolver","$e971a3ecdf511658$export$63746aec074d0acd","getKeybindings","isVisible","codeActions","at","actionsToShow","canceled","_showingActions","menuActions","getMenuActions","resolver","getResolver","useShadowDOM","domForShadowRoot","onHide","autoSelectFirstItem","getKeyBinding","$e971a3ecdf511658$var$CodeActionAction","toCodeActionAction","onSelectCodeAction","_getAdditionalMenuItems","Separator","$ce1cc38e9fd5d816$exports","CodeActionItem","revealPosition","render","cursorCoords","getScrolledVisiblePosition","editorCoords","top","$g5xmK","IContextMenuService","$4J7bS","IKeybindingService","_keybindingProvider","codeActionCommands","resolvedKeybinding","organizeImportsCommandId","commandArgs","fixAllCommandId","assign","binding","bestKeybindingForCodeAction","allCodeActionBindings","candidates","candidate","refactorCommandId","codeActionCommandId","$1d64d36c9475b0ac$var$__decorate","$1d64d36c9475b0ac$var$__param","Hidden","LightBulbState","Showing","editorPosition","widgetPosition","$1d64d36c9475b0ac$var$LightBulbState","LightBulbWidget","_quickFixActionId","_preferredFixActionId","_keybindingService","_onClick","$iD0df","onClick","_state","$kePV9","Codicon","lightBulb","classNames","editorModel","state","getLineCount","hide","Gesture","ignoreTarget","$a3ONJ","addStandardDisposableGenericMouseDownListner","preventDefault","getDomNodePagePosition","lineHeight","pad","floor","posx","addDisposableListener","buttons","monitor","$8DdXz","GlobalMouseMoveMonitor","startMonitoring","standardMouseMoveMerger","enabled","_updateLightBulbTitleAndIcon","onDidUpdateKeybindings","atPosition","getOptions","validatePosition","fontInfo","lineContent","getLineContent","TextModel","computeIndentLevel","isFolded","lineNumber1","getTopForLineNumber","spaceWidth","indent","effectiveLineNumber","preference","_posPref","layoutContentWidget","classNamesArray","lightbulbAutofix","preferredKb","getLabel","kb","lookupKeybinding","$1d64d36c9475b0ac$export$c1cb589a34d7825a","editorBackgroundColor","editorBackground","transparent","editorLightBulbForegroundColor","editorLightBulbForeground","cssSelector","$300cea95c2ff735a$var$__decorate","$300cea95c2ff735a$var$__param","$300cea95c2ff735a$var$__classPrivateFieldSet","receiver","has","quickFixActionId","preferredFixActionId","delegate","instantiationService","createInstance","$e971a3ecdf511658$exports","CodeActionMenu","applyCodeAction","includeDisabledActions","widget","$300cea95c2ff735a$var$_CodeActionUi_disposed","_c","newState","_lightBulbWidget","rawValue","onUnexpectedError","$300cea95c2ff735a$var$__classPrivateFieldGet","update","tryGetValidActionToApply","validActionToApply","context","invalidAction","getInvalidActionThatWouldHaveBeenApplied","$f174975a40cddadf$exports","_activeCodeActions","_codeActionWidget","show","autoApply","find","$300cea95c2ff735a$var$__awaiter","WeakMap","$76736b6be1c3e638$var$__classPrivateFieldGet","$76736b6be1c3e638$var$__classPrivateFieldSet","_markerService","_signalChange","_delay","_autoTriggerTimer","_onCursorChange","_getRangeOfSelectionUnlessWhitespaceEnclosed","_createEventAndSignalChange","resources","$jiow5","isEqual","uri","marker","read","markerRange","intersectRanges","lift","line","test","_getRangeOfMarker","CodeActionsState","Triggered","_cancellablePromise","$76736b6be1c3e638$var$emptyCodeActionSet","$76736b6be1c3e638$export$b8546698f8620ac4","_editor1","_markerService1","_progressService","_codeActionOracle","_onDidChangeState","onDidChangeState","_supportedCodeActions","$76736b6be1c3e638$export$6a83bf6bdb44ce42","_update","$76736b6be1c3e638$var$_CodeActionModel_isDisposed","setState","supportedActions","join","$76736b6be1c3e638$var$CodeActionOracle","createCancelablePromise","getCodeActions","$9ZpyF","showWhile","skipNotify","$c557e2dd581d5f80$var$__decorate","$c557e2dd581d5f80$var$__param","$c557e2dd581d5f80$var$contextKeyForSupportedActions","ContextKeyExpr","regex","$76736b6be1c3e638$exports","SUPPORTED_CODE_ACTIONS","RegExp","$h9MFv","escapeRegExpCharacters","QuickFixController","markerService","progressService","_instantiationService","_model","CodeActionModel","$300cea95c2ff735a$exports","CodeActionUi","$c557e2dd581d5f80$export$a438e7db7d22bc3a","Id","$c557e2dd581d5f80$export$6d27186da26b5a22","retrigger","$c557e2dd581d5f80$var$__awaiter","_applyCodeAction","_ui","showCodeActionList","notAvailableMessage","triggerPosition","_trigger","invokeFunction","$c557e2dd581d5f80$export$26d03e9717135519","bulkEditService","$2TYIU","IBulkEditService","commandService","$8qa4j","ICommandService","telemetryService","$9t43Z","ITelemetryService","notificationService","$aOZyh","INotificationService","publicLog2","codeActionIsPreferred","executeCommand","$c557e2dd581d5f80$var$asMessage","error","$c557e2dd581d5f80$var$triggerCodeActionsForEditorSelection","$c557e2dd581d5f80$export$f38a519bbf1c4de1","manualTriggerAtCurrentPosition","$1pho1","IMarkerService","IEditorProgressService","$IUmU9","IInstantiationService","and","hasCodeActionsProvider","_accessor","userArgs","when","sourceActionCommandId","$c557e2dd581d5f80$exports","QuickFixAction","RefactorAction","SourceAction","OrganizeImportsAction","AutoFixAction","FixAllAction","CodeActionCommand","$eb0fa93a47ed59d9$var$__awaiter","lenses","_disposables","list","symbol","$eb0fa93a47ed59d9$export$bbc58402852c0ea8","CodeLensProviderRegistry","ordered","Map","$eb0fa93a47ed59d9$export$deb75f6815c29a96","provideCodeLenses","providerRanks","CommandsRegistry","$3mydk","assertType","isUri","Boolean","resolveCodeLens","$8d8d4b3b4f0a5825$var$CodeLensViewZone","afterLineNumber","heightInPx","onHeight","_onHeight","domNode","onComputedHeight","_lastHeight","$8d8d4b3b4f0a5825$var$CodeLensContentWidget","line1","_commands","_isEmpty","_id","_idPool","updatePosition","withCommands","animate","children","hasSymbol","lens","$gUMIe","renderLabelWithIcons","$","String","tooltip","getCommand","parentElement","getLineFirstNonWhitespaceColumn","_widgetPosition","$8d8d4b3b4f0a5825$export$f30317118c0ba8e6","_removeDecorations","_addDecorations","_addDecorationsCallbacks","addDecoration","decoration","removeDecoration","commit","changeAccessor","resultingDecorations","$8d8d4b3b4f0a5825$export$c73ca93d747a9a75","data1","className1","helper1","viewZoneChangeAccessor1","heightInPx1","updateCallback","_isDisposed","_className","_data","_decorationIds","codeLensData","EMPTY","plusRange","_viewZone","_viewZoneId","addZone","_createContentWidgetIfNecessary","_contentWidget","viewZoneChangeAccessor","removeZone","isDisposed","isValid","range1","updateCodeLensSymbols","updateHeight","layoutZone","computeIfNecessary","hasAttribute","updateCommands","symbols","getLineNumber","getItems","codeLensForeground","editorCodeLensForeground","activeLinkForeground","editorActiveLinkForeground","$f003d9e0f5b93816$var$__decorate","$f003d9e0f5b93816$var$__param","createDecorator","lineCount","storageService","_fakeProvider","_cache","$jjWUM","LRUCache","runWhenIdle","raw1","_deserialize","$k6G7U","once","onWillSaveState","reason","$cN0Lw","WillSaveStateReason","SHUTDOWN","store","_serialize","copyModel","$eb0fa93a47ed59d9$exports","CodeLensModel","copyItems","$f003d9e0f5b93816$var$CacheItem","toString","delete","key1","lines","Set","values","stringify","data2","raw","element","$f003d9e0f5b93816$export$840ea9a95132a1f6","$953f2b54a23774f3$var$__decorate","$953f2b54a23774f3$var$__param","_commandService","_notificationService","_codeLensCache","_localToDispose","_lenses","_getCodeLensModelDelays","$8kV6w","LanguageFeatureRequestDelays","_resolveCodeLensesDelays","onDidChangeModelLanguage","_onModelChange","_updateLensStyle","_styleClassName","$iFwDE","hash","_styleElement","createStyleSheet","isInShadowDOM","getContainerDomNode","_localDispose","_oldCodeLensModels","_currentCodeLensModel","codeLensHeight","fontSize","max","_getLayoutInfo","fontFamily","editorFontInfo","fontFamilyVar","fontFeaturesVar","round","newStyle","style","setProperty","fontFeatureSettings","changeViewZones","_getCodeLensModelPromise","_resolveCodeLensesPromise","cachedLenses","_renderCodeLensSymbols","disposableTimeout","cachedLensesNow","registration","scheduler","getCodeLensModel","put","newDelay","Date","now","t1","delay","_resolveCodeLensesInViewportSoon","toDisposable","_resolveCodeLensesScheduler","changeDecorations","decorationsAccessor","viewZonesAccessor","toDispose","lastLensLineNumber","l","splice","onDidFocusEditorWidget","onDidScrollChange","scrollTopChanged","onDidLayoutChange","StableEditorScrollState","capture","_disposeAllLenses","scrollState","restore","onMouseDown","tagName","decChangeAccessor","lastGroup","groups","maxLineNumber","viewZoneAccessor","codeLensIndex","groupsIndex","codeLensLineNumber","symbolsLineNumber","layoutInfo","toResolve","request","promises1","request1","resolvedSymbols","resolvePromise","$f003d9e0f5b93816$exports","ICodeLensCache","$953f2b54a23774f3$export$39a2243123ecd7ab","$953f2b54a23774f3$var$__awaiter","quickInputService","$1jNDj","IQuickInputService","positionLineNumber","codelensController","getLenses","items","pick","$77c0cef874645125$export$63776a5bed5e44e","ColorProviderRegistry","reverse","provideDocumentColors","colorInfo","$77c0cef874645125$export$e7d2f639eb389617","provideColorPresentations","rawCIs","ci","red","green","blue","alpha","presentations","$85a39dea8b549bb3$var$__decorate","$85a39dea8b549bb3$var$__param","ColorDetector","_codeEditorService","_configurationService","_decorationsIds","_colorDatas","_isEnabled","isEnabled","onModelChanged","prevIsEnabled","removeAllDecorations","_timeoutTimer","_computePromise","getLanguageIdentifier","deprecatedConfig","colorDecorators","stop","cancelAndSet","beginCompute","RECOMPUTE_TIME","colorInfos","updateDecorations","updateColorDecorators","colorDatas","decorations","newDecorationsTypes","colorData","$85a39dea8b549bb3$var$MAX_DECORATORS","rgba","$jdgqU","RGBA","subKey","_decorationsTypes","registerDecorationType","contentText","margin","backgroundColor","resolveDecorationOptions","subType","removeDecorationType","_colorDecoratorIds","getDecorationsInRange","$560f4fc53612688a$export$b574971c7d2e43dc","computer","success","error1","hoverTime1","_computer","_hoverTime","_firstWaitScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_showLoadingMessage","_asyncComputationPromise","_asyncComputationPromiseDone","_completeCallback","_errorCallback","_progressCallback","setHoverTime","hoverTime","_firstWaitTime","_secondWaitTime","_loadingMessageTime","computeAsync","asyncResult","_withAsyncResult","_onError","computeSync","onResult","_onComplete","getResult","_onProgress","getResultWithLoadingMessage","$01093383e340d8e1$var$$","$01093383e340d8e1$export$3238181c74eea67c","containerDomNode","tabIndex","setAttribute","contentsDomNode","_scrollbar","$5jtxA","DomScrollableElement","consumeMouseWheelIfScrollbarIsNeeded","onContentsChanged","scanDomNode","$01093383e340d8e1$export$bef3feb6a15b4364","parent1","actionOptions1","keybindingLabel1","actionContainer","iconClass","EventType","CLICK","stopPropagation","setEnabled","parent","actionOptions","keybindingLabel","removeAttribute","$092552c9698176fc$export$6186f18389941487","file","base","basename","scheme","$lI8xk","Schemas","fsPath","path","isWindows","$jdSU3","isRootOrDriveLetter","$092552c9698176fc$export$f866fce9ac6aeacf","hasDriveLetter","charAt","toUpperCase","slice","$80b94d4a2f203050$var$__decorate","$80b94d4a2f203050$var$__param","$floSA","CodeEditorWidget","domElement","parentEditor","themeService","accessibilityService","getRawOptions","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","updateOptions","_onParentConfigurationChanged","getParentEditor","newOptions","IThemeService","$e2f17542999bbfd7$var$defaultColor","Color","$e2f17542999bbfd7$var$defaultOptions","showArrow","showFrame","frameColor","arrowColor","keepEditorSelection","$e2f17542999bbfd7$var$WIDGET_ID","$e2f17542999bbfd7$export$522611097978e8ff","afterColumn","heightInLines1","onDomNodeTop","heightInLines","_onDomNodeTop","_onComputedHeight","$e2f17542999bbfd7$export$99c5a2fb6300f493","domNode1","$e2f17542999bbfd7$var$Arrow","_ruleName","_IdGenerator","nextId","_color","_height","removeCSSRulesContainingSelector","_updateStyle","createCSSRule","where","$a14Jy","IdGenerator","$e2f17542999bbfd7$export$1183a8a63e681696","_arrow","_overlayWidget","_resizeSash","_positionMarkerId","container","_isShowing","$i0tX0","deepClone","mixin","isAccessible","info","_getWidth","_getLeft","_onWidth","removeOverlayWidget","_fillContainer","_initSash","_applyStyles","styles","borderTopColor","borderBottomColor","minimap","minimapWidth","verticalScrollbarWidth","minimapLeft","_onViewZoneTop","_onViewZoneHeight","containerHeight","_decoratingElementsHeight","getLayoutInfo","_doLayout","layout","id1","rangeOrPos","_showImpl","viewZoneDomNode","overflow","maxHeightInLines","arrowHeight","frameThickness","addOverlayWidget","width1","frameWidth","borderTopWidth","borderBottomWidth","revealLine","isLastLine","revealLineInCenter","setCssClass","classToReplace","widthInPixel","heightInPixel","_relayout","newHeightInLines","$8BWjQ","Sash","orientation","isResizeable","onDidStart","startY","onDidEnd","evt","lineDelta","currentY","roundedLineDelta","ceil","getHorizontalSashLeft","getHorizontalSashTop","getHorizontalSashWidth","$48094e8731dcff07$export$644b19563e21b5ea","ActionRunner","options2","_onDidChangeVisibility","onDidChangeVisibility","_element","_label","labelRenderer","container1","MOUSE_DOWN","$9eFjx","Tap","EventHelper","event1","MouseEvent","detail","visible","KEY_UP","event2","$kHh13","StandardKeyboardEvent","cleanupFn","addTarget","boxContainer","contents","$48094e8731dcff07$export$9e57f03db3a6c34b","_actions","_contextMenuProvider","contextMenuProvider","actionProvider","menuClassName","menuAsChild","menuOptions","_menuOptions","getActions","showContextMenu","getAnchor","getActionsContext","getActionViewItem","actionViewItemProvider","getMenuClassName","actionRunner","anchorAlignment","$a712976d459415e2$export$be98e6ed798491dc","$9juF2","BaseActionViewItem","menuActionsOrProvider","actionItem","isActionsArray","el","_action","dropdownMenu","keybindingProvider","_context","anchorAlignmentProvider","that","updateEnabled","setActionContext","newContext","getAction","$67803416f47b11a7$var$__decorate","$67803416f47b11a7$var$__param","$67803416f47b11a7$export$48f6bea819ebcb4e","menu","primaryGroup","primaryMaxCount","shouldInlineSubmenu","useSeparatorsInPrimaryActions","actionGroup","$67803416f47b11a7$var$asDisposable","$67803416f47b11a7$var$fillInActions","useAlternativeActions","isPrimaryAction","Number","MAX_SAFE_INTEGER","primaryBucket","secondaryBucket","secondary","submenuInfo","target1","MenuItemAction","alt","SubmenuAction","index","newLen","group1","submenuActions","unshift","ActionViewItem","_contextKeyService","class","icon","draggable","_wantsAltCommand","_itemClassDispose","ModifierKeyEmitter","getInstance","_menuItemAction","_commandAction","_updateItemClass","mouseOver","alternativeKeyDown","_altKey","keyStatus","altKey","isLinux","shiftKey","wantsAltCommand","updateLabel","updateTooltip","updateClass","updateAltState","keybinding","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","$k7se1","UILabelProvider","modifierLabels","OS","checked","toggled","ThemeIcon","isThemeIcon","iconClasses","asClassNameArray","asCSSUrl","removeProperty","contextMenuService","dropdownOptions","asClassName","$67803416f47b11a7$export$f7f1bc7a384d4da3","submenuAction","_keybindingService1","_notificationService1","_menuService","_instaService","_storageService","_b1","_container","_storageKey","submenu","_debugName","defaultActionId","defaultAction","_defaultAction","$67803416f47b11a7$export$4dbeb4f968cdf2db","dropdownOptions1","_a1","_dropdown","onDidRun","lastAction","$67803416f47b11a7$var$__awaiter","prepend","primaryContainer","KEY_DOWN","dropdownContainer","setFocusable","_a2","blur","focusable","$67803416f47b11a7$export$736e595f26a061ed","instaService","action2","options3","SubmenuItemAction","rememberDefaultAction","$67803416f47b11a7$var$DropdownWithDefaultActionViewItem","IMenuService","IStorageService","$73cae92ed768c0af$var$__decorate","$73cae92ed768c0af$var$__param","$73cae92ed768c0af$export$c98443dac646c2e1","PeekContext","registerSingleton","$73cae92ed768c0af$export$148e5f746ce36a8d","_widgets","existing","notInPeekEditor","inPeekEditor","toNegated","$73cae92ed768c0af$var$PeekContextController","$80b94d4a2f203050$exports","EmbeddedCodeEditorWidget","$73cae92ed768c0af$var$defaultOptions","primaryHeadingColor","fromHex","_onDidClose","onDidClose","disposed","headerBackgroundColor","secondaryHeadingColor","_headElement","_primaryHeading","_secondaryHeading","_bodyElement","borderColor","_fillHead","_fillBody","noCloseAction","titleElement","addStandardDisposableListener","_onTitleClick","_fillTitleIcon","_metaHeading","actionsContainer","actionBarOptions","_getActionBarOptions","$jZ5zS","ActionBar","_actionbarWidget","$67803416f47b11a7$exports","createActionViewItem","bind","secondaryHeading","innerText","primaryHeading","clearNode","headHeight","bodyHeight","_doLayoutHead","_doLayoutBody","$73cae92ed768c0af$export$670d037a0928d27c","$73cae92ed768c0af$export$d1a53973613582da","editorInfoForeground","$73cae92ed768c0af$export$edb6c0f4dab5cfec","white","black","$73cae92ed768c0af$export$adf821bd7a215589","$73cae92ed768c0af$export$575bc7438cf347f7","contrastBorder","$73cae92ed768c0af$export$6823b48977157206","$73cae92ed768c0af$export$c62b4ca635aa4209","$73cae92ed768c0af$export$5f867cdd96f32de6","$73cae92ed768c0af$export$9fa68e3b105b1d78","$73cae92ed768c0af$export$54028838992fe3b","$73cae92ed768c0af$export$cdedf5e80e896278","$73cae92ed768c0af$export$e30a076ff8a89417","$73cae92ed768c0af$export$16563b59c2de0dfb","$73cae92ed768c0af$export$16e2670c2172c358","$73cae92ed768c0af$export$fe63b48470c62d3d","$106ca3ddc09ec954$export$a8ef68f8a1e780d6","SeverityIcon","severity","$9UWF6","Ignore","Info","Warning","warning","errorIconForeground","problemsErrorIconForeground","errorCodiconSelector","warningIconForeground","problemsWarningIconForeground","warningCodiconSelector","infoIconForeground","problemsInfoIconForeground","infoCodiconSelector","$f6f0576f1280bfc6$var$__decorate","$f6f0576f1280bfc6$var$__param","onRelatedInformation","_openerService","_labelService","_lines","_longestLineLength","_relatedDiagnostics","_messageBlock","_relatedBlock","related","_scrollable","ScrollableElement","horizontal","vertical","horizontalScrollbarSize","onScroll","scrollLeft","scrollTop","source","relatedInformation","sourceAndCodeLength","splitLines","getAriaLabel","applyFontInfo","lastLineElement","detailsElement","sourceElement","codeElement","allowCommands","_codeLink","relatedInformationNode","paddingTop","relatedResource","getUriLabel","relatedMessage","typicalFullwidthCharacterWidth","scrollWidth","scrollHeight","getHeightInLines","MarkerSeverity","severityLabel","ariaLabel","MarkerNavigationWidget","$73cae92ed768c0af$exports","PeekViewWidget","_themeService","_openerService1","_labelService1","_callOnDispose","_onDidSelectRelatedInformation","onDidSelectRelatedInformation","_severity","_backgroundColor","_applyTheme","getColorTheme","onDidColorThemeChange","$f6f0576f1280bfc6$export$3ff454faa29df99a","colorId","$f6f0576f1280bfc6$export$e8afbd59cc2216b1","headerBackground","$f6f0576f1280bfc6$export$7ce14cbf6f020181","$f6f0576f1280bfc6$export$fbe68596611d815c","$f6f0576f1280bfc6$export$8b66b1de76269f7c","$f6f0576f1280bfc6$export$8eb1fe9f58a509","$f6f0576f1280bfc6$export$7a14acf93705ae2f","headerBg","peekViewTitleForeground","peekViewTitleInfoForeground","_parentContainer","onBeforeRun","createMenu","TitleMenu","createAndFillInActionBarActions","_icon","_message","$f6f0576f1280bfc6$var$MessageWidget","markerIdx","markerCount","computeRequiredHeight","setTitle","toSeverity","revealPositionNearTop","updateMarker","showStale","_heightInPixel","$c4KVK","IOpenerService","$1LG7D","ILabelService","$f6f0576f1280bfc6$export$1adcf9ab2c8e605","$f6f0576f1280bfc6$var$errorDefault","oneOf","editorErrorForeground","editorErrorBorder","$f6f0576f1280bfc6$var$warningDefault","editorWarningForeground","editorWarningBorder","$f6f0576f1280bfc6$var$infoDefault","editorInfoBorder","linkFg","textLinkForeground","$01458fa27a1af306$var$__decorate","$01458fa27a1af306$var$__param","total","MarkerList","resourceFilter","_dispoables","_nextIdx","_resourceFilter","_markers","m","_compareMarker","onMarkerChanged","uris","selected","marker1","$01458fa27a1af306$export$9314d9975cbc223","found","idx","findIndex","word","getWordAtPosition","fwd","resetIndex","_initIdx","oldIdx","res","$01458fa27a1af306$export$9e40cc7ed7f673d6","_provider","$8lJyJ","LinkedList","getMarkerList","$01458fa27a1af306$var$MarkerNavigationService","$f8b94a613b9788a2$var$__decorate","$f8b94a613b9788a2$var$__param","MarkerController","_markerNavigationService","_editorService","_sessionDispoables","$f8b94a613b9788a2$var$CONTEXT_MARKERS_NAVIGATION_VISIBLE","_cleanUp","_widgetVisible","_widget","move","$f6f0576f1280bfc6$exports","openCodeEditor","revealIfOpened","collapseToStart","focusEditor","_getOrCreateModel","showAtMarker","multiFile","pinned","selectionRevealType","otherEditor","nagivate","$01458fa27a1af306$exports","IMarkerNavigationService","_next","_multiFile","$f8b94a613b9788a2$var$__awaiter","$f8b94a613b9788a2$var$MarkerNavigationAction","$f8b94a613b9788a2$export$b348f165d3989fd9","LABEL","$f8b94a613b9788a2$var$PrevMarkerAction","$f8b94a613b9788a2$export$8934c6507da023eb","$f8b94a613b9788a2$var$NextMarkerInFilesAction","$f8b94a613b9788a2$var$PrevMarkerInFilesAction","$f8b94a613b9788a2$var$MarkerCommand","$b5d8f6ca3d573319$var$__decorate","$b5d8f6ca3d573319$var$__param","owner","anchor","_hover","_markerDecorationsService","recentMarkerCodeActionsInfo","lineDecorations","maxColumn","getMarker","$b5d8f6ca3d573319$export$6c971156836f115","hoverParts","fragment","statusBar","msg","renderMarkerHover","renderMarkerStatusbar","markerHoverForStatusbar","markerHover","hoverElement","$b5d8f6ca3d573319$var$$","markerElement","messageElement","whiteSpace","sourceAndCodeElement","codeLink","opacity","paddingLeft","message1","relatedInfoContainer","marginTop","cursor","messageElement1","addAction","$f8b94a613b9788a2$exports","NextMarkerAction","IMarkerData","makeKey","hasCodeActions","quickfixPlaceholderElement","updatePlaceholderDisposable","codeActionsPromise","display","showing","elementPosition","cancellationToken","$eFro1","IMarkerDecorationsService","$83b423faff1f5ad1$var$__insane_func","o","u","p","r1","require","toMap","allowedAttributes","iframe","img","allowedClasses","allowedSchemes","allowedTags","voids","parser","sanitizer","insane","strict","buffer","configuration","handler","string","assignment","shift","hasOwnProperty","he","lowercase","elements","rstart","rend","rattrs","rtag","rtagend","chars","lastItem","createStack","last","parsePart","substr","substring","parseEdge","parseEndTag","parseStartTag","parseTagDecode","parseTag","same","parser1","tag","rest","unary","attrs","low","doubleQuotedValue","singleQuotedValue","unquotedValue","decode","pos","attributes","out","ignore","ignoring","depth","unignore","valid","classesOk","attrsOk","lkey","start1","colon","questionmark","testUrl","encode","transformText","escapes","unescapes","rescaped","runescaped","escapeHtmlChar","unescapeHtmlChar","escapeHtml","unescapeHtml","escape","unescape","version","asKey","accumulator","reduce","$83b423faff1f5ad1$export$b5e3098aab66bd20","global","factory","$dd0440dff30c581a$exports","define","amd","globalThis","self","marked","_defineProperties","props","descriptor","_arrayLikeToArray","arr","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","minLen","from","_unsupportedIterableToArray","defaults$5","getDefaults$1","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","getDefaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape$1","fromCharCode","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","rtrim$1","relativeBase","invert","suffLen","currChar","helpers","opt","obj","val","getRegex","prot","decodeURIComponent","encodeURI","tableRow","count","cells","offset","escaped","curr","level","console","warn","pattern","defaults$4","rtrim","splitCells","_escape","findClosingBracket","outputLink","cap","lexer","inLink","inlineTokens","Tokenizer_1","Tokenizer","_proto","space","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentCodeCompensation","lang","heading","trimmed","inline","hr","blockquote","blockTokens","istask","ischecked","blankLine","endsWithBlankLine","itemContents","bull","isordered","loose","itemRegex","trimLeft","search","nextBulletRegex","task","trimRight","pre","table","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","nolink","link1","text1","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","text2","codespan","text3","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","text4","text5","prevCapZero","_backpedal","inlineText","text6","noopTest","merge$1","block$1","_paragraph","_title","bullet","listItemStart","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","repeatString","text7","charCodeAt","random","Lexer_1","Lexer","inlineQueue","rules1","lex","lexInline","Constructor","protoProps","staticProps","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","_this2","keepPrevChar","includes","lastIndexOf","startInline","defaults$2","cleanUrl","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer_1","TextRenderer","text8","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","Parser_1","Parser","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","merge","checkSanitizeDeprecation","pending","_tokens","use","_len","_key","hasExtensions","childTokens","pack","ext","prevRenderer","_len2","args1","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_step","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","_iterator","$403b6141f30af659$var$_a","$403b6141f30af659$var$_ttpInsane","window","trustedTypes","createPolicy","$403b6141f30af659$export$4470d2862de02c","markdown","$5RPnd","$6Oweh","cloneAndChange","revive","encodeURIComponent","isDomUri","FileAccess","asBrowserUri","query","with","_uriMassage","signalInnerHTML","withInnerHTML","hrefAsUri","resolvePath","outerHTML","codeBlockRenderer","defaultGenerator","promise","span","querySelector","_err","asyncRenderCallback","actionHandler","$c0B8M","DomEmitter","onAuxClick","Event","any","mouseEvent","$k714l","StandardMouseEvent","leftButton","middleButton","dataset","markedOptions","markdownEscapeEscapedIcons","renderedMarkdown","innerHTML","$403b6141f30af659$var$sanitizeRenderedMarkdown","insaneOptions","$403b6141f30af659$var$getInsaneOptions","createHTML","http","https","mailto","vscodeRemote","$ac69bf93bb03b76f$var$__decorate","$ac69bf93bb03b76f$var$__param","MarkdownRenderer","_modeService","_onDidRenderAsync","onDidRenderAsync","_getRenderOptions","disposeables","languageAlias","$ac69bf93bb03b76f$var$__awaiter","_d","modeId","getModeIdForLanguageName","triggerMode","tokenization","TokenizationRegistry","getPromise","_ttpTokenizer","$9LecK","tokenizeToString","codeBlockFontFamily","$ac69bf93bb03b76f$var$_a","$91025876f70ca202$export$55af7cd5b0fcb54d","HoverProviderRegistry","support","provideHover","hover","$91025876f70ca202$var$isValid","hasRange","hasHtmlContent","registerModelAndPositionCommand","$a0133773bdae292d$var$__decorate","$a0133773bdae292d$var$__param","$a0133773bdae292d$export$de7692bd733bd7d2","hoverMessage","asArray","$a0133773bdae292d$var$__awaiter","rng","hoverPart","contents1","markdownHoverElement","$a0133773bdae292d$var$$","$ac69bf93bb03b76f$exports","hoverContentsElement","renderedContents","$jKFKR","IModeService","$191fcfbbbe0cbea3$export$ac4df92b1ad807d","priority","equalsRange","canAdoptVisibleHover","lastAnchor","showAtPosition","$191fcfbbbe0cbea3$export$93dc41109c362a13","priority1","$3f1cf551c486d6d2$var$__decorate","$3f1cf551c486d6d2$var$__param","$3f1cf551c486d6d2$var$ttPolicy","$3f1cf551c486d6d2$var$_a","partsWidget","$3f1cf551c486d6d2$var$DecorationsWidget","additionalLinesWidget","$3f1cf551c486d6d2$var$AdditionalLinesWidget","viewMoreContentWidget","shouldShowHoverAtViewZone","viewZoneId","ghostText","inlineTexts","addToAdditionalLines","additionalLines","lastLine","$gNccc","LineDecoration","textBufferLine","hiddenTextStartColumn","getLineTokens","lastIdx","parts","preview","setParts","updateLines","additionalReservedLineCount","renderViewMoreLines","firstLineText","remainingLinesLength","$dlcFS","Configuration","applyFontInfoSlow","spacer","disposableStore","button","setExpanded","$3f1cf551c486d6d2$var$ViewMoreLinesContentWidget","$3f1cf551c486d6d2$export$e797bf9cf0ea6fb4","decorationIds","hiddenText","colorTheme","foreground","ghostTextForeground","Format","CSS","$3f1cf551c486d6d2$var$opaque","ghostTextBorder","textModel","currentLinePrefix","hiddenTextDecorations","getContextKeyValue","shouldUseInjectedText","renderSingleLineText","$3f1cf551c486d6d2$var$registerDecorationType","inlineClassName","decorationType","lineStart","renderWhitespace","newLine","visibleColumnsByColumns","$1HCwA","CursorColumns","curCol","minReservedLineCount","$3f1cf551c486d6d2$var$renderLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderControlCharacters","fontLigatures","sb","$kvkVj","createStringBuilder","lineData","appendASCIIString","isBasicASCII","containsRTL","lineTokens","$62erI","LineTokens","createEmpty","$gnh70","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","middotWidth","wsmiddotWidth","$6TOi0","EditorFontLigatures","OFF","build","trustedhtml","$3f1cf551c486d6d2$var$keyCounter","keyPrefix","service","editor3","$3e389d68d0e338ef$export$dee98dd88d502839","renderForScreenReader","lineText","lastPart","$3e389d68d0e338ef$var$applyEdits","$3e389d68d0e338ef$var$PositionOffsetTransformer","lineStartOffsetByLineIdx","getOffset","edits","transformer","offsetEdits","startOffset","endOffset","$3e389d68d0e338ef$export$f79beca728f4fd64","_expanded","onDidChangeEmitter","expanded","$60470d1361b58118$export$8541daa0011329a3","inlineCompletion","cursorPosition","previewSuffixLength","previewStartInModified","valueToBeReplaced","changes","$60470d1361b58118$var$cachingDiff","filteredChanges","originalLength","originalStart","insertColumn","originalText","firstNonWsCol","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","$60470d1361b58118$var$lastRequest","originalValue","newValue","$60470d1361b58118$var$smartDiff","getMaxCharCode","maxCharCode","charCode","getUniqueCharCode","getElements","characters","Int32Array","elements1","$70cd1083ab95d63c$export$f304190524c0bb06","$631f7d78165f9ab5$var$__decorate","$631f7d78165f9ab5$var$__param","completionSession","active","onDidExecuteCommand","UndoCommand","RedoCommand","$4lyW7","CoreEditingCommands","Tab","DeleteLeft","commandId","handleUserInput","onDidType","session","startSessionIfTriggered","scheduleAutomaticUpdate","InlineCompletionTriggerKind","Automatic","triggerKind","Explicit","ensureUpdateWithExplicitContext","$631f7d78165f9ab5$export$81a2684b4afbcb90","takeOwnership","commitCurrentCompletion","showNext","showNextInlineCompletion","showPrevious","showPreviousInlineCompletion","$631f7d78165f9ab5$var$__awaiter","hasMultipleInlineCompletions","$3e389d68d0e338ef$export$289c4343a1e3ac0d","shouldUpdate","commandService1","cache1","initialTriggerKind","lastCompletionItem","updateOperation","currentlySelectedCompletionId","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","InlineCompletionsProviderRegistry","updateSoon","completions","semanticId","currentCachedCompletion","fixAndGetIndexOfCurrentSelection","newIdx","completion","toLiveInlineCompletion","$631f7d78165f9ab5$export$a690b3d58ad2d416","selectedSuggestionInfo","operation","$631f7d78165f9ab5$export$45edb0d6e62fe8aa","disposable","executeEdits","$BA65v","EditOperation","replaceMove","cache2","completionsSource","onChange","triggerKind1","$631f7d78165f9ab5$var$CachedInlineCompletion","newRange","synchronizedRange","$631f7d78165f9ab5$var$getDefaultRange","provideInlineCompletions","freeInlineCompletions","itemsByHash","results","item1","defaultReplaceRange","result1","$ff8085beee05e7dd$export$838684fa70968537","tokenText","_table","isDigitCharacter","isVariableCharacter","isNaN","$ff8085beee05e7dd$export$d9f9145a3d2de879","_children","child","$ff8085beee05e7dd$export$a90b6065d292b1b0","others","newChildren","_fixParent","snippet","$ff8085beee05e7dd$export$5d98cc89ecdf92e7","prev","cur","clone","$ff8085beee05e7dd$export$226eba19a89ded27","$ff8085beee05e7dd$export$607e81148a39a1eb","isFinalTabstop","choice","$ff8085beee05e7dd$export$174083098cc562b2","transform","$ff8085beee05e7dd$export$a1ec6baf9d29daf8","regexp","didMatch","_replace","$ff8085beee05e7dd$export$d163fce3c0a2332a","elseValue","value2","ignoreCase","index1","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","_toCamelCase","index2","$ff8085beee05e7dd$export$7e9566d3013d80a2","$ff8085beee05e7dd$var$walk","visitor","placeholderInfo","_placeholders","walk","placeholders","fullLen","enclosingPlaceholders","placeholder","resolveVariables","$ff8085beee05e7dd$export$912b1c550122cbb6","_scanner","_token","template","insertFinalTabstop","enforceFinalTabstop","_parse","placeholderDefaultValues","incompletePlaceholders","placeholderCount","defaultValues","_accept","_backTo","_until","nextToken","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","_parseTransform","_parseChoiceElement","name1","variable","regexValue","regexOptions","_parseFormatString","complex","shorthand","ifValue1","elseValue1","$eca655fa32663923$export$2a59ac32773a53ea","$eca655fa32663923$export$baef78a404a940cc","singleFolderIdentifier","$eca655fa32663923$export$67f4d0c4e9c14220","workspace","configPath","folders","$c9e34263f7932511$var$_data","Uint8Array","$c9e34263f7932511$var$_hex","padStart","$c9e34263f7932511$var$_fillRandomValues","$c9e34263f7932511$export$4b171a31d0d87958","crypto","getRandomValues","bucket","$1add9bc616274850$export$2891f3c923c75643","_delegates","$1add9bc616274850$export$855192e72cadbd2f","_selectionIdx","_overtypingCapturer","isMultiline","getLastOvertypedInfo","multiline","lineLeadingWhitespace","getLeadingWhitespace","varLeadingWhitespace","whitespaceCommonLength","commonPrefixLength","positionColumn","$1add9bc616274850$export$ca635a24a0412381","_model1","$3Y5z0","dirname","relative","noPrefix","$1add9bc616274850$export$5352b341f536a07c","_readClipboardText","_selectionIdx1","_selectionCount","_spread","isFalsyOrWhitespace","$1add9bc616274850$export$eaceda1299e501c9","_model2","_selection1","getLanguageIdAtPosition","selectionStartLineNumber","selectionStartColumn","config","$2b2Ch","LanguageConfigurationRegistry","getComments","lineCommentToken","blockCommentStartToken","blockCommentEndToken","$1add9bc616274850$export$b1b4743ee370b05b","_date","getFullYear","getMonth","valueOf","getDate","getHours","getMinutes","getSeconds","dayNames","getDay","dayNamesShort","monthNames","monthNamesShort","getTime","$1add9bc616274850$export$4165b22d64e545b4","_workspaceService","workspaceIdentifier","getWorkspace","_resolveWorkspaceName","_resoveWorkspacePath","filename","endsWith","folderpath","$1add9bc616274850$export$ca00663510c7b30b","getColorGraceful","snippetTabstopHighlightBackground","snippetTabstopHighlightBorder","snippetFinalTabstopHighlightBackground","snippetFinalTabstopHighlightBorder","$6fc9ee4b0b6808ad$export$169d3ec12ce4b218","_snippet","_offset","_snippetLineLeadingWhitespace","_nestingLevel","_placeholderGroups","groupBy","compareByIndex","_placeholderGroupsIdx","_placeholderDecorations","_initDecorations","placeholderOffset","placeholderLen","getPositionAt","_decor","inactiveFinal","inactive","operations","currentValue","transformedValueLines","normalizeIndentation","getEOL","couldSkipThisPlaceholder","activePlaceholders","_hasPlaceholderBeenCollapsed","changeDecorationOptions","activeFinal","enclosingPlaceholder","placeholder1","isAtFirstPlaceholder","isAtLastPlaceholder","hasPlaceholder","computePossibleSelections","placeholdersWithEqualIndex","ranges","nested","assert","indexLastPlaceholder","nestedPlaceholder","$6fc9ee4b0b6808ad$var$_defaultOptions","overwriteBefore","overwriteAfter","adjustWhitespace","overtypingCapturer","$6fc9ee4b0b6808ad$export$c526d3c43e8526af","template1","_templateMerges","_snippets","_template","adjustIndentation","adjustNewlines","snippetTextString","positionColumnBefore","positionColumnAfter","createWithDirection","getDirection","snippets","workspaceService","invokeWithinContext","$5U0Wx","IWorkspaceContextService","optional","modelBasedVariableResolver","readClipboardText","delta","firstBeforeText","adjustSelection","firstAfterText","firstLineFirstNonWhitespace","indexedSelections","extensionBefore","extensionAfter","snippetSelection","setStartPosition","setEndPosition","snippetLineLeadingWhitespace","getOffsetAt","getValueLengthInRange","identifier","major","minor","_logInfo","insert","createEditsAndSnippets","undoEdits","_move","revealPositionInCenterIfOutsideViewport","oneSelection","isSelectionWithinPlaceholders","allPossibleSelections","possibleSelections","size","containsRange","array","$0f8a140755c3e2c4$var$__awaiter","$0f8a140755c3e2c4$export$1bc6f8c8440b75b9","Visible","DetailsVisible","MultipleSuggestions","MakesTextEdit","isInvalid","score","$bg1XO","FuzzyScore","Default","distance","textLabel","labelLow","sortTextLow","sortText","filterText","editStart","editInsertEnd","editReplaceEnd","spansMultipleLines","resolveCompletionItem","_resolveCache","_isResolved","isResolved","sub","onCancellationRequested","snippetSortOrder","kindFilter","providerFilter","showDeprecated","$0f8a140755c3e2c4$var$_snippetSuggestSupport","$0f8a140755c3e2c4$export$f1ef74409da76c7d","$0f8a140755c3e2c4$export$a0cca07e4c4be47","needsClipboard","durations","sw","$jGMlE","StopWatch","durations1","needsClipboard1","sw1","suggestion","suggestions","tags","defaultRange","insertTextRules","guessNeedsClipboard","insertText","$0f8a140755c3e2c4$export$655bce049a94824c","isDisposable","elapsedProvider","duration","elapsedOverall","elapsed","onCompletionList","CompletionProviderRegistry","orderedGroups","providerGroup","provideCompletionItems","lenBefore","$0f8a140755c3e2c4$export$353df38e894ccf6f","$0f8a140755c3e2c4$export$d1ebcc31ac1d1910","entries","$0f8a140755c3e2c4$var$defaultComparator","$0f8a140755c3e2c4$var$_snippetComparators","snippetConfig","$0f8a140755c3e2c4$var$snippetUpComparator","$0f8a140755c3e2c4$var$snippetDownComparator","triggerCharacter","maxItemsToResolve","isIPosition","$ddK57","ITextModelService","createModelReference","incomplete","$0f8a140755c3e2c4$var$_provider","onlyOnceSuggestions","$0f8a140755c3e2c4$export$774bbe6ce5ed341c","$fb50a0f3ed44be6e$var$__decorate","$fb50a0f3ed44be6e$var$__param","$fb50a0f3ed44be6e$var$_defaultOptions","undoStopBefore","undoStopAfter","SnippetController2","_logService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","_hasNextTabstop","HasNextTabstop","HasPrevTabstop","_hasPrevTabstop","_session","_doInsert","pushStackElement","getAlternativeVersionId","_updateState","onDidChangeCursorSelection","_handleChoice","_currentChoice","first","option","finish","$fb50a0f3ed44be6e$export$84ffae057a773356","$kUvKL","ILogService","$fb50a0f3ed44be6e$var$CommandCtor","ctrl","$bcb0f4cc687f9d67$var$__decorate","$bcb0f4cc687f9d67$var$__param","$bcb0f4cc687f9d67$export$8c7e63adc9d126ed","topScore","preselect","$bcb0f4cc687f9d67$export$f3ad761b544cca58","memorize","toJSON","_seq","lineSuffix","select","indexPreselect","indexRecency","seq","peek","touch","completionKindFromString","_trie","TernarySearchTree","forStrings","getWordUntilPosition","findSubstr","SuggestMemoryService","_configService","_persistSoon","_saveState","_withStrategy","overrideIdentifier","_strategy","ctor","_strategyCtors","scope","_storagePrefix","fromJSON","$jXUcW","IConfigurationService","$baf40061140ca853$var$__decorate","$baf40061140ca853$var$__param","SuggestAlternatives","_index","_ckOtherSuggestions","OtherSuggestions","_listener","_acceptNext","_ignore","acceptNext","newIndex","additionalTextEdits","_moveIndex","$570285d270f712fd$export$973ce1943ee53f11","leadingLineContent","characterCountDelta","$570285d270f712fd$export$6be0861311bd3fcc","lineContext","wordDistance","snippetSuggestions","_snippetCompareFn","_compareCompletionItems","_items","_column","_wordDistance","_refilterKind","_lineContext","_compareCompletionItemsSnippetsUp","_compareCompletionItemsSnippetsDown","_filteredItems","_ensureCachedState","allProvider","_providerInfo","adopt","except","stats","_stats","_createCachedState","labelLengths","leadingLineContent1","characterCountDelta1","wordLow","scoreFn","filterGraceful","fuzzyScore","fuzzyScoreGracefulAggressive","wordLen","wordPos","filterTextLow","compareIgnoreCase","anyScore","pLabelLen","quickSelect","$2311334d77ba4e75$var$__awaiter","$2311334d77ba4e75$export$4f43aaf70fb0c0e2","_bracketsLeftYield","counts","_maxRounds","bracket","_bracketsRightYield","isOpen","closing","innerBracket","outerBracket","_addBracketLeading","startLine","aboveLine","column1","$b0f9e40bb02cb47d$var$__awaiter","localityBonus","$b0f9e40bb02cb47d$export$a539eb378be1d5a1","$2311334d77ba4e75$exports","BracketSelectionRangeProvider","provideSelectionRanges","wordRanges","computeWordRanges","wordUntilPos","wordLines","isFalsyOrEmpty","binarySearch","bestWordRange","blockDistance","$7685fc1fbaf0651c$var$__decorate","$7685fc1fbaf0651c$var$__param","auto","shy","leadingWord","model1","tokenizeIfCheap","$7685fc1fbaf0651c$var$shouldPreventQuickSuggest","configurationService","$7685fc1fbaf0651c$var$shouldPreventSuggestOnTriggerCharacters","SuggestModel","_editorWorkerService","_clipboardService","_telemetryService","_toDispose","_quickSuggestDelay","_triggerCharacterListener","_triggerQuickSuggest","_completionDisposables","_onDidCancel","_onDidTrigger","_onDidSuggest","onDidCancel","onDidTrigger","onDidSuggest","_telemetryGate","_updateTriggerCharacters","_updateQuickSuggest","_updateActiveSuggestSession","editorIsComposing","onDidCompositionStart","onDidCompositionEnd","_refilterCompletionItems","supportsByTriggerCharacter","triggerCharacters","$0f8a140755c3e2c4$exports","getSnippetSuggestSupport","$7685fc1fbaf0651c$export$973ce1943ee53f11","shouldAutoTrigger","lastChar","isLowSurrogate","isHighSurrogate","supports","_completionModel","checkTriggerCharacter","_requestToken","prevSelection","_currentSelection","snippetsPreventQuickSuggestions","$fb50a0f3ed44be6e$exports","isInSnippet","model2","quickSuggestions","tokenType","getStandardTokenType","findTokenIndexAtOffset","strings","ctx","_onNewContext","onlyFrom","auto1","suggestCtx","CancellationTokenSource","itemKind","itemKindFilter","_createSuggestFilter","$b0f9e40bb02cb47d$exports","WordDistance","provideSuggestionItems","CompletionOptions","completions1","wordDistance1","$7685fc1fbaf0651c$var$__awaiter","cmpFn","getSuggestionComparator","ctx1","_reportDurationsTelemetry","debug","suggestOptions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showUsers","showIssues","inactiveProvider","oldLineContext","isFrozen","$241LK","IEditorWorkerService","$15122f65f611acec$export$81e2343ade07f778","$15122f65f611acec$export$829d340a9542c830","$15122f65f611acec$export$1f114fddd93353ce","$15122f65f611acec$export$b175e8250e7ce04e","$15122f65f611acec$export$77718e369b153454","$15122f65f611acec$export$d2883e7b4f812476","$15122f65f611acec$export$d52aa0d894c6cbd4","$15122f65f611acec$export$cb58a1d31f472e2a","$15122f65f611acec$export$1834edcd206ac3d6","$15122f65f611acec$export$f41e9f6087f473b4","$15122f65f611acec$export$24cb24bebb80f5d0","$15122f65f611acec$export$6762422e2eebb8e2","$15122f65f611acec$export$f0a5039a10983147","$15122f65f611acec$export$8b3abd946a772cce","$15122f65f611acec$export$4578a91d48abf9c7","$15122f65f611acec$export$27f10bfc8c839777","$15122f65f611acec$export$92f840a8d8a54f3e","$15122f65f611acec$export$217e2eb55069daf5","$15122f65f611acec$export$542191987bbc02ea","$15122f65f611acec$export$b5b646007cf33ceb","$15122f65f611acec$export$ca96eea958c148e3","$15122f65f611acec$export$f86ef716417e4fca","$15122f65f611acec$export$4e22c6e80dc76fe5","$15122f65f611acec$export$b5b312a99166fff1","$15122f65f611acec$export$653ed87126d93fa7","$15122f65f611acec$export$92d57af817e48257","$15122f65f611acec$export$612121a648a403d2","$15122f65f611acec$export$c3c128965c880b0a","$15122f65f611acec$export$af7cfbd38ad32f9c","$15122f65f611acec$export$301dde2c54d312a6","$15122f65f611acec$export$863537bd84db068d","$15122f65f611acec$export$e968b5d2fd0fd235","$15122f65f611acec$export$3cf5368907612652","symbolIconArrayColor","symbolArray","symbolIconBooleanColor","symbolBoolean","symbolIconClassColor","symbolClass","symbolIconMethodColor","symbolMethod","symbolIconColorColor","symbolColor","symbolIconConstantColor","symbolConstant","symbolIconConstructorColor","symbolConstructor","symbolIconEnumeratorColor","symbolValue","symbolEnum","symbolIconEnumeratorMemberColor","symbolEnumMember","symbolIconEventColor","symbolEvent","symbolIconFieldColor","symbolField","symbolIconFileColor","symbolFile","symbolIconFolderColor","symbolFolder","symbolIconFunctionColor","symbolFunction","symbolIconInterfaceColor","symbolInterface","symbolIconKeyColor","symbolKey","symbolIconKeywordColor","symbolKeyword","symbolIconModuleColor","symbolModule","outlineNamespaceColor","symbolNamespace","symbolIconNullColor","symbolNull","symbolIconNumberColor","symbolNumber","symbolIconObjectColor","symbolObject","symbolIconOperatorColor","symbolOperator","symbolIconPackageColor","symbolPackage","symbolIconPropertyColor","symbolProperty","symbolIconReferenceColor","symbolReference","symbolIconSnippetColor","symbolSnippet","symbolIconStringColor","symbolString","symbolIconStructColor","symbolStruct","symbolIconTextColor","symbolText","symbolIconTypeParameterColor","symbolTypeParameter","symbolIconUnitColor","symbolUnit","symbolIconVariableColor","symbolVariable","$6c2300764ce790f2$export$75e44c779155653b","currentSize","_onDidWillResize","onDidWillResize","_onDidResize","onDidResize","_sashListener","_size","Dimension","_minSize","_maxSize","_eastSash","getVerticalSashLeft","_westSash","_northSash","orthogonalEdge","OrthogonalEdge","North","_southSash","South","orthogonalStartSash","orthogonalEndSash","deltaY","deltaX","dimension","currentX","startX","east","west","north","south","onDidReset","_preferredSize","enableSashes","minHeight","minWidth","maxHeight","maxWidth","newSize","clearSashHoverState","maxSize","minSize","preferredSize","$b273879ab1f49024$var$__decorate","$b273879ab1f49024$var$__param","$b273879ab1f49024$export$264e6e3c605b16f0","_onDidChangeContents","onDidChangeContents","_renderDisposeable","_borderWidth","_markdownRenderer","_body","_header","_close","_type","_docs","_configureFont","fontWeight","fontSizePx","lineHeightPx","verticalPadding","horizontalPadding","explainMode","md","commitCharacters","_debugDisplayName","cappedDetail","clientHeight","userSelect","onmousedown","onclick","clearContents","scrollDown","much","scrollUp","scrollBottom","pageDown","topLeftNow","_added","_resizable","deltaTop","deltaLeft","_topLeft","sizeNow","updateTopLeft","_userSize","_anchorBox","_placeAtAnchor","sessionEnded","anchorBox","bodyBox","getClientArea","maxSizeTop","maxSizeBottom","alignAtTop","alignEast","bottom","borderHeight","topLeft","$56a2300f7aff6c2a$var$__decorate","$56a2300f7aff6c2a$var$__param","MenuEntryActionViewItem","$56a2300f7aff6c2a$var$StatusBarViewItem","symbolPrintEnter","_leftActions","_rightActions","_menuDisposables","suggestWidgetStatusbarMenu","right","renderMenu","$d1f0525db0e665b3$export$f69a64c2ff8e24f8","FileKind","$c868701101f83351$export$39df4d594d545c0a","modelService","modeService","fileKind","classes","ROOT_FOLDER","FOLDER","DataUri","parseMetaData","META_DATA_LABEL","$c868701101f83351$export$fa5d24454f1f0ba9","basenameOrAuthority","dotSegments","detectedModeId","$c868701101f83351$export$591b32459bd79449","mime","META_DATA_MIME","getModeId","$l3lA9","PLAINTEXT_MODE_ID","getModeIdByFilepathOrFirstLine","$ca6868dc8137b0c4$var$__decorate","$ca6868dc8137b0c4$var$__param","$ca6868dc8137b0c4$var$_a","$ca6868dc8137b0c4$export$93acf61eaf873d2f","$cHE1p","registerIcon","chevronRight","ColorExtractor","_regexStrict","_regexRelaxed","_modelService","_onDidToggleDetails","onDidToggleDetails","templateId","root","colorspan","main","iconContainer","supportHighlights","supportIcons","iconLabel","parametersLabel","qualifierLabel","detailsLabel","readMore","asCSSSelector","$ca6868dc8137b0c4$export$29a2dbc0a5bdbcb9","configureFont","labelEscapeNewLines","createMatches","$ca6868dc8137b0c4$var$_completionItemColor","extract","getFileIconTheme","hasFileIcons","labelClasses","FILE","detailClasses","labelOptions","extraClasses","hasFolderIcons","flatten","completionKindToCssClass","setLabel","$ca6868dc8137b0c4$var$stripNewLines","showInlineDetails","$b273879ab1f49024$exports","canExpandCompletionItem","templateData","$ca6868dc8137b0c4$export$f70abe1ebdd56ba9","$751d3b4d52703042$var$__decorate","$751d3b4d52703042$var$__param","$751d3b4d52703042$export$9c6ed30aa38d1259","editorWidgetBackground","$751d3b4d52703042$export$89900e7a3bba95de","editorWidgetBorder","$751d3b4d52703042$export$4857c090d1c88f1e","editorForeground","$751d3b4d52703042$export$64c55f4972ad88d5","quickInputListFocusForeground","$751d3b4d52703042$export$7f79daa9dfd50ad3","quickInputListFocusIconForeground","$751d3b4d52703042$export$6f094281d825e546","quickInputListFocusBackground","$751d3b4d52703042$export$9ddb601c5f0a29c1","listHighlightForeground","$751d3b4d52703042$export$4812d7375c1636c9","listFocusHighlightForeground","_service","getEditorType","is","SuggestWidget","_isAuto","_ignoreFocusEvents","_forceRenderingAbove","_explainMode","_showTimeout","_onDidSelect","_onDidFocus","_onDidHide","_onDidShow","onDidSelect","onDidFocus","onDidHide","onDidShow","_onDetailsKeydown","onDetailsKeyDown","$751d3b4d52703042$export$1730776dedee3e6f","$751d3b4d52703042$var$PersistedWidgetSize","persistedSize","persistHeight","persistWidth","state1","lockPreference","ResizeState","_persistedSize","_resize","itemHeight","defaultSize","threshold","abs","unlockPreference","_messageElement","_listElement","details","SuggestDetailsWidget","_details","SuggestDetailsOverlay","applyIconStyle","showIcons","toggleDetails","_list","$daINf","List","alwaysConsumeMouseWheel","_isDetailsVisible","docs","getWidgetRole","_status","$56a2300f7aff6c2a$exports","SuggestWidgetStatus","applyStatusBarStyle","showStatusBar","_onThemeChange","_onCursorSelectionChanged","_ctxSuggestWidgetVisible","Context","_ctxSuggestWidgetMultipleSuggestions","_onEditorMouseDown","_loadingTimeout","browserEvent","_select","_onListSelection","indexes","completionModel","_detailsBorderColor","focusBorderColor","focusBorder","_detailsFocusBorderColor","_currentSuggestionDetails","_focusedItem","activeDescendant","$751d3b4d52703042$var$__awaiter","loading","setFocus","showDetails","setAriaOptions","$ca6868dc8137b0c4$exports","getAriaId","_cappedHeight","LOADING_MESSAGE","_show","NO_SUGGESTIONS_MESSAGE","_setState","selectionIndex","isAuto","visibleCount","_layout","focusNextPage","focusNext","focusLast","pageUp","focusPreviousPage","focusPrevious","focusFirst","getFocus","_ctxSuggestWidgetDetailsVisible","_setDetailsVisible","getFocusedElements","renderLoading","renderItem","_positionDetails","resetPersistedSize","dim","minPersistedHeight","setPreference","preferredWidth","typicalHalfwidthCharacterWidth","fullHeight","statusBarHeight","contentHeight","editorBox","cursorBox","cursorBottom","maxHeightBelow","availableSpaceAbove","maxHeightAbove","capped","wanted","forceRenderingAboveRequiredSpace","placeAtAnchor","$9ndaw","clamp","getBoolean","_preferenceLocked","_hidden","_preference","afterRender","_afterRender","matchHighlight","matchHighlightFocus","selectedForeground","selectedIconForeground","linkHover","textLinkActiveForeground","$0fd279fdc0329275$var$__decorate","$0fd279fdc0329275$var$__param","WordContextKey","_ckAtEnd","AtEnd","_configListener","_selectionListener","_enabled","checkForWordEnd","$00432ff85ac8b554$export$a35d4c30d77bc313","accept","_onItem","getFocusedItem","onWillType","_active","acceptCharacters","$fnX0T","CharacterSet","$f80f400af62371c9$export$98c4fd05e04f1d86","suggestModel","_lastOvertyped","_empty","selectionsLength","willOvertype","_maxSelectionLength","$bfcd644b74e5dd22$var$__decorate","$bfcd644b74e5dd22$var$__param","_marker","SuggestController","_memoryService","_lineSuffix","$7685fc1fbaf0651c$exports","insertMode","ctxInsertMode","IdleValue","_insertSuggestion","commitCharacterController","ctxMakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","toKeybinding","$j5w2Q","SimpleKeybinding","isMacintosh","isModifierKey","_alternatives","$baf40061140ca853$exports","$0fd279fdc0329275$exports","showTriggered","$bfcd644b74e5dd22$var$LineSuffix","showSuggestions","hideWidget","onDidBlurEditorWidget","$bfcd644b74e5dd22$var$_sticky","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","modelVersionNow","tasks","getOverwriteInfo","restoreRelativeVerticalPositionOfCursor","onDidChangeContent","change","thisPosition","oldFlags","didType","typeListener","applied","trace","docListener","$bfcd644b74e5dd22$export$69e6e16147b23e86","undo","toggleMode","positionNow","fallback","makesTextEdit","keepAlternativeSuggestions","alternativeOverwriteConfig","acceptNextSuggestion","acceptPrevSuggestion","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","forceRenderingAbove","isInitialized","stopForceRenderingAbove","$bcb0f4cc687f9d67$exports","ISuggestMemoryService","hasCompletionItemProvider","$bfcd644b74e5dd22$export$a67f317e65bf305c","triggerSuggest","$bfcd644b74e5dd22$var$weight","$bfcd644b74e5dd22$var$SuggestCommand","acceptSelectedSuggestion","KeybindingsRegistry","registerKeybindingRule","InsertMode","isEqualTo","registerCommandAlias","cancelSuggestWidget","isObject","$4c104485ba280895$export$a157f964ef2e3e7c","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentInlineCompletion","setInactiveDelayed","onKeyDown","onKeyUp","suggestController","$bfcd644b74e5dd22$exports","isBoundToSuggestWidget","bindToSuggestWidget","selectedItemAsInlineCompletion","newActive","newInlineCompletion","getInlineCompletion","shouldFire","suggestController1","focusedItem","$4c104485ba280895$var$suggestionToInlineCompletion","$9de95a7caa0d1761$var$__awaiter","suggestionInlineCompletionSource","updateCacheSoon","updateCache","newGhostText","$9de95a7caa0d1761$var$sum","isSuggestionPreviewEnabled","isActive","$631f7d78165f9ab5$exports","UpdateOperation","suggestWidgetState","originalInlineCompletion","$9de95a7caa0d1761$export$bb218c0790edf9a4","augmentedCompletion","finalCompletion","previewMode","inlineCompletionPreviewLength","str1","str2","valueToReplace","$9de95a7caa0d1761$var$lengthOfLongestCommonPrefix","commonSuffixLength","$9de95a7caa0d1761$var$lengthOfLongestCommonSuffix","$4a3c96cc344a2572$export$e43518f9704ab273","object","$d71a1929d9bdc33f$var$__decorate","$d71a1929d9bdc33f$var$__param","hasCachedGhostText","currentModelRef","targetModel","cachedGhostText","$d71a1929d9bdc33f$export$7f173ac6ca689f7c","sharedCache","$d71a1929d9bdc33f$export$16d6098ac397859d","suggestWidgetAdapterModel","$9de95a7caa0d1761$exports","SuggestWidgetPreviewModel","inlineCompletionsModel","InlineCompletionsModel","updateModel","setTargetModel","setActive","hoverRange","activeInlineCompletionsModel","commitCurrentSuggestion","SynchronizedInlineCompletionsCache","clearAndLeak","$71a7e9b722cdea0f$var$__decorate","$71a7e9b722cdea0f$var$__param","GhostTextController","activeController","updateModelController","activeModel","inlineSuggestOptions","triggeredExplicitly","$71a7e9b722cdea0f$export$620dd178cdc780e4","shouldShowHoverAt","triggerInlineCompletion","commitInlineCompletion","hideInlineCompletion","$71a7e9b722cdea0f$var$__awaiter","$71a7e9b722cdea0f$export$db179af5c12607a7","inlineSuggestionVisible","inlineSuggestionHasIndentation","inlineCompletionSuggestsIndentation","instantiationService1","contextKeyService1","contextKeys","$71a7e9b722cdea0f$var$GhostTextContextKeys","$d71a1929d9bdc33f$exports","GhostTextModel","$3f1cf551c486d6d2$exports","GhostTextWidget","inlineCompletionVisible","updateContextKeys","inIndentation","getLineIndentColumn","suggestionStartsWithWs","$71a7e9b722cdea0f$export$ff8949e1d73bc0b6","$71a7e9b722cdea0f$var$GhostTextCommand","$1PC7S","tabMovesFocus","$71a7e9b722cdea0f$export$3b90ed5c9c39da53","$71a7e9b722cdea0f$export$e7d1983ec9cadc87","$dfd4cced32e6b3d7$var$__decorate","$dfd4cced32e6b3d7$var$__param","isValidForHoverAnchor","controller1","$71a7e9b722cdea0f$exports","viewZoneData","positionBefore","mightBeForeignElement","$dfd4cced32e6b3d7$export$d624202ffb8f4528","isScreenReaderOptimized","renderScreenReaderText","InlineCompletionsActions","previousAction","ShowNextInlineSuggestionAction","nextAction","ShowPreviousInlineSuggestionAction","commitInlineSuggestionAction","hasMultipleSuggestions","hasMore","inlineSuggestionAvailable","replaceChildren","$d4758a943a4ddafa$export$3ae0e8973df6411c","color1","availableColorPresentations","presentationIndex","_onColorFlushed","onColorFlushed","_onDidChangeColor","onDidChangeColor","_onDidChangePresentation","onDidChangePresentation","originalColor","_colorPresentations","presentation","colorPresentations","selectNextColorPresentation","flushColor","guessColorPresentation","$26478c97d0bedd96$var$$","$26478c97d0bedd96$export$b0be74936fde19cf","pickedColorNode","colorBox","editorHoverBackground","isLighter","$26478c97d0bedd96$export$ef9992d5d7adf902","pixelRatio","saturationBox","$26478c97d0bedd96$var$SaturationBox","onDidSaturationValueChange","opacityStrip","$26478c97d0bedd96$var$OpacityStrip","onDidOpacityChange","hueStrip","$26478c97d0bedd96$var$HueStrip","onDidHueChange","hsva","HSVA","h","container2","pixelRatio1","canvas","addDisposableGenericMouseDownListner","origin","onDidChangePosition","offsetX","offsetY","posy","mouseUpListener","addDisposableGenericMouseUpListner","stopMonitoring","paintSelection","offsetWidth","offsetHeight","paint","saturatedColor","getContext","whiteGradient","createLinearGradient","addColorStop","blackGradient","rect","fillStyle","fill","isMonitoring","$26478c97d0bedd96$var$Strip","container3","model3","overlay","slider","updateSliderPosition","onDidChangeTop","container4","model4","opaque","container5","model5","$26478c97d0bedd96$export$cd51be3452d696a5","$WXZiT","Widget","container6","model6","pixelRatio2","themeService1","onDidChangeZoomLevel","$43ca902fc1fbde29$var$__decorate","$43ca902fc1fbde29$var$__param","forceShowAtRange","$43ca902fc1fbde29$export$8281fba23b864a56","$85a39dea8b549bb3$exports","colorDetector","getColorData","$43ca902fc1fbde29$var$__awaiter","$43ca902fc1fbde29$export$a7b4b72c1507badd","colorHover","textEdits","textEdit","_getTrackedRange","trackedRange","forceMoveMarkers","updateColorPresentations","setColorPicker","$c7d2e3ef7380320b$var$__decorate","$c7d2e3ef7380320b$var$__param","_hasContent","$c7d2e3ef7380320b$var$$","hasContent","actionsElement","_participants","_result","_anchor","setAnchor","getLineDecorations","isWholeLine","$c7d2e3ef7380320b$var$__awaiter","$c7d2e3ef7380320b$var$ModesContentComputer","_getLineDecorations","allResults","_computeAsync","participant","isFromSynchronousComputation","createLoadingMessage","loadingMessage","ModesContentHoverWidget","_hoverVisibleKey","$43ca902fc1fbde29$exports","ColorHoverParticipant","$dfd4cced32e6b3d7$exports","InlineCompletionsHoverParticipant","$b5d8f6ca3d573319$exports","MarkerHoverParticipant","_isVisible","_stoleFocus","_renderDisposable","onkeydown","_showAtPosition","_showAtRange","_messages","_lastAnchor","_highlightDecorations","_isChangingDecorations","_shouldFocus","_hoverOperation","_withResult","FOCUS","_colorPicker","BLUR","_renderMessages","targetType","isAfterLines","horizontalDistanceToText","epsilon","anchorCandidates","suggestHoverAnchor","_shouldShowAt","showAtRange","_startShowingAt","getElementsByClassName","_updateFont","clearResult","startShowingAtRange","filteredMessages","isColorPickerVisible","complete","messages","renderColumn","highlightRange","createDocumentFragment","$c7d2e3ef7380320b$var$EditorHoverStatusBar","participantHoverParts","renderHoverParts","hasChildNodes","_showAt","_updateContents","_DECORATION_OPTIONS","$8974b528f4ac442e$export$2e6a1489981a354c","_showAtLineNumber","updateFont","showAt","editorLayout","topForLineNumber","editorScrollTop","getScrollTop","glyphMarginLeft","glyphMarginWidth","updateContents","$17071a44e04d2f2e$var$MarginComputer","_lineNumber","setLineNumber","toHoverMessage","glyphMarginClassName","glyphMarginHoverMessage","$17071a44e04d2f2e$export$2cc1e799d2b38527","openerService","NullOpenerService","_renderDisposeables","_lastLineNumber","onModelDecorationsChanged","startShowingAt","$293c92e4b8d4e5a1$var$__awaiter","isProviderFirst","_rangeCallback","_range","targetSelectionRange","ariaMessage","getPreview","$293c92e4b8d4e5a1$export$5176dc2eaa49239d","_modelReference","textEditorModel","beforeRange","afterRange","inside","before","_previews","ResourceMap","ref","textModelResolverService","_onDidChangeReferenceRange","onDidChangeReferenceRange","_links","providersFirst","$293c92e4b8d4e5a1$export$6bc4f63abc79cecc","_compareReferences","extUri","current","$293c92e4b8d4e5a1$export$4ddaaf83f2285591","oneRef","$293c92e4b8d4e5a1$export$4013f11d3f3efa91","reference","parent2","childCount","groupCount","prefixLen","offsetDist","nearest","$48da36ffe0d94a59$var$__awaiter","$48da36ffe0d94a59$var$getLocationLinks","registry","provide","$48da36ffe0d94a59$export$3215d5e306b1d931","DefinitionProviderRegistry","provideDefinition","$48da36ffe0d94a59$export$7cf2e45ab44aefc7","DeclarationProviderRegistry","provideDeclaration","$48da36ffe0d94a59$export$d1a6eb7f4127dfb5","ImplementationProviderRegistry","provideImplementation","$48da36ffe0d94a59$export$48fcf6d3b16ff831","TypeDefinitionProviderRegistry","provideTypeDefinition","compact","ReferenceProviderRegistry","provideReferences","includeDeclaration","resultWithoutDeclaration","$48da36ffe0d94a59$var$_sortedAndDeduped","$293c92e4b8d4e5a1$exports","ReferencesModel","rawLinks","modelLinks","$c4678144f14143b0$var$__decorate","$c4678144f14143b0$var$__param","$c4678144f14143b0$export$fc182e2999442e8d","_resolverService","FileReferences","$c4678144f14143b0$export$dbfd4be771ae7ae8","getHeight","getTemplateId","$c4678144f14143b0$export$884eedab5e44ab2d","$c4678144f14143b0$export$37eba2268f02bd40","OneReference","$c4678144f14143b0$export$6da001418758a72a","_uriLabel","$hE242","IconLabel","badge","$4oW9G","CountBadge","$lbh1g","attachBadgeStyler","setCount","setTitleFormat","FileReferencesRenderer","renderTemplate","$c4678144f14143b0$var$FileReferencesTemplate","renderElement","filterData","$c4678144f14143b0$export$b4a01395692df0b4","$c4678144f14143b0$var$OneReferenceTemplate","$khxUX","HighlightedLabel","isDefault","disposeTemplate","$c4678144f14143b0$export$26c4c0246e45485e","getWidgetAriaLabel","$11d62be1e2297367$var$__decorate","$11d62be1e2297367$var$__param","_decorationIgnoreSet","_callOnModelChange","_onModelChanged","removeDecorations","onDidChangeDecorations","_onDecorationChanged","newDecorationsActualIndex","oneReference","$11d62be1e2297367$var$DecorationsManager","DecorationOptions","toRemove","ratio","$l4s3b","WorkbenchAsyncDataTree","_defaultTreeKeyboardSupport","layoutData","_textModelResolverService","_peekViewService","_undoRedoService","_disposeOnNewModel","_onDidSelectReference","onDidSelectReference","_dim","addExclusiveWidget","setModel","_preview","_previewNotAvailableMessage","_tree","_previewModelReference","_splitView","peekViewBorder","peekViewTitleBackground","revealRangeInCenterIfOutsideViewport","focusOnReferenceTree","domFocus","focusOnPreviewEditor","_getFocusedReference","ctrlKey","metaKey","containerElement","_messageContainer","$70szw","SplitView","_previewContainer","verticalScrollbarSize","useShadows","verticalHasArrows","horizontalHasArrows","DEFAULT_CREATION_OPTIONS","_treeContainer","treeOptions","keyboardSupport","accessibilityProvider","$c4678144f14143b0$exports","AccessibilityProvider","StringRepresentationProvider","selectionNavigation","listBackground","peekViewResultsBackground","dispatchEvent","$11d62be1e2297367$var$ReferencesTree","Delegate","OneReferenceRenderer","DataSource","addView","Sizing","Distribute","maximumSize","MAX_VALUE","onDidSashChange","getViewSize","onDidOpen","sideBySide","onEvent","editorOptions","_revealReference","newModel","_onNewModel","_decorationsManager","rerender","setInput","revealParent","$11d62be1e2297367$var$__awaiter","_revealedReference","inMemory","getInput","reveal","expand","scrollType","sel","revealRangeInCenter","IPeekViewService","$l0Cvd","IUndoRedoService","findMatchHighlightColor","peekViewResultsMatchHighlight","referenceHighlightColor","peekViewEditorMatchHighlight","referenceHighlightBorder","peekViewEditorMatchHighlightBorder","hcOutline","activeContrastBorder","resultsBackground","resultsMatchForeground","peekViewResultsMatchForeground","resultsFileForeground","peekViewResultsFileForeground","resultsSelectedBackground","peekViewResultsSelectionBackground","resultsSelectedForeground","peekViewResultsSelectionForeground","$c121f5c82f921f0c$var$__decorate","$c121f5c82f921f0c$var$__param","ReferencesController","_requestIdPool","_ignoreModelChangeEvent","$c121f5c82f921f0c$export$cebf9c0ca03ee425","_referenceSearchVisible","modelPromise","peekMode","closeWidget","_peekMode","storageKey","$11d62be1e2297367$exports","LayoutData","ReferenceWidget","openReference","requestId","setMetaTitle","nearestReference","isPreviewEditorFocused","$c121f5c82f921f0c$var$__awaiter","currentPosition","nextOrPreviousReference","previewEditorFocus","_gotoReference","editorFocus","revealReference","openedEditor","toggleWidget","$c121f5c82f921f0c$var$withController","fn","outerEditor","getOuterEditor","$c121f5c82f921f0c$export$d14faaa1a6756bc","registerCommandAndKeybindingRule","KeyChord","or","not","WorkbenchListFocusContextKey","lastFocusedList","$2006ce66dc8736bc$var$__decorate","$2006ce66dc8736bc$var$__param","_currentModel","_currentIdx","_ignoreEditorChange","_ctxHasSymbols","$2006ce66dc8736bc$export$a33c3258e72337c5","_currentState","_currentMessage","refModel","_showMessage","editorState","$2006ce66dc8736bc$var$EditorState","getActiveCodeEditor","seenUri","seenPosition","combinedDisposable","status","$2006ce66dc8736bc$export$bc1d707775f3c367","$2006ce66dc8736bc$var$SymbolNavigationService","revealNext","editorService","onCodeEditorRemove","_onDidRemoveEditor","onCodeEditorAdd","_onDidAddEditor","listCodeEditors","$318abd4e22d9dfd7$var$__awaiter","$318abd4e22d9dfd7$var$_a","$318abd4e22d9dfd7$var$_b","$318abd4e22d9dfd7$var$_c","$318abd4e22d9dfd7$var$_d","$318abd4e22d9dfd7$var$_e","$318abd4e22d9dfd7$var$_f","$318abd4e22d9dfd7$var$_g","$318abd4e22d9dfd7$var$_h","EditorContextPeek","$318abd4e22d9dfd7$var$_goToActionIds","$318abd4e22d9dfd7$var$registerGoToAction","registerInstantiatedEditorAction","_configuration","symbolNavService","$2006ce66dc8736bc$exports","ISymbolNavigationService","EditorStateCancellationTokenSource","raceCancellation","_getLocationModel","altAction","referenceAt","altActionId","_getAlternativeCommand","referenceCount","muteMessage","_getNoResultFoundMessage","_onResult","gotoLocation","_getGoToPreference","openInPeek","firstReference","targetEditor","_openReference","openToSide","_openInPeek","isLocationLink","modelNow","ids","$c121f5c82f921f0c$exports","$318abd4e22d9dfd7$var$SymbolNavigationAction","$48da36ffe0d94a59$exports","getDefinitionsAtPosition","alternativeDefinitionCommand","multipleDefinitions","isStandalone","GoToDefinitionAction","$318abd4e22d9dfd7$export$7a34275a882b2788","hasDefinitionProvider","isInWalkThroughSnippet","$318abd4e22d9dfd7$var$goToDefinitionKb","OpenDefinitionToSideAction","PeekDefinitionAction","linux","getDeclarationsAtPosition","alternativeDeclarationCommand","multipleDeclarations","GoToDeclarationAction","$318abd4e22d9dfd7$var$DeclarationAction","hasDeclarationProvider","getTypeDefinitionsAtPosition","alternativeTypeDefinitionCommand","multipleTypeDefinitions","GoToTypeDefinitionAction","$318abd4e22d9dfd7$var$TypeDefinitionAction","hasTypeDefinitionProvider","PeekTypeDefinitionAction","getImplementationsAtPosition","alternativeImplementationCommand","multipleImplementations","GoToImplementationAction","$318abd4e22d9dfd7$var$ImplementationAction","hasImplementationProvider","PeekImplementationAction","$318abd4e22d9dfd7$var$ReferencesAction","alternativeReferenceCommand","multipleReferences","hasReferenceProvider","_references","_gotoMultipleBehaviour","constraint","multiple","noResultsMessage","isCodeEditor","accessor1","$318abd4e22d9dfd7$var$GenericGoToLocationAction","control","$3dyHW","getReferencesAtPosition","references1","appendMenuItems","$ff22f8a54b793e84$var$hasModifier","modifier","$ff22f8a54b793e84$export$e9719c57df1ec529","hasTriggerModifier","triggerModifier","hasSideBySideModifier","triggerSideBySideModifier","isNoneOrSingleMouseDown","$ff22f8a54b793e84$export$6ee2fe3b4b3a92ff","source1","opts1","keyCodeIsTriggerKey","keyCode","triggerKey","keyCodeIsSideBySideKey","triggerSideBySideKey","$ff22f8a54b793e84$export$9ba31c8cb84cdbaf","$ff22f8a54b793e84$var$createOptions","multiCursorModifier","$ff22f8a54b793e84$export$f6796705852f924d","_onMouseMoveOrRelevantKeyDown","onMouseMoveOrRelevantKeyDown","_onExecute","onExecute","_onCancel","onCancel","_opts","_lastMouseMoveEvent","_hasTriggerKeyOnMouseDown","_lineNumberOnMouseDown","newOpts","_onEditorMouseMove","onMouseUp","_onEditorMouseUp","_onEditorKeyDown","_onEditorKeyUp","onMouseDrag","_resetHandler","_onDidChangeCursorSelection","scrollLeftChanged","currentLineNumber","$e9857e9caabc7a59$var$__decorate","$e9857e9caabc7a59$var$__param","GotoDefinitionAtPositionEditorContribution","toUnhook","toUnhookForKeyboard","linkDecorations","currentWordAtPosition","previousPromise","linkGesture","keyboardEvent","startFindDefinitionFromMouse","withNullAsUndefined","gotoDefinition","removeLinkDecorations","startFindDefinition","withKey","EditorState","findDefinition","previewValue","getPreviewValue","wordRange","originSelectionRange","rangeToUse","getPreviewRangeBasedOnBrackets","MAX_SOURCE_PREVIEW_LINES","getPreviewRangeBasedOnIndentation","stripIndentationFromPreviewRange","previewRange","minIndent","endIndent","startIndent","ignoreFirstEmpty","currentBracket","lastBracket","nextLineNumber","nextColumn","canPeek","isInPeekEditor","$318abd4e22d9dfd7$exports","DefinitionAction","$e9857e9caabc7a59$export$239f7a1a36e76786","$6897208d09a1bab9$var$__decorate","$6897208d09a1bab9$var$__param","ModesHoverController","_toUnhook","_isMouseDown","_hoverClicked","_glyphWidget","_unhookEvents","_hookEvents","hoverVisible","hideWidgetsEventHandler","_hideWidgets","hoverOpts","_isHoverEnabled","onDidChangeModelDecorations","_onModelDecorationsChanged","_onKeyDown","_onEditorScrollChanged","_e","_isHoverSticky","maybeShowAt","_getOrCreateContentWidget","$c7d2e3ef7380320b$exports","showContentHover","_didChangeConfigurationHandler","$6897208d09a1bab9$export$950763aa65c4524d","$e9857e9caabc7a59$exports","startFindDefinitionFromCursor","$6897208d09a1bab9$var$ShowHoverAction","$6897208d09a1bab9$var$ShowDefinitionPreviewHoverAction","editorHoverHighlightColor","editorHoverHighlight","hoverBackground","hoverBorder","editorHoverBorder","hoverForeground","editorHoverForeground","actionsBackground","editorHoverStatusBarBackground","$2e93df76ac8359b2$export$261d0851d4f29291","hoverController","$6897208d09a1bab9$exports","$dcec98385832e2b8$export$d597884efd4f40e1","selection1","insertSpace1","_insertSpace","_usedEndToken","haystack","needle","needleLength","codeA","codeB","_createOperationsForBlockComment","startToken","endToken","insertSpace","startLineText","endLineText","startTokenIndex","endTokenIndex","startLineAfterStartToken","endLineBeforeEndToken","_createRemoveBlockCommentOperations","_createAddBlockCommentOperations","addTrackedEditOperation","inverseEditOperations","getInverseEditOperations","startTokenEditOperation","endTokenEditOperation","srcRange","deltaColumn","$0014470e97541f03$export$dd3de507458fa652","tabSize1","type1","ignoreEmptyLines1","ignoreFirstLine1","_tabSize","_selectionId","_deltaColumn","_moveEndPositionDown","_ignoreEmptyLines","_ignoreFirstLine","commentStr","commentStrLength","ignoreEmptyLines","ignoreFirstLine","shouldRemoveComments","onlyWhitespaceLines","lineContentStartOffset","firstNonWhitespaceIndex","commentStrOffset","_haystackHasNeedleAtOffset","commentStrEndOffset","supported","_gatherPreflightCommentStrings","_analyzeLines","_createRemoveLineCommentsOperations","_normalizeInsertionPoint","_createAddLineCommentsOperations","trackSelection","startTokenAllowedBeforeColumn","_attemptRemoveBlockComment","_gatherPreflightData","_executeLineComments","_executeBlockComment","getTrackedSelection","afterCommentStr","currentVisibleColumn","isTab","columnSize","minVisibleColumn","$7cc04ff78fb553f7$var$CommentLineAction","modelOptions","commentsOptions","$7cc04ff78fb553f7$var$ToggleCommentLineAction","menuOpts","$7cc04ff78fb553f7$var$AddLineCommentAction","$7cc04ff78fb553f7$var$RemoveLineCommentAction","$7cc04ff78fb553f7$var$BlockCommentAction","$de6edff48d792a2f$var$__decorate","$de6edff48d792a2f$var$__param","ContextMenuController","_contextViewService","onContextMenu","_onContextMenu","onMouseWheel","_contextMenuIsBeingShownCount","view","getContextViewElement","srcElement","shadowRoot","getShadowRoot","hideContextView","hasSelectionAtPosition","_getMenuActions","isSimpleWidget","_doShowContextMenu","addedItems","subActions","isIOS","_keybindingFor","isMenu","customActionViewItem","wasCancelled","IContextViewService","$d35eefdefe44e2c2$var$CursorState","thisLen","equalsSelection","$d35eefdefe44e2c2$var$StackElement","cursorState","$d35eefdefe44e2c2$export$270099f8959609f2","_isCursorUndoRedo","_undoStack","_redoStack","oldSelections","oldModelVersionId","modelVersionId","prevState","getScrollLeft","cursorUndo","_applyState","cursorRedo","stackElement","setScrollPosition","$d35eefdefe44e2c2$export$2bb33a171a72f0ab","$d35eefdefe44e2c2$export$357a5f196248dac2","$d408f57f20befd90$export$2d77c2a29ce6ee73","targetPosition","copy","targetSelection","$b1d803ddf12d9fd6$var$hasTriggerModifier","$b1d803ddf12d9fd6$export$5ba66723926c32ee","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onEditorKeyDown","onEditorKeyUp","onEditorBlur","onDidBlurEditorText","_dndDecorationIds","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","mouseStyle","TRIGGER_KEY_VALUE","_hitContent","_hitMargin","primarySelection","$07b13b987e5f7d75$export$77ee42369f19921","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","_allDecorations","getCount","getFindScope","getFindScopes","scopes","findScopeDecorationId","newStartPosition","setCurrentFindMatch","_getDecorationIndex","getCurrentMatchesPosition","desiredRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","nextMatch","newCurrentDecorationId","matchPosition","lineBeforeEnd","lineBeforeEndMaxColumn","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","approxPixelsPerLine","mergeLinesDelta","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","matchAfterPosition","zIndex","showIfCollapsed","overviewRulerFindMatchForeground","minimapFindMatch","MinimapPosition","Inline","$cb621c06b12f020a$export$d13ad2869d522b09","editorSelection","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","o1","o2","resultOps","previousOp","$4df687dadca20d63$export$6fd4a4ac4a1c8616","containsHyphens","$4df687dadca20d63$var$validateSpecificSpecialCharacter","containsUnderscores","$4df687dadca20d63$var$buildReplaceStringForSpecificSpecialCharacter","containsUppercaseCharacter","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","staticValue","$4bf1b280036d12fd$var$DynamicPiecesReplacePattern","pieces","pieces1","$4bf1b280036d12fd$var$StaticValueReplacePattern","$4bf1b280036d12fd$export$ba92250419b831d2","hasReplacementPatterns","preserveCase","piece","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","remainder","caseOps1","staticValue1","$4bf1b280036d12fd$export$ecb1e55c6ef635aa","_source","_lastCharIndex","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","emitStatic","$4bf1b280036d12fd$export$9f1d0c7f20a5aa40","caseOps2","$4bf1b280036d12fd$var$ReplacePieceBuilder","chCode","nextChCode","emitMatchIndex","matchIndex1","nextNextChCode","$33845422dd31a127$export$8b25206025e28aaf","$33845422dd31a127$export$3b1ee0ca5860cd6c","$33845422dd31a127$export$88cb74dd22fd9364","$33845422dd31a127$export$d065474c35bbc600","$33845422dd31a127$export$91250ca630e7e5d3","$33845422dd31a127$export$643f2c09151233e5","$33845422dd31a127$export$921bd387d50986c9","$33845422dd31a127$export$e905ae9dc09cb4e2","$33845422dd31a127$export$2e58a49a639fc212","StartFindAction","StartFindWithSelection","NextMatchFindAction","PreviousMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","CloseFindWidgetCommand","ToggleCaseSensitiveCommand","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction","$33845422dd31a127$export$15b4c206d8a7ae66","$33845422dd31a127$var$RESEARCH_DELAY","$33845422dd31a127$export$4c88abbaa9e306d","_startSearchingTimer","_updateDecorationsScheduler","research","_ignoreModelContentChanged","isFlush","onFindReplaceStateChange","_onStateChanged","searchScope","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","getFullModelRange","newFindScope","_findMatches","currentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","cursorMoveOnType","_moveToNextMatch","_hasMatches","matchesCount","_cannotFind","_setCurrentFindMatch","matchesPosition","_prevSearchPosition","isUsingLineStops","_moveToPrevMatch","isRecursed","canNavigateBack","nextMatchRange","prevMatchRange","searchRange","_getSearchRange","prevMatch","findPreviousMatch","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_getReplacePattern","fromStaticValue","replacePattern","buildReplaceString","_executeEditorCommand","limitResultCount","searchRanges","replaceAll","_largeReplaceAll","_regularReplaceAll","searchData","$5VSoR","SearchParams","parseSearchRequest","searchRegex","modelText","fullModelRange","resultText","ReplaceCommandThatPreservesSelection","selectAllMatches","$a5b91af42d074baf$var$defaultOpts","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","$a5b91af42d074baf$export$871dbf7ac6c25eac","_onChange","_checked","isChecked","CSSIcon","actionClassName","notFocusable","applyStyles","ev","ignoreGesture","getAttribute","newIsChecked","enable","disable","$13efb8af65cddfc2$var$NLS_CASE_SENSITIVE_CHECKBOX_LABEL","$13efb8af65cddfc2$var$NLS_WHOLE_WORD_CHECKBOX_LABEL","$13efb8af65cddfc2$var$NLS_REGEX_CHECKBOX_LABEL","$13efb8af65cddfc2$export$a2a199185ad6f50a","caseSensitive","appendTitle","$13efb8af65cddfc2$export$a99af3aaffb80076","$13efb8af65cddfc2$export$2c9fbd485d72ad06","opts2","$38d645ef641a8f9f$export$850100d03279d402","_hideSoon","_hide","inputActiveOptionBorderColor","inputActiveOptionForegroundColor","inputActiveOptionBackgroundColor","_keybindingLabelFor","wholeWords","somethingChanged","isRevealed","_revealTemporarily","addDisposableNonBubblingMouseOutListener","_onMouseOut","_onMouseOver","actionId","highlightFindOptions","inputStyles","widgetBackground","widgetForeground","editorWidgetForeground","widgetShadowColor","widgetShadow","hcBorder","$f84c9e0939940eb1$var$effectiveOptionValue","override","$f84c9e0939940eb1$export$e6f50d4dd54a3902","_onFindReplaceStateChange","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegex","_isRegexOverride","_wholeWord","_wholeWordOverride","_matchCase","_matchCaseOverride","_preserveCase","_preserveCaseOverride","_searchScope","_matchesPosition","_matchesCount","_currentMatch","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","currentMatch","changeEvent","updateHistory","loop","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","newSearchScope","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","$c162ea929272d8e2$var$NLS_DEFAULT_LABEL","$c162ea929272d8e2$export$f6c5d0e086bdc5bc","contextViewProvider","_showOptionButtons","fixFocusOnOptionClickEnabled","imeSessionInProgress","_onDidOptionChange","onDidOptionChange","_onMouseDown","_onInput","_onKeyUp","_onCaseSensitiveKeyDown","onCaseSensitiveKeyDown","_onRegexKeyDown","onRegexKeyDown","_lastHighlightFindOptions","validation","inputBackground","inputForeground","inputBorder","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","history","flexibleHeight","flexibleWidth","flexibleMaxHeight","inputBox","$d3BXW","HistoryInputBox","validationOptions","viaKeyboard","paddingRight","activeElement","controls","inputElement","onkeyup","oninput","setFocusInputOnOptionClick","setValue","checkBoxStyles","inputBoxStyles","getCaseSensitive","setCaseSensitive","getWholeWords","setWholeWords","setRegex","focusOnCaseSensitive","clearMessage","hideMessage","$08e964459cfcb413$var$NLS_DEFAULT_LABEL","$08e964459cfcb413$var$NLS_PRESERVE_CASE_LABEL","$08e964459cfcb413$export$f4bca68e0f1209fd","$08e964459cfcb413$export$a144676e90876dfe","cachedOptionsWidth","_onPreserveCaseKeyDown","onPreserveCaseKeyDown","appendPreserveCaseLabel","getPreserveCase","setPreserveCase","focusOnPreserve","newWidth","$2cc0b80822f01476$var$__decorate","$2cc0b80822f01476$var$__param","$2cc0b80822f01476$var$HistoryNavigationForwardsEnablementContext","$2cc0b80822f01476$var$HistoryNavigationBackwardsEnablementContext","$2cc0b80822f01476$var$bindContextScopedWidget","contextKey","$2cc0b80822f01476$var$createWidgetScopedContextKeyService","createScoped","$2cc0b80822f01476$var$getContextScopedWidget","$2cc0b80822f01476$export$e80e7fc7e2e1eefe","scopedContextKeyService","historyNavigationForwardsEnablement","historyNavigationBackwardsEnablement","showFindOptions","$2cc0b80822f01476$export$af63f104a1a591a4","contextViewProvider1","showReplaceOptions","$2cc0b80822f01476$export$a2bc549e77499702","$2cc0b80822f01476$export$a9de88ba31c512da","historyNavigator","$5af0dbef655741f4$var$__awaiter","$5af0dbef655741f4$var$findSelectionIcon","$5af0dbef655741f4$var$findCollapsedIcon","$5af0dbef655741f4$var$findExpandedIcon","chevronDown","$5af0dbef655741f4$export$4d470f20ee9322c9","$5af0dbef655741f4$export$52ccf957742ce1a","$5af0dbef655741f4$export$7999797c1f410735","arrowUp","$5af0dbef655741f4$export$836fa8c70534f008","arrowDown","$5af0dbef655741f4$var$NLS_FIND_INPUT_LABEL","$5af0dbef655741f4$var$NLS_FIND_INPUT_PLACEHOLDER","$5af0dbef655741f4$var$NLS_PREVIOUS_MATCH_BTN_LABEL","$5af0dbef655741f4$var$NLS_NEXT_MATCH_BTN_LABEL","$5af0dbef655741f4$var$NLS_TOGGLE_SELECTION_FIND_TITLE","$5af0dbef655741f4$var$NLS_CLOSE_BTN_LABEL","$5af0dbef655741f4$var$NLS_REPLACE_INPUT_LABEL","$5af0dbef655741f4$var$NLS_REPLACE_INPUT_PLACEHOLDER","$5af0dbef655741f4$var$NLS_REPLACE_BTN_LABEL","$5af0dbef655741f4$var$NLS_REPLACE_ALL_BTN_LABEL","$5af0dbef655741f4$var$NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","$5af0dbef655741f4$var$NLS_MATCHES_COUNT_LIMIT_TITLE","$5af0dbef655741f4$export$809972f6bbad3980","$5af0dbef655741f4$export$5a3ab6b8069a9376","$5af0dbef655741f4$var$FIND_WIDGET_INITIAL_WIDTH","$5af0dbef655741f4$var$PART_WIDTH","$5af0dbef655741f4$var$FIND_INPUT_AREA_WIDTH","$5af0dbef655741f4$var$MAX_MATCHES_COUNT_WIDTH","$5af0dbef655741f4$var$FIND_INPUT_AREA_HEIGHT","$5af0dbef655741f4$var$stopPropagationForMultiLineUpwards","textarea","selectionStart","$5af0dbef655741f4$var$stopPropagationForMultiLineDownwards","selectionEnd","codeEditor","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_ctrlEnterReplaceAllWarningPrompted","$5af0dbef655741f4$var$ctrlEnterReplaceAllWarningPromptedKey","_isReplaceVisible","_updateHistoryDelayer","Delayer","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","updateAccessibilitySupport","addExtraSpaceOnTop","$5af0dbef655741f4$export$ddb61e7583e312b","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","getGlobalBufferTerm","globalBufferTerm","_findInput","trackFocus","_findFocusTracker","_findInputFocused","_updateSearchScope","onDidBlur","_replaceInput","_replaceFocusTracker","_replaceInputFocused","_layoutViewZone","_ignoreChangeEvent","_reveal","getTotalWidth","_tryUpdateHeight","_toggleSelectionFind","showRedOutline","_updateMatchesCount","_delayedUpdateHistory","_updateHistory","addToHistory","firstChild","removeChild","createTextNode","_getAriaLabel","clientWidth","isSelection","_closeBtn","_prevBtn","findInputIsNonEmpty","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","canReplace","isSelectionMultipleLine","layoutOverlayWidget","seedSearchStringFromSelection","startCoords","startLeft","startTop","adjustEditorScrollTop","leftOfFindWidget","getTopLeftOffset","endCoords","focusTheEditor","targetScrollTop","viewZone","_getHeight","setScrollTop","adjustScroll","newHeight","scrollAdjustment","isInDOM","contentWidth","editorWidth","reducedFindWidget","narrowFindWidget","collapsedFindWidget","_resized","findInputWidth","totalheight","totalHeight","$5af0dbef655741f4$var$ctrlKeyMod","insertAtCursor","_sash","$2cc0b80822f01476$exports","ContextScopedFindInput","_onFindInputKeyDown","onDidHeightChange","_onFindInputMouseDown","onTrigger","findPart","$5af0dbef655741f4$export$23e6ff72db94143e","widgetClose","ContextScopedReplaceInput","_onReplaceInputKeyDown","replacePart","replaceActionsContainer","originalWidth","parseFloat","getComputedStyle","currentWidth","addBackgroundColorRule","selector","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","findMatchHighlightBorder","editorFindMatchHighlightBorder","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","$1a50b88876721b05$var$__decorate","$1a50b88876721b05$var$__param","$1a50b88876721b05$var$SEARCH_STRING_MAX_LENGTH","$1a50b88876721b05$export$de5cbc82d68f9df1","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","CommonFindController","_findWidgetVisible","loadQueryState","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","updateSearchScope","setGlobalBufferTerm","isFindInputFocused","getState","ignoreWhenVisible","stateChanges","selectionSearchString","currentSelections","$1a50b88876721b05$var$__awaiter","globalFindClipboard","readFindText","writeFindText","$1a50b88876721b05$export$942aab87df2c03","clipboardService1","_findOptionsWidget","_createFindWidget","focusReplaceInput","focusFindInput","$1a50b88876721b05$export$5258ca8b5063fbe4","registerMultiEditorAction","MultiEditorAction","_run","$1a50b88876721b05$export$bcd90166b712a56a","setSearchString","$1a50b88876721b05$export$e599865336ca69be","$1a50b88876721b05$export$c5e56e30241fe78f","currentSelection","findInputFocused","shouldAnimate","$1a50b88876721b05$export$87dc48cae38f9e9c","$1a50b88876721b05$export$bdafdafdbb77ca0","$1a50b88876721b05$export$8f306a713da663ab","$1a50b88876721b05$export$7d7c54ed599974e2","$1a50b88876721b05$export$ad355e20d7b85c88","$1a50b88876721b05$var$FindCommand","win","$c8253068d11bd47f$export$3e67012dba56c5d7","$c8253068d11bd47f$export$cd21b7b591a5fca5","$c8253068d11bd47f$var$MASK_INDENT","$c8253068d11bd47f$export$b66fa21e19d1ed85","startIndexes","endIndexes","types","_startIndexes","_endIndexes","_collapseStates","Uint32Array","_types","_parentsComputed","ensureParentIndices","parentIndexes","isInsideLast","getStartLineNumber","getEndLineNumber","parentIndex","getType","hasTypes","isCollapsed","arrayIndex","bit","setCollapsed","setCollapsedAllOfType","toRegion","$c8253068d11bd47f$export$1b8ef6daae02ccc1","getParentIndex","high","mid","findRange","regionIndex","containedBy","containsLine","$1b4c9f1b26d70f89$export$817831822d62585d","decorationProvider","_updateEventEmitter","_textModel","_decorationProvider","_regions","_editorDecorationIds","_isInitialized","regions","toggleCollapseState","toggledRegions","r2","processed","dirtyRegionEndLine","lastHiddenLine","updateDecorationsUntil","getDecorationOption","region","editorDecorationId","newCollapseState","collapseStateChanged","newRegions","blockedLineNumers","newEditorDecorations","initRange","blockedLineNumber","isBlocked","decorationRange","nextCollapsed","collapsedIndex","decRange","collapsedStartLineNumber","collapsedRanges","toToogle","getRegionAtLine","levelStack","$1b4c9f1b26d70f89$export$7ffd28588c15a7f3","foldingModel","levels","lineNumbers","regionsInside","getRegionsInside","doCollapse","toToggle","$1b4c9f1b26d70f89$export$8454f44f04ce35da","getAllRegionsAtLine","$1b4c9f1b26d70f89$export$3d952ea619d9cc89","foldLevel","blockedLineNumbers","filteredRegions","filteredRegion","$1b4c9f1b26d70f89$export$cf1d0f18ddaacc0a","regExp","$1b4c9f1b26d70f89$export$bf491a24d6b4f8f1","$1b4c9f1b26d70f89$export$dbc108b821b60576","foldingRegion","parentFoldingIdx","$1b4c9f1b26d70f89$export$8c199948e052b7e","minLineNumber","expectedParentIndex","$1b4c9f1b26d70f89$export$8bb1e6a817617368","$e0a22fd38340967e$export$befe30d66e9d90a7","$e0a22fd38340967e$export$371828234d346455","$e0a22fd38340967e$export$600d9a46c9aff73b","autoHideFoldingControls","showFoldingHighlights","isHidden","HIDDEN_RANGE_DECORATION","COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION","COLLAPSED_VISUAL_DECORATION","EXPANDED_AUTO_HIDE_VISUAL_DECORATION","EXPANDED_VISUAL_DECORATION","oldDecorations","afterContentClassName","firstLineDecorationClassName","$9fdda087f84e76e7$export$336f42945d9951d5","_foldingModel","_foldingModelListener","updateHiddenRanges","_hiddenRanges","hiddenRanges","updateHiddenAreas","newHiddenAreas","lastCollapsedStart","lastCollapsedEnd","applyHiddenRanges","applyMemento","hasRanges","$9fdda087f84e76e7$var$findRange","hasChanges","lastRange","adjustLine","$9fdda087f84e76e7$var$isInside","adjustedStartLine","adjustedEndLine","$ee613f02e2c5a55a$var$MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT","$ee613f02e2c5a55a$export$32f344938f91c1d0","$ee613f02e2c5a55a$export$8310967ef394fbab","compute","cancelationToken","foldingRules","getFoldingRules","offSide","markers","$ee613f02e2c5a55a$export$de3a23e7886a0fb2","$ee613f02e2c5a55a$export$de6a05fa847adb9d","foldingRangesLimit","_indentOccurrences","_length","_foldingRangesLimit","insertFirst","toIndentRanges","maxIndent","foldingRangesLimit1","previousRegions","endAbove","previous","$e8017ef2f1afb9cc$var$MAX_FOLDING_REGIONS","$e8017ef2f1afb9cc$var$foldingContext","$e8017ef2f1afb9cc$export$905e18d1938b800e","$e8017ef2f1afb9cc$export$f0beb96d06896719","handleFoldingRangesChange","limit","$e8017ef2f1afb9cc$var$collectSyntaxRanges","$e8017ef2f1afb9cc$export$6e1ac799bb52131b","providers1","rangeData","provideFoldingRanges","nLines","rank","$e8017ef2f1afb9cc$export$de6a05fa847adb9d","_nestingLevels","_nestingLevelCounts","nestingLevel","maxLevel","limit1","sorted","d1","d2","diff","$bbff69e55ccc8bef$export$38337a40008a67d2","$bbff69e55ccc8bef$export$9cce0dc804c461d","initialRanges","onTimeout","timeoutTime","toDecorationRange","getLineLength","timeout","foldingRangeData","$b7d154cac5863e33$var$__decorate","$b7d154cac5863e33$var$__param","FoldingController","localToDispose","_useFoldingProviders","_unfoldOnClickAfterEndOfLine","_restoringViewState","_currentModelHasFoldedImports","_foldingImportsByDefault","hiddenRangeModel","rangeProvider","foldingRegionPromise","foldingStateMemento","foldingModelPromise","updateScheduler","cursorChangedScheduler","mouseDownInfo","foldingDecorationProvider","foldingEnabled","onModelContentChanged","onFoldingStrategyChanged","getMemento","collapsedRegions","foldedImports","restoreViewState","isTooLargeForTokenization","getFoldingModel","foldingModel1","revealCursor","onCursorPositionChanged","onEditorMouseDown","onEditorMouseUp","FoldingRangeProviderRegistry","foldingProviders","getRangeProvider","FoldingRangeKind","Imports","selectionLineNumbers","adjustSelections","setHiddenAreas","offsetLeftInGutter","offsetLeft","iconClicked","otherRegion","toMaybeToggle","recursive","$b7d154cac5863e33$export$f48ee02e56422569","foldingController","reportTelemetry","invoke","selectionLines","getSelectedLines","$b7d154cac5863e33$var$foldingArgumentsConstraint","isUndefined","foldingArgs","isNumber","direction","isString","$b7d154cac5863e33$var$FoldingAction","$b7d154cac5863e33$var$CONTEXT_FOLDING_ENABLED","_foldingController","getLineNumbers","$1b4c9f1b26d70f89$export$83d9da8117ea5665","_args","$1b4c9f1b26d70f89$export$8791ee845b96345e","selectedLines","Comment","Region","getFoldingLevel","$b7d154cac5863e33$var$FoldLevelAction","ID_PREFIX","$b7d154cac5863e33$var$GotoParentFoldAction","$b7d154cac5863e33$var$GotoPreviousFoldAction","$b7d154cac5863e33$var$GotoNextFoldAction","$b7d154cac5863e33$var$UnfoldAction","$b7d154cac5863e33$var$UnFoldRecursivelyAction","$b7d154cac5863e33$var$FoldAction","$b7d154cac5863e33$var$FoldRecursivelyAction","$b7d154cac5863e33$var$FoldAllAction","$b7d154cac5863e33$var$UnfoldAllAction","$b7d154cac5863e33$var$FoldAllBlockCommentsAction","$b7d154cac5863e33$var$FoldAllRegionsAction","$b7d154cac5863e33$var$UnfoldAllRegionsAction","$b7d154cac5863e33$var$FoldAllRegionsExceptAction","$b7d154cac5863e33$var$UnfoldAllRegionsExceptAction","$b7d154cac5863e33$var$ToggleFoldAction","$b7d154cac5863e33$export$a76a5b6868218b3a","editorSelectionBackground","$b7d154cac5863e33$export$66e5a5a20f035b48","iconForeground","$885f0d95011ed3c6$var$EditorFontZoomIn","$9lV24","EditorZoom","setZoomLevel","getZoomLevel","$885f0d95011ed3c6$var$EditorFontZoomOut","$885f0d95011ed3c6$var$EditorFontZoomReset","$f2b2623ededcb977$var$__decorate","$f2b2623ededcb977$var$__param","_workerService","OnTypeFormattingEditProviderRegistry","_callOnModel","autoFormatTriggerCharacters","triggerChars","lastCharCode","unbind","getOnTypeFormattingEdits","getFormattingOptions","$404BT","FormattingEdit","execute","$11rV9","alertFormattingEdits","$f2b2623ededcb977$var$FormatOnType","DocumentRangeFormattingEditProviderRegistry","onDidPaste","formatDocumentRangesWithSelectedProvider","notInCompositeEditor","hasDocumentFormattingProvider","formatDocumentWithSelectedProvider","hasDocumentSelectionFormattingProvider","$f2b2623ededcb977$var$__awaiter","$f2b2623ededcb977$var$FormatOnPaste","$f2b2623ededcb977$var$FormatDocumentAction","$f2b2623ededcb977$var$FormatSelectionAction","$fc78627bd5ac853a$export$b6118fb22805ab7","candidateId","$fc78627bd5ac853a$export$1549495ef8615ed1","$fc78627bd5ac853a$export$d065f2b97556c88f","$fc78627bd5ac853a$export$a2bb76a30b60ab46","_groups","_keys","for","_requests","promiseCnt","_create","_requestDurations","DocumentSymbolProviderRegistry","id2","findId","displayName","provideDocumentSymbols","_makeOutlineElement","empty","newProvider","_compact","childInfo","$5bccf","Iterable","getTopLevelSymbols","roots","child1","asListOfDocumentSymbols","_flattenDocumentSymbols","overrideContainerLabel","containerName","selectionRange","_counter","_hash","$aac4125feeafa2d3$var$__awaiter","flat","$aac4125feeafa2d3$export$3683f83959f96c84","$7eb2a91fbbfebde8$export$220c6b735169bdc6","spacesCnt","$7eb2a91fbbfebde8$export$41a94d243985c1ff","tabsCnt","$683348b406fd60d7$export$4249d19cb88a2a5a","inheritedIndent","indentationRules","getIndentationRules","unIndentedLinePattern","indentSize","shiftIndent","indentation","$6AEA3","ShiftCommand","unshiftIndent","globalIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","decreaseIndentPattern","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","adjustedLineContent1","$683348b406fd60d7$export$a24fc0204e5b8e8e","modelOpts","$683348b406fd60d7$export$a91a0205d188a0ff","$683348b406fd60d7$export$aa1dddc3c31864bd","$683348b406fd60d7$export$f891785a5dfc6562","$683348b406fd60d7$export$fbf8df59b02b6c70","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","placeHolder","activeItem","$683348b406fd60d7$export$d1f0c119e5a3d1af","$683348b406fd60d7$export$f225789dbe6e2ae7","$683348b406fd60d7$export$a44330f003d72ca9","detectIndentation","$683348b406fd60d7$export$ea97b68a6b217c0e","$683348b406fd60d7$export$e28b9b1fa0c986ea","editOperations","$683348b406fd60d7$export$2ef0066567001b37","initialSelection","_initialSelection","_edits","edit1","selectionIsSet","$683348b406fd60d7$export$26709b45c815a201","callOnDispose","callOnModel","isCheapToTokenize","autoIndent","insertSpaces1","indentConverter","shouldIgnoreLine","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","newIndent","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","originalIndent","cmd","forceTokenization","nonWhitespaceColumn","firstNonWhitespaceTokenIndex","$683348b406fd60d7$var$getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","lastIndentationColumn","originalIndentationRange","originalIndentation","newIndentation","selectionId","$dec46a6677e5c749$var$__decorate","$dec46a6677e5c749$var$__param","$dec46a6677e5c749$export$6b21487fa6b57e2f","$dec46a6677e5c749$var$__awaiter","InlayHintsProviderRegistry","provideInlayHints","itemsInRange","hint","datas","_sessionDisposables","_getInlayHintsDelays","_removeAllDecorations","visibleRanges","getVisibleRangesPlusViewportAboveBelow","_updateHintsDecorators","providerListener","onDidChangeInlayHints","hintsData","editorInlayHintBackground","fontColor","editorInlayHintForeground","newDecorationsTypeIds","newDecorationsData","hints","$dec46a6677e5c749$var$MAX_DECORATORS","whitespaceBefore","whitespaceAfter","marginBefore","marginAfter","$dec46a6677e5c749$var$fixSpace","borderRadius","_decorationsTypeIds","editorFontSize","$dec46a6677e5c749$export$65ded08ec616fde","$b0d7054a7e544d97$export$2222c60f05bbeebc","editRange","originalSelection","_editRange","_originalSelection","$30d2f884948de4c2$var$__decorate","$30d2f884948de4c2$var$__param","InPlaceReplaceController","editorWorkerService","up","currentRequest","canNavigateValueSet","modelURI","navigateValueSet","DECORATION","decorationRemover","$30d2f884948de4c2$var$InPlaceReplaceController","$30d2f884948de4c2$var$InPlaceReplaceUp","$30d2f884948de4c2$var$InPlaceReplaceDown","$33933bd38cbe29f6$export$3ae9293178a697d1","cursors","_cursors","$33933bd38cbe29f6$export$78a41d29a9bbfb99","cursors1","rLen","cursorIndex","cursorLen","maxLineColumn","minEditColumn","lastNonWhitespaceIndex","fromColumn","$f28c1309ac6b822a$export$6ee1ef8a1f46bd43","isCopyingDown","noop","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","sourceLines","sourceText","$3116fe3af78e308d$export$a4507748301b35a5","isMovingDown","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","buildIndentConverter","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","indentOfMovingLine","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","oldIndent","parseEnterResult","enter","enterPrefix","indentAction","$6uHmX","IndentAction","Indent","IndentOutdent","Outdent","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","getEnterAction","validPrecedingLine","oneLineAbove","previousLineText","languageAtSelectionStart","getIndentRulesSupport","$4e76f20aaf604dd6$export$1d1dd349625f668d","descending1","descending","_COLLATOR","Intl","Collator","$4e76f20aaf604dd6$var$sortLines","$4e76f20aaf604dd6$var$getSortData","selection2","descending2","linesToSort","getCollator","$bc37405d11d5141d$var$AbstractCopyLinesAction","down","$bc37405d11d5141d$var$CopyLinesUpAction","MenubarSelectionMenu","$bc37405d11d5141d$var$CopyLinesDownAction","$bc37405d11d5141d$export$c33a19779e136441","insertSelection","ReplaceCommandThatSelectsText","$bc37405d11d5141d$var$AbstractMoveLinesAction","down1","$bc37405d11d5141d$var$MoveLinesUpAction","$bc37405d11d5141d$var$MoveLinesDownAction","$bc37405d11d5141d$export$a98016c756b03729","canRun","$bc37405d11d5141d$export$58f65c5a335cf11e","$bc37405d11d5141d$export$8d7a278e2715e517","$bc37405d11d5141d$export$b2e30811789716e5","$bc37405d11d5141d$export$383e26edf04ba42c","_getLinesToRemove","linesDeleted","mergedOperations","previousOperation","$bc37405d11d5141d$export$b979e62dba4079d0","viewModel","_getViewModel","$cCJpb","TypeOperations","cursorConfig","$bc37405d11d5141d$var$OutdentLinesAction","runEditorCommand","$bc37405d11d5141d$export$59fdf363ad8cf052","lineInsertBefore","$bc37405d11d5141d$export$58e456bcf1af40e","lineInsertAfter","$bc37405d11d5141d$export$4e8cb3faacd95fe0","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","nextRange","endCursorState","_getEndCursorState","$bc37405d11d5141d$export$8f11cda26b829cfe","endPrimaryCursor","deletedLines","endCursor","newStartLine","deleteFromLine","deleteFromColumn","$bc37405d11d5141d$export$9c405282d0460146","$bc37405d11d5141d$export$1fd6139849068091","reducedSelections","lastSelection","previousValue","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","lineTextWithoutIndent","deleteSelection","resultSelection","$bc37405d11d5141d$export$b73fed4918dccb30","$bc37405d11d5141d$export$51c7ec2789846c2b","wordSeparators","_modifyText","$bc37405d11d5141d$export$1e6903c854b09807","$bc37405d11d5141d$export$c961fe1812e5970a","$bc37405d11d5141d$export$4fcac9920b12fb8f","excludedChars","startUpperCase","currentChar","$bc37405d11d5141d$var$BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","isSupported","$bc37405d11d5141d$export$905c2f43d0d0a5e","regExp1","regExp2","$44a42f27ff109587$var$__decorate","$44a42f27ff109587$var$__param","LinkedEditingContribution","_debounceDuration","_visibleContextKey","$44a42f27ff109587$export$cdc8f7ac7354bb3","_currentDecorations","_languageWordPattern","_currentWordPattern","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestModelVersion","reinitialize","forceRefresh","LinkedEditingRangeProviderRegistry","clearRanges","getWordDefinition","onDidChangeLanguageConfiguration","triggerRangeUpdate","rangeUpdateScheduler","updateRanges","triggerRangeSync","rangeSyncScheduler","_syncRanges","referenceRange","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","_currentRequestPosition","$44a42f27ff109587$var$__awaiter","response","$44a42f27ff109587$var$getLinkedEditingRanges","wordPattern","foundReferenceRange","$44a42f27ff109587$var$DECORATION_CLASS_NAME","hasRenameProvider","runCommand","$44a42f27ff109587$export$be68fd3977acff6b","$44a42f27ff109587$var$LinkedEditingCommand","orderedByScore","provideLinkedEditingRanges","$44a42f27ff109587$export$54fcefa33e0f0cda","editorLinkedEditingBackgroundColor","$21385e7138c3a0eb$var$__awaiter","_link","resolveLink","tuples","newLinks","$21385e7138c3a0eb$export$454c04d8f1b76440","$21385e7138c3a0eb$export$ca0457eeaa51340a","_union","oldLinks","oldIndex","oldLen","oldLink","newLink","$21385e7138c3a0eb$export$42c2c6c220442c","LinkProviderRegistry","provider2","provideLinks","lists","list1","$894bf83e54ca5813$var$__decorate","$894bf83e54ca5813$var$__param","$894bf83e54ca5813$var$getHoverMessage","useMetaKey","executeCmd","nativeLabel","collapseOnReplaceEdit","$894bf83e54ca5813$var$LinkOccurrence","_getOptions","$894bf83e54ca5813$var$decoration","general","activate","LinkDetector","listenersToRemove","clickLinkGesture","cleanUpActiveLinkDecoration","onModelModeChanged","activeLinksList","currentOccurrences","activeLinkDecorationId","$894bf83e54ca5813$var$__awaiter","$21385e7138c3a0eb$exports","getLinks","computePromise","decorationId1","occurance","getLinkOccurrence","occurrence","deactivate","openLinkOccurrence","fromUserGesture","link2","modelUri","parsedUri","originalFSPath","relativePath","joinPath","allowContributedOpeners","messageOrError","currentOccurrence","linkDetector","$894bf83e54ca5813$export$1d534606c9ae12d1","$894bf83e54ca5813$var$OpenLinkAction","$f9582f7afea75b42$var$announceCursorChange","previousCursorState","cursorDiff","cs","pcs","cursorPositions","viewState","$f9582f7afea75b42$export$a60e6fe8fd56d05b","useLogicalLine","logicalLine","readOnly","getCursorStates","setCursorStates","$5nhkc","CursorMoveCommands","addCursorUp","revealTopMostCursor","$f9582f7afea75b42$export$67af8c1d05cf45aa","addCursorDown","revealBottomMostCursor","$f9582f7afea75b42$var$InsertCursorAtEndOfEachLineSelected","getCursorsForSelection","currentLineMaxColumn","$f9582f7afea75b42$var$InsertCursorAtEndOfLineSelected","$f9582f7afea75b42$var$InsertCursorAtTopOfLineSelected","$f9582f7afea75b42$export$70ef8e935195842d","selections1","revealScrollType","$f9582f7afea75b42$export$708fa463677641d3","findController1","isDisconnectedFromFindController","searchText","findController","findState","wholeWord1","matchCase1","isDisconnectedFromFindController1","searchText1","currentMatch1","addSelectionToNextFindMatch","allSelections","moveSelectionToNextFindMatch","lastAddedSelection","addSelectionToPreviousFindMatch","previousMatch","_getPreviousMatch","moveSelectionToPreviousFindMatch","selectAll","$f9582f7afea75b42$export$3233d1122bc10fa9","_sessionDispose","_ignoreSelectionChange","_endSession","_beginSessionIfNeeded","_setSelections","_expandEmptyToWord","_applySessionResult","getSession","$f9582f7afea75b42$var$modelRangesContainSameText","resultingSelections","states","inSelection","$f9582f7afea75b42$export$a8ebc4941c5f77ad","multiCursorController","findController2","$1a50b88876721b05$exports","$f9582f7afea75b42$export$61e53c495685f055","$f9582f7afea75b42$export$88054d813dfca22d","$f9582f7afea75b42$export$8f497aeeaa88c599","$f9582f7afea75b42$export$52d5c13a295b5a5b","$f9582f7afea75b42$export$558e7c1d14f011f7","$f9582f7afea75b42$export$ad3702dd6e1b4fb","contextMenuOpts","$f9582f7afea75b42$var$SelectionHighlighterState","$f9582f7afea75b42$export$88c73484bef7a578","_createState","matchCase2","findStateSearchString","mySearchString","allMatches","selections2","lenJ","cmp","areIntersecting","hasFindOccurrences","_SELECTION_HIGHLIGHT","_SELECTION_HIGHLIGHT_OVERVIEW","selectedText","$f9582f7afea75b42$var$getValueInRange","$f459cfbf06e9e171$var$__awaiter","SignatureHelpProviderRegistry","provideSignatureHelp","SignatureHelpTriggerKind","Invoke","isRetrigger","$db4b42b592d33b73$var$__awaiter","Pending","previouslyActiveHints","Active","$db4b42b592d33b73$var$ParameterHintState","delay1","$db4b42b592d33b73$export$dfcb5f2875b14f25","DEFAULT_DELAY","_onChangedHints","onChangedHints","triggerOnType","_pendingTriggers","_lastSignatureHelpResult","retriggerChars","triggerId","throttledDelayer","onModelContentChange","onEditorConfigurationChange","doTrigger","signatures","activeSignature","cycle","updateActiveSignature","activeSignatureHelp","getLastActiveHints","$db4b42b592d33b73$var$mergeTriggerContexts","triggerContext","$f459cfbf06e9e171$exports","isTriggered","signatureHelpTriggerCharacters","ch1","signatureHelpRetriggerCharacters","lastCharIndex","triggerCharCode","TriggerCharacter","ContentChange","$44222ca1395c76e3$var$__decorate","$44222ca1395c76e3$var$__param","$44222ca1395c76e3$var$$","chevronUp","ParameterHintsWidget","renderDisposeables","announcedLabel","markdownRenderer","$db4b42b592d33b73$exports","ParameterHintsModel","keyVisible","MultipleSignatures","newParameterHints","wrapper","$44222ca1395c76e3$var$parameterHintsPreviousIcon","overloads","$44222ca1395c76e3$var$parameterHintsNextIcon","scrollbar","signature","domNodes","updateMaxHeight","createParameterHintDOMNodes","keyMultipleSignatures","hasParameters","activeParameterIndex","activeParameter","renderParameters","renderMarkdownDocs","hasDocs","param","labelToAnnounce","assertIsDefined","getParameterLabelOffsets","beforeSpan","paramSpan","afterSpan","paramIdx","$09bcec31ae71a3ac$var$__decorate","$09bcec31ae71a3ac$var$__param","ParameterHintsController","$44222ca1395c76e3$exports","hasSignatureHelpProvider","$09bcec31ae71a3ac$var$ParameterHintsController","$09bcec31ae71a3ac$export$43115826e1ddb15a","$09bcec31ae71a3ac$var$weight","$09bcec31ae71a3ac$var$ParameterHintsCommand","$3ebbd801e40e9d80$var$__decorate","$3ebbd801e40e9d80$var$__param","_acceptKeybindings","$3ebbd801e40e9d80$export$f30e27d37f1a2463","_updateStyles","_input","boxShadow","borderStyle","cancelInput","acceptInput","wantsPreview","_currentAcceptInput","_currentCancelInput","supportPreview","newName","disposeOnDone","revealLineInCenterIfOutsideViewport","setSelectionRange","$dac57012d3c12c90$var$__decorate","$dac57012d3c12c90$var$__param","_providerRenameIdx","RenameProviderRegistry","hasProvider","_providers","rejects","resolveRenameLocation","rejectReason","$dac57012d3c12c90$var$__awaiter","_provideRenameEdits","provideRenameEdits","$dac57012d3c12c90$export$a8efddd6831a5199","skeleton","$dac57012d3c12c90$var$RenameSkeleton","loc","RenameController","_bulkEditService","_dispoableStore","_cts","resolveLocationOperation","hasPreviewHandler","inputFieldResult","_renameInputField","renameResult","ResourceEdit","convert","showPreview","quotableLabel","ariaSummary","renameOperation","acceptRenameInput","$jGC6q","ITextResourceConfigurationService","$dac57012d3c12c90$var$RenameController","$dac57012d3c12c90$export$e39e542f74f8d72","$dac57012d3c12c90$var$RenameCommand","$3ebbd801e40e9d80$exports","CONTEXT_RENAME_INPUT_VISIBLE","cancelRenameInput","as","$4BMNl","Extensions","registerConfiguration","$a719fd3054d6ecaa$export$25d319f8602c6458","_addInWordRanges","_addWordRanges","_addWhitespaceLine","lastCh","isLowerAsciiLetter","isUpperAsciiLetter","getLineLastNonWhitespaceColumn","$d282f154c2039679$var$__awaiter","$d282f154c2039679$var$SelectionRanges","$d282f154c2039679$var$SmartSelectController","SelectionRangeRegistry","$d282f154c2039679$export$faf59da8742346ab","ranges1","ranges2","_ignoreSelection","forward","$d282f154c2039679$var$AbstractSmartSelect","work","allProviderRanges","allRawRanges","oneProviderRanges","oneRawRanges","oneRanges","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","rangeNoWhitespace","rangeFull","$d282f154c2039679$var$GrowSelectionAction","$d282f154c2039679$var$ShrinkSelectionAction","$cbe8041aa2019ea4$var$ForceRetokenizeAction","resetTokenization","log","$290438c863b0e5f5$export$b98205eee1642f49","$ea9Vy","TabFocus","getTabFocusMode","setTabFocusMode","$7bd3761dbcdf235f$var$__decorate","$7bd3761dbcdf235f$var$__param","$7bd3761dbcdf235f$var$ignoreUnusualLineTerminators","$7bd3761dbcdf235f$var$writeIgnoreState","setModelProperty","$7bd3761dbcdf235f$var$readIgnoreState","getModelProperty","_dialogService","_config","_checkForUnusualLineTerminators","isUndoing","$7bd3761dbcdf235f$var$__awaiter","removeUnusualLineTerminators","confirm","primaryButton","secondaryButton","$dxpEE","IDialogService","$666c522e465e34a6$var$__decorate","$666c522e465e34a6$var$__param","_tokenizeViewport","_tokenizeViewportNow","_outstandingRequests","_cancelAll","DocumentRangeSemanticTokensProviderRegistry","affectsConfiguration","$7eQiF","SEMANTIC_HIGHLIGHTING_SETTING_ID","req","isSemanticColoringEnabled","hasSomeSemanticTokens","setSemanticTokens","_requestRange","styling","requestVersionId","provideDocumentRangeSemanticTokens","_removeOutstandingRequest","$1155ab4b21c8c8d4$var$__decorate","$1155ab4b21c8c8d4$var$__param","$1155ab4b21c8c8d4$var$editorWordHighlight","$1155ab4b21c8c8d4$var$editorWordHighlightStrong","$1155ab4b21c8c8d4$var$editorWordHighlightBorder","$1155ab4b21c8c8d4$var$editorWordHighlightStrongBorder","$1155ab4b21c8c8d4$var$overviewRulerWordHighlightForeground","$1155ab4b21c8c8d4$var$overviewRulerWordHighlightStrongForeground","$1155ab4b21c8c8d4$var$ctxHasWordHighlights","$1155ab4b21c8c8d4$export$d0893903319c2985","DocumentHighlightProviderRegistry","provideDocumentHighlights","_wordRange","_getCurrentWordRange","_compute","wordSeparators1","currentWordRange","requestIsValid","$1155ab4b21c8c8d4$var$OccurenceAtPositionRequest","wordSeparators2","DocumentHighlightKind","Text","currentSelectionIsEmpty","$1155ab4b21c8c8d4$var$computeOccurencesAtPosition","selection3","wordSeparators3","$1155ab4b21c8c8d4$var$SemanticOccurenceAtPositionRequest","workerRequestTokenId","workerRequestCompleted","workerRequestValue","lastCursorPositionChangeTime","renderDecorationsTimer","_hasWordHighlights","_ignorePositionChangeEvent","occurrencesHighlight","_onPositionChanged","_stopAll","workerRequest","hasDecorations","_getSortedHighlights","highlights","dest","_getWord","workerRequestIsValid","_beginRenderDecorations","currentTime","minimumRenderTime","renderDecorations","$1155ab4b21c8c8d4$var$WordHighlighter","_getDecorationOptions","Write","_WRITE_OPTIONS","_TEXT_OPTIONS","_REGULAR_OPTIONS","WordHighlighterContribution","wordHighlighter","createWordHighlighterIfPossible","saveViewState","moveNext","moveBack","_isNext","$1155ab4b21c8c8d4$var$WordHighlighterContribution","$1155ab4b21c8c8d4$var$WordHighlightNavigationAction","$1155ab4b21c8c8d4$var$NextWordHighlightAction","$1155ab4b21c8c8d4$var$PrevWordHighlightAction","$1155ab4b21c8c8d4$var$TriggerWordHighlightAction","selectionHighlight","editorSelectionHighlight","wordHighlight","wordHighlightStrong","selectionHighlightBorder","editorSelectionHighlightBorder","wordHighlightBorder","$7a1ec60533b7eee4$export$39b457c50cc5f3ae","_inSelectionMode","inSelectionMode","_wordNavigationType","wordNavigationType","$7d7af","getMapForWordSeparators","inPosition","outPosition","_moveTo","CursorState","fromModelSelection","to","$7a1ec60533b7eee4$export$bafba5a126a4bac4","$0k3gh","WordOperations","moveWordLeft","$7a1ec60533b7eee4$export$699daced12b7253a","moveWordRight","$7a1ec60533b7eee4$export$1bb9de0fc6f3aa28","$7a1ec60533b7eee4$export$4918b28070810e92","$7a1ec60533b7eee4$export$328aed536b44f034","$gHMGT","CONTEXT_ACCESSIBILITY_MODE_ENABLED","$47FTM","IsWindowsContext","negate","$7a1ec60533b7eee4$export$5a37c3a7504a42b5","$7a1ec60533b7eee4$export$b63c9769dc29f2ae","$7a1ec60533b7eee4$export$f22f7085e755fb5e","$7a1ec60533b7eee4$export$31cb4001e24de538","EditorOptions","defaultValue","$7a1ec60533b7eee4$export$ff67cd13d1274f5f","$7a1ec60533b7eee4$export$df888a9479c52469","$7a1ec60533b7eee4$export$423ba2c272016a2a","$7a1ec60533b7eee4$export$5303121770d6c67c","$7a1ec60533b7eee4$export$5af596b0a0622fd","$7a1ec60533b7eee4$export$5d0b373bf600d629","_a3","$7a1ec60533b7eee4$export$6e17a3d0d0f7a332","$7a1ec60533b7eee4$export$1455fb60c7dd950f","$7a1ec60533b7eee4$export$14ab7f0ed3d21abd","$7a1ec60533b7eee4$export$b30eba960ff236d4","_whitespaceHeuristics","whitespaceHeuristics","autoClosingBrackets","autoClosingQuotes","autoClosingPairs","getAutoClosingPairs","deleteRange","_delete","autoClosingDelete","autoClosedCharacters","getCursorAutoClosedCharacters","$7a1ec60533b7eee4$export$79b91b07e7067ba7","deleteWordLeft","$7a1ec60533b7eee4$export$d23d43aa4b55fc64","deleteWordRight","$7a1ec60533b7eee4$export$e7ed2c5280548e79","$7a1ec60533b7eee4$export$4173d1ed9ab04ddb","$7a1ec60533b7eee4$export$b540ca66ac1cc47c","$7a1ec60533b7eee4$export$998d096baa7be6ca","$7a1ec60533b7eee4$export$86c2c3de3807c65e","$7a1ec60533b7eee4$export$6fa1f7b5714b1c04","$7a1ec60533b7eee4$export$481216c444c9510a","deleteInsideWord","$238fd659de88533e$export$418e54ed3eba53a8","WordPartOperations","deleteWordPartLeft","$238fd659de88533e$export$395083a5b6597fb2","deleteWordPartRight","$238fd659de88533e$export$efb58078b50a9b4a","moveWordPartLeft","$238fd659de88533e$export$242b79214b49682e","$238fd659de88533e$export$2b53e7d2445fefe2","$238fd659de88533e$export$b5dea97a07732002","moveWordPartRight","$238fd659de88533e$export$9ba1cec362dd4a74","$238fd659de88533e$export$593db84e4b907fe8","$a84f76ac936e0e1d$var$__decorate","$a84f76ac936e0e1d$var$__param","AccessibilityHelpController","$a84f76ac936e0e1d$var$AccessibilityHelpWidget","$a84f76ac936e0e1d$var$getSelectionLabel","charactersSelected","$8kcHc","AccessibilityHelpNLS","singleSelectionRange","singleSelection","multiSelectionRange","multiSelection","noSelection","AccessibilityHelpWidget","_isVisibleKey","$a84f76ac936e0e1d$var$CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE","$daqgQ","createFastDomNode","setClassName","setDisplay","_contentDomNode","_buildContent","openingDocs","accessibilityHelpUrl","onblur","noKbMsg","readonlyDiffEditor","editableDiffEditor","readonlyEditor","editableEditor","changeConfigToOnMac","changeConfigToOnWinLinux","turnOnMessage","auto_on","_descriptionForCommand","tabFocusModeOnMsg","tabFocusModeOnMsgNoKb","tabFocusModeOffMsg","tabFocusModeOffMsgNoKb","openDocMac","openDocWinLinux","outroMsg","renderFormattedText","WIDTH","HEIGHT","setWidth","w","setHeight","setTop","setLeft","showAccessibilityHelpAction","$a84f76ac936e0e1d$var$AccessibilityHelpController","$a84f76ac936e0e1d$var$ShowAccessibilityHelpAction","$a84f76ac936e0e1d$var$AccessibilityHelpCommand","$703dd1f20e3c9b94$export$aa56b4274f5c3d30","shouldHaveWidget","$703dd1f20e3c9b94$var$ShowKeyboardWidget","$57845bcdccfed6d3$var$__decorate","$57845bcdccfed6d3$var$__param","InspectTokensController","standaloneColorService","$57845bcdccfed6d3$var$InspectTokensWidget","$hb34b","IStandaloneThemeService","launch","$57845bcdccfed6d3$var$renderTokenText","charIndex","tokenizationSupport","languageIdentifier","tokenize2","hasEOL","deltaOffset","$ekJPZ","nullTokenize2","modeService1","_ID","_getTokensAtLine","token1Index","tokens1","tokens2","token2Index","tokenStartIndex","tokenEndIndex","_decodeMetadata","_tokenTypeToString","_fontStyleToString","fontStyle","formatHex","colorMap","getColorMap","TokenMetadata","getLanguageId","getTokenType","getForeground","getBackground","tokenizationResult1","_tokenizationSupport","tokenize","stateBeforeLine","tokenizationResult2","startState","endState","getInitialState","$57845bcdccfed6d3$var$InspectTokensController","$57845bcdccfed6d3$var$InspectTokens","$b96d12e823683646$var$__decorate","$b96d12e823683646$var$__param","HelpQuickAccessProvider","$hNE6T","Registry","$3tbJg","Quickaccess","picker","onDidAccept","quickAccess","prefix","preserveValue","onDidChangeValue","providerDescriptor","PREFIX","editorProviders","globalProviders","getQuickAccessProviders","providerA","providerB","helpEntry","helpEntries","needsEditor","registerQuickAccessProvider","$b96d12e823683646$exports","QuickHelpNLS","helpQuickAccessActionLabel","$888b13b93e46ba0c$export$bfba3c5ba7fed8bd","rangeHighlightDecorationId","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","pickerDisposable","doProvide","onDidActiveTextEditorControlChange","activeTextEditorControl","canProvideWithTextEditor","getCodeEditor","lastKnownEditorViewState","clearDecorations","provideWithTextEditor","provideWithoutTextEditor","preserveFocus","isDiffEditor","modified","deleteDecorations","overviewRulerDecorationId","rangeHighlightId","$11ea7c74baa737a7$export$431149c2906a340a","selectedItems","isValidLineNumber","toRange","keyMods","inBackground","updatePickerAndEditor","parsePosition","getPickLabel","addDecorations","renderType","numbers","endLine","isValidColumn","positionCandidate","$5dd485e9fd9d5146$var$__decorate","$5dd485e9fd9d5146$var$__param","$5dd485e9fd9d5146$export$9bd71a977f9810bf","GoToLineNLS","gotoLineActionLabel","$5e7b4f504d768b73$var$NO_SCORE2","$5e7b4f504d768b73$export$4a032fdd0f400dd","patternStart","wordStart","preparedQuery","$5e7b4f504d768b73$var$doScoreFuzzy2Multiple","$5e7b4f504d768b73$var$doScoreFuzzy2Single","totalScore","totalMatches","queryPiece","$5e7b4f504d768b73$var$normalizeMatches","originalLowercase","sortedMatches","matchA","matchB","normalizedMatches","$5e7b4f504d768b73$var$matchOverlaps","$5e7b4f504d768b73$var$queryExpectsExactMatch","$5e7b4f504d768b73$var$MULTIPLE_QUERY_VALUES_SEPARATOR","$5e7b4f504d768b73$export$257a13b72b1b9a9","pathNormalized","normalized","normalizedLowercase","$5e7b4f504d768b73$var$normalizeQuery","containsPathSeparator","expectExactMatch","originalPiece","originalSplit","pathNormalizedPiece","normalizedPiece","normalizedLowercasePiece","expectExactMatchPiece","stripWildcards","$108f3a3624c6aa16$var$__awaiter","provideLabelPick","doProvideWithEditorSymbols","doProvideWithoutEditorSymbols","waitForLanguageSymbolRegistry","symbolProviderRegistryPromiseResolve","symbolProviderRegistryPromise","symbolProviderListener","onDidTriggerItemButton","forceSideBySide","symbolsPromise","getDocumentSymbols","picksCts","busy","$108f3a3624c6aa16$export$ead43d049a6e98d6","doGetSymbolPicks","updatePickerItems","ignoreFirstActiveEvent","onDidChangeActive","activeItems","filterBySymbolKind","SCOPE_PREFIX","filterPos","symbolQuery","containerQuery","$5e7b4f504d768b73$export$b31639e1af503d0f","filteredSymbolPicks","symbolLabel","symbolLabelWithIcon","SymbolKinds","symbolLabelIconOffset","symbolScore","symbolMatches","containerScore","containerMatches","containerLabel","extraContainerLabel","skipContainerQuery","deprecated","openSideBySideDirection","sortedFilteredSymbolPicks","symbolA","symbolB","compareByKindAndScore","compareByScore","symbolPicks","lastSeparator","lastSymbolKindCounter","updateLastSeparatorLabel","lastSymbolKind","$108f3a3624c6aa16$var$NLS_SYMBOL_KIND_CACHE","$108f3a3624c6aa16$var$FALLBACK_NLS_SYMBOL_KIND","symbolPick","kindA","kindB","PREFIX_BY_CATEGORY","$6e1d610bd51df017$var$__decorate","$6e1d610bd51df017$var$__param","$108f3a3624c6aa16$exports","AbstractGotoSymbolQuickAccessProvider","$6e1d610bd51df017$export$315f0ab17bc139cd","QuickOutlineNLS","quickOutlineActionLabel","hasDocumentSymbolProvider","$c1b8613e579ca1e5$var$exceptionToErrorMessage","exception","verbose","stacktrace","$c1b8613e579ca1e5$var$detectSystemErrorMessage","$c1b8613e579ca1e5$var$stackToString","errno","syscall","$c1b8613e579ca1e5$export$537b0e6f7724a05b","errors","$f33ff589d6e1649c$var$__awaiter","$f33ff589d6e1649c$export$37565bab18688b59","TriggerAction","$f33ff589d6e1649c$var$isFastAndSlowPicks","additionalPicks","picksDisposables","picksDisposable","picksToken","_getPicks","picksFilter","skipEmpty","$f33ff589d6e1649c$var$isPicksWithActive","noResultsPick","providedPicks","$f33ff589d6e1649c$export$8dd0c4c76327588c","FAST_PICKS_RACE_DELAY","slowPicksApplied","fastPicksApplied","applyPicks","awaitedAdditionalPicks","activePick","additionalActivePick","fallbackActivePickCandidate","fallbackActivePick","awaitedPicks","NO_ACTION","CLOSE_PICKER","REMOVE_ITEM","$dae7b5ad318c6f2d$var$__decorate","$dae7b5ad318c6f2d$var$__param","AbstractCommandsQuickAccessProvider","$f33ff589d6e1649c$exports","PickerQuickAccessProvider","dialogService","commandsHistory","$dae7b5ad318c6f2d$export$ed49034b1c322ae8","$dae7b5ad318c6f2d$var$__awaiter","allCommandPicks","getCommandPicks","filteredCommandPicks","commandPick","labelHighlights","WORD_FILTER","aliasHighlights","commandAlias","showAlias","mapLabelToCommand","commandPick1","existingCommandForLabel","commandPickA","commandPickB","commandACounter","commandBCounter","commandPicks","addSeparator","commandPick2","matchesPrefix","matchesWords","matchesContiguousSubString","CommandsHistory","storageService1","configurationService1","configuredCommandsHistoryLength","updateConfiguration","registerListeners","getConfiguredCommandHistoryLength","saveState","PREF_KEY_CACHE","serializedCache","usesLRU","counter","getNumber","PREF_KEY_COUNTER","configuredCommandHistoryLength","workbench","commandPalette","DEFAULT_COMMANDS_HISTORY_LENGTH","$32e55c7528437c9d$export$f1f4ff7e5cbee08d","$dae7b5ad318c6f2d$exports","getCodeEditorCommandPicks","editorCommandPicks","editorAction","getSupportedActions","stripIcons","$6cc22d67efd2937f$var$__decorate","$6cc22d67efd2937f$var$__param","$6cc22d67efd2937f$var$__awaiter","$6cc22d67efd2937f$export$4dd64c01976b2a31","QuickCommandNLS","quickCommandActionLabel","$12a2862244683f14$var$__decorate","$12a2862244683f14$var$__param","$12a2862244683f14$export$bc59de1735b40d0","$e10fe020d3cc7247$var$ToggleHighContrast","ToggleHighContrastNLS","toggleHighContrast","_originalThemeName","standaloneThemeService","setTheme","themeName","iter","$4a4bb9225a913b16$export$9099ad97b570f7c","$3f321efdd7ba37b3$export$9099ad97b570f7c","$d823ab0836a2d6a3$export$9099ad97b570f7c","$9e4528ae820f7e79$exports","cyrillicToLatin","cyrillic","latin","char","_obj","keywordMap","$be087d258a37eb2e$export$9099ad97b570f7c","keywords","keyword","eval","ex","$dcf9db58c035d8d9$export$9099ad97b570f7c","$guKHh","defineTheme","inherit","$a3635e060147fcfd$export$2637e5674e85963c","$11de9d697b1148ae$var$$","$11de9d697b1148ae$var$$code","$11de9d697b1148ae$var$$execute","$11de9d697b1148ae$var$$debug","$11de9d697b1148ae$var$$debugOverlay","$11de9d697b1148ae$var$$output","$11de9d697b1148ae$var$editor","roundedSelection","scrollBeyondLastLine","jsCode","$parcel$interopDefault","output"],"version":3,"file":"index.972a0fca.js.map"}